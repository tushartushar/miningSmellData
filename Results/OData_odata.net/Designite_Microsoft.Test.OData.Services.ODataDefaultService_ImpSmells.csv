Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The method has 696 lines of code.
Long Method,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The method has 930 lines of code.
Long Identifier,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the parameter productProductDetailNavigation is 30.
Long Identifier,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the parameter productDetailProductNavigation is 30.
Long Identifier,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the parameter productDetailProductReviewNavigation is 36.
Long Identifier,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the parameter companyCoreDepartmentNavigation is 31.
Long Identifier,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the parameter publicCompanyLabourUnionNavigation is 34.
Long Identifier,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the parameter getProductsByAccessLevelFunction is 32.
Long Identifier,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the parameter accountAvailableSubsTemplatesNavigation is 39.
Long Identifier,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the parameter creditCardCreditRecordNavigation is 32.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            homeAddressType.AddProperty(new EdmStructuralProperty(homeAddressType' "FamilyName"' EdmCoreModel.Instance.GetString(true))); " is 125.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            companyAddressType.AddProperty(new EdmStructuralProperty(companyAddressType' "CompanyName"' EdmCoreModel.Instance.GetString(false))); " is 133.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            cityInformationType.AddProperty(new EdmStructuralProperty(cityInformationType' "CountryRegion"' EdmCoreModel.Instance.GetString(false))); " is 137.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            cityInformationType.AddProperty(new EdmStructuralProperty(cityInformationType' "IsCapital"' EdmCoreModel.Instance.GetBoolean(false))); " is 134.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            infoFromCustomerType.AddProperty(new EdmStructuralProperty(infoFromCustomerType' "CustomerMessage"' EdmCoreModel.Instance.GetString(true))); " is 140.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            personType.AddProperty(new EdmStructuralProperty(personType' "HomeAddress"' new EdmComplexTypeReference(addressType' true))); " is 125.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            personType.AddProperty(new EdmStructuralProperty(personType' "Home"' EdmCoreModel.Instance.GetSpatial(EdmPrimitiveTypeKind.GeographyPoint' true))); " is 147.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            personType.AddProperty(new EdmStructuralProperty(personType' "Numbers"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetString(false))))); " is 168.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            personType.AddProperty(new EdmStructuralProperty(personType' "Emails"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetString(true))))); " is 166.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            personType.AddProperty(new EdmStructuralProperty(personType' "Addresses"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmComplexTypeReference(addressType' true))))); " is 178.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            customerType.AddProperty(new EdmStructuralProperty(customerType' "Birthday"' EdmCoreModel.Instance.GetDateTimeOffset(false))); " is 126.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            customerType.AddProperty(new EdmStructuralProperty(customerType' "TimeBetweenLastTwoOrders"' EdmCoreModel.Instance.GetDuration(false))); " is 136.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            employeeType.AddProperty(new EdmStructuralProperty(employeeType' "DateHired"' EdmCoreModel.Instance.GetDateTimeOffset(false))); " is 127.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            employeeType.AddProperty(new EdmStructuralProperty(employeeType' "Office"' EdmCoreModel.Instance.GetSpatial(EdmPrimitiveTypeKind.GeographyPoint' true))); " is 153.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            productType.AddProperty(new EdmStructuralProperty(productType' "QuantityPerUnit"' EdmCoreModel.Instance.GetString(false))); " is 123.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            productType.AddProperty(new EdmStructuralProperty(productType' "QuantityInStock"' EdmCoreModel.Instance.GetInt32(false))); " is 122.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            productType.AddProperty(new EdmStructuralProperty(productType' "Discontinued"' EdmCoreModel.Instance.GetBoolean(false))); " is 121.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            productType.AddProperty(new EdmStructuralProperty(productType' "UserAccess"' new EdmEnumTypeReference(accessLevelType' true))); " is 127.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            productType.AddProperty(new EdmStructuralProperty(productType' "SkinColor"' new EdmEnumTypeReference(colorType' true))); " is 120.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            productType.AddProperty(new EdmStructuralProperty(productType' "CoverColors"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmEnumTypeReference(colorType' false))))); " is 178.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var productDetailIdProperty1 = new EdmStructuralProperty(productDetailType' "ProductID"' EdmCoreModel.Instance.GetInt32(false)); " is 128.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var productDetailIdProperty2 = new EdmStructuralProperty(productDetailType' "ProductDetailID"' EdmCoreModel.Instance.GetInt32(false)); " is 134.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            productDetailType.AddProperty(new EdmStructuralProperty(productDetailType' "ProductName"' EdmCoreModel.Instance.GetString(false))); " is 131.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            productDetailType.AddProperty(new EdmStructuralProperty(productDetailType' "Description"' EdmCoreModel.Instance.GetString(false))); " is 131.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var productReviewIdProperty1 = new EdmStructuralProperty(productReviewType' "ProductID"' EdmCoreModel.Instance.GetInt32(false)); " is 128.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var productReviewIdProperty2 = new EdmStructuralProperty(productReviewType' "ProductDetailID"' EdmCoreModel.Instance.GetInt32(false)); " is 134.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var productReviewIdProperty3 = new EdmStructuralProperty(productReviewType' "ReviewTitle"' EdmCoreModel.Instance.GetString(false)); " is 131.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var productReviewIdProperty4 = new EdmStructuralProperty(productReviewType' "RevisionID"' EdmCoreModel.Instance.GetInt32(false)); " is 129.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            productReviewType.AddProperty(new EdmStructuralProperty(productReviewType' "Comment"' EdmCoreModel.Instance.GetString(false))); " is 127.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            productReviewType.AddProperty(new EdmStructuralProperty(productReviewType' "Author"' EdmCoreModel.Instance.GetString(false))); " is 126.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            orderType.AddProperty(new EdmStructuralProperty(orderType' "OrderDate"' EdmCoreModel.Instance.GetDateTimeOffset(false))); " is 121.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            orderType.AddProperty(new EdmStructuralProperty(orderType' "OrderShelfLifes"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetDuration(true))))); " is 175.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            orderType.AddProperty(new EdmStructuralProperty(orderType' "InfoFromCustomer"' new EdmComplexTypeReference(infoFromCustomerType' true))); " is 137.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            orderDetailType.AddProperty(new EdmStructuralProperty(orderDetailType' "OrderPlaced"' EdmCoreModel.Instance.GetDateTimeOffset(false))); " is 135.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            orderDetailType.AddProperty(new EdmStructuralProperty(orderDetailType' "Quantity"' EdmCoreModel.Instance.GetInt32(false))); " is 123.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            orderDetailType.AddProperty(new EdmStructuralProperty(orderDetailType' "UnitPrice"' EdmCoreModel.Instance.GetSingle(false))); " is 125.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            model.SetCoreChangeTrackingAnnotation(orderSet' new EdmStructuralProperty[] { orderIdProperty }' new EdmNavigationProperty[] { orderDetailsNavigation }); " is 153.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            departmentType.AddProperty(new EdmStructuralProperty(departmentType' "DepartmentNO"' EdmCoreModel.Instance.GetString(true))); " is 125.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            companyType.AddProperty(new EdmStructuralProperty(companyType' "CompanyCategory"' new EdmEnumTypeReference(companyCategory' true))); " is 132.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            companyType.AddProperty(new EdmStructuralProperty(companyType' "Address"' new EdmComplexTypeReference(addressType' true))); " is 123.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var publicCompanyType = new EdmEntityType(ns' "PublicCompany"' /*baseType*/ companyType' /*isAbstract*/ false' /*isOpen*/ true); " is 128.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            publicCompanyType.AddProperty(new EdmStructuralProperty(publicCompanyType' "StockExchange"' EdmCoreModel.Instance.GetString(true))); " is 132.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var productAddAccessRightAction = new EdmAction(ns' "AddAccessRight"' new EdmEnumTypeReference(accessLevelType' true)' true' null); " is 131.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            EdmAction increaseRevenue = new EdmAction(ns' "IncreaseRevenue"' EdmCoreModel.Instance.GetInt64(false)' /*isBound*/true' /*entitySetPathExpression*/null); " is 154.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            increaseRevenue.AddParameter(new EdmOperationParameter(increaseRevenue' "p"' new EdmEntityTypeReference(companyType' false))); " is 126.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            increaseRevenue.AddParameter(new EdmOperationParameter(increaseRevenue' "IncreaseValue"' EdmCoreModel.Instance.GetInt64(true))); " is 128.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var resetAddressAction = new EdmAction(ns' "ResetAddress"' new EdmEntityTypeReference(personType' false)' true' new EdmPathExpression("person")); " is 145.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            resetAddressAction.AddParameter("addresses"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmComplexTypeReference(addressType' true)))); " is 148.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var placeOrderAction = new EdmAction(ns' "PlaceOrder"' new EdmEntityTypeReference(orderType' false)' true' new EdmPathExpression("customer/Orders")); " is 149.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var placeOrdersAction = new EdmAction(ns' "PlaceOrders"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmEntityTypeReference(orderType' false)))' true' new EdmPathExpression("customer/Orders")); " is 206.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            placeOrdersAction.AddParameter("orders"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmEntityTypeReference(orderType' false)))); " is 142.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "                new EdmCollectionTypeReference(new EdmCollectionType(new EdmEntityTypeReference(productType' false)))' true' new EdmPathExpression("products")); " is 144.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            discountSeveralProductAction.AddParameter("products"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmEntityTypeReference(productType' false)))); " is 157.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var changeShipTimeAndDate = new EdmAction(ns' "ChangeShipTimeAndDate"' new EdmEntityTypeReference(orderType' false)' true' new EdmPathExpression("order")); " is 155.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var resetBossEmailAction = new EdmAction(ns' "ResetBossEmail"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetString(false)))' false' null); " is 171.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            resetBossEmailAction.AddParameter("emails"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetString(false)))); " is 139.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var resetBossAddressAction = new EdmAction(ns' "ResetBossAddress"' new EdmComplexTypeReference(addressType' false)' false' null); " is 129.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            EdmFunction getCompanyEmployeeCount = new EdmFunction(ns' "GetEmployeesCount"' EdmCoreModel.Instance.GetInt32(false)' /*isBound*/true' /*entitySetPathExpression*/null' /*isComposable*/false); " is 191.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            getCompanyEmployeeCount.AddParameter(new EdmOperationParameter(getCompanyEmployeeCount' "p"' new EdmEntityTypeReference(companyType' false))); " is 142.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            getSeniorEmployees.AddParameter("employees"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmEntityTypeReference(employeeType' false)))); " is 149.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var getOrderShipTime = new EdmFunction(ns' "GetShipTime"' EdmCoreModel.Instance.GetTimeOfDay(false)' true' null' false); " is 120.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var checkOrderShipTime = new EdmFunction(ns' "CheckShipTime"' EdmCoreModel.Instance.GetBoolean(false)' true' null' false); " is 122.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var checkOrderShipDate = new EdmFunction(ns' "CheckShipDate"' EdmCoreModel.Instance.GetBoolean(false)' true' null' false); " is 122.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var defaultColorFunction = new EdmFunction(ns' "GetDefaultColor"' new EdmEnumTypeReference(colorType' true)' false' null' true); " is 128.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            defaultContainer.AddFunctionImport(getProductsByAccessLevelFunction.Name' getProductsByAccessLevelFunction' null' true); " is 120.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            accountInfoType.AddProperty(new EdmStructuralProperty(accountInfoType' "FirstName"' EdmCoreModel.Instance.GetString(false))); " is 125.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            accountInfoType.AddProperty(new EdmStructuralProperty(accountInfoType' "LastName"' EdmCoreModel.Instance.GetString(false))); " is 124.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            accountType.AddProperty(new EdmStructuralProperty(accountType' "CountryRegion"' EdmCoreModel.Instance.GetString(false))); " is 121.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            accountType.AddProperty(new EdmStructuralProperty(accountType' "AccountInfo"' new EdmComplexTypeReference(accountInfoType' true))); " is 131.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            giftCardType.AddProperty(new EdmStructuralProperty(giftCardType' "GiftCardNO"' EdmCoreModel.Instance.GetString(false))); " is 120.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            giftCardType.AddProperty(new EdmStructuralProperty(giftCardType' "ExperationDate"' EdmCoreModel.Instance.GetDateTimeOffset(false))); " is 132.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var paymentInstrumentIdProperty = new EdmStructuralProperty(paymentInstrumentType' "PaymentInstrumentID"' EdmCoreModel.Instance.GetInt32(false)); " is 145.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            paymentInstrumentType.AddProperty(new EdmStructuralProperty(paymentInstrumentType' "FriendlyName"' EdmCoreModel.Instance.GetString(false))); " is 140.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            paymentInstrumentType.AddProperty(new EdmStructuralProperty(paymentInstrumentType' "CreatedDate"' EdmCoreModel.Instance.GetDateTimeOffset(false))); " is 147.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            creditCardType.AddProperty(new EdmStructuralProperty(creditCardType' "CardNumber"' EdmCoreModel.Instance.GetString(false))); " is 124.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            creditCardType.AddProperty(new EdmStructuralProperty(creditCardType' "HolderName"' EdmCoreModel.Instance.GetString(false))); " is 124.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            creditCardType.AddProperty(new EdmStructuralProperty(creditCardType' "Balance"' EdmCoreModel.Instance.GetDouble(false))); " is 121.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            creditCardType.AddProperty(new EdmStructuralProperty(creditCardType' "ExperationDate"' EdmCoreModel.Instance.GetDateTimeOffset(false))); " is 136.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            storedPIType.AddProperty(new EdmStructuralProperty(storedPIType' "CreatedDate"' EdmCoreModel.Instance.GetDateTimeOffset(false))); " is 129.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var statementIdProperty = new EdmStructuralProperty(statementType' "StatementID"' EdmCoreModel.Instance.GetInt32(false)); " is 121.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            statementType.AddProperty(new EdmStructuralProperty(statementType' "TransactionType"' EdmCoreModel.Instance.GetString(false))); " is 127.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            statementType.AddProperty(new EdmStructuralProperty(statementType' "TransactionDescription"' EdmCoreModel.Instance.GetString(false))); " is 134.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var creditRecordIdProperty = new EdmStructuralProperty(creditRecordType' "CreditRecordID"' EdmCoreModel.Instance.GetInt32(false)); " is 130.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            creditRecordType.AddProperty(new EdmStructuralProperty(creditRecordType' "IsGood"' EdmCoreModel.Instance.GetBoolean(false))); " is 125.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            creditRecordType.AddProperty(new EdmStructuralProperty(creditRecordType' "Reason"' EdmCoreModel.Instance.GetString(false))); " is 124.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            creditRecordType.AddProperty(new EdmStructuralProperty(creditRecordType' "CreatedDate"' EdmCoreModel.Instance.GetDateTimeOffset(false))); " is 137.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var subscriptionIdProperty = new EdmStructuralProperty(subscriptionType' "SubscriptionID"' EdmCoreModel.Instance.GetInt32(false)); " is 130.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            subscriptionType.AddProperty(new EdmStructuralProperty(subscriptionType' "TemplateGuid"' EdmCoreModel.Instance.GetString(false))); " is 130.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            subscriptionType.AddProperty(new EdmStructuralProperty(subscriptionType' "Title"' EdmCoreModel.Instance.GetString(false))); " is 123.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            subscriptionType.AddProperty(new EdmStructuralProperty(subscriptionType' "Category"' EdmCoreModel.Instance.GetString(false))); " is 126.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            subscriptionType.AddProperty(new EdmStructuralProperty(subscriptionType' "CreatedDate"' EdmCoreModel.Instance.GetDateTimeOffset(false))); " is 137.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var giftCardAmountFunction = new EdmFunction(ns' "GetActualAmount"' EdmCoreModel.Instance.GetDouble(false)' true' null' false); " is 127.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var accountDefaultPIFunction = new EdmFunction(ns' "GetDefaultPI"' new EdmEntityTypeReference(paymentInstrumentType' true)' true' new EdmPathExpression("account/MyPaymentInstruments")' false); " is 192.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var accountRefreshDefaultPIAction = new EdmAction(ns' "RefreshDefaultPI"' new EdmEntityTypeReference(paymentInstrumentType' true)' true' new EdmPathExpression("account/MyPaymentInstruments")); " is 192.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            ((EdmEntitySet)accountSet).AddNavigationTarget(piStoredNavigation' storedPISet' new EdmPathExpression("MyPaymentInstruments/TheStoredPI")); " is 139.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            ((EdmEntitySet)accountSet).AddNavigationTarget(piBackupStoredPINavigation' defaultStoredPI' new EdmPathExpression("MyPaymentInstruments/BackupStoredPI")); " is 154.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,SetCoreChangeTrackingAnnotation,The length of the statement  "                new EdmPropertyConstructor("FilterableProperties"' new EdmCollectionExpression(filterableProperties.Select(p => new EdmPropertyPathExpression(p.Name))))' " is 153.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,SetCoreChangeTrackingAnnotation,The length of the statement  "                new EdmPropertyConstructor("ExpandableProperties"' new EdmCollectionExpression(expandableProperties.Select(p => new EdmPropertyPathExpression(p.Name))))); " is 154.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The length of the statement  "                            // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")' " is 126.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The length of the statement  "                                // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")' " is 126.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The length of the statement  "                                // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")' " is 126.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The length of the statement  "                    Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")} " is 129.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The length of the statement  "                                // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")' " is 126.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The length of the statement  "                                // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")' " is 126.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The length of the statement  "                                // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")' " is 126.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The length of the statement  "                                // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")' " is 126.
Long Statement,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The length of the statement  "                        Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")} " is 120.
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The following statement contains a magic number: accessLevelType.AddMember("Write"' new EdmEnumMemberValue(2));
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The following statement contains a magic number: accessLevelType.AddMember("Execute"' new EdmEnumMemberValue(4));
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The following statement contains a magic number: accessLevelType.AddMember("ReadWrite"' new EdmEnumMemberValue(3));
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The following statement contains a magic number: colorType.AddMember("Green"' new EdmEnumMemberValue(2));
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The following statement contains a magic number: colorType.AddMember("Blue"' new EdmEnumMemberValue(4));
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The following statement contains a magic number: companyCategory.AddMember("Electronics"' new EdmEnumMemberValue(2));
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultInMemoryModel.cs,CreateODataServiceModel,The following statement contains a magic number: companyCategory.AddMember("Others"' new EdmEnumMemberValue(4));
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultServiceOperationProvider,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultServiceOperationProvider.cs,IncreaseRevenue,The following statement contains a magic number: company.Revenue += 1000;
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultServiceOperationProvider,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultServiceOperationProvider.cs,Discount,The following statement contains a magic number: product.UnitPrice = product.UnitPrice * (1 - percentage / 100.0f);
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultServiceOperationProvider,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultServiceOperationProvider.cs,Discount,The following statement contains a magic number: product.UnitPrice = product.UnitPrice * (1 - percentage / 100.0f);
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Boss = new Customer()              {                  FirstName = "Jill"'                  LastName = "Jones"'                  Numbers = new Collection<string>()'                  Emails = new Collection<string>()'                  PersonID = 2'                  Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                  City = "Sydney"'                  Home = GeographyPoint.Create(15.0' 161.8)'                  TimeBetweenLastTwoOrders = new TimeSpan(2)'                  Annotations = new List<InstanceAnnotationType>() { new IsBossAnnotation(this.GetType().Namespace' true) }'              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Boss = new Customer()              {                  FirstName = "Jill"'                  LastName = "Jones"'                  Numbers = new Collection<string>()'                  Emails = new Collection<string>()'                  PersonID = 2'                  Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                  City = "Sydney"'                  Home = GeographyPoint.Create(15.0' 161.8)'                  TimeBetweenLastTwoOrders = new TimeSpan(2)'                  Annotations = new List<InstanceAnnotationType>() { new IsBossAnnotation(this.GetType().Namespace' true) }'              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Boss = new Customer()              {                  FirstName = "Jill"'                  LastName = "Jones"'                  Numbers = new Collection<string>()'                  Emails = new Collection<string>()'                  PersonID = 2'                  Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                  City = "Sydney"'                  Home = GeographyPoint.Create(15.0' 161.8)'                  TimeBetweenLastTwoOrders = new TimeSpan(2)'                  Annotations = new List<InstanceAnnotationType>() { new IsBossAnnotation(this.GetType().Namespace' true) }'              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Boss = new Customer()              {                  FirstName = "Jill"'                  LastName = "Jones"'                  Numbers = new Collection<string>()'                  Emails = new Collection<string>()'                  PersonID = 2'                  Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                  City = "Sydney"'                  Home = GeographyPoint.Create(15.0' 161.8)'                  TimeBetweenLastTwoOrders = new TimeSpan(2)'                  Annotations = new List<InstanceAnnotationType>() { new IsBossAnnotation(this.GetType().Namespace' true) }'              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Boss = new Customer()              {                  FirstName = "Jill"'                  LastName = "Jones"'                  Numbers = new Collection<string>()'                  Emails = new Collection<string>()'                  PersonID = 2'                  Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                  City = "Sydney"'                  Home = GeographyPoint.Create(15.0' 161.8)'                  TimeBetweenLastTwoOrders = new TimeSpan(2)'                  Annotations = new List<InstanceAnnotationType>() { new IsBossAnnotation(this.GetType().Namespace' true) }'              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Boss = new Customer()              {                  FirstName = "Jill"'                  LastName = "Jones"'                  Numbers = new Collection<string>()'                  Emails = new Collection<string>()'                  PersonID = 2'                  Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                  City = "Sydney"'                  Home = GeographyPoint.Create(15.0' 161.8)'                  TimeBetweenLastTwoOrders = new TimeSpan(2)'                  Annotations = new List<InstanceAnnotationType>() { new IsBossAnnotation(this.GetType().Namespace' true) }'              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.VipCustomer = new Customer()              {                  FirstName = "Bob"'                  MiddleName = "Vat"'                  LastName = "Cat"'                  Numbers = new Collection<string> { "111-111-1111" }'                  Emails = new Collection<string> { "abc@abc.com" }'                  PersonID = 1'                  Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                  City = "London"'                  Home = GeographyPoint.Create(32.1' 23.1)'                  TimeBetweenLastTwoOrders = new TimeSpan(1)'                  HomeAddress = new Address()                  {                      City = "London"'                      PostalCode = "98052"'                      Street = "1 Microsoft Way"                  }              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.VipCustomer = new Customer()              {                  FirstName = "Bob"'                  MiddleName = "Vat"'                  LastName = "Cat"'                  Numbers = new Collection<string> { "111-111-1111" }'                  Emails = new Collection<string> { "abc@abc.com" }'                  PersonID = 1'                  Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                  City = "London"'                  Home = GeographyPoint.Create(32.1' 23.1)'                  TimeBetweenLastTwoOrders = new TimeSpan(1)'                  HomeAddress = new Address()                  {                      City = "London"'                      PostalCode = "98052"'                      Street = "1 Microsoft Way"                  }              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.VipCustomer = new Customer()              {                  FirstName = "Bob"'                  MiddleName = "Vat"'                  LastName = "Cat"'                  Numbers = new Collection<string> { "111-111-1111" }'                  Emails = new Collection<string> { "abc@abc.com" }'                  PersonID = 1'                  Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                  City = "London"'                  Home = GeographyPoint.Create(32.1' 23.1)'                  TimeBetweenLastTwoOrders = new TimeSpan(1)'                  HomeAddress = new Address()                  {                      City = "London"'                      PostalCode = "98052"'                      Street = "1 Microsoft Way"                  }              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.VipCustomer = new Customer()              {                  FirstName = "Bob"'                  MiddleName = "Vat"'                  LastName = "Cat"'                  Numbers = new Collection<string> { "111-111-1111" }'                  Emails = new Collection<string> { "abc@abc.com" }'                  PersonID = 1'                  Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                  City = "London"'                  Home = GeographyPoint.Create(32.1' 23.1)'                  TimeBetweenLastTwoOrders = new TimeSpan(1)'                  HomeAddress = new Address()                  {                      City = "London"'                      PostalCode = "98052"'                      Street = "1 Microsoft Way"                  }              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.VipCustomer = new Customer()              {                  FirstName = "Bob"'                  MiddleName = "Vat"'                  LastName = "Cat"'                  Numbers = new Collection<string> { "111-111-1111" }'                  Emails = new Collection<string> { "abc@abc.com" }'                  PersonID = 1'                  Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                  City = "London"'                  Home = GeographyPoint.Create(32.1' 23.1)'                  TimeBetweenLastTwoOrders = new TimeSpan(1)'                  HomeAddress = new Address()                  {                      City = "London"'                      PostalCode = "98052"'                      Street = "1 Microsoft Way"                  }              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Company = new Company()              {                  CompanyID = 0'                  CompanyCategory = CompanyCategory.IT'                  Revenue = 100000'                  Name = "MS"'                  Address = new CompanyAddress()                  {                      City = "Redmond"'                      PostalCode = "98052"'                      Street = "1 Microsoft Way"'                      CompanyName = "Microsoft"                  }              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.PublicCompany = new PublicCompany              {                  CompanyID = 1'                  CompanyCategory = CompanyCategory.IT'                  Name = "MS2"'                  Address = new Address                  {                      City = "Redmond"'                      PostalCode = "98052"'                      Street = "1 Microsoft Way"                  }'                  Revenue = 100000'                  StockExchange = "NASDAQ"'                  Assets =                  {                      new Asset()                      {                          AssetID = 0'                          Name = "Dell"'                          Number = 100                      }'                        new Asset()                      {                          AssetID = 1'                          Name = "ThinkPad"'                          Number = 200                      }                  }'                  Club = new Club                  {                      ClubID = 0'                      Name = "health Club"                  }              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.PublicCompany = new PublicCompany              {                  CompanyID = 1'                  CompanyCategory = CompanyCategory.IT'                  Name = "MS2"'                  Address = new Address                  {                      City = "Redmond"'                      PostalCode = "98052"'                      Street = "1 Microsoft Way"                  }'                  Revenue = 100000'                  StockExchange = "NASDAQ"'                  Assets =                  {                      new Asset()                      {                          AssetID = 0'                          Name = "Dell"'                          Number = 100                      }'                        new Asset()                      {                          AssetID = 1'                          Name = "ThinkPad"'                          Number = 200                      }                  }'                  Club = new Club                  {                      ClubID = 0'                      Name = "health Club"                  }              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.PublicCompany = new PublicCompany              {                  CompanyID = 1'                  CompanyCategory = CompanyCategory.IT'                  Name = "MS2"'                  Address = new Address                  {                      City = "Redmond"'                      PostalCode = "98052"'                      Street = "1 Microsoft Way"                  }'                  Revenue = 100000'                  StockExchange = "NASDAQ"'                  Assets =                  {                      new Asset()                      {                          AssetID = 0'                          Name = "Dell"'                          Number = 100                      }'                        new Asset()                      {                          AssetID = 1'                          Name = "ThinkPad"'                          Number = 200                      }                  }'                  Club = new Club                  {                      ClubID = 0'                      Name = "health Club"                  }              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.DefaultStoredPI = new StoredPI()              {                  StoredPIID = 800'                  PIName = "The Default Stored PI"'                  PIType = "CreditCard"'                  CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 31))              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.DefaultStoredPI = new StoredPI()              {                  StoredPIID = 800'                  PIName = "The Default Stored PI"'                  PIType = "CreditCard"'                  CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 31))              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.DefaultStoredPI = new StoredPI()              {                  StoredPIID = 800'                  PIName = "The Default Stored PI"'                  PIType = "CreditCard"'                  CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 31))              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.DefaultStoredPI = new StoredPI()              {                  StoredPIID = 800'                  PIName = "The Default Stored PI"'                  PIType = "CreditCard"'                  CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 31))              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People.AddRange(new List<Person>()              {                  new Customer()                  {                      FirstName = "Bob"'                      LastName = "Cat"'                      Numbers = new Collection<string> { "111-111-1111"' "012"' "310"' "bca"' "ayz" }'                      Emails = new Collection<string> { "abc@abc.com" }'                      PersonID = 1'                      Birthday = new DateTimeOffset(new DateTime(1957' 4' 3))'                      City = "London"'                      Home = GeographyPoint.Create(32.1' 23.1)'                      TimeBetweenLastTwoOrders = new TimeSpan(1)'                      HomeAddress = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                          Annotations = new List<InstanceAnnotationType>()                          {                              new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                // TODO : #625                              // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                          }'                      }'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "1 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }'                      Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "EmailAddresses"' "Emails")}                  }'                  new Customer()                  {                      FirstName = "Jill"'                      LastName = "Jones"'                      Numbers = new Collection<string>()'                      Emails = new Collection<string>()'                      PersonID = 2'                      Birthday = new DateTimeOffset(new DateTime(1983' 1' 15))'                      City = "Sydney"'                      Home = GeographyPoint.Create(15.0' 161.8)'                      TimeBetweenLastTwoOrders = new TimeSpan(2)                  }'                  new Employee()                  {                      FirstName = "Jacob"'                      LastName = "Zip"'                      Numbers = new Collection<string> { "333-333-3333" }'                      Emails = new Collection<string> { null }'                      PersonID = 3'                      DateHired = new DateTimeOffset(new DateTime(2010' 12' 13))'                      Home = GeographyPoint.Create(15.0' 161.8)'                      Office = GeographyPoint.Create(15.0' 162)'                      HomeAddress = new HomeAddress()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Zips"'                          Annotations = new List<InstanceAnnotationType>(){new AddressTypeAnnotation(this.GetType().Namespace' "Working")}'                      }'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Employee()                  {                      FirstName = "Elmo"'                      LastName = "Rogers"'                      Numbers = new Collection<string> { "444-444-4444"' "555-555-5555"' "666-666-6666" }'                      Emails = new Collection<string> { "def@def.org"' "lmn@lmn.com"'"max@max.com"'"test@test.com" }'                      PersonID = 4'                      DateHired = new DateTimeOffset(new DateTime(2008' 3' 27))'                      Home = GeographyPoint.Create(-15.0' -61.8)'                      Office = GeographyPoint.Create(-15.0' -62)'                      Addresses = new Collection<Address>                      {                          new Address()                          {                              City = "Shanghai2"'                              PostalCode = "200000"'                              Street = "B01' 999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }                      }                  }'                  new Person()                  {                      FirstName = "Peter"'                      LastName = "Bee"'                      MiddleName = null'                      Numbers = new Collection<string> { "555-555-5555" }'                      Emails = new Collection<string> { "def@test.msn" }'                      PersonID = 5'                      Home = GeographyPoint.Create(-16.0' -261.8)'                      Addresses = new Collection<Address>                      {                          new HomeAddress()                          {                              City = "Tokyo"'                              PostalCode = "98052"'                              Street = "2 Microsoft Way"'                              FamilyName = "Cats"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Home")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "Japan"' IsCapital = true}' "City")'                              }'                          }'                          new Address()                          {                              City = "Shanghai"'                              PostalCode = "200000"'                              Street = "999 Zixing Road"'                              Annotations = new List<InstanceAnnotationType>()                              {                                  new AddressTypeAnnotation(this.GetType().Namespace' "Company")'                                    // TODO : #625                                  // new CityInfoAnnotation(this.GetType().Namespace' new CityInformation(){CountryRegion = "China"' IsCapital = true}' "City")'                              }'                          }'                      }                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People[1].Parent = this.People[3];
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People[2].Parent = this.People[3];
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.People[2].Parent = this.People[3];
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products.AddRange(new List<Product>()              {                  new Product()                  {                          Name = "Cheetos"'                          ProductID = 5'                          QuantityInStock = 100'                          QuantityPerUnit = "100g Bag"'                          UnitPrice = 3.24f'                          Discontinued = true'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue' Color.Blue }'                          UserAccess = AccessLevel.None'                          Annotations = new List<InstanceAnnotationType>(){new DisplayNameAnnotation(this.GetType().Namespace' "Cheetos"' "Name")}                  }'                  new Product()                  {                          Name = "Mushrooms"'                          ProductID = 6'                          QuantityInStock = 100'                          QuantityPerUnit = "Pound"'                          UnitPrice = 3.24f'                          Discontinued = false'                          SkinColor = Color.Blue'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Blue }'                          UserAccess = AccessLevel.ReadWrite'                  }'                  new Product()                  {                          Name = "Apple"'                          ProductID = 7'                          QuantityInStock = 20'                          QuantityPerUnit = "Pound"'                          UnitPrice = 0.35f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Blue }'                          UserAccess = AccessLevel.Read'                  }'                  new Product()                  {                          Name = "Car"'                          ProductID = 8'                          QuantityInStock = 300'                          QuantityPerUnit = "Pound"'                          UnitPrice = 28000f'                          Discontinued = false'                          SkinColor = Color.Red'                          CoverColors = new Collection<Color>(){ Color.Red' Color.Red' Color.Blue }'                          UserAccess = AccessLevel.Execute'                  }'                  new Product()                  {                          Name = "Computer"'                          ProductID = 9'                          QuantityInStock = 1000'                          QuantityPerUnit = "Pound"'                          UnitPrice = 1250f'                          Discontinued = false'                          SkinColor = Color.Green'                          CoverColors = new Collection<Color>(){ Color.Green' Color.Blue }'                          UserAccess = AccessLevel.Read'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails.AddRange(new List<ProductDetail>              {                  new ProductDetail()                  {                      ProductDetailID = 1'                      ProductName = "Candy"'                      Description = "sweet snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 2'                      ProductName = "CheeseCake"'                      Description = "Cheese-flavored snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 3'                      ProductName = "CokeCola"'                      Description = "suger soft drink"                  }'                  new ProductDetail()                  {                      ProductDetailID = 4'                      ProductName = "CokeCola Zero"'                      Description = "0 suger soft drink"                  }'                  new ProductDetail()                  {                      ProductDetailID = 5'                      ProductName = "Mustard"'                      Description = "spicy snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 6'                      ProductName = "Gatorade"'                      Description = "fitness drink!"                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails.AddRange(new List<ProductDetail>              {                  new ProductDetail()                  {                      ProductDetailID = 1'                      ProductName = "Candy"'                      Description = "sweet snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 2'                      ProductName = "CheeseCake"'                      Description = "Cheese-flavored snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 3'                      ProductName = "CokeCola"'                      Description = "suger soft drink"                  }'                  new ProductDetail()                  {                      ProductDetailID = 4'                      ProductName = "CokeCola Zero"'                      Description = "0 suger soft drink"                  }'                  new ProductDetail()                  {                      ProductDetailID = 5'                      ProductName = "Mustard"'                      Description = "spicy snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 6'                      ProductName = "Gatorade"'                      Description = "fitness drink!"                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails.AddRange(new List<ProductDetail>              {                  new ProductDetail()                  {                      ProductDetailID = 1'                      ProductName = "Candy"'                      Description = "sweet snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 2'                      ProductName = "CheeseCake"'                      Description = "Cheese-flavored snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 3'                      ProductName = "CokeCola"'                      Description = "suger soft drink"                  }'                  new ProductDetail()                  {                      ProductDetailID = 4'                      ProductName = "CokeCola Zero"'                      Description = "0 suger soft drink"                  }'                  new ProductDetail()                  {                      ProductDetailID = 5'                      ProductName = "Mustard"'                      Description = "spicy snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 6'                      ProductName = "Gatorade"'                      Description = "fitness drink!"                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails.AddRange(new List<ProductDetail>              {                  new ProductDetail()                  {                      ProductDetailID = 1'                      ProductName = "Candy"'                      Description = "sweet snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 2'                      ProductName = "CheeseCake"'                      Description = "Cheese-flavored snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 3'                      ProductName = "CokeCola"'                      Description = "suger soft drink"                  }'                  new ProductDetail()                  {                      ProductDetailID = 4'                      ProductName = "CokeCola Zero"'                      Description = "0 suger soft drink"                  }'                  new ProductDetail()                  {                      ProductDetailID = 5'                      ProductName = "Mustard"'                      Description = "spicy snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 6'                      ProductName = "Gatorade"'                      Description = "fitness drink!"                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails.AddRange(new List<ProductDetail>              {                  new ProductDetail()                  {                      ProductDetailID = 1'                      ProductName = "Candy"'                      Description = "sweet snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 2'                      ProductName = "CheeseCake"'                      Description = "Cheese-flavored snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 3'                      ProductName = "CokeCola"'                      Description = "suger soft drink"                  }'                  new ProductDetail()                  {                      ProductDetailID = 4'                      ProductName = "CokeCola Zero"'                      Description = "0 suger soft drink"                  }'                  new ProductDetail()                  {                      ProductDetailID = 5'                      ProductName = "Mustard"'                      Description = "spicy snack"                  }'                  new ProductDetail()                  {                      ProductDetailID = 6'                      ProductName = "Gatorade"'                      Description = "fitness drink!"                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products[0].Details.Add(this.ProductDetails[2]);
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products[0].Details.Add(this.ProductDetails[3]);
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products[0].Details.Add(this.ProductDetails[4]);
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Products[0].Details.Add(this.ProductDetails[5]);
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails[2].RelatedProduct = this.Products[0];
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails[3].RelatedProduct = this.Products[0];
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails[4].RelatedProduct = this.Products[0];
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails[5].RelatedProduct = this.Products[0];
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductReviews.AddRange(new List<ProductReview>()              {                  new ProductReview()                  {                      ProductID = 6'                      ProductDetailID = 1'                      ReviewTitle = "Amazing product"'                      RevisionID = 1'                      Author = "Joe Doe"'                      Comment = "It's very tasty"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "So so"'                      RevisionID = 1'                      Author = "Food lover"'                      Comment = "Not so good as other brands"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Good"'                      RevisionID = 1'                      Author = "Dude"'                      Comment = "Tasty good!"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Special"'                      RevisionID = 1'                      Author = "Andy"'                      Comment = "It's Special!"                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductReviews.AddRange(new List<ProductReview>()              {                  new ProductReview()                  {                      ProductID = 6'                      ProductDetailID = 1'                      ReviewTitle = "Amazing product"'                      RevisionID = 1'                      Author = "Joe Doe"'                      Comment = "It's very tasty"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "So so"'                      RevisionID = 1'                      Author = "Food lover"'                      Comment = "Not so good as other brands"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Good"'                      RevisionID = 1'                      Author = "Dude"'                      Comment = "Tasty good!"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Special"'                      RevisionID = 1'                      Author = "Andy"'                      Comment = "It's Special!"                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductReviews.AddRange(new List<ProductReview>()              {                  new ProductReview()                  {                      ProductID = 6'                      ProductDetailID = 1'                      ReviewTitle = "Amazing product"'                      RevisionID = 1'                      Author = "Joe Doe"'                      Comment = "It's very tasty"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "So so"'                      RevisionID = 1'                      Author = "Food lover"'                      Comment = "Not so good as other brands"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Good"'                      RevisionID = 1'                      Author = "Dude"'                      Comment = "Tasty good!"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Special"'                      RevisionID = 1'                      Author = "Andy"'                      Comment = "It's Special!"                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductReviews.AddRange(new List<ProductReview>()              {                  new ProductReview()                  {                      ProductID = 6'                      ProductDetailID = 1'                      ReviewTitle = "Amazing product"'                      RevisionID = 1'                      Author = "Joe Doe"'                      Comment = "It's very tasty"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "So so"'                      RevisionID = 1'                      Author = "Food lover"'                      Comment = "Not so good as other brands"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Good"'                      RevisionID = 1'                      Author = "Dude"'                      Comment = "Tasty good!"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Special"'                      RevisionID = 1'                      Author = "Andy"'                      Comment = "It's Special!"                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductReviews.AddRange(new List<ProductReview>()              {                  new ProductReview()                  {                      ProductID = 6'                      ProductDetailID = 1'                      ReviewTitle = "Amazing product"'                      RevisionID = 1'                      Author = "Joe Doe"'                      Comment = "It's very tasty"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "So so"'                      RevisionID = 1'                      Author = "Food lover"'                      Comment = "Not so good as other brands"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Good"'                      RevisionID = 1'                      Author = "Dude"'                      Comment = "Tasty good!"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Special"'                      RevisionID = 1'                      Author = "Andy"'                      Comment = "It's Special!"                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductReviews.AddRange(new List<ProductReview>()              {                  new ProductReview()                  {                      ProductID = 6'                      ProductDetailID = 1'                      ReviewTitle = "Amazing product"'                      RevisionID = 1'                      Author = "Joe Doe"'                      Comment = "It's very tasty"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "So so"'                      RevisionID = 1'                      Author = "Food lover"'                      Comment = "Not so good as other brands"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Good"'                      RevisionID = 1'                      Author = "Dude"'                      Comment = "Tasty good!"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Special"'                      RevisionID = 1'                      Author = "Andy"'                      Comment = "It's Special!"                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductReviews.AddRange(new List<ProductReview>()              {                  new ProductReview()                  {                      ProductID = 6'                      ProductDetailID = 1'                      ReviewTitle = "Amazing product"'                      RevisionID = 1'                      Author = "Joe Doe"'                      Comment = "It's very tasty"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "So so"'                      RevisionID = 1'                      Author = "Food lover"'                      Comment = "Not so good as other brands"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Good"'                      RevisionID = 1'                      Author = "Dude"'                      Comment = "Tasty good!"                  }'                  new ProductReview()                  {                      ProductID = 5'                      ProductDetailID = 2'                      ReviewTitle = "Special"'                      RevisionID = 1'                      Author = "Andy"'                      Comment = "It's Special!"                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails[0].Reviews.Add(this.ProductReviews[2]);
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails[0].Reviews.Add(this.ProductReviews[3]);
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails[1].Reviews.Add(this.ProductReviews[2]);
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.ProductDetails[1].Reviews.Add(this.ProductReviews[3]);
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Calendars.AddRange(new List<Calendar>()              {                  new Calendar()                  {                      Day = new Date(2015' 11' 11)                  }'                  new Calendar()                  {                      Day = new Date(2015' 11' 12)                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Calendars.AddRange(new List<Calendar>()              {                  new Calendar()                  {                      Day = new Date(2015' 11' 11)                  }'                  new Calendar()                  {                      Day = new Date(2015' 11' 12)                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Calendars.AddRange(new List<Calendar>()              {                  new Calendar()                  {                      Day = new Date(2015' 11' 11)                  }'                  new Calendar()                  {                      Day = new Date(2015' 11' 12)                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Calendars.AddRange(new List<Calendar>()              {                  new Calendar()                  {                      Day = new Date(2015' 11' 11)                  }'                  new Calendar()                  {                      Day = new Date(2015' 11' 12)                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Calendars.AddRange(new List<Calendar>()              {                  new Calendar()                  {                      Day = new Date(2015' 11' 11)                  }'                  new Calendar()                  {                      Day = new Date(2015' 11' 12)                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Calendars.AddRange(new List<Calendar>()              {                  new Calendar()                  {                      Day = new Date(2015' 11' 11)                  }'                  new Calendar()                  {                      Day = new Date(2015' 11' 12)                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      OrderID = 7'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(0)'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 31)'                      ShipTime = new TimeOfDay(12' 40' 5' 50)'                  }'                  new Order()                  {                      OrderID = 8'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(0)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 8' 12)'                      ShipTime = new TimeOfDay(6' 5' 30' 0)'                  }'                  new Order()                  {                      OrderID = 9'                      CustomerForOrder = this.People.OfType<Customer>().ElementAt(1)'                      LoggedInEmployee = this.People.OfType<Employee>().ElementAt(1)'                      OrderDate = new DateTimeOffset(2011' 1' 4' 18' 3' 57' TimeSpan.FromHours(-8))'                      ShelfLife = new TimeSpan(1)'                      OrderShelfLifes = new Collection<TimeSpan>(){new TimeSpan(1)}'                      ShipDate = new Date(2014' 6' 12)'                      ShipTime = new TimeOfDay(4' 5' 30' 0)'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: (this.People[1] as Customer).Orders.AddRange(new List<Order> { this.Orders[0]' this.Orders[2] });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.OrderDetails.AddRange(new List<OrderDetail>()              {                  new OrderDetail()                  {                      OrderID = Orders[0].OrderID'                      AssociatedOrder = Orders[0]'                      ProductID = Products[0].ProductID'                      ProductOrdered = Products[0]'                      Quantity = 50'                      UnitPrice = Products[0].UnitPrice'                      OrderPlaced = DateTimeOffset.Now                  }'                  new OrderDetail()                  {                      OrderID = Orders[0].OrderID'                      AssociatedOrder = Orders[0]'                      ProductID = Products[1].ProductID'                      ProductOrdered = Products[1]'                      Quantity = 2'                      UnitPrice = Products[1].UnitPrice'                      OrderPlaced = new DateTimeOffset()                  }'                  new OrderDetail()                  {                      OrderID = Orders[1].OrderID'                      AssociatedOrder = Orders[1]'                      ProductID = Products[1].ProductID'                      ProductOrdered = Products[1]'                      Quantity = 5'                      UnitPrice = Products[1].UnitPrice'                      OrderPlaced = new DateTimeOffset(new DateTime(2000' 10' 11))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.OrderDetails.AddRange(new List<OrderDetail>()              {                  new OrderDetail()                  {                      OrderID = Orders[0].OrderID'                      AssociatedOrder = Orders[0]'                      ProductID = Products[0].ProductID'                      ProductOrdered = Products[0]'                      Quantity = 50'                      UnitPrice = Products[0].UnitPrice'                      OrderPlaced = DateTimeOffset.Now                  }'                  new OrderDetail()                  {                      OrderID = Orders[0].OrderID'                      AssociatedOrder = Orders[0]'                      ProductID = Products[1].ProductID'                      ProductOrdered = Products[1]'                      Quantity = 2'                      UnitPrice = Products[1].UnitPrice'                      OrderPlaced = new DateTimeOffset()                  }'                  new OrderDetail()                  {                      OrderID = Orders[1].OrderID'                      AssociatedOrder = Orders[1]'                      ProductID = Products[1].ProductID'                      ProductOrdered = Products[1]'                      Quantity = 5'                      UnitPrice = Products[1].UnitPrice'                      OrderPlaced = new DateTimeOffset(new DateTime(2000' 10' 11))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.OrderDetails.AddRange(new List<OrderDetail>()              {                  new OrderDetail()                  {                      OrderID = Orders[0].OrderID'                      AssociatedOrder = Orders[0]'                      ProductID = Products[0].ProductID'                      ProductOrdered = Products[0]'                      Quantity = 50'                      UnitPrice = Products[0].UnitPrice'                      OrderPlaced = DateTimeOffset.Now                  }'                  new OrderDetail()                  {                      OrderID = Orders[0].OrderID'                      AssociatedOrder = Orders[0]'                      ProductID = Products[1].ProductID'                      ProductOrdered = Products[1]'                      Quantity = 2'                      UnitPrice = Products[1].UnitPrice'                      OrderPlaced = new DateTimeOffset()                  }'                  new OrderDetail()                  {                      OrderID = Orders[1].OrderID'                      AssociatedOrder = Orders[1]'                      ProductID = Products[1].ProductID'                      ProductOrdered = Products[1]'                      Quantity = 5'                      UnitPrice = Products[1].UnitPrice'                      OrderPlaced = new DateTimeOffset(new DateTime(2000' 10' 11))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.OrderDetails.AddRange(new List<OrderDetail>()              {                  new OrderDetail()                  {                      OrderID = Orders[0].OrderID'                      AssociatedOrder = Orders[0]'                      ProductID = Products[0].ProductID'                      ProductOrdered = Products[0]'                      Quantity = 50'                      UnitPrice = Products[0].UnitPrice'                      OrderPlaced = DateTimeOffset.Now                  }'                  new OrderDetail()                  {                      OrderID = Orders[0].OrderID'                      AssociatedOrder = Orders[0]'                      ProductID = Products[1].ProductID'                      ProductOrdered = Products[1]'                      Quantity = 2'                      UnitPrice = Products[1].UnitPrice'                      OrderPlaced = new DateTimeOffset()                  }'                  new OrderDetail()                  {                      OrderID = Orders[1].OrderID'                      AssociatedOrder = Orders[1]'                      ProductID = Products[1].ProductID'                      ProductOrdered = Products[1]'                      Quantity = 5'                      UnitPrice = Products[1].UnitPrice'                      OrderPlaced = new DateTimeOffset(new DateTime(2000' 10' 11))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.OrderDetails.AddRange(new List<OrderDetail>()              {                  new OrderDetail()                  {                      OrderID = Orders[0].OrderID'                      AssociatedOrder = Orders[0]'                      ProductID = Products[0].ProductID'                      ProductOrdered = Products[0]'                      Quantity = 50'                      UnitPrice = Products[0].UnitPrice'                      OrderPlaced = DateTimeOffset.Now                  }'                  new OrderDetail()                  {                      OrderID = Orders[0].OrderID'                      AssociatedOrder = Orders[0]'                      ProductID = Products[1].ProductID'                      ProductOrdered = Products[1]'                      Quantity = 2'                      UnitPrice = Products[1].UnitPrice'                      OrderPlaced = new DateTimeOffset()                  }'                  new OrderDetail()                  {                      OrderID = Orders[1].OrderID'                      AssociatedOrder = Orders[1]'                      ProductID = Products[1].ProductID'                      ProductOrdered = Products[1]'                      Quantity = 5'                      UnitPrice = Products[1].UnitPrice'                      OrderPlaced = new DateTimeOffset(new DateTime(2000' 10' 11))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.OrderDetails.AddRange(new List<OrderDetail>()              {                  new OrderDetail()                  {                      OrderID = Orders[0].OrderID'                      AssociatedOrder = Orders[0]'                      ProductID = Products[0].ProductID'                      ProductOrdered = Products[0]'                      Quantity = 50'                      UnitPrice = Products[0].UnitPrice'                      OrderPlaced = DateTimeOffset.Now                  }'                  new OrderDetail()                  {                      OrderID = Orders[0].OrderID'                      AssociatedOrder = Orders[0]'                      ProductID = Products[1].ProductID'                      ProductOrdered = Products[1]'                      Quantity = 2'                      UnitPrice = Products[1].UnitPrice'                      OrderPlaced = new DateTimeOffset()                  }'                  new OrderDetail()                  {                      OrderID = Orders[1].OrderID'                      AssociatedOrder = Orders[1]'                      ProductID = Products[1].ProductID'                      ProductOrdered = Products[1]'                      Quantity = 5'                      UnitPrice = Products[1].UnitPrice'                      OrderPlaced = new DateTimeOffset(new DateTime(2000' 10' 11))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Orders[1].OrderDetails.Add(this.OrderDetails[2]);
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: (this.People[2] as Employee).CompanyID = this.Company.CompanyID;
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: (this.People[3] as Employee).CompanyID = this.Company.CompanyID;
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: (this.People[2] as Employee).Company = this.Company;
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: (this.People[3] as Employee).Company = this.Company;
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Company.Employees.AddRange(new List<Employee> { this.People[2] as Employee' this.People[3] as Employee });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Company.Employees.AddRange(new List<Employee> { this.People[2] as Employee' this.People[3] as Employee });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Departments.AddRange(new List<Department>()              {                  new Department()                  {                      DepartmentID = 1'                      Name = "D1"'                      Company = Company                  }'                  new Department()                  {                      DepartmentID = 2'                      Name = "D2"'                      Company = Company                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Company.CoreDepartment = new Department()              {                  DepartmentID = 3'                  Name = "D3"'                  Company = Company              };
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.StoredPIs.AddRange(new List<StoredPI>()              {                  new StoredPI()                  {                      StoredPIID = 801'                      PIName = "Default"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 30))                  }'                  new StoredPI()                  {                      StoredPIID = 802'                      PIName = "New One"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 1))                  }'                  new StoredPI()                  {                      StoredPIID = 803'                      PIName = "Backup"'                      PIType = "BankAccountPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 804'                      PIName = "Active One"'                      PIType = "CreditCard"'                      CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 26))                  }'                  new StoredPI()                  {                      StoredPIID = 805'                      PIName = "Chris' PI"'                      PIType = "AliPay"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 2))                  }'                  new StoredPI()                  {                      StoredPIID = 806'                      PIName = "Allen's PI"'                      PIType = "StoredValue"'                      CreatedDate = new DateTimeOffset(new DateTime(2013' 12' 26))                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.Accounts.AddRange(new List<Account>()              {                  new Account()                  {                      AccountID = 101'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Alex"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 301'                          GiftCardNO = "AAA123A"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101901'                              FriendlyName = "101 first PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101902'                              FriendlyName = "101 frist credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 801)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "234"'                              CardNumber = "6000000000000000"'                              HolderName = "Alex"'                              Balance = 100.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 11' 1))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }'                          new CreditCardPI()                          {                              PaymentInstrumentID = 101903'                              FriendlyName = "101 second credit PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 804)'                              BackupStoredPI = DefaultStoredPI'                              CVV = "012"'                              CardNumber = "8000000000000000"'                              HolderName = "James"'                              Balance = 300.00'                              ExperationDate = new DateTimeOffset(new DateTime(2022' 10' 2))'                              CreditRecords = new List<CreditRecord>()                              {                                  new CreditRecord()                                  {                                      CreditRecordID = 1'                                      IsGood = true'                                      Reason = "Shopping"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }'                                  new CreditRecord()                                  {                                      CreditRecordID = 2'                                      IsGood = false'                                      Reason = "Rental"'                                      CreatedDate = new DateTimeOffset(new DateTime(2012' 11' 1))                                  }                              }                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10001011'                              TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10001012'                              TemplateGuid =  "748F8F95-6683-4D30-85EE-00E05CC3A627"'                              Title = "XBox Premium"'                              Category = "Monthly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 5))                          }'                          new Subscription()                          {                              SubscriptionID = 10011013'                              TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                              Title = "Windows Store Premium"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 5' 11))                          }                      }                  }'                  new Account()                  {                      AccountID = 102'                      CountryRegion = "GB"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "James"'                          LastName = "Bunder"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 302'                          GiftCardNO = "BBA12BB"'                          Amount = 200'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 103'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adam"'                          LastName = "Homes"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 303'                          GiftCardNO = "AAB124A"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                      MyPaymentInstruments =                      {                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103901'                              FriendlyName = "103 frist PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 802)'                              BackupStoredPI = DefaultStoredPI'                              BillingStatements =                              {                                  new Statement()                                  {                                      StatementID =  103901001'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Digital goods: App"'                                      Amount = 100.0                                  }'                                  new Statement()                                  {                                      StatementID =  103901002'                                      TransactionType = "OnlinePurchase"'                                      TransactionDescription = "Amazon purchase"'                                      Amount = 125.0                                  }                              }                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103902'                              FriendlyName = "103 second PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 1' 1))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 803)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 103905'                              FriendlyName = "103 new PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 10' 29))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }'                          new PaymentInstrument()                          {                              PaymentInstrumentID = 101910'                              FriendlyName = "103 backup PI"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 6' 15))'                              TheStoredPI = this.StoredPIs.GetEntity((it)=> it.StoredPIID == 805)'                              BackupStoredPI = DefaultStoredPI                          }                      }'                      ActiveSubscriptions = new EntityCollection<Subscription>()                      {                          new Subscription()                          {                              SubscriptionID = 10021031'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2013' 2' 15))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10021032'                              TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                              Title = "Windows Live"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 2' 9))'                              QualifiedAccountID = 103                          }'                          new Subscription()                          {                              SubscriptionID = 10031031'                              TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                              Title = "OneDrive"'                              Category = "Yearly"'                              CreatedDate = new DateTimeOffset(new DateTime(2012' 12' 15))'                              QualifiedAccountID = 103                          }'                      }                  }'                  new Account()                  {                      AccountID = 104'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Adrian"'                          LastName = "Green"                      }'                  }'                  new Account()                  {                      AccountID = 105'                      CountryRegion = "US"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Lily"'                          LastName = "Green"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 305'                          GiftCardNO = "AAA124D"'                          Amount = 1.9'                          ExperationDate = new DateTimeOffset(new DateTime(2014' 12' 30))                      }'                  }'                  new Account()                  {                      AccountID = 106'                      CountryRegion = "CN"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Allen"'                          LastName = "Ivorson"                      }'                  }'                  new Account()                  {                      AccountID = 107'                      CountryRegion = "FR"'                      AccountInfo = new AccountInfo()                      {                          FirstName = "Albert"'                          LastName = "Ivorson"                      }'                      MyGiftCard = new GiftCard()                      {                          GiftCardID = 306'                          GiftCardNO = "AAA124E"'                          Amount = 19.9'                          ExperationDate = new DateTimeOffset(new DateTime(2013' 12' 30))                      }'                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Magic Number,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The following statement contains a magic number: this.SubscriptionTemplates.AddRange(new List<Subscription>()              {                  new Subscription()                  {                      SubscriptionID = 1000'                      TemplateGuid = "748F8F95-6683-4D30-85EE-00E05CC3A627"'                      Title = "XBox Premium"'                      Category = "Monthly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 1' 5))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1001'                      TemplateGuid = "D51862EA-7917-4817-867E-D3A3BA402865"'                      Title = "Windows Store Premium"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 101                  }'                  new Subscription()                  {                      SubscriptionID = 1002'                      TemplateGuid = "262176C4-1139-4BD5-91F7-0C30CFF1E033"'                      Title = "Windows Live"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1003'                      TemplateGuid = "A31F4B0E-7FAD-4F1B-83FE-55DC37CFD4DF"'                      Title = "OneDrive"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }'                  new Subscription()                  {                      SubscriptionID = 1004'                      TemplateGuid = "3B3887C4-D383-4095-A066-F4BBAE6E87AD"'                      Title = "OCP"'                      Category = "Yearly"'                      CreatedDate = new DateTimeOffset(new DateTime(2005' 2' 11))'                      QualifiedAccountID = 103                  }              });
Duplicate Code,Microsoft.Test.OData.Services.ODataWCFService,DefaultWCFSvcDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataDefaultService\DefaultWCFSvcDataSource.cs,Initialize,The method contains a code clone-set at the following line numbers (starting from the method definition): ((136' 157)' (251' 272))
