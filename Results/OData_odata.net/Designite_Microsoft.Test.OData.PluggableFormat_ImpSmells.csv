Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Test.OData.PluggableFormat.Avro,ODataAvroConvert,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Avro\ODataAvroConvert.cs,FromODataObject,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Test.OData.PluggableFormat.Avro,ODataAvroReader,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Avro\ODataAvroReader.cs,Read,Cyclomatic complexity of the method is 16
Complex Method,Microsoft.Test.OData.PluggableFormat.Avro,ODataAvroSchemaGen,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Avro\ODataAvroSchemaGen.cs,GetSchema,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Test.OData.PluggableFormat.Avro,ODataAvroSchemaGen,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Avro\ODataAvroSchemaGen.cs,GetSchemaFromModel,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Test.OData.PluggableFormat,TestHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\TestHelper.cs,PropertiesEqual,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Test.OData.PluggableFormat.VCard,ODataVCardReader,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\VCard\ODataVCardReader.cs,Read,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.Test.OData.PluggableFormat,TestHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\TestHelper.cs,CreateMessageReader,The method has 5 parameters. Parameters: stream' container' contenttype' model' isResponse
Long Parameter List,Microsoft.Test.OData.PluggableFormat,TestHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\TestHelper.cs,CreateMessageWriter,The method has 5 parameters. Parameters: stream' container' contenttype' model' isResponse
Long Parameter List,Microsoft.Test.OData.PluggableFormat.VCard,VCardReader,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\VCard\VCardReader.cs,TrySplitByChar,The method has 5 parameters. Parameters: input' seperator' p1' p2' reverse
Long Identifier,Microsoft.Test.OData.PluggableFormat.VCard,ODataVCardReader,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\VCard\ODataVCardReader.cs,,The length of the parameter throwExceptionOnDuplicatedPropertyNames is 39.
Long Identifier,Microsoft.Test.OData.PluggableFormat.VCard,VCardInputContext,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\VCard\VCardInputContext.cs,,The length of the parameter throwExceptionOnDuplicatedPropertyNames is 39.
Long Statement,Microsoft.Test.OData.PluggableFormat.Avro,ODataAvroOutputContext,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Avro\ODataAvroOutputContext.cs,CreateODataResourceWriter,The length of the statement  "            return new ODataAvroWriter(this' value => this.AvroWriter.Write(value)' this.AvroWriter.UpdateSchema(null' resourceType)' false); " is 129.
Long Statement,Microsoft.Test.OData.PluggableFormat.Avro,ODataAvroOutputContext,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Avro\ODataAvroOutputContext.cs,CreateODataResourceSetWriter,The length of the statement  "            return new ODataAvroWriter(this' value => this.AvroWriter.Write(value)' this.AvroWriter.UpdateSchema(null' resourceType' true)' true); " is 134.
Long Statement,Microsoft.Test.OData.PluggableFormat.Avro,ODataAvroSchemaGen,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Avro\ODataAvroSchemaGen.cs,GetSchema,The length of the statement  "            Schema.SetFields(rs' entry.Properties.Select(property => Schema.CreateField(property.Name' GetSchema(property.Value)))); " is 120.
Long Statement,Microsoft.Test.OData.PluggableFormat.Avro,ODataAvroSchemaGen,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Avro\ODataAvroSchemaGen.cs,GetSchemaFromModel,The length of the statement  "            Schema.SetFields(rs' type.Properties().Select(property => Schema.CreateField(property.Name' GetSchemaFromModel(property.Type)))); " is 129.
Empty Catch Block,Microsoft.Test.OData.PluggableFormat.Avro,AvroWriter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Avro\AvroWriter.cs,UpdateSchema,The method has an empty catch block.
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro,AvroWriter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Avro\AvroWriter.cs,UpdateSchema,The following statement contains a magic number: this.seqWriter = new SequentialWriter<object>(writer' 16);
Magic Number,Microsoft.Test.OData.PluggableFormat.VCard,ODataVCardWriter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\VCard\ODataVCardWriter.cs,WriteStart,The following statement contains a magic number: @params += ";" + anns.Name.Substring(6) /*VCARD.*/ + "=" + ((ODataPrimitiveValue)anns.Value).Value;
Missing Default,Microsoft.Test.OData.PluggableFormat.Avro,ODataAvroSchemaGen,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat\Avro\ODataAvroSchemaGen.cs,GetSchemaFromModel,The following switch statement is missing a default case: switch (primitive.PrimitiveKind)                  {                        case EdmPrimitiveTypeKind.Binary:                          return Schema.CreateBytes();                      case EdmPrimitiveTypeKind.Boolean:                          return Schema.CreateBoolean();                      case EdmPrimitiveTypeKind.Int32:                          return Schema.CreateInt();                      case EdmPrimitiveTypeKind.Int64:                          return Schema.CreateLong();                      case EdmPrimitiveTypeKind.Single:                          return Schema.CreateFloat();                      case EdmPrimitiveTypeKind.Double:                          return Schema.CreateDouble();                      case EdmPrimitiveTypeKind.String:                          return Schema.CreateString();                  }
