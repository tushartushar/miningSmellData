Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareValues,The method has 100 lines of code.
Complex Method,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,Compare,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,Supports,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,Evaluate,Cyclomatic complexity of the method is 18
Complex Method,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,EvaluateCast,Cyclomatic complexity of the method is 22
Complex Method,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateValues,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Test.Taupo.Query,QueryRepositoryBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryRepositoryBuilderBase.cs,BuildConstants,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Test.Taupo.Query,QueryResultReferenceTrimmerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryResultReferenceTrimmerBase.cs,FixupReferencesBasedOnSpanPaths,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareValues,Cyclomatic complexity of the method is 16
Complex Method,Microsoft.Test.Taupo.Query.Contracts,QueryClrPrimitiveType,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryClrPrimitiveType.cs,GetDefaultValueInternal,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Test.Taupo.Query.Contracts,QueryTestCase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryTestCase.cs,GetAllNestedPropertyPaths,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,CompareStructural,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,CompareCollection,Cyclomatic complexity of the method is 9
Long Parameter List,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethod,The method has 5 parameters. Parameters: type' name' types' isPublic' isStatic
Long Parameter List,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperty,The method has 6 parameters. Parameters: type' name' isPublic' isStatic' returnType' parameterTypes
Long Parameter List,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateBagProperty,The method has 5 parameters. Parameters: instance' memberProperty' elementType' propertyPath' namedValues
Long Parameter List,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateComplexBag,The method has 5 parameters. Parameters: instance' memberProperty' propertyPath' namedValues' complexTypeElementDataType
Long Parameter List,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateScalarBag,The method has 5 parameters. Parameters: instance' memberProperty' propertyPath' namedValues' scalarElementDataType
Long Parameter List,Microsoft.Test.Taupo.Query,QueryDataSetBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryDataSetBuilderBase.cs,BuildStructuralPropertiesQueryValue,The method has 5 parameters. Parameters: instance' propertyPath' properties' queryProperties' row
Long Parameter List,Microsoft.Test.Taupo.Query,QueryDataSetBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryDataSetBuilderBase.cs,PopulateNavigateResult,The method has 5 parameters. Parameters: row' entityInstance' associationSet' fromSetEnd' toSetEnd
Long Parameter List,Microsoft.Test.Taupo.Query,QueryResultReferenceTrimmerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryResultReferenceTrimmerBase.cs,FixupReferencesBasedOnSpanPaths,The method has 5 parameters. Parameters: value' parent' navigationProperty' path' spanPaths
Long Parameter List,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,WriteErrorIfNotEqual,The method has 5 parameters. Parameters: propertyPath' expected' actual' errorMessage' errorParams
Long Parameter List,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareBagProperty,The method has 5 parameters. Parameters: instance' memberProperty' elementType' propertyPath' namedValues
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,QueryCollectionValue,The method has 5 parameters. Parameters: type' evaluationStrategy' evaluationError' elements' isSorted
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts,QueryRepository,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryRepository.cs,QueryRepository,The method has 6 parameters. Parameters: typeLibrary' rootQueries' constants' scalarTypes' rootDataTypes' dataSet
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts.CommonExpressions,QueryCustomFunctionCallExpression,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\CommonExpressions\QueryCustomFunctionCallExpression.cs,QueryCustomFunctionCallExpression,The method has 6 parameters. Parameters: resultType' function' functionBody' isRoot' calledByNameOnly' arguments
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts.Linq.Expressions,LinqGroupByExpression,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\Expressions\LinqGroupByExpression.cs,LinqGroupByExpression,The method has 5 parameters. Parameters: source' keySelector' elementSelector' resultSelector' type
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts.Linq.Expressions,LinqGroupJoinExpression,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\Expressions\LinqGroupJoinExpression.cs,LinqGroupJoinExpression,The method has 6 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector' type
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts.Linq.Expressions,LinqJoinExpression,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\Expressions\LinqJoinExpression.cs,LinqJoinExpression,The method has 6 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector' type
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts.Linq.Expressions,LinqJoinExpressionBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\Expressions\LinqJoinExpressionBase.cs,LinqJoinExpressionBase,The method has 6 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector' type
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,GroupJoin,The method has 5 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,GroupJoin,The method has 5 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,Join,The method has 5 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,Join,The method has 5 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,GroupJoin,The method has 6 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector' type
Long Parameter List,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,Join,The method has 6 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector' type
Long Parameter List,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,CompareProperty,The method has 6 parameters. Parameters: structuralValue' expectedName' expectedPropertyType' actualValue' path' shouldThrow
Long Parameter List,Microsoft.Test.Taupo.Query.Linq,TypeBasedValueComparisonVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,TypeBasedValueComparisonVisitor,The method has 5 parameters. Parameters: parent' expectedValue' actualValue' path' shouldThrow
Long Identifier,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,FixupFunctionImportResultEntities,The length of the parameter elementKeyPropertyValuesDictionary is 34.
Long Identifier,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,GroupBy,The length of the parameter resultSelectorGroupingParameter is 31.
Long Identifier,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,GroupBy,The length of the parameter resultSelectorGroupingParameter is 31.
Long Identifier,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,LinqCommonSyntaxCodeGenerationVisitor,The length of the parameter customInitializationCodeGenerator is 33.
Long Identifier,Microsoft.Test.Taupo.Query.Linq,LinqMethodSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqMethodSyntaxCodeGenerationVisitor.cs,LinqMethodSyntaxCodeGenerationVisitor,The length of the parameter customInitializationCodeGenerator is 33.
Long Identifier,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the parameter collectionSelectorGenericArguments is 34.
Long Identifier,Microsoft.Test.Taupo.Query.Linq,LinqQuerySyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQuerySyntaxCodeGenerationVisitor.cs,LinqQuerySyntaxCodeGenerationVisitor,The length of the parameter customInitializationCodeGenerator is 33.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetTypeOrThrow,The length of the statement  "                // devnote (sparra): Not throwing a custom error message here because this method is expected to be removed. See comments above. " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetAllInstanceProperties,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetAllInstanceProperties,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetPublicProperties,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetPublicProperties,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetPublicProperties,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetPublicProperties,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetPublicProperties,The length of the statement  "            // TypeInfo.DeclaredProperties and Type.GetRuntimeProperties return both public and private properties' so need to filter out only public ones. " is 143.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetPublicProperties,The length of the statement  "            IEnumerable<PropertyInfo> properties = declaredOnly ? type.GetTypeInfo().DeclaredProperties : type.GetRuntimeProperties(); " is 122.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetInstanceConstructors,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetInstanceConstructors,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetInstanceConstructor,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetInstanceConstructor,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethod,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethod,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethod,The length of the statement  "            return type.GetRuntimeMethods().Where(m => m.Name == name && (isPublic == null || m.IsPublic == isPublic) && (isStatic == null || m.IsStatic == isStatic)).SingleOrDefault(); " is 173.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethod,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethod,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetField,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetField,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetField,The length of the statement  "            return type.GetRuntimeFields().Where(f => f.Name == name && (isPublic == null || f.IsPublic == isPublic) && (isStatic == null || f.IsStatic == isStatic)).SingleOrDefault(); " is 172.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperty,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperty,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperty,The length of the statement  "            return type.GetRuntimeProperties().Where(p => p.Name == name && (isPublic == null || p.GetMethod.IsPublic == isPublic) && (isStatic == null || p.GetMethod.IsStatic == isStatic)).SingleOrDefault(); " is 196.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperty,The length of the statement  "            var propertyCandidates = type.GetRuntimeProperties().Where(p => p.Name == name && (isPublic == null || p.GetMethod.IsPublic == isPublic) && (isStatic == null || p.GetMethod.IsStatic == isStatic)); " is 196.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethods,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethods,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetMethods,The length of the statement  "            return type.GetRuntimeMethods().Where(m => (isPublic == null || m.IsPublic == isPublic) &&  (isStatic == null || m.IsStatic == isStatic)); " is 138.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetFields,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetFields,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetFields,The length of the statement  "            return type.GetRuntimeFields().Where(f => (isPublic == null || f.IsPublic == isPublic) && (isStatic == null || f.IsStatic == isStatic)); " is 136.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperties,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperties,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetProperties,The length of the statement  "            return type.GetRuntimeProperties().Where(p => (isPublic == null || p.GetMethod.IsPublic == isPublic) && (isStatic == null || p.GetMethod.IsStatic == isStatic)); " is 160.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetNestedTypes,The length of the statement  "            return type.GetTypeInfo().DeclaredNestedTypes.Where(t => isPublic == null || t.IsPublic == isPublic).Select(t => t.AsType()); " is 125.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetNestedTypes,The length of the statement  "            // WIN8: The BindingFlags enum and all related reflection method overloads have been removed from Win8. Instead of trying to provide " is 132.
Long Statement,Microsoft.Test.Taupo.Query,PlatformHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\PlatformHelper.cs,GetNestedTypes,The length of the statement  "            // a general purpose flags enum and methods that can take any combination of the flags' we provide more restrictive methods that " is 128.
Long Statement,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,Max,The length of the statement  "            ExceptionUtilities.Assert(collection.Elements.Any(v => !v.IsNull)' "Collection must contain at least one non-null value in a Max operation"); " is 141.
Long Statement,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,Min,The length of the statement  "            ExceptionUtilities.Assert(collection.Elements.Any(v => !v.IsNull)' "Collection must contain at least one non-null value in a Min operation"); " is 141.
Long Statement,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,Compare,The length of the statement  "                ExceptionUtilities.Assert(this.IsSpatialType(t2)' "Because CLR types match' both values should both be spatial. Type was '{0}'"' t2); " is 133.
Long Statement,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,Compare,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(this.SpatialEqualityComparer' "Cannot compare spatial values without a spatial equality-comparer"); " is 137.
Long Statement,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,GetCommonType,The length of the statement  "            Type commonClrType = LinqTypeSemantics.GetCommonType(((QueryClrPrimitiveType)leftType).ClrType' ((QueryClrPrimitiveType)rightType).ClrType); " is 140.
Long Statement,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,Evaluate,The length of the statement  "                    return new QueryClrPrimitiveType(typeof(string)' this).CreateValue(firstValue.Value.ToString() + secondValue.Value.ToString()); " is 127.
Long Statement,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,EvaluateBuiltInFunction,The length of the statement  "            throw new TaupoInvalidOperationException("Clr Query Evaluation can't evaluate built-in functions. Function: '" + functionName + "'."); " is 134.
Long Statement,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,EvaluateFunction,The length of the statement  "            throw new TaupoInvalidOperationException("Clr Query Evaluation can't evaluate custom functions. Function: '" + customFunction.FullName + "'."); " is 143.
Long Statement,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,EvaluateFunctionImport,The length of the statement  "            throw new TaupoInvalidOperationException("Clr Query Evaluation can't evaluate function imports. Function import: '" + functionImport.Name + "'."); " is 146.
Long Statement,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,EvaluateMemberMethod,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(primitiveResultType' "Only query primitive type is supported as member method's result type!"); " is 133.
Long Statement,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,EvaluateCast,The length of the statement  "                    throw new InvalidCastException(string.Format(CultureInfo.InvariantCulture' "Cannot cast value of type '{0}' to guid"' value.GetType())); " is 136.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateValues,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(queryCollectionValue' "Can only update QueryValues of Collection or Structural type not '{0}'"' queryValue.Type); " is 151.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateValues,The length of the statement  "                errorStringBuilder.AppendLine(string.Format(CultureInfo.InvariantCulture' "{0}={1}"' unusedNamedValue.Name' Convert.ToString(unusedNamedValue.Value' CultureInfo.InvariantCulture))); " is 181.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateValues,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(complexElementDataType' "Expected QueryComplex Type' actual query type {0}"' queryCollectionValue.Type); " is 142.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateValues,The length of the statement  "                    List<NamedValue> bagNamedValues = namedValues.Where(nv => nv.Name.StartsWith(childPropertyPath + "."' StringComparison.Ordinal)).ToList(); " is 138.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateValues,The length of the statement  "                    // NOTE: we cannot assert that it is complex/primitive/bag' because there may be new query types added in other assemblies that we know nothing about here " is 154.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateValues,The length of the statement  "                    List<NamedValue> complexInstanceNamedValues = namedValues.Where(nv => nv.Name.StartsWith(childPropertyPath + "."' StringComparison.Ordinal)).ToList(); " is 150.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateValues,The length of the statement  "                        ExceptionUtilities.Assert(exactMatches.Count < 2' "Should only find at most one property path {0} when looking for null value"' childPropertyPath); " is 147.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateBagProperty,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(complexTypeElementDataType' "PropertyPath '{0}' is an invalid type '{1}'"' propertyPath' memberProperty.PropertyType); " is 156.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateComplexBag,The length of the statement  "            List<NamedValue> complexInstanceNamedValues = namedValues.Where(pp => pp.Name.StartsWith(propertyPath + "." + i + "."' StringComparison.Ordinal)).ToList(); " is 155.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateComplexBag,The length of the statement  "                complexInstanceNamedValues = namedValues.Where(pp => pp.Name.StartsWith(propertyPath + "." + i + "."' StringComparison.Ordinal)).ToList(); " is 138.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateRootComplexBag,The length of the statement  "            List<NamedValue> complexInstanceNamedValues = namedValues.Where(pp => pp.Name.StartsWith(i + "."' StringComparison.Ordinal)).ToList(); " is 134.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateScalarBag,The length of the statement  "                ExceptionUtilities.Assert(scalarItemNamedValues.Count() < 2' "Should not get more than one value for a scalar Bag item for path '{0}'"' propertyPath + "." + i); " is 160.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateRootScalarBag,The length of the statement  "            List<NamedValue> scalarItemNamedValues = namedValues.Where(pp => pp.Name == i.ToString(CultureInfo.InvariantCulture)).ToList(); " is 127.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateRootScalarBag,The length of the statement  "                ExceptionUtilities.Assert(scalarItemNamedValues.Count() < 2' "Should not get more than one value for a scalar Bag item for path '{0}'"' i.ToString(CultureInfo.InvariantCulture)); " is 178.
Long Statement,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateBagPropertyWithNullOrEmpty,The length of the statement  "            ExceptionUtilities.Assert(exactMatches.Count == 1' "Should only find at most one property path {0} when looking for null or empty value"' propertyPath); " is 152.
Long Statement,Microsoft.Test.Taupo.Query,ObjectToQueryValueConverter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ObjectToQueryValueConverter.cs,Visit,The length of the statement  "            // taking inheritance into account - while 'expected' query entity type is Product' the actual materialized object can be DiscontinuedProduct  " is 141.
Long Statement,Microsoft.Test.Taupo.Query,ObjectToQueryValueConverter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ObjectToQueryValueConverter.cs,Visit,The length of the statement  "            var matchingEntityType = entityTypeHierarchy.Where(et => et.EntityType.Name == resultFragment.GetType().Name).SingleOrDefault(); " is 128.
Long Statement,Microsoft.Test.Taupo.Query,ObjectToQueryValueConverter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ObjectToQueryValueConverter.cs,Visit,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(matchingEntityType' "Could not find " + typeof(QueryEntityType).Name + " that would match the given type: " + resultFragment.GetType().Name); " is 179.
Long Statement,Microsoft.Test.Taupo.Query,ObjectToQueryValueConverter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ObjectToQueryValueConverter.cs,Visit,The length of the statement  "            var groupingInterface = resultFragment.GetType().GetInterfaces().Where(i => i.IsGenericType() && i.GetGenericTypeDefinition() == typeof(IGrouping<'>)).SingleOrDefault(); " is 169.
Long Statement,Microsoft.Test.Taupo.Query,ObjectToQueryValueConverter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ObjectToQueryValueConverter.cs,Visit,The length of the statement  "            var generateGroupingMethod = typeof(ObjectToQueryValueConverter).GetMethods(false' false).Where(m => m.Name == "GenerateGroupingItem" && m.IsGenericMethod).Single(); " is 165.
Long Statement,Microsoft.Test.Taupo.Query,ObjectToQueryValueConverter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ObjectToQueryValueConverter.cs,Visit,The length of the statement  "            throw new TaupoNotSupportedException("Not supported by generic converter. Use Entity Framework specific implementation."); " is 122.
Long Statement,Microsoft.Test.Taupo.Query,ObjectToQueryValueConverter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ObjectToQueryValueConverter.cs,Visit,The length of the statement  "            throw new TaupoNotSupportedException("Not supported by generic converter. Use Entity Framework specific implementation."); " is 122.
Long Statement,Microsoft.Test.Taupo.Query,ObjectToQueryValueConverter,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ObjectToQueryValueConverter.cs,PopulateProperties,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(propertyInfo' "Could not find appropriate property info for the given property: " + property.Name); " is 137.
Long Statement,Microsoft.Test.Taupo.Query,QueryDataSetBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryDataSetBuilderBase.cs,PopulateScalarAndComplexCollectionAndNonCollectionProperties,The length of the statement  "            this.BuildStructuralPropertiesQueryValue(instance' string.Empty' row.EntityType.AllProperties.ToList()' nonEntityQueryProperties' row); " is 135.
Long Statement,Microsoft.Test.Taupo.Query,QueryDataSetBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryDataSetBuilderBase.cs,BuildCollectionQueryValue,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(complexTypeElementDataType' "PropertyPath '{0}' is an invalid type '{1}'"' propertyPath' queryCollectionType.ElementType); " is 160.
Long Statement,Microsoft.Test.Taupo.Query,QueryDataSetBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryDataSetBuilderBase.cs,BuildCollectionQueryValue,The length of the statement  "                    this.BuildStructuralPropertiesQueryValue(complexChildInstance' propertyPath + i + "."' complexTypeElementDataType.ComplexType.Properties' complexTypeElementDataType.Properties' row); " is 182.
Long Statement,Microsoft.Test.Taupo.Query,QueryDataSetBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryDataSetBuilderBase.cs,BuildStructuralPropertiesQueryValue,The length of the statement  "            ExceptionUtilities.Assert(properties.Count == queryProperties.Count' "QueryProperties '{0}' and MemberProperties '{1}' are not the same number!"' CreateQueryPropertyList(queryProperties)' CreateMemberPropertyList(properties)); " is 226.
Long Statement,Microsoft.Test.Taupo.Query,QueryDataSetBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryDataSetBuilderBase.cs,BuildStructuralPropertiesQueryValue,The length of the statement  "                ExceptionUtilities.Assert(childQueryProperties.Count == 1' "Could not find query property based on MemberProperty Name '{0}' in list of query properties '{1}'"' childProperty.Name' CreateQueryPropertyList(childQueryProperties)); " is 228.
Long Statement,Microsoft.Test.Taupo.Query,QueryDataSetBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryDataSetBuilderBase.cs,BuildStructuralPropertiesQueryValue,The length of the statement  "                    instance.SetValue(childProperty.Name' this.BuildCollectionQueryValue(childPropertyPath + "."' childCollectionDataType' row)); " is 125.
Long Statement,Microsoft.Test.Taupo.Query,QueryDataSetBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryDataSetBuilderBase.cs,BuildStructuralPropertiesQueryValue,The length of the statement  "                    // If a complex type instance is null in the datarow' we will create a QueryStructuralValue indicating null and set it on the instance. " is 135.
Long Statement,Microsoft.Test.Taupo.Query,QueryDataSetBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryDataSetBuilderBase.cs,BuildStructuralPropertiesQueryValue,The length of the statement  "                        instance.SetValue(childProperty.Name' new QueryStructuralValue(childComplexType' true' null' childComplexType.EvaluationStrategy)); " is 131.
Long Statement,Microsoft.Test.Taupo.Query,QueryDataSetBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryDataSetBuilderBase.cs,BuildStructuralPropertiesQueryValue,The length of the statement  "                        this.BuildStructuralPropertiesQueryValue(childInstance' childPropertyPath + "."' childComplexType.ComplexType.Properties' childComplexType.Properties' row); " is 156.
Long Statement,Microsoft.Test.Taupo.Query,QueryDataSetBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryDataSetBuilderBase.cs,PopulateNavigations,The length of the statement  "                    var navProp = row.EntityType.AllNavigationProperties.SingleOrDefault(p => p.Association == associationSet.AssociationType &&                                                                                           " is 124.
Long Statement,Microsoft.Test.Taupo.Query,QueryRepositoryBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryRepositoryBuilderBase.cs,CreateQueryRepository,The length of the statement  "            QueryRepository repository = new QueryRepository(queryTypeLibrary' this.RootQueries' this.Constants' this.PrimitiveTypes' this.RootDataTypes' dataSet); " is 151.
Long Statement,Microsoft.Test.Taupo.Query,QueryRepositoryBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryRepositoryBuilderBase.cs,BuildConstants,The length of the statement  "                var scalarDataValues = dataRow.Type.Properties.Where(p => p.PropertyType is QueryScalarType).Select(st => dataRow.GetScalarValue(st.Name)).ToList(); " is 148.
Long Statement,Microsoft.Test.Taupo.Query,QueryRepositoryBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryRepositoryBuilderBase.cs,BuildConstants,The length of the statement  "                var complexDataValues = dataRow.Type.Properties.Where(p => p.PropertyType is QueryComplexType).Select(ct => dataRow.GetStructuralValue(ct.Name)).ToList(); " is 154.
Long Statement,Microsoft.Test.Taupo.Query,QueryRepositoryBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryRepositoryBuilderBase.cs,BuildConstants,The length of the statement  "                    if (queryConstants.Count(qce => qce.ExpressionType.IsSameQueryScalarType(scalarTypeValue.Type as QueryScalarType)) <= constantsOfSameTypeLimit) " is 143.
Long Statement,Microsoft.Test.Taupo.Query,QueryResultReferenceTrimmerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryResultReferenceTrimmerBase.cs,UpdateVisibleEntitiesGraphForAnonymousAndGrouping,The length of the statement  "            // we never take Includes into account for anonymous and grouping properties' hence we can terminate/corrupt the current span path " is 130.
Long Statement,Microsoft.Test.Taupo.Query,QueryResultReferenceTrimmerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryResultReferenceTrimmerBase.cs,PopulateNonNavigationPropertiesOfVisibleEntity,The length of the statement  "                bool isCollectionOfNonEntities = property.PropertyType is QueryCollectionType && !(((QueryCollectionType)property.PropertyType).ElementType is QueryEntityType); " is 160.
Long Statement,Microsoft.Test.Taupo.Query,QueryResultReferenceTrimmerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryResultReferenceTrimmerBase.cs,FixupReferencesBasedOnSpanPaths,The length of the statement  "                foreach (var property in structuralValue.Type.Properties.Where(p => p.PropertyType is QueryEntityType || p.PropertyType is QueryCollectionType)) " is 144.
Long Statement,Microsoft.Test.Taupo.Query,QueryResultReferenceTrimmerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryResultReferenceTrimmerBase.cs,FixupReferencesOfVisibleEntity,The length of the statement  "                    var navigationProperty = ((QueryEntityType)visibleEntity.Type).EntityType.AllNavigationProperties.Where(p => p.Name == property.Name).SingleOrDefault(); " is 152.
Long Statement,Microsoft.Test.Taupo.Query,QueryResultReferenceTrimmerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryResultReferenceTrimmerBase.cs,FixupReferencesOfVisibleEntity,The length of the statement  "                    ExceptionUtilities.CheckObjectNotNull(navigationProperty' "Could not find navigation property '" + property.Name + "' on entity."); " is 131.
Long Statement,Microsoft.Test.Taupo.Query,QueryResultReferenceTrimmerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryResultReferenceTrimmerBase.cs,FixupBothEndsOfNavigationProperty,The length of the statement  "            var otherSideNavigation = navigationProperty.ToAssociationEnd.EntityType.AllNavigationProperties.Where(p => p.Association == navigationProperty.Association && p.FromAssociationEnd == navigationProperty.ToAssociationEnd && p.ToAssociationEnd == navigationProperty.FromAssociationEnd).SingleOrDefault(); " is 301.
Long Statement,Microsoft.Test.Taupo.Query,ResultOnlyWithSpannedEntitiesCreatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryResultReferenceTrimmerBase.cs,Visit,The length of the statement  "                // special case the collection of entities' we want to avoid adding entities that are not visible' rather than returning them as nulls. " is 135.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,Compare,The length of the statement  "                this.errors.Add(string.Format(CultureInfo.InvariantCulture' "Value for propertyPath {0} was not compared against queryStructuralValue"' propertyPath)); " is 151.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,WriteErrorIfNotNull,The length of the statement  "                this.errors.Add(string.Format(CultureInfo.InvariantCulture' "Error: expected null value for propertyPath '{0}' instead recieved '{1}'"' propertyPath' queryValue.ToString())); " is 174.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,WriteErrorIfNull,The length of the statement  "                this.errors.Add(string.Format(CultureInfo.InvariantCulture' "Error: expected a value for propertyPath '{0}' instead recieved null"' propertyPath)); " is 147.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,WriteErrorIfNotEqual,The length of the statement  "                this.errors.Add(string.Format(CultureInfo.InvariantCulture' "Error: value at property '{0}' did not match. {1}"' propertyPath' e.Message)); " is 139.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareValues,The length of the statement  "                        memberProperty = ((QueryComplexType)instance.Type).ComplexType.Properties.SingleOrDefault(p => p.Name == property.Name); " is 120.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareValues,The length of the statement  "                    List<NamedValue> bagNamedValues = namedValues.Where(nv => nv.Name.StartsWith(childPropertyPath + "."' StringComparison.Ordinal)).ToList(); " is 138.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareValues,The length of the statement  "                    // NOTE: we cannot assert that it is complex/primitive/bag' because there may be new query types added in other assemblies that we know nothing about here " is 154.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareValues,The length of the statement  "                    List<NamedValue> complexInstanceNamedValues = namedValues.Where(nv => nv.Name.StartsWith(childPropertyPath + "."' StringComparison.Ordinal)).ToList(); " is 150.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareValues,The length of the statement  "                        ExceptionUtilities.Assert(exactMatches.Count < 2' "Should only find at most one property path {0} when looking for null value"' childPropertyPath); " is 147.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareBagProperty,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(complexTypeElementDataType' "PropertyPath '{0}' is an invalid type '{1}'"' propertyPath' memberProperty.PropertyType); " is 156.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareComplexBag,The length of the statement  "                List<NamedValue> complexInstanceNamedValues = namedValues.Where(pp => pp.Name.StartsWith(propertyPath + "." + i + "."' StringComparison.Ordinal)).ToList(); " is 155.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareComplexBag,The length of the statement  "                    complexInstanceNamedValues = namedValues.Where(pp => pp.Name.StartsWith(propertyPath + "." + i + "."' StringComparison.Ordinal)).ToList(); " is 138.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareComplexBag,The length of the statement  "                this.WriteErrorIfNotEqual(propertyPath' collection.Elements.Count' i' "The number of expected items '{0}' does not match the actual '{1}' for propertyPath {2}"' collection.Elements.Count' i' propertyPath); " is 205.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,ComparePrimitiveBag,The length of the statement  "                        ExceptionUtilities.Assert(primitiveItemNamedValues.Count() < 2' "Should not get more than one value for a primitive Bag item for path '{0}'"' propertyPath + "." + i); " is 166.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,ComparePrimitiveBag,The length of the statement  "                this.WriteErrorIfNotEqual(propertyPath' collection.Elements.Count' i' "The number of expected items '{0}' does not match the actual '{1}' for propertyPath {2}"' collection.Elements.Count' i' propertyPath); " is 205.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareBagPropertyWithNullOrEmpty,The length of the statement  "            ExceptionUtilities.Assert(exactMatches.Count == 1' "Should only find at most one property path {0} when looking for null or empty value"' propertyPath); " is 152.
Long Statement,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,CompareBagPropertyWithNullOrEmpty,The length of the statement  "                    this.WriteErrorIfNotEqual(propertyPath' actualQueryBagValue.Elements.Count' 0' "Expected zero elements in BagProperty"); " is 120.
Long Statement,Microsoft.Test.Taupo.Query,QueryTypeLibraryBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryTypeLibraryBuilderBase.cs,CreateNavigationMembers,The length of the statement  "                var aset = asets.Single(set => set.Ends.Any(end => end.AssociationEnd == navprop.FromAssociationEnd && end.EntitySet == result.EntitySet)); " is 139.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "            // TODO: this is sort of a hack' we should have more solid way of check whether given EvaluationError is actual exception or just list of ingnorable exceptions " is 159.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "            bool leftThrewEvaluationException = left.EvaluationError != null && !string.IsNullOrEmpty(left.EvaluationError.ToString()); " is 123.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "            var customEvaluator = expression.Function.Annotations.OfType<FunctionEvaluatorAnnotation>().Select(a => a.FunctionEvaluator).SingleOrDefault(); " is 143.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "                    //      "select value DefaultNamespace.GetCustomer(c.CustomerId) from [DefaultContainer].[Customer] as c" where GetCustomer is a function. " is 138.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "                throw new TaupoNotSupportedException("Equality on type" + expression.Left.ExpressionType.ToString() + " is not supported"); " is 123.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "            var result = expression.ExpressionType.EvaluationStrategy.EvaluateFunctionImport(expression.ExpressionType' expression.FunctionImport' argumentValues); " is 151.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.Assert(!(expression.Argument.ExpressionType is QueryCollectionType)' "IsNotNull expression cannot be a collection"); " is 135.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.Assert(!(expression.Argument.ExpressionType is QueryCollectionType)' "IsNull expression cannot be a collection"); " is 132.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "                throw new TaupoNotSupportedException("Equality on type" + expression.Left.ExpressionType.ToString() + " is not supported"); " is 123.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.Assert(argumentCollectionValue != null' "The argument to OfType has to be a collection of structural values"); " is 129.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.Assert(argumentCollectionValue.Type.ElementType is QueryEntityType' "The argument to OfType has to be a collection of structural values"); " is 157.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "            // TODO: this is sort of a hack' we should have more solid way of check whether given EvaluationError is actual exception or just list of ingnorable exceptions " is 159.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "            bool leftThrewEvaluationException = left.EvaluationError != null && !string.IsNullOrEmpty(left.EvaluationError.ToString()); " is 123.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "                sourceAsStructuralValue = sourceAsReferenceValue.IsNull ? sourceAsReferenceValue.Type.QueryEntityType.NullValue : sourceAsReferenceValue.EntityValue; " is 149.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "                ExceptionUtilities.Assert(matchingMembers.Count == 1' "Expecting exactly one member with name '{0}'. Actual: {1}."' expression.Name' matchingMembers.Count); " is 156.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(sourceAsScalarValue' "Instance must evaluate to a structural or record or scalar value. Actual: '{0}'."' originalSource); " is 159.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "                    "Only query scalar types implementing IQueryTypeWithProperties are supported as query member property' actual type: {0}."' " is 122.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The length of the statement  "                result = sourceAsScalarValue.Type.EvaluationStrategy.EvaluateMemberProperty(sourceAsScalarValue' expression.ExpressionType' expression.Name); " is 141.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,EvaluateCollection,The length of the statement  "            ExceptionUtilities.Assert(result != null' "Result of evaluation can never be null. Instead QueryValue.IsNull should be set to true."); " is 134.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,EvaluateBuiltInFunction,The length of the statement  "            var result = resultType.EvaluationStrategy.EvaluateBuiltInFunction(resultType' function.NamespaceName' function.Name' argumentValues); " is 134.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,FixupFunctionImportResultEntities,The length of the statement  "                var elementKeyPropertyValuesDictionary = primaryKeyPropertyNames.Select(n => new { Name = n' Value = element.GetScalarValue(n) }).ToDictionary(k => k.Name' e => e.Value); " is 170.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionReplacingVisitor.cs,Visit,The length of the statement  "                ExceptionUtilities.Assert(!this.customFunctionsCallStack.Any(s => s.Function == expression.Function)' "Recursive function calls are not supported. Function: '{0}'."' expression.Function.FullName); " is 196.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionReplacingVisitor.cs,Visit,The length of the statement  "            if (this.HasChanged(expression.FunctionBody' replacedFunctionBody) || this.HasChanged(expression.Arguments' replacedArguments)) " is 127.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionReplacingVisitor.cs,Visit,The length of the statement  "                return new QueryCustomFunctionCallExpression(expression.ExpressionType' expression.Function' replacedFunctionBody' expression.IsRoot' expression.IsCalledByNameOnly' replacedArguments.ToArray()); " is 194.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionReplacingVisitor.cs,Visit,The length of the statement  "                return new QueryFunctionImportCallExpression(expression.ExpressionType' expression.FunctionImport' expression.IsRoot' replacedArguments.ToArray()); " is 147.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionReplacingVisitor.cs,HasChanged,The length of the statement  "            // TODO: Possibly we need a robust way of comparing types' to verify that expression type has not changed as a result of replace " is 128.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionReplacingVisitor.cs,HasChanged,The length of the statement  "            ExceptionUtilities.Assert(replacedExpressions.Count == originalExpressions.Count' "Number of original expressions do not match the number of replaced expressions."); " is 165.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionTypeResolutionVisitor.cs,Visit,The length of the statement  "                ExceptionUtilities.Assert(!this.CustomFunctionsCallStack.Contains(expression.Function)' "Recursive function calls are not supported. Function: '{0}'."' expression.Function.FullName); " is 182.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionTypeResolutionVisitor.cs,Visit,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(functionBody' "Function body cannot be null when function's return type is not defined. Function: '{0}'."' expression.Function.FullName); " is 175.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionTypeResolutionVisitor.cs,Visit,The length of the statement  "            var resolved = new QueryCustomFunctionCallExpression(resolvedResultType' expression.Function' functionBody' expression.IsRoot' expression.IsCalledByNameOnly' resolvedArguments); " is 177.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionTypeResolutionVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(expression.FunctionImport.ReturnTypes.SingleOrDefault()' "Function import must have return type specified. FunctionImport: '{0}'."' expression.FunctionImport.Name); " is 202.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionTypeResolutionVisitor.cs,Visit,The length of the statement  "            var resolved = new QueryFunctionImportCallExpression(resolvedResultType' expression.FunctionImport' expression.IsRoot' resolvedArguments); " is 138.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionTypeResolutionVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(parameter' "Parameter '{0}' does not exist in Function '{1}'."' expression.ParameterName' function.Name); " is 143.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionTypeResolutionVisitor.cs,Visit,The length of the statement  "                throw new TaupoArgumentException("Given expression must be of a query type with properties. Actual: " + instance.ExpressionType.GetType().Name + "."); " is 150.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionTypeResolutionVisitor.cs,VisitBinaryArithmeticExpression,The length of the statement  "            var type = this.EvaluationStrategy.GetCommonType((QueryScalarType)left.ExpressionType' (QueryScalarType)right.ExpressionType); " is 126.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionTypeResolutionVisitor.cs,ResolveBuiltInFunctionResultType,The length of the statement  "            var resolvedType = function.ReturnTypeResolver != null ? function.ReturnTypeResolver(resolvedArgumentTypes) : this.GetDefaultQueryType(function.ReturnType); " is 156.
Long Statement,Microsoft.Test.Taupo.Query.Common,CommonExpressionTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionTypeResolutionVisitor.cs,GetQueryScalarTypeFromDecimalValue,The length of the statement  "            return (QueryScalarType)this.GetDefaultQueryType(EdmDataTypes.Decimal(integralDigitsCount + fractionalDigitsCount' fractionalDigitsCount)); " is 139.
Long Statement,Microsoft.Test.Taupo.Query.Common,QueryScalarValueToClrValueComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\QueryScalarValueToClrValueComparerBase.cs,Compare,The length of the statement  "                var comparer = new DelegateBasedEqualityComparer<QueryScalarValue>((v1' v2) => v1.Type.EvaluationStrategy.Compare(v1' v2) == 0); " is 128.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,Count,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,LongCount,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,Filter,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,All,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,Any,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,Any,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,Cast,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,Max,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,Min,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,AreEqual,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,Compare,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,GetCommonType,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,RemoveLengthConstraints,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,Supports,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,Supports,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,SupportsOrderComparison,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,Evaluate,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,Evaluate,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,EvaluateBuiltInFunction,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,EvaluateFunction,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,EvaluateFunctionImport,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,EvaluateMemberProperty,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,DummyQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\DummyQueryEvaluationStrategy.cs,EvaluateMemberMethod,The length of the statement  "            throw new TaupoNotSupportedException("Attempt to use evaluation strategy from " + typeof(QueryUnresolvedType).Name + ". Please resolve expression first."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,ExtensionMethods,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\ExtensionMethods.cs,GetEntityInstanceKey,The length of the statement  "            ExceptionUtilities.Assert(queryEntityType.ClrType.IsAssignableFrom(entityInstance.GetType())' "entityInstance of type '{0}' is not assignable to queryEntityType '{1}'"' entityInstance.GetType()' queryEntityType.EntityType.FullName); " is 232.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,ExtensionMethods,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\ExtensionMethods.cs,GetEntityInstanceKey,The length of the statement  "            QueryEntityValue keyValueContainer = new QueryEntityValue(queryEntityType' false' null' queryEntityType.EvaluationStrategy); " is 124.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,ExtensionMethods,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\ExtensionMethods.cs,GetDebugKeyString,The length of the statement  "            return string.Join("' "' keyProperties.Select(kp => ToStringConverter.ConvertPrimitiveValueToString(queryKeyStructuralValue.GetScalarValue(kp.Name).Value))); " is 157.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,ExtensionMethods,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\ExtensionMethods.cs,ChooseRandomEvaluationResult,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(collection' "Query unexpectedly evaluated to null or was not a collection: {0}"' queryExpression); " is 136.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,ExtensionMethods,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\ExtensionMethods.cs,ChooseRandomEvaluationResult,The length of the statement  "            ExceptionUtilities.Assert(collection.EvaluationError == null' "Query resulted in evaluation error: {0}"' collection.EvaluationError); " is 133.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,ExtensionMethods,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\ExtensionMethods.cs,GetRelatedEntityType,The length of the statement  "            var propertyType = entityType.Properties.Where(p => p.Name == navigationPropertyName).Select(p => p.PropertyType).SingleOrDefault(); " is 132.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,ExtensionMethods,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\ExtensionMethods.cs,GetRelatedEntityType,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(propertyType' "Could not find type of property '{0}' on type '{1}'"' navigationPropertyName' entityType.StringRepresentation); " is 164.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,ExtensionMethods,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\ExtensionMethods.cs,GetRelatedEntityType,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(collectionType' "Property '{0}' on type '{1}' was neither an entity nor collection type. Type was '{2}'"' navigationPropertyName' entityType.StringRepresentation' propertyType.StringRepresentation); " is 236.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,ExtensionMethods,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\ExtensionMethods.cs,GetRelatedEntityType,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(propertyEntityType' "Property '{0}' on type '{1}' was neither an entity nor collection type. Type was '{2}'"' navigationPropertyName' entityType.StringRepresentation' propertyType.StringRepresentation); " is 240.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryClrCollectionTypeFactory,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryClrCollectionTypeFactory.cs,CreateClrType,The length of the statement  "            ExceptionUtilities.Assert(clrTypeDefinition.IsGenericTypeDefinition()' "clrTypeDefinition is not a generic type definition"); " is 125.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryClrCollectionTypeFactory,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryClrCollectionTypeFactory.cs,ToClrType,The length of the statement  "            ExceptionUtilities.Assert(clrTypeDefinition.IsGenericTypeDefinition()' "clrTypeDefinition is not a generic type definition"); " is 125.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryClrSpatialType,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryClrSpatialType.cs,CreateValue,The length of the statement  "            var specificType = this.DerivedTypes.OrderBy(t => t.DerivedTypes.Count).FirstOrDefault(t => t.ClrType.IsAssignableFrom(instanceType)); " is 134.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,Distinct,The length of the statement  "            return new QueryCollectionValue(this.Type' this.EvaluationStrategy' QueryError.GetErrorFromValues(distinctValues)' distinctValues); " is 131.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,UnionAll,The length of the statement  "            return new QueryCollectionValue(this.Type' this.EvaluationStrategy' QueryError.GetErrorFromValues(resultValues)' resultValues); " is 127.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,Intersect,The length of the statement  "            var intersectedCollection = new QueryCollectionValue(this.Type' this.EvaluationStrategy' QueryError.GetErrorFromValues(resultValues)' resultValues); " is 148.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,Except,The length of the statement  "            var exceptResult = new QueryCollectionValue(this.Type' this.EvaluationStrategy' QueryError.GetErrorFromValues(resultValues)' resultValues); " is 139.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,Concat,The length of the statement  "            return new QueryCollectionValue(this.Type' this.EvaluationStrategy' QueryError.GetErrorFromValues(resultValues)' resultValues); " is 127.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,GroupBy,The length of the statement  "                return new QueryCollectionValue(this.Type.ElementType.CreateCollectionType()' this.EvaluationStrategy' this.EvaluationError' null); " is 131.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,GroupBy,The length of the statement  "            var keyCollection = new QueryCollectionValue(this.Type.ElementType.CreateCollectionType()' this.EvaluationStrategy' this.EvaluationError' keys); " is 144.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,GroupBy,The length of the statement  "                    return this.CreateGroupingValue(key' QueryCollectionValue.Create(elementType' this.Elements.Where(element => this.ValuesAreEqual(keySelector(element)' key)).ToArray())); " is 169.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,GroupBy,The length of the statement  "            return new QueryCollectionValue(groupingType.CreateCollectionType()' this.EvaluationStrategy' QueryError.GetErrorFromValues(groupings)' groupings.Cast<QueryValue>()); " is 166.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,Max,The length of the statement  "                var projectedCollection = scalarType.CreateCollectionType().CreateCollectionWithValues(this.Elements.Select(selector).Cast<QueryValue>()); " is 138.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,Min,The length of the statement  "                var projectedCollection = scalarType.CreateCollectionType().CreateCollectionWithValues(this.Elements.Select(selector).Cast<QueryValue>()); " is 138.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,Select,The length of the statement  "            return new QueryCollectionValue(resultType' this.EvaluationStrategy' QueryError.GetErrorFromValues(result)' result' this.IsSorted); " is 131.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,Select,The length of the statement  "            return new QueryCollectionValue(resultType' this.EvaluationStrategy' QueryError.GetErrorFromValues(result)' result' this.IsSorted); " is 131.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,Skip,The length of the statement  "            return new QueryCollectionValue(this.Type' this.Type.EvaluationStrategy' QueryError.GetErrorFromValues(result)' result' this.IsSorted); " is 135.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,Take,The length of the statement  "            return new QueryCollectionValue(this.Type' this.Type.EvaluationStrategy' QueryError.GetErrorFromValues(result)' result' this.IsSorted); " is 135.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,OfType,The length of the statement  "            QueryCollectionValue result = resultType.CreateCollectionType().CreateCollectionWithValues(Enumerable.Empty<QueryValue>()); " is 123.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,ContainsAdjacentDuplicateRows,The length of the statement  "            // TODO: change to sortedSelectorsCollection.Distinct().Count != sortedSelectorsCollection.Count when Distinct() is supported on  " is 128.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,CreateGroupingValue,The length of the statement  "            QueryGroupingType groupingType = new QueryGroupingType(key.Type' elements.Type.ElementType' key.Type.EvaluationStrategy); " is 121.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryCollectionValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryCollectionValue.cs,ValuesAreEqual,The length of the statement  "            ExceptionUtilities.Assert(firstValueCollection != null' "Now only support query value equality comparison on primitive / structural / collection' not {0}."' firstValue); " is 169.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryEntityValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryEntityValue.cs,GetNavigateResult,The length of the statement  "            ExceptionUtilities.Assert(this.navigateResultLookup.ContainsKey(associationType)' "Invalid AssociationType for Navigate: {0}"' associationType.FullName); " is 153.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryEntityValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryEntityValue.cs,GetNavigateResult,The length of the statement  "            ExceptionUtilities.Assert(lookupBasedOnEnd.ContainsKey(toEnd)' "Invalid ToEnd for Navigate: {0}.{1}' from {2}."' associationType.FullName' toEnd.RoleName' (this.Type as QueryEntityType).EntityType.FullName); " is 207.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryGroupingType,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryGroupingType.cs,IsAssignableFrom,The length of the statement  "            return this.Key.PropertyType.IsAssignableFrom(other.Key.PropertyType) && this.Elements.PropertyType.IsAssignableFrom(other.Elements.PropertyType); " is 146.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryMappedScalarType,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryMappedScalarType.cs,IsAssignableFrom,The length of the statement  "            // The spatial types have the same clrtype - DbGeometry or DbGeography but the strong types aren't assignable from each other.  For example a Point isn't assignable from a LineString. " is 183.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryProperty,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryProperty.cs,Create,The length of the statement  "                string.Format(CultureInfo.InvariantCulture' "This property type is not supported: '{0}'."' propertyType.StringRepresentation)); " is 127.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryRecordValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryRecordValue.cs,FindPropertyIndexByName,The length of the statement  "            ExceptionUtilities.Assert(membersWithName.Count() != 0' "Could not find member with a given name: '" + memberName + "'."); " is 122.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryRecordValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryRecordValue.cs,FindPropertyIndexByName,The length of the statement  "            ExceptionUtilities.Assert(membersWithName.Count() == 1' "Ambigous match found. There are more than one properties with the given name: '" + memberName + "'."); " is 159.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryReferenceType,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryReferenceType.cs,CreateReferenceValue,The length of the statement  "            ExceptionUtilities.Assert(entityValue.Type is QueryEntityType' "Create reference value needs a value of query entity type' not {0}."' entityValue.Type); " is 152.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryReferenceType,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryReferenceType.cs,CreateReferenceValue,The length of the statement  "            ExceptionUtilities.Assert(keyValue.Type is QueryRecordType' "Create reference value using key needs a value of query record type' not {0}."' keyValue.Type); " is 156.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryReferenceValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryReferenceValue.cs,ToString,The length of the statement  "                return "Reference Value=" + this.EntitySetFullName + "' keyValue[" + this.KeyValue + "]' Type=" + this.Type.StringRepresentation; " is 129.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryRepository,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryRepository.cs,GetPropertyRows,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(nestedScalarType' "The leaf property of any structural type must be a scalar type"); " is 122.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryRepository,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryRepository.cs,GetPropertyRows,The length of the statement  "                    ExceptionUtilities.Assert(propertyDataSet.First() is QueryScalarValue' "Type mismatch between property type and data set' property {0} should be a scalar value in the dataSet"' currentPropertyPath); " is 198.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryRepository,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryRepository.cs,GetPropertyRows,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(nestedStructuralType' "A non-leaf property of a structural type must be a structural type"); " is 130.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryRepository,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryRepository.cs,SelectRelevantValue,The length of the statement  "            // Don't select null constants where possible' null constants should be tested separately using the isNull and isNotNull expressions. " is 133.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryRepository,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryRepository.cs,SelectRelevantValue,The length of the statement  "                // if we have more than 3 rows to choose from' then removing the largest and the smallest values from being chosen allows us to " is 127.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryScalarValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryScalarValue.cs,GetDebugValue,The length of the statement  "                    return string.Format(CultureInfo.InvariantCulture' "({0}' Ticks={1}' Kind={2})"' dateTimeValue.ToString(CultureInfo.InvariantCulture)' dateTimeValue.Ticks.ToString(CultureInfo.InvariantCulture)' dateTimeValue.Kind); " is 215.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryScalarValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryScalarValue.cs,GetDebugValue,The length of the statement  "                    return string.Format(CultureInfo.InvariantCulture' "({0}' Ticks={1})"' dateTimeOffsetValue.ToString(CultureInfo.InvariantCulture)' dateTimeOffsetValue.Ticks.ToString(CultureInfo.InvariantCulture)); " is 197.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryStructuralValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryStructuralValue.cs,SetValue,The length of the statement  "                throw new TaupoInvalidOperationException(string.Format(CultureInfo.InvariantCulture' "Could not find property '{0}'."' memberName)); " is 132.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryStructuralValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryStructuralValue.cs,SetValue,The length of the statement  "                throw new TaupoInvalidOperationException("Value '" + value + "' does not match the property type: '" + property.PropertyType.StringRepresentation + "'."); " is 154.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryStructuralValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryStructuralValue.cs,TreatAs,The length of the statement  "                return this.Type.CreateErrorValue(new QueryError("Invalid 'As' Operation : Cannot perform an 'As' of a structural type to a non-structural type")); " is 147.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryStructuralValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryStructuralValue.cs,Cast,The length of the statement  "                return this.Type.CreateErrorValue(new QueryError("Invalid Cast : Cannot perform a cast of a structural type to a non-structural type")); " is 136.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryStructuralValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryStructuralValue.cs,ToString,The length of the statement  "                    return "Non-Null value' Type=" + this.Type.StringRepresentation + "' Properties={\r\n    " + string.Join("\r\n    "' this.membersDictionary.Select(c => "'" + c.Key + "' = " + c.Value.ToString().Replace("\r\n"' "\r\n    ")).ToArray()) + "\r\n}"; " is 244.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryStructuralValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryStructuralValue.cs,AssertPropertyType,The length of the statement  "                    string.Format(CultureInfo.InvariantCulture' "Property '{0}' is not of the given type '{1}' (was '{2}')."' propertyName' typeof(TPropertyType).Name' property.PropertyType)); " is 172.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryStructuralValue,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryStructuralValue.cs,EnsurePropertyExists,The length of the statement  "                throw new TaupoInvalidOperationException(string.Format(CultureInfo.InvariantCulture' "Could not find property '{0}'."' propertyName)); " is 134.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryTypeLibrary,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryTypeLibrary.cs,GetDefaultQueryScalarType,The length of the statement  "            ExceptionUtilities.Assert(this.TryGetEdmDataType(clrType' out edmPrimitiveDataType)' "Cannot resolve clr type '{0}' into primitive data type."' clrType.FullName); " is 162.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryTypeLibrary,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryTypeLibrary.cs,GetDefaultQueryScalarType,The length of the statement  "                ExceptionUtilities.Assert(object.ReferenceEquals(result' potentialDuplicate)' "Duplicate query scalar type detected for clr type '{0}'. {1} != {2}"' clrType.FullName' result' potentialDuplicate); " is 195.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryTypeLibrary,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryTypeLibrary.cs,UpdateClrEnumTypePropertyMapping,The length of the statement  "                        ExceptionUtilities.Assert(this.defaultQueryEnumTypes[edt.Definition] is QueryMappedScalarType' "All enum query types must either be mapped scalar types or Clr enum types."); " is 173.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryTypeLibrary,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryTypeLibrary.cs,GetDefaultQueryClrTypeForSpatial,The length of the statement  "            spatialClrType.Add(spatialDataType.Properties.Select(p => QueryProperty.Create(p.Name' this.GetDefaultQueryType(p.PropertyType)))); " is 131.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryTypeLibrary,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryTypeLibrary.cs,GetDefaultQueryTypeForSpatial,The length of the statement  "            var spatialMappedType = new QueryMappedScalarTypeWithStructure(spatialModelType' spatialStoreType' this.evaluationStrategy); " is 124.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryTypeLibrary,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryTypeLibrary.cs,GetDefaultQueryTypeForSpatial,The length of the statement  "            spatialMappedType.Add(spatialModelType.Properties.Select(p => QueryProperty.Create(p.Name' this.GetDefaultQueryType(p.PropertyType)))); " is 135.
Long Statement,Microsoft.Test.Taupo.Query.Contracts,QueryTypeLibrary,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryTypeLibrary.cs,GetDefaultQueryTypeForReference,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(referenceDataType.EntityType' "Cannot determine QueryType for Reference with no EntityType"); " is 131.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq.Expressions,LinqCastExpression,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\Expressions\LinqCastExpression.cs,ToString,The length of the statement  "            return string.Format(CultureInfo.InvariantCulture' "{0}.Cast({1})"' this.Source' this.TypeToOperateAgainst.StringRepresentation); " is 129.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq.Expressions,LinqGroupJoinExpression,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\Expressions\LinqGroupJoinExpression.cs,ToString,The length of the statement  "            return string.Format(CultureInfo.InvariantCulture' "{0}.GroupJoin({1}' {2}' {3}' {4})"' this.Outer' this.Inner' this.OuterKeySelector' this.InnerKeySelector' this.ResultSelector); " is 179.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq.Expressions,LinqJoinExpression,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\Expressions\LinqJoinExpression.cs,ToString,The length of the statement  "            return string.Format(CultureInfo.InvariantCulture' "{0}.Join({1}' {2}' {3}' {4})"' this.Outer' this.Inner' this.OuterKeySelector' this.InnerKeySelector' this.ResultSelector); " is 174.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq.Expressions,LinqLambdaExpression,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\Expressions\LinqLambdaExpression.cs,ToString,The length of the statement  "            return string.Format(CultureInfo.InvariantCulture' "({0}) => {1}"' string.Join("' "' this.Parameters.Select(p => p.ToString()).ToArray())' this.Body); " is 150.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq.Expressions,LinqMemberMethodExpression,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\Expressions\LinqMemberMethodExpression.cs,ToString,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(methodAnnotation' "Member method should have annotation to define whether the method is static or not."); " is 143.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq.Expressions,LinqNewExpression,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\Expressions\LinqNewExpression.cs,ToString,The length of the statement  "            string anonymousBody = string.Join("' "' this.MemberNames.Select((n' i) => string.Format(CultureInfo.InvariantCulture' "{0} = {1}"' n' this.Members[i])).ToArray()); " is 164.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq.Expressions,LinqNewInstanceExpression,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\Expressions\LinqNewInstanceExpression.cs,ToString,The length of the statement  "            var result = string.Format(CultureInfo.InvariantCulture' "new {0}({1})"' ((IQueryClrType)this.ExpressionType).ClrType.Name' constructorArguments); " is 146.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq.Expressions,LinqSelectManyExpression,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\Expressions\LinqSelectManyExpression.cs,ToString,The length of the statement  "            var argumentString = string.Join("' "' new List<LinqLambdaExpression>(new[] { this.CollectionSelector' this.ResultSelector }).Where(a => a != null)); " is 149.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,GroupBy,The length of the statement  "            var resulSelectorLambda = Lambda(resultSelector(resultSelectorKeyParameter' resultSelectorGroupingParameter)' resultSelectorKeyParameter' resultSelectorGroupingParameter); " is 171.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,GroupBy,The length of the statement  "            var resulSelectorLambda = Lambda(resultSelector(resultSelectorKeyParameter' resultSelectorGroupingParameter)' resultSelectorKeyParameter' resultSelectorGroupingParameter); " is 171.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,GroupJoin,The length of the statement  "            return GroupJoin(outer' inner' outerKeySelectorLambda' innerKeySelectorLambda' resultSelectorLambda' QueryType.Unresolved); " is 123.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,SelectMany,The length of the statement  "            var resultSelectorLambda = Lambda(resultSelector(sourceParameter' collectionParameter)' sourceParameter' collectionParameter); " is 126.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,ThenBy,The length of the statement  "            return OrderBy(source.Source' source.KeySelectors.Concat(new[] { keySelectorLambda })' source.AreDescending.Concat(new[] { false })' QueryType.Unresolved); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,ThenByDescending,The length of the statement  "            return OrderBy(source.Source' source.KeySelectors.Concat(new[] { keySelectorLambda })' source.AreDescending.Concat(new[] { true })' QueryType.Unresolved); " is 154.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,New,The length of the statement  "            ExceptionUtilities.Assert(memberNames.Count() == members.Count()' "The count of member names and members should be the same."); " is 127.
Long Statement,Microsoft.Test.Taupo.Query.Contracts.Linq,LinqBuilder,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\Linq\LinqBuilder.cs,NewInstance,The length of the statement  "            ExceptionUtilities.Assert(memberNames.Count() == members.Count()' "The count of member names and members should be the same."); " is 127.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,Visit,The length of the statement  "                ExceptionUtilities.Assert(expression.LinqBuiltInFunction.BuiltInFunctionKind == LinqBuiltInFunctionKind.StaticMethod' "Builtin function kind {0} not supported"' expression.LinqBuiltInFunction.BuiltInFunctionKind.ToString()); " is 224.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(memberAnnotation' "Currently only spatial types have member methods. The method must include MemberInSpatialTypeAnnotation."); " is 164.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,Visit,The length of the statement  "                return new CodeTypeReferenceExpression(((QueryMappedScalarTypeWithStructure)expression.Source.ExpressionType).ClrType).Call(expression.MemberMethod.Name' arguments); " is 165.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,Visit,The length of the statement  "                member = this.FixupPropertyForPropertyInitializer(expression' expression.MemberNames[i]' expression.Members[i]' member); " is 120.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(queryClrType' "Type must implement " + typeof(IQueryClrType).Name + "interface: " + expression.ExpressionType + "."); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,Visit,The length of the statement  "                member = this.FixupPropertyForPropertyInitializer(expression' expression.MemberNames[i]' expression.Members[i]' member); " is 120.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,Visit,The length of the statement  "            if (this.CustomInitializationCodeGenerator == null || !this.CustomInitializationCodeGenerator.TryGenerateInitialization(expression.ScalarValue.Value' out initializationExpression)) " is 180.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(clrMethod' "Cannot generate Linq syntax for function call expression as there is no information about corresponding Clr method. Function: {0}."' expression.Function.FullName); " is 213.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,Visit,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(this.QueryProvider' "Cannot generate custom function call expression as a root as QueryProvider is not setup."); " is 150.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(clrMethod' "Cannot generate Linq syntax for function import call expression as there is no information about corresponding Clr method. Function: {0}."' expression.FunctionImport.Name); " is 222.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,Visit,The length of the statement  "                ExceptionUtilities.CheckObjectNotNull(this.QueryProvider' "Cannot generate function import call expression as a root as QueryProvider is not setup."); " is 150.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqCommonSyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqCommonSyntaxCodeGenerationVisitor.cs,GetTypeReference,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(type' "IsOf is only valid for types that inherit from IQueryClrType' the passed type is {0}"' queryType.StringRepresentation); " is 164.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "            return this.EvaluateBuiltInFunction(expression.ExpressionType' expression.LinqBuiltInFunction.BuiltInFunction' expression.Arguments); " is 133.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "                    throw new TaupoNotSupportedException("Contains operation on type" + sourceElement.Type.ToString() + " is not supported."); " is 122.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "            Func<QueryCollectionValue' Func<QueryValue' QueryValue>' QueryValue> keySelectorEvaluator = (collection' keySelector) => collection.GroupBy(keySelector); " is 153.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "            var result = (QueryCollectionValue)keySelectorEvaluator(source' v => this.EvaluateLambda<QueryScalarValue>(expression.KeySelector' v)); " is 135.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "                var rewrittenResultElements = result.Elements.Cast<QueryStructuralValue>().Select(e => this.EvaluateLambda<QueryValue>(expression.ResultSelector' e.GetValue("Key")' e.GetValue("Elements"))); " is 190.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "                result = expression.ResultSelector.Body.ExpressionType.CreateCollectionType().CreateCollectionWithValues(rewrittenResultElements); " is 130.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "            throw new TaupoNotSupportedException("Lambdas cannot be evaluated directly' but only through query operators that use them."); " is 126.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "            return this.EvaluateMemberMethod(expression.Source' expression.ExpressionType' expression.MemberMethod' expression.Arguments); " is 126.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "                // for QueryCollectionTypes we only support constructor arguments' hence we will only be evaluating constructor arguments. " is 122.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "                QueryCollectionValue instance = ((QueryCollectionType)expression.ExpressionType).CreateCollectionWithValues(expression.ConstructorArguments.Select(arg => this.Evaluate(arg))); " is 175.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "                ExceptionUtilities.Assert(expression.ConstructorArguments.Count == 1' "Cannot pass multiple arguments to PrimitiveType constructor"); " is 133.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "            var collections = source.Elements.Select(v => new { Element = v' Collection = (QueryCollectionValue)this.EvaluateLambda<QueryValue>(expression.CollectionSelector' v) }); " is 169.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "                var results = flattenedStructure.Select(v => this.EvaluateLambda<QueryValue>(expression.ResultSelector' v.Key' v.Value)); " is 121.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,Visit,The length of the statement  "                return collectionElementType.CreateCollectionType().CreateCollectionWithValues(flattenedStructure.Select(s => s.Value)); " is 120.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,EvaluateMemberMethod,The length of the statement  "            var result = resultType.EvaluationStrategy.EvaluateMemberMethod(sourceValue' resultType' memberMethod.Name' argumentValues); " is 124.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,EvaluateLambda,The length of the statement  "            ExceptionUtilities.Assert(lambda.Parameters.Count == currentParameterValues.Length' "LambdaExpression parameter count must match length of currentParameterValues"); " is 164.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,EvaluateLambda,The length of the statement  "                ExceptionUtilities.Assert(!this.lambdaParameterAssignments.ContainsKey(lambdaParameter)' "Attempt to recursively evaluate lambda."); " is 132.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,RewriteGroupingElements,The length of the statement  "            var rewrittenGroupingType = new QueryGroupingType(groupingElementType.Key.PropertyType' elementSelectorLambda.Body.ExpressionType' groupingElementType.EvaluationStrategy); " is 171.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,EvaluateJoinExpression,The length of the statement  "                ExceptionUtilities.Assert(outerKeys.Elements[outerIndex] is QueryScalarValue' "For now we only support join on primitive keys."); " is 129.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,EvaluateJoinExpression,The length of the statement  "                    QueryValue result = this.EvaluateLambda<QueryValue>(expression.ResultSelector' outer.Elements[outerIndex]' inner.Type.CreateCollectionWithValues(innerMatches)); " is 160.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,EvaluateJoinExpression,The length of the statement  "            return new QueryCollectionValue(resultType.CreateCollectionType()' resultType.EvaluationStrategy' QueryError.GetErrorFromValues(joinResultElements)' joinResultElements); " is 169.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,BuildInnerKeyLookup,The length of the statement  "                ExceptionUtilities.Assert(innerKeys.Elements[innerIndex] is QueryScalarValue' "For now we only support join on scalar keys."); " is 126.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,VisitFirstExpression,The length of the statement  "                    var expectedException = new ExpectedExceptions(new ExpectedExceptionTypeMessageVerifier<InvalidOperationException>(null' "Sequence contains no elements")); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,VisitSingleExpression,The length of the statement  "                    var expectedException = new ExpectedExceptions(new ExpectedExceptionTypeMessageVerifier<InvalidOperationException>(null' "Sequence contains no elements")); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,VisitSingleExpression,The length of the statement  "                var expectedException = new ExpectedExceptions(new ExpectedExceptionTypeMessageVerifier<InvalidOperationException>(null' "Sequence contains more than one element")); " is 165.
Long Statement,Microsoft.Test.Taupo.Query.Linq,QueryScalarValueEqualityComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,GetHashCode,The length of the statement  "                // for strings we need to handle them via Equals method' because of padding and other sql server specific issues around strings " is 127.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqExpressionReplacingVisitor.cs,Visit,The length of the statement  "                return new LinqBuiltInFunctionCallExpression(expression.ExpressionType' expression.LinqBuiltInFunction' replacedArguments.ToArray()); " is 133.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqExpressionReplacingVisitor.cs,Visit,The length of the statement  "            var elementSelector = expression.ElementSelector != null ? (LinqLambdaExpression)this.ReplaceExpression(expression.ElementSelector) : null; " is 139.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqExpressionReplacingVisitor.cs,Visit,The length of the statement  "            var resultSelector = expression.ResultSelector != null ? (LinqLambdaExpression)this.ReplaceExpression(expression.ResultSelector) : null; " is 136.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqExpressionReplacingVisitor.cs,Visit,The length of the statement  "            if (HasChanged(expression.Source' source) || HasChanged(expression.KeySelector' keySelector) || HasChanged(expression.ElementSelector' elementSelector) || HasChanged(expression.ResultSelector' resultSelector)) " is 209.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqExpressionReplacingVisitor.cs,Visit,The length of the statement  "                return new LinqMemberMethodExpression(source' expression.MemberMethod' expression.ExpressionType' replacedArguments.ToArray()); " is 127.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqExpressionReplacingVisitor.cs,Visit,The length of the statement  "                // using internal overload' because there may be multiple keySelectors' public overloads only allow to set one at at time " is 121.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqExpressionReplacingVisitor.cs,Visit,The length of the statement  "            var resultSelector = expression.ResultSelector != null ? (LinqLambdaExpression)this.ReplaceExpression(expression.ResultSelector) : null; " is 136.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqExpressionReplacingVisitor.cs,Visit,The length of the statement  "            if (HasChanged(expression.Source' source) || HasChanged(expression.CollectionSelector' collectionSelector) || HasChanged(expression.ResultSelector' resultSelector)) " is 164.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqParameterNameResolutionVisitorHelper,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqParameterNameResolutionVisitorHelper.cs,EnsureParameterHasName,The length of the statement  "                    parameterWithName = LinqBuilder.Parameter(this.parameterNameGenerator.GenerateIdentifier("p")' expression.ExpressionType); " is 122.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(type' "Cannot find type '{0}' to find method {1}"' expression.LinqBuiltInFunction.ClassName' expression.LinqBuiltInFunction.MethodName); " is 174.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "                var methodInfo = type.GetMethod(expression.LinqBuiltInFunction.MethodName' expressionArgumentTypes.ToArray()' true' false); " is 123.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "                ExceptionUtilities.Assert(expressionArguments.Count == 1' "Invalid test expression' cannot use a function that is an InstanceProperty type with multiple arguments"); " is 165.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "                var methodInfo = type.GetMethod(expression.LinqBuiltInFunction.MethodName' expressionArgumentTypes.ToArray()' true' true); " is 122.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "                return Expression.Call(this.expressionGeneratorType' "DefaultIfEmpty"' new Type[] { sourceTypeArgument }' source' defaultValue); " is 128.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "                throw new TaupoInvalidOperationException("Could not find closure with property matching free variable name: " + expression.Name); " is 129.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            Expression elementSelector = expression.ElementSelector != null ? this.GenerateLinqExpression(expression.ElementSelector) : null; " is 129.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            Expression resultSelector = expression.ResultSelector != null ? this.GenerateLinqExpression(expression.ResultSelector) : null; " is 126.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            ParameterExpression[] parameters = expression.Parameters.Select(p => this.GenerateLinqExpression(p)).Cast<ParameterExpression>().ToArray(); " is 139.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "                return this.GenerateQueryMethodWithLambda(expression' "Max"' new Type[] { ((IQueryClrType)expression.Lambda.Body.ExpressionType).ClrType }); " is 140.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "                return this.GenerateQueryMethodWithLambda(expression' "Min"' new Type[] { ((IQueryClrType)expression.Lambda.Body.ExpressionType).ClrType }); " is 140.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(queryClrType' "In order to make a New Array we need to have a clrType' the queryType'{0}' does not implement IQueryClrType"' expression.ExpressionType); " is 190.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "                anonymousClrType = this.anonymousTypeBuilder.GetAnonymousType(((QueryAnonymousStructuralType)expression.ExpressionType).Properties.Select(c => c.Name).ToArray()); " is 162.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            // If we are creating an instance of a specific type' we need to prepare the memberbind expressions for the binding the values of the  " is 133.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.Assert(expression.ConstructorArguments.Count == 0' "Cannot create typed instances with non-default constructor"); " is 132.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(ctorInfo' "Type '{0}' does not have a default ' parameter-less constructor"' clrType.FullName); " is 133.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "                result = Expression.Call(this.expressionGeneratorType' methodName' new[] { keySelectorGenericArguments[0]' keySelectorGenericArguments[1] }' result' keySelector); " is 162.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            return Expression.Call(this.expressionGeneratorType' "Select"' new[] { selectorGenericArguments[0]' selectorGenericArguments[1] }' source' selector); " is 149.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            // even if the body is something else' like IList<Foo>. Otherwise Expression.Call will not work cause it won't be able to find appropriate overload " is 147.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            // fakeCollectionSelector is used to get generic type arguments' which are then used to generate delegate type that we need. " is 124.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "                .Where(i => i.IsGenericType() && i.GetGenericTypeDefinition() == typeof(IEnumerable<>)).Single().GetGenericArguments().Single(); " is 128.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            ParameterExpression[] collectionSelectorParameters = expression.CollectionSelector.Parameters.Select(p => this.GenerateLinqExpression(p)).Cast<ParameterExpression>().ToArray(); " is 176.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "            var delegateType = typeof(Func<'>).MakeGenericType(sourceTypeArgument' typeof(IEnumerable<>).MakeGenericType(collectionTypeArgument)); " is 134.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "                return Expression.Call(this.expressionGeneratorType' "SelectMany"' new[] { sourceTypeArgument' collectionTypeArgument }' source' collectionSelector); " is 149.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The length of the statement  "                return Expression.Call(this.expressionGeneratorType' "SelectMany"' new[] { sourceTypeArgument' collectionTypeArgument' resultTypeArgument }' source' collectionSelector' resultSelector); " is 185.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,BuildMethodCallExpression,The length of the statement  "            ExceptionUtilities.CheckObjectNotNull(methodInfo' "Could not find method '{0}' on type of expression '{1}'"' methodName' instance); " is 131.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,GetCollectionTypeArgument,The length of the statement  "            var interfaces = expression.Type.GetInterfaces().Where(i => i.IsGenericType() && i.GetGenericTypeDefinition() == typeof(IEnumerable<>)); " is 136.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,GetCollectionTypeArgument,The length of the statement  "            Type enumerableInterface = expression.Type.GetInterfaces().Where(i => i.IsGenericType() && i.GetGenericTypeDefinition() == typeof(IEnumerable<>)).Single(); " is 155.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,VisitJoinExpressionBase,The length of the statement  "            return Expression.Call(typeof(Queryable)' methodName' new Type[] { outerType' innerType' keyType' resultType }' outer' inner' outerKeySelector' innerKeySelector' resultSelector); " is 178.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQuerySyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQuerySyntaxCodeGenerationVisitor.cs,Visit,The length of the statement  "                // for query syntax specific methods we use ParameterNamesDictionary' for non-specific methods (like Count' All' Any) we fall back to  " is 133.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqQuerySyntaxCodeGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQuerySyntaxCodeGenerationVisitor.cs,GetInputParameterName,The length of the statement  "            bool shouldCreateNewInputParameter = codeQuerySource == null || codeQuerySource.GroupByKeySelector != null || codeQuerySource.Select != null; " is 141.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,ComparePrimitive,The length of the statement  "                    // the result materialization in the product. (Valid enum values should always be materialized as enum objects rather than  " is 122.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,ComparePrimitive,The length of the statement  "                this.ThrowOrLogError(shouldThrow' "Scalar value mismatch in '{0}'. Expected: {1}. Actual: {2}[{3}]."' path' expected' actual' actual.GetType()); " is 144.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,CompareGrouping,The length of the statement  "            var groupingInterface = actual.GetType().GetInterfaces().Where(i => i.IsGenericType() && i.GetGenericTypeDefinition() == typeof(IGrouping<'>)).SingleOrDefault(); " is 161.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,CompareGrouping,The length of the statement  "            var compareGroupingMethod = typeof(LinqResultComparerBase).GetMethods(false' false).Where(m => m.Name == "CompareGroupingItem" && m.IsGenericMethod).Single(); " is 158.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,CompareGrouping,The length of the statement  "            Func<QueryStructuralValue' object' string' bool' ComparisonResult> func = (Func<QueryStructuralValue' object' string' bool' ComparisonResult>)compareGroupingMethod " is 163.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,CompareStructural,The length of the statement  "                        this.ThrowOrLogError(shouldThrow' "Expecting different object in '{0}'. Expected: {1}. Actual: {2}."' path' this.visitedEntities[expected]' actual); " is 148.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,CompareStructural,The length of the statement  "                    this.ThrowOrLogError(shouldThrow' "Types not match in {0}. Expecting: {1}. Actual: {2}."' path' expectedType.ClrType' actual.GetType()); " is 136.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,CompareStructural,The length of the statement  "                CoreLinq.Expressions.LambdaExpression GetPropertyValueExp = CoreLinq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression.Property(convertedParam' actualProperty)' param); " is 183.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,CompareStructural,The length of the statement  "                var propertyComparisonResult = this.CompareProperty(expected' expectedName' expectedPropertyType' actualValue' newPath' shouldThrow); " is 133.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,CompareCollection,The length of the statement  "                this.ThrowOrLogError(shouldThrow' "Collection element counts do not match in '{0}'. Expected: {1}. Actual: {2}."' path' expected.Elements.Count()' actualElements.Count); " is 169.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqResultComparerBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,CompareGroupingItem,The length of the statement  "                this.ThrowOrLogError(shouldThrow' "Grouping keys don't match in '{0}'. Expected: {1}. Actual: {2}."' path' expectedKey' groupingInterface.Key); " is 143.
Long Statement,Microsoft.Test.Taupo.Query.Linq,TypeBasedValueComparisonVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,Visit,The length of the statement  "                return this.parent.CompareAnonymous((QueryStructuralValue)this.expectedValue' this.actualValue' this.path' this.shouldThrow); " is 125.
Long Statement,Microsoft.Test.Taupo.Query.Linq,TypeBasedValueComparisonVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,Visit,The length of the statement  "                return this.parent.ComparePrimitive((QueryScalarValue)this.expectedValue' this.actualValue' this.path' this.shouldThrow); " is 121.
Long Statement,Microsoft.Test.Taupo.Query.Linq,TypeBasedValueComparisonVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,Visit,The length of the statement  "                return this.parent.ComparePrimitive((QueryScalarValue)this.expectedValue' this.actualValue' this.path' this.shouldThrow); " is 121.
Long Statement,Microsoft.Test.Taupo.Query.Linq,TypeBasedValueComparisonVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,Visit,The length of the statement  "                return this.parent.CompareCollection((QueryCollectionValue)this.expectedValue' this.actualValue' this.path' this.shouldThrow); " is 126.
Long Statement,Microsoft.Test.Taupo.Query.Linq,TypeBasedValueComparisonVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,Visit,The length of the statement  "                return this.parent.CompareStructural((QueryStructuralValue)this.expectedValue' this.actualValue' this.path' this.shouldThrow); " is 126.
Long Statement,Microsoft.Test.Taupo.Query.Linq,TypeBasedValueComparisonVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,Visit,The length of the statement  "                return this.parent.CompareStructural((QueryStructuralValue)this.expectedValue' this.actualValue' this.path' this.shouldThrow); " is 126.
Long Statement,Microsoft.Test.Taupo.Query.Linq,TypeBasedValueComparisonVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,Visit,The length of the statement  "                return this.parent.CompareGrouping((QueryStructuralValue)this.expectedValue' this.actualValue' this.path' this.shouldThrow); " is 124.
Long Statement,Microsoft.Test.Taupo.Query.Linq,TypeBasedValueComparisonVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,Visit,The length of the statement  "                return this.parent.ComparePrimitive((QueryScalarValue)this.expectedValue' this.actualValue' this.path' this.shouldThrow); " is 121.
Long Statement,Microsoft.Test.Taupo.Query.Linq,TypeBasedValueComparisonVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,Visit,The length of the statement  "                return this.parent.ComparePrimitive((QueryScalarValue)this.expectedValue' this.actualValue' this.path' this.shouldThrow); " is 121.
Long Statement,Microsoft.Test.Taupo.Query.Linq,TypeBasedValueComparisonVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqResultComparerBase.cs,Visit,The length of the statement  "                return this.parent.CompareReference((QueryReferenceValue)this.expectedValue' this.actualValue' this.path' this.shouldThrow); " is 124.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,Visit,The length of the statement  "            var resolvedResultType = this.ResolveBuiltInFunctionResultType(expression.LinqBuiltInFunction.BuiltInFunction' resolvedArguemnts.Select(a => a.ExpressionType).ToArray()); " is 170.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.Assert(outer.ExpressionType.IsAssignableFrom(inner.ExpressionType)' "Incompatible collection types for linq EXCEPT expression"); " is 147.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,Visit,The length of the statement  "            var elementSelector = expression.ElementSelector != null ? this.ResolveLambdaTypes(expression.ElementSelector' sourceType) : null; " is 130.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,Visit,The length of the statement  "            var elementCollectionType = expression.ElementSelector != null ? elementSelector.Body.ExpressionType.CreateCollectionType() : sourceType; " is 137.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,Visit,The length of the statement  "                var resultSelector = this.ResolveLambdaTypes(expression.ResultSelector' keyCollectionType' elementCollectionType.CreateCollectionType()); " is 137.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,Visit,The length of the statement  "                return new LinqGroupByExpression(source' keySelector' elementSelector' resultSelector' resultType.CreateCollectionType()); " is 122.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,Visit,The length of the statement  "                var groupingType = new QueryGroupingType(keySelector.Body.ExpressionType' elementCollectionType.ElementType' this.EvaluationStrategy); " is 134.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,Visit,The length of the statement  "            return LinqBuilder.GroupJoin(outer' inner' outerKeySelector' innerKeySelector' resultSelector' resultSelector.Body.ExpressionType.CreateCollectionType()); " is 154.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,Visit,The length of the statement  "            return LinqBuilder.Join(outer' inner' outerKeySelector' innerKeySelector' resultSelector' resultSelector.Body.ExpressionType.CreateCollectionType()); " is 149.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.Assert(expressionType is QueryScalarType' "Max expression without predicate can only be applied on collections of scalars."); " is 144.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,Visit,The length of the statement  "            ExceptionUtilities.Assert(expressionType is QueryScalarType' "Min expression without predicate can only be applied on collections of scalars."); " is 144.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,Visit,The length of the statement  "                return new LinqSelectManyExpression(source' collectionSelector' resultSelector' resultSelector.Body.ExpressionType.CreateCollectionType()); " is 139.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,ResolveLambdaTypes,The length of the statement  "            ExceptionUtilities.Assert(lambda.Parameters.Count == parameterCollectionTypes.Length' "Lambda expression parameter numbers must match the length of parameterCollectionTypes."); " is 176.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeResolutionVisitor.cs,ResolveLambdaTypes,The length of the statement  "                this.parameterMappings.Add(lambdaParameter' LinqBuilder.Parameter(lambdaParameter.Name' parameterCollectionTypes[i].ElementType)); " is 130.
Long Statement,Microsoft.Test.Taupo.Query.Linq,LinqTypeSemantics,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqTypeSemantics.cs,RegisterIntegralTypes,The length of the statement  "            foreach (Type t in new Type[] { typeof(sbyte)' typeof(byte)' typeof(char)' typeof(short)' typeof(ushort)' typeof(int)' typeof(uint)' typeof(long)' typeof(ulong) }) " is 163.
Complex Conditional,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,Supports,The conditional expression  "sourceClrType == typeof(byte[]) || otherClrType == typeof(byte[])                          || sourceClrType == typeof(string) || otherClrType == typeof(string)                          || sourceClrType == typeof(bool) || otherClrType == typeof(bool)                          || sourceClrType == typeof(bool?) || otherClrType == typeof(bool?)                          || this.IsSpatialType(sourceQueryClrType) || this.IsSpatialType(otherQueryClrType)"  is complex.
Complex Conditional,Microsoft.Test.Taupo.Query.Common,CommonExpressionEvaluatingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionEvaluatingVisitor.cs,Visit,The conditional expression  "left.EvaluationError == null && !left.IsNull && (bool)left.Value && !leftThrewEvaluationException"  is complex.
Complex Conditional,Microsoft.Test.Taupo.Query.Contracts,QueryTestCase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryTestCase.cs,GetAllNestedPropertyPaths,The conditional expression  "operationFilter == SupportOperationsFilter.NoFilter ||                          (operationFilter == SupportOperationsFilter.ArithmeticOperable && this.SupportsArithmeticOperations(qst)) ||                          (operationFilter == SupportOperationsFilter.EqualComparable && qst.SupportsEqualityComparison) ||                          (operationFilter == SupportOperationsFilter.OrderComparable && qst.SupportsOrderComparison)"  is complex.
Complex Conditional,Microsoft.Test.Taupo.Query.Linq,LinqExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqExpressionReplacingVisitor.cs,Visit,The conditional expression  "HasChanged(expression.Source' source) || HasChanged(expression.KeySelector' keySelector) || HasChanged(expression.ElementSelector' elementSelector) || HasChanged(expression.ResultSelector' resultSelector)"  is complex.
Complex Conditional,Microsoft.Test.Taupo.Query.Linq,LinqExpressionReplacingVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqExpressionReplacingVisitor.cs,VisitJoinExpressionBase,The conditional expression  "HasChanged(expression.Outer' outer) ||                  HasChanged(expression.Inner' inner) ||                  HasChanged(expression.OuterKeySelector' outerKeySelector) ||                  HasChanged(expression.InnerKeySelector' innerKeySelector) ||                  HasChanged(expression.ResultSelector' resultSelector)"  is complex.
Empty Catch Block,Microsoft.Test.Taupo.Query.Contracts,QueryTypeLibrary,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryTypeLibrary.cs,TryResolveConceptualSpatialDataType,The method has an empty catch block.
Empty Catch Block,Microsoft.Test.Taupo.Query.Contracts,QueryTypeLibrary,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryTypeLibrary.cs,TryResolveConceptualSpatialDataType,The method has an empty catch block.
Magic Number,Microsoft.Test.Taupo.Query,ClrQueryEvaluationStrategy,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\ClrQueryEvaluationStrategy.cs,Compare,The following statement contains a magic number: return this.SpatialEqualityComparer.Equals(v1' v2) ? 0 : 2;
Magic Number,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateScalarBag,The following statement contains a magic number: ExceptionUtilities.Assert(scalarItemNamedValues.Count() < 2' "Should not get more than one value for a scalar Bag item for path '{0}'"' propertyPath + "." + i);
Magic Number,Microsoft.Test.Taupo.Query,NamedValueToQueryValueUpdater,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\NamedValueToQueryValueUpdater.cs,UpdateRootScalarBag,The following statement contains a magic number: ExceptionUtilities.Assert(scalarItemNamedValues.Count() < 2' "Should not get more than one value for a scalar Bag item for path '{0}'"' i.ToString(CultureInfo.InvariantCulture));
Magic Number,Microsoft.Test.Taupo.Query,QueryRepositoryBuilderBase,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryRepositoryBuilderBase.cs,BuildConstants,The following statement contains a magic number: int constantsOfSameTypeLimit = 5;
Magic Number,Microsoft.Test.Taupo.Query,QueryStructuralValueToNamedValueComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\QueryStructuralValueToNamedValueComparer.cs,ComparePrimitiveBag,The following statement contains a magic number: ExceptionUtilities.Assert(primitiveItemNamedValues.Count() < 2' "Should not get more than one value for a primitive Bag item for path '{0}'"' propertyPath + "." + i);
Magic Number,Microsoft.Test.Taupo.Query.Common,CommonExpressionTypeResolutionVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Common\CommonExpressionTypeResolutionVisitor.cs,GetQueryScalarTypeFromDecimalValue,The following statement contains a magic number: var fractionalDigitsCount = Math.Max((value - truncated).ToString(CultureInfo.InvariantCulture).Length - 2' 0);
Magic Number,Microsoft.Test.Taupo.Query.Contracts,QueryAnonymousStructuralType,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Contracts\QueryAnonymousStructuralType.cs,GetHashCode,The following statement contains a magic number: int hashCode = 42;
Magic Number,Microsoft.Test.Taupo.Query.Linq,QueryScalarValueEqualityComparer,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqEvaluatingVisitor.cs,GetHashCode,The following statement contains a magic number: return 123;
Magic Number,Microsoft.Test.Taupo.Query.Linq,LinqQueryGenerationVisitor,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Taupo\Source\Taupo.Query\Linq\LinqQueryGenerationVisitor.cs,Visit,The following statement contains a magic number: genericArguments.Add(resultSelector.Type.GetGenericArguments()[2]);
