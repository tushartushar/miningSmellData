Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroScenarioTests.cs,TestReadParameterWithFeed,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Test.OData.PluggableFormat.VCard.Test,ODataVCardScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\VCard\Test\ODataVCardScenarioTests.cs,GetTopLevelProperty,Cyclomatic complexity of the method is 8
Long Statement,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroScenarioTests.cs,TestReadParameter,The length of the statement  "            using (var writer = AvroContainer.CreateWriter<AddProductParameter>(ms' true' new AvroSerializerSettings()' Codec.Null)) " is 120.
Long Statement,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WriteEntryAsAvroTest,The length of the statement  "            ODataAvroWriter aw = new ODataAvroWriter(ctx' value => ctx.AvroWriter.Write(value)' ctx.AvroWriter.UpdateSchema(null' TestEntityType)' false); " is 142.
Long Statement,Microsoft.Test.OData.PluggableFormat.Avro.Test,SchemaGenTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\SchemaGenTests.cs,SimpleODataEntrySchema,The length of the statement  "            string expected = TestHelper.GetResourceString("Microsoft.Test.OData.PluggableFormat.Tests.Avro.Test.SimpleODataEntrySchema.json"); " is 131.
Long Statement,Microsoft.Test.OData.PluggableFormat.Avro.Test,SchemaGenTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\SchemaGenTests.cs,SimpleODataEntrySchemaFromModel,The length of the statement  "            string expected = TestHelper.GetResourceString("Microsoft.Test.OData.PluggableFormat.Tests.Avro.Test.SimpleODataEntrySchemaFromModel.json"); " is 140.
Long Statement,Microsoft.Test.OData.PluggableFormat.Avro.Test,SchemaGenTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\SchemaGenTests.cs,ODataErrorSchema,The length of the statement  "            string expected = TestHelper.GetResourceString("Microsoft.Test.OData.PluggableFormat.Tests.Avro.Test.ODataErrorSchema.json"); " is 125.
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsODataEntry,The following statement contains a magic number: expected["Id"] = -5;
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsODataEntry,The following statement contains a magic number: cpx["ZipCode"] = 5L;
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsODataEntry,The following statement contains a magic number: Assert.AreEqual(5L' zip.Value);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsODataEntry,The following statement contains a magic number: Assert.AreEqual(2' properties.Count);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsODataEntry,The following statement contains a magic number: Assert.AreEqual(-5' properties[0].Value);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsODataFeed,The following statement contains a magic number: rec2["Id"] = 2;
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsODataFeed,The following statement contains a magic number: Assert.AreEqual(2' properties.Count);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsODataFeed,The following statement contains a magic number: Assert.AreEqual(2' properties.Count);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsODataFeed,The following statement contains a magic number: Assert.AreEqual(2' properties[0].Value);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsPrimitiveCollection,The following statement contains a magic number: seqWriter.Write(new[] { 6L' 8 });
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsPrimitiveCollection,The following statement contains a magic number: seqWriter.Write(new[] { 6L' 8 });
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsCollection,The following statement contains a magic number: seqWriter.Write(new[] { 6L' 8 });
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsCollection,The following statement contains a magic number: seqWriter.Write(new[] { 6L' 8 });
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,TestReadAvroAsCollection,The following statement contains a magic number: Assert.AreEqual(6L' (long)reader.Item);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,ReadAvroAsParameter,The following statement contains a magic number: person["Id"] = 5;
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,ReadAvroAsParameter,The following statement contains a magic number: Assert.AreEqual(2' properties.Count);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroReaderTests.cs,ReadAvroAsParameter,The following statement contains a magic number: Assert.AreEqual(5' properties[0].Value);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroScenarioTests.cs,TestReadFeed,The following statement contains a magic number: Assert.AreEqual(3' entries.Count);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroScenarioTests.cs,TestReadFeed,The following statement contains a magic number: Assert.IsTrue(TestHelper.EntryEqual(entry3' entries[2]));
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroScenarioTests.cs,TestWriteFeed,The following statement contains a magic number: Assert.AreEqual(product2' products[2]);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroScenarioTests.cs,TestWriteFeed,The following statement contains a magic number: Assert.AreEqual(product3' products[3]);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroScenarioTests.cs,TestReadCollection,The following statement contains a magic number: Assert.AreEqual(2' values.Count);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroScenarioTests.cs,TestReadParameter,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroScenarioTests.cs,TestReadParameterWithFeed,The following statement contains a magic number: Assert.AreEqual(2' feed.Count);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,ODataAvroWriterTests,The following statement contains a magic number: binary0 = new byte[] { 4' 7 };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,ODataAvroWriterTests,The following statement contains a magic number: binary0 = new byte[] { 4' 7 };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,ODataAvroWriterTests,The following statement contains a magic number: longCollection0 = new object[] {7L' 9L};
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,ODataAvroWriterTests,The following statement contains a magic number: longCollection0 = new object[] {7L' 9L};
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,ODataAvroWriterTests,The following statement contains a magic number: entry0 = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "TBoolean"' Value = true'}'                      new ODataProperty {Name = "TInt32"' Value = 32'}'                      new ODataProperty {Name = "TCollection"' Value = collectionValue0 }'                  }'                  TypeName = "NS.SimpleEntry"              };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WriteEntryAsAvroTest,The following statement contains a magic number: Assert.AreEqual(32' record.TInt32);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WriteFeedAsAvroTest,The following statement contains a magic number: ODataResource entry1 = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "TBoolean"' Value = true'}'                      new ODataProperty {Name = "TInt32"' Value = 32'}'                  }'                  TypeName = "NS.SimpleEntry"              };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WriteFeedAsAvroTest,The following statement contains a magic number: ODataResource entry2 = new ODataResource              {                  Properties = new[]                  {                      new ODataProperty {Name = "TBoolean"' Value = false'}'                      new ODataProperty {Name = "TInt32"' Value = 325'}'                  }'                  TypeName = "NS.SimpleEntry"              };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WriteFeedAsAvroTest,The following statement contains a magic number: Assert.AreEqual(2' records.Count());
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WriteFeedAsAvroTest,The following statement contains a magic number: Assert.AreEqual(32' record.TInt32);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WriteFeedAsAvroTest,The following statement contains a magic number: Assert.AreEqual(325' record.TInt32);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WritePropertyAsAvroTest,The following statement contains a magic number: ODataProperty prop = new ODataProperty()              {                  Name = "prop1"'                  Value = 589.901f              };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WritePropertyAsAvroTest,The following statement contains a magic number: Assert.IsTrue(TestHelper.FloatEqual(589.901f' records[0]));
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WriteBinaryPropertyAsAvroTest,The following statement contains a magic number: var expected = new byte[] { 3' 4 };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WriteBinaryPropertyAsAvroTest,The following statement contains a magic number: var expected = new byte[] { 3' 4 };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WritePrimitiveCollectionPropertyAsAvroTest,The following statement contains a magic number: var expected = new object[] { 3' 4 };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WritePrimitiveCollectionPropertyAsAvroTest,The following statement contains a magic number: var expected = new object[] { 3' 4 };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WriteCollectionAsAvroTest,The following statement contains a magic number: ocw.WriteItemAsync(3).Wait();
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WriteCollectionAsAvroTest,The following statement contains a magic number: Assert.AreEqual(3' records[0][1]);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroWriterTests.cs,WriteOperationParametersAsAvroTest,The following statement contains a magic number: Assert.AreEqual(32' p2.TInt32);
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,SchemaGenTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\SchemaGenTests.cs,SimpleODataEntrySchema,The following statement contains a magic number: ODataResource entry = new ODataResource              {                  TypeName = "NS.SimpleEntry"'                  Properties = new[]                  {                      new ODataProperty{  Name = "TNull"      ' Value = null'             }'                      new ODataProperty{  Name = "TBoolean"   ' Value = true'             }'                      new ODataProperty{  Name = "TInt32"     ' Value = 30'               }'                      new ODataProperty{  Name = "TLong"      ' Value = 31L'              }'                      new ODataProperty{  Name = "TFloat"     ' Value = 3.2f'             }'                      new ODataProperty{  Name = "TDouble"    ' Value = 3.3d'             }'                      new ODataProperty{  Name = "TBytes"     ' Value = new byte[] {4}'   }'                      new ODataProperty{  Name = "TString"    ' Value = "35"              }'                  }              };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,SchemaGenTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\SchemaGenTests.cs,SimpleODataEntrySchema,The following statement contains a magic number: ODataResource entry = new ODataResource              {                  TypeName = "NS.SimpleEntry"'                  Properties = new[]                  {                      new ODataProperty{  Name = "TNull"      ' Value = null'             }'                      new ODataProperty{  Name = "TBoolean"   ' Value = true'             }'                      new ODataProperty{  Name = "TInt32"     ' Value = 30'               }'                      new ODataProperty{  Name = "TLong"      ' Value = 31L'              }'                      new ODataProperty{  Name = "TFloat"     ' Value = 3.2f'             }'                      new ODataProperty{  Name = "TDouble"    ' Value = 3.3d'             }'                      new ODataProperty{  Name = "TBytes"     ' Value = new byte[] {4}'   }'                      new ODataProperty{  Name = "TString"    ' Value = "35"              }'                  }              };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,SchemaGenTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\SchemaGenTests.cs,SimpleODataEntrySchema,The following statement contains a magic number: ODataResource entry = new ODataResource              {                  TypeName = "NS.SimpleEntry"'                  Properties = new[]                  {                      new ODataProperty{  Name = "TNull"      ' Value = null'             }'                      new ODataProperty{  Name = "TBoolean"   ' Value = true'             }'                      new ODataProperty{  Name = "TInt32"     ' Value = 30'               }'                      new ODataProperty{  Name = "TLong"      ' Value = 31L'              }'                      new ODataProperty{  Name = "TFloat"     ' Value = 3.2f'             }'                      new ODataProperty{  Name = "TDouble"    ' Value = 3.3d'             }'                      new ODataProperty{  Name = "TBytes"     ' Value = new byte[] {4}'   }'                      new ODataProperty{  Name = "TString"    ' Value = "35"              }'                  }              };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,SchemaGenTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\SchemaGenTests.cs,SimpleODataEntrySchema,The following statement contains a magic number: ODataResource entry = new ODataResource              {                  TypeName = "NS.SimpleEntry"'                  Properties = new[]                  {                      new ODataProperty{  Name = "TNull"      ' Value = null'             }'                      new ODataProperty{  Name = "TBoolean"   ' Value = true'             }'                      new ODataProperty{  Name = "TInt32"     ' Value = 30'               }'                      new ODataProperty{  Name = "TLong"      ' Value = 31L'              }'                      new ODataProperty{  Name = "TFloat"     ' Value = 3.2f'             }'                      new ODataProperty{  Name = "TDouble"    ' Value = 3.3d'             }'                      new ODataProperty{  Name = "TBytes"     ' Value = new byte[] {4}'   }'                      new ODataProperty{  Name = "TString"    ' Value = "35"              }'                  }              };
Magic Number,Microsoft.Test.OData.PluggableFormat.Avro.Test,SchemaGenTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\SchemaGenTests.cs,SimpleODataEntrySchema,The following statement contains a magic number: ODataResource entry = new ODataResource              {                  TypeName = "NS.SimpleEntry"'                  Properties = new[]                  {                      new ODataProperty{  Name = "TNull"      ' Value = null'             }'                      new ODataProperty{  Name = "TBoolean"   ' Value = true'             }'                      new ODataProperty{  Name = "TInt32"     ' Value = 30'               }'                      new ODataProperty{  Name = "TLong"      ' Value = 31L'              }'                      new ODataProperty{  Name = "TFloat"     ' Value = 3.2f'             }'                      new ODataProperty{  Name = "TDouble"    ' Value = 3.3d'             }'                      new ODataProperty{  Name = "TBytes"     ' Value = new byte[] {4}'   }'                      new ODataProperty{  Name = "TString"    ' Value = "35"              }'                  }              };
Duplicate Code,Microsoft.Test.OData.PluggableFormat.VCard.Test,ODataVCardScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\VCard\Test\ODataVCardScenarioTests.cs,GetTopLevelProperty,The method contains a code clone-set at the following line numbers (starting from the method definition): ((14' 33)' (35' 54))
Missing Default,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroScenarioTests.cs,TestReadParameter,The following switch statement is missing a default case: switch (reader.State)                      {                          case ODataParameterReaderState.Value:                              result.Add(reader.Name' reader.Value);                              break;                          case ODataParameterReaderState.Resource:                              var entryReader = reader.CreateResourceReader();                              while (entryReader.Read())                              {                                  if (entryReader.State == ODataReaderState.ResourceEnd)                                  {                                      result.Add(reader.Name' entryReader.Item);                                      break;                                  }                              }                              break;                      }
Missing Default,Microsoft.Test.OData.PluggableFormat.Avro.Test,ODataAvroScenarioTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Tests\DataOData\Tests\OData.PluggableFormat.Tests\Avro\Test\ODataAvroScenarioTests.cs,TestReadParameterWithFeed,The following switch statement is missing a default case: switch (reader.State)                      {                          case ODataParameterReaderState.Value:                              result.Add(reader.Name' reader.Value);                              break;                          case ODataParameterReaderState.Resource:                              var entryReader = reader.CreateResourceReader();                              while (entryReader.Read())                              {                                  if (entryReader.State == ODataReaderState.ResourceEnd)                                  {                                      result.Add(reader.Name' entryReader.Item);                                      break;                                  }                              }                              break;                          case ODataParameterReaderState.ResourceSet:                              var feedReader = reader.CreateResourceSetReader();                              IList<ODataResource> entryList = new List<ODataResource>();                              while (feedReader.Read())                              {                                  if (feedReader.State == ODataReaderState.ResourceEnd)                                  {                                      entryList.Add((ODataResource)feedReader.Item);                                  }                              }                                result.Add(reader.Name' entryList);                              break;                      }
