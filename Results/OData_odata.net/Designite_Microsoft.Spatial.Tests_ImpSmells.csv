Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,GetExpectedJsonTypeName,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,MakeUpValueForParams,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Spatial.Tests,SpatialTestUtils,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialTestUtils.cs,AreEqualValues,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetGeographyType,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetGeometryType,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GetExpectedCollectionPipeline,The method has 5 parameters. Parameters: innerGetPipeline' coordinates' isGeography' keepAllSetCrsCalls' crs
Long Parameter List,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,TestReadMethod,The method has 5 parameters. Parameters: spatialType' coordinates' isGeography' getExpectedPipeline' innerGetExpectedPipeline
Long Parameter List,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,BuildMultiGml,The method has 5 parameters. Parameters: memberText' buildAsList' builder' data' buildInnerGml
Long Parameter List,Microsoft.Spatial.Tests,CallSequenceLoggingPipeline,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\LoggingPipelines.cs,AddCoordinates,The method has 5 parameters. Parameters: pipelineMethod' x' y' z' m
Long Parameter List,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,PointM,The method has 5 parameters. Parameters: x' y' z' m' coords
Long Parameter List,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,PointG,The method has 5 parameters. Parameters: x' y' z' m' coords
Long Identifier,Microsoft.Spatial.Tests,DataServicesSpatialImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\DataServicesSpatialImplementationTests.cs,,The length of the parameter spatialPipelineReturnTestedMethods is 34.
Long Identifier,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,,The length of the parameter arrayOfArrayOfArrayMultipleElements is 35.
Long Identifier,Microsoft.Spatial.Tests,CustomPipeline,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,,The length of the parameter GeographySetCoordinateSystemWasCalled is 37.
Long Identifier,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the parameter geometrymultiPointImplementation1 is 33.
Long Identifier,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the parameter geometrymultiPointImplementation2 is 33.
Long Identifier,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,RepresentationEquality_EqualsTests,The length of the parameter geometryMultiPointImplementation1 is 33.
Long Identifier,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,RepresentationEquality_EqualsTests,The length of the parameter geometryMultiPointImplementation2 is 33.
Long Statement,Microsoft.Spatial.Tests,DataServicesSpatialImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\DataServicesSpatialImplementationTests.cs,MissingSpatialPipelineReturnMethodsTest,The length of the statement  "            foreach (var method in methods.Where(m => m.Name.Contains("Create") && m.ReturnType != null && typeof(SpatialPipeline).IsAssignableFrom(m.ReturnType))) " is 151.
Long Statement,Microsoft.Spatial.Tests,DataServicesSpatialImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\DataServicesSpatialImplementationTests.cs,MissingSpatialPipelineReturnMethodsTest,The length of the statement  "                    Assert.True(false' "Not testing the SpatialPipeline return of method " + method.Name + " to be sure it is wrapped in a forwarding pipeline."); " is 142.
Long Statement,Microsoft.Spatial.Tests,DataServicesSpatialImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\DataServicesSpatialImplementationTests.cs,AssertPipelineIsForwardingSegment,The length of the statement  "            Assert.True(typeof(ForwardingSegment.GeographyForwarder) == pipeline.GeographyPipeline.GetType()' "All pipelines that we create must be wrapped in forwarding segments for exception/reset behavior to work"); " is 206.
Long Statement,Microsoft.Spatial.Tests,DataServicesSpatialImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\DataServicesSpatialImplementationTests.cs,AssertPipelineIsForwardingSegment,The length of the statement  "            Assert.True(typeof(ForwardingSegment.GeometryForwarder) == pipeline.GeometryPipeline.GetType()' "All pipelines that we create must be wrapped in forwarding segments for exception/reset behavior to work"); " is 204.
Long Statement,Microsoft.Spatial.Tests,ForwardingSegmentTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ForwardingSegmentTests.cs,ExceptionCallsResetForForwardCallsWithArgs,The length of the statement  "            Exception ex = SpatialTestUtils.RunCatching(() => this.testSubject.GeographyPipeline.SetCoordinateSystem(coordinateSystem)); " is 124.
Long Statement,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The length of the statement  "            this.builder.ConstructedGeography.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40)); " is 121.
Long Statement,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The length of the statement  "            this.builder.ConstructedGeography.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40)); " is 121.
Long Statement,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The length of the statement  "            GeographyLineString ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50); " is 120.
Long Statement,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The length of the statement  "            GeographyMultiPoint mp = GeographyFactory.MultiPoint(NonDefaultGeographicCoords).Point(10' 20).Point(20' 30).Point(30' 40); " is 123.
Long Statement,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The length of the statement  "                        new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}' " is 122.
Long Statement,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The length of the statement  "                        new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})' " is 130.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnCoordinatesArrayElementPrimitiveNotDouble_MultipleDimension,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => ExecuteSendToPipeline(SpatialType.Polygon' coordinates)' Strings.GeoJsonReader_ExpectedNumeric); " is 162.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnCoordinatesArrayElementPrimitiveNotDouble_SingleDimension,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => ExecuteSendToPipeline(SpatialType.Point'  coordinates)' Strings.GeoJsonReader_ExpectedNumeric); " is 161.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnCoordinatesArrayElementPrimitiveIsObject,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => ExecuteSendToPipeline(SpatialType.Point' coordinates)' Strings.GeoJsonReader_ExpectedNumeric); " is 160.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnCoordinatesArrayElementArrayIsObject,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => ExecuteSendToPipeline(SpatialType.Polygon' coordinates)' Strings.GeoJsonReader_ExpectedArray); " is 160.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnCoordinatesNotArray,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => ExecuteSendToPipeline(input)' Strings.GeoJsonReader_ExpectedArray); " is 133.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnInvalidGeoJSONTypeName_NotAString,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => ExecuteSendToPipeline(input)' Strings.JsonReaderExtensions_CannotReadPropertyValueAsString(55' "type")); " is 170.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnInvalidGeoJSONTypeName_Null,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => ExecuteSendToPipeline(input)' Strings.GeoJsonReader_InvalidTypeName(String.Empty)); " is 149.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnInvalidGeoJSONTypeName_UnknownType,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => ExecuteSendToPipeline(SpatialType.Unknown' null)' Strings.GeoJsonReader_InvalidTypeName("Unknown")); " is 166.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnInvalidGeoJSONTypeName_WrongCasing,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => ExecuteSendToPipeline(input)' Strings.GeoJsonReader_InvalidTypeName("point")); " is 144.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnMissingCoordinatesMember,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => SendToPipeline(members' pipeline' isGeography)' Strings.GeoJsonReader_MissingRequiredMember("coordinates")); " is 174.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnMissingTypeMember,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => SendToPipeline(properties' pipeline' isGeography)' Strings.GeoJsonReader_MissingRequiredMember("type")); " is 170.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionLessThan2Elements_MultipleDimensions,The length of the statement  "                                                                    ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}' new List<object> {22}}})' " is 135.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_MultipleDimensions,The length of the statement  "                                                                    ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}}' new List<object> {new List<object> {22' 88' -121.5' 91.2' 10' 102}}})' " is 181.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInLineString,The length of the statement  "            TestErrorOnUnexpectedArray(SpatialType.LineString' new List<object> {position2D' position3D' arrayOfMultiplePositions}); " is 120.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInMultiPoint,The length of the statement  "            TestErrorOnUnexpectedArray(SpatialType.MultiPoint' new List<object> {arrayOfMultiplePositions' position3D' position3D}); " is 120.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_X,The length of the statement  "            TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {new List<object> {19.8888' -22' 190}' -90' 44.2' 77.9}); " is 120.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPosition_MultiPolygon,The length of the statement  "            TestErrorOnUnexpectedArray(SpatialType.MultiPolygon' new List<object> {arrayOfArrayOneElement' arrayOfArrayMultipleElements' new List<object> {new List<object> {new List<object> {67' 48.0}' new List<object> {78.1234' -123' new List<object> {1' 2}}' new List<object> {33.99' -76}}}}); " is 283.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedNumericInMultiLineString,The length of the statement  "            TestErrorOnUnexpectedNumeric(SpatialType.MultiLineString' new List<object> {arrayOfOnePosition' arrayOfMultiplePositions' -103}); " is 129.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedNumericInPolygon,The length of the statement  "            TestErrorOnUnexpectedNumeric(SpatialType.Polygon' new List<object> {92.0' arrayOfMultiplePositions' arrayOfMultiplePositions}); " is 127.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedPositionInMultiLineString,The length of the statement  "            TestErrorOnUnexpectedNumeric(SpatialType.MultiLineString' new List<object> {arrayOfOnePosition' arrayOfMultiplePositions' position4D}); " is 135.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedPositionInPolygon,The length of the statement  "            TestErrorOnUnexpectedNumeric(SpatialType.Polygon' new List<object> {position2D' arrayOfMultiplePositions' arrayOfOnePosition}); " is 127.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,SendToPipelineEmptyShape,The length of the statement  "                if (spatialType != SpatialType.Unknown && spatialType != SpatialType.FullGlobe && spatialType != SpatialType.Collection) " is 120.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GetExpectedCollectionPipeline,The length of the statement  "            return GetExpectedCollectionPipeline(innerGetPipeline' coordinates' isGeography' keepAllSetCrsCalls' isGeography ? CoordinateSystem.DefaultGeography : CoordinateSystem.DefaultGeometry); " is 185.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GetGeoJson,The length of the statement  "                //geoJsonBuilder.AppendFormat("    {0}crs{0}  : {{   {0}properties{0}:   {{ {0}name{0} : {1}EPSG:{2}{1}   }}'   {0}type{0} : {1}name{1}   }}"' memberQuoteChar' typeValueQuoteChar' epsgId.Value); " is 194.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GetGeoJson,The length of the statement  "                //geoJsonBuilder.AppendFormat("{0}type{0}  : {1}{2}{1}"' memberQuoteChar' typeValueQuoteChar' spatialType != SpatialType.Collection ? spatialType.ToString() : "GeometryCollection"); " is 181.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GetGeoJson,The length of the statement  "                //geoJsonBuilder.AppendFormat("    {0}crs{0}  : {{   {0}properties{0}:   {{ {0}name{0} : {1}EPSG:{2}{1}   }}'   {0}type{0} : {1}name{1}   }}"' memberQuoteChar' typeValueQuoteChar' epsgId.Value); " is 194.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,TestInvalidCrs,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => SendToPipeline(members' actualPipeline' false)' error); " is 121.
Long Statement,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,TestReadMethod,The length of the statement  "            int epsgId = isGeography ? CoordinateSystem.DefaultGeography.EpsgId.Value : CoordinateSystem.DefaultGeometry.EpsgId.Value; " is 122.
Long Statement,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The length of the statement  "            this.builder.ConstructedGeometry.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40)); " is 120.
Long Statement,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The length of the statement  "            this.builder.ConstructedGeometry.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40)); " is 120.
Long Statement,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The length of the statement  "            GeometryMultiPoint mp = GeometryFactory.MultiPoint(NonDefaultGeometricCoords).Point(10' 20).Point(20' 30).Point(30' 40); " is 120.
Long Statement,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The length of the statement  "                        new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}' " is 122.
Long Statement,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The length of the statement  "                        new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})' " is 130.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadCoordinateSystemGmlNamespace,The length of the statement  "            var reader = XElement.Parse("<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos>1.0 1.0</gml:pos></gml:Point>").CreateReader(); " is 194.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadCoordinateSystemDefaultNamespace,The length of the statement  "            var reader = XElement.Parse("<gml:Point xmlns:gml='http://www.opengis.net/gml' srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos>1.0 1.0</gml:pos></gml:Point>").CreateReader(); " is 190.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyCoordinateSystem,The length of the statement  "            var reader = XElement.Parse("<gml:Point xmlns:gml='http://www.opengis.net/gml'><gml:pos>1.0 1.0</gml:pos></gml:Point>").CreateReader(); " is 135.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeometryCoordinateSystem,The length of the statement  "            var reader = XElement.Parse("<gml:Point xmlns:gml='http://www.opengis.net/gml'><gml:pos>1.0 1.0</gml:pos></gml:Point>").CreateReader(); " is 135.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadXmlNotOnElement,The length of the statement  "            var reader = XmlReader.Create(new StringReader("<gml:Point xmlns:gml='http://www.opengis.net/gml'><gml:pos>1.0 1.0</gml:pos></gml:Point>")); " is 140.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlInvalidSrsName,The length of the statement  "            var reader = XElement.Parse(@"<gml:Polygon xmlns:gml='http://www.opengis.net/gml' srsName='test'></gml:Polygon>").CreateReader(); " is 129.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlInvalidTopLevelAttribute,The length of the statement  "            var reader = XElement.Parse(@"<gml:Polygon xmlns:gml='http://www.opengis.net/gml' foo='bar'></gml:Polygon>").CreateReader(); " is 124.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlInvalidAttribute,The length of the statement  "            var reader = XElement.Parse(@"<gml:Point xmlns:gml='http://www.opengis.net/gml'><pos srsDimension='3' /></gml:Point>").CreateReader(); " is 134.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlUnexpectedSrsName,The length of the statement  "            var reader = XElement.Parse(@"<gml:Point xmlns:gml='http://www.opengis.net/gml'><pos srsName='foo' /></gml:Point>").CreateReader(); " is 131.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosNumbers_WhitespaceSeparated,The length of the statement  "                "<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos>1.0\t1.0</gml:pos></gml:Point>"' " is 151.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosNumbers_WhitespaceSeparated,The length of the statement  "                "<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos>1.0\r1.0</gml:pos></gml:Point>"' " is 151.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosNumbers_WhitespaceSeparated,The length of the statement  "                "<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos>1.0\n1.0</gml:pos></gml:Point>"' " is 151.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosNumbers_WhitespaceSeparated,The length of the statement  "                "<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos> 1.0&#x9;1.0\t</gml:pos></gml:Point>"' " is 157.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosNumbers_WhitespaceSeparated,The length of the statement  "                "<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos> 1.0&#xD;1.0\t</gml:pos></gml:Point>"' " is 157.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosNumbers_WhitespaceSeparated,The length of the statement  "                "<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos> 1.0&#xA;1.0\t</gml:pos></gml:Point>"' " is 157.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosNumbers_WhitespaceSeparated,The length of the statement  "                "<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos>1.0  1.0</gml:pos></gml:Point>"' " is 151.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosNumbers_WhitespaceSeparated,The length of the statement  "                "<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos>\t\t1.0 1.0</gml:pos></gml:Point>"' " is 154.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosNumbers_WhitespaceSeparated,The length of the statement  "                "<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos>1.0 1.0\n\n</gml:pos></gml:Point>"' " is 154.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosNumbers_WhitespaceSeparated,The length of the statement  "                "<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos> 1.0\t1.0\t</gml:pos></gml:Point>"' " is 154.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosNumbers_WhitespaceSeparated,The length of the statement  "                "<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos>1.0\t\n \r\n1.0</gml:pos></gml:Point>"' " is 158.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosSingleNumber,The length of the statement  "            var reader = XElement.Parse("<gml:Point xmlns:gml='http://www.opengis.net/gml'><gml:pos>10</gml:pos></gml:Point>").CreateReader(); " is 130.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGmlPosListSingleNumber,The length of the statement  "            var reader = XElement.Parse("<gml:LineString xmlns:gml='http://www.opengis.net/gml'><gml:posList>10</gml:posList></gml:LineString>").CreateReader(); " is 148.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReaderIgnoreCoordinateSystemAttributes,The length of the statement  "            var reader = XElement.Parse(@"<gml:Point xmlns:gml='http://www.opengis.net/gml' axisLabels='foo' uomLabels='bar'><gml:pos axisLabels='foo' uomLabels='bar'/></gml:Point>").CreateReader(); " is 186.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReaderIgnoreIdAttribute,The length of the statement  "            var reader = XElement.Parse(@"<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:id='id1' id='id2'><gml:pos axisLabels='foo' uomLabels='bar'/></gml:Point>").CreateReader(); " is 175.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReaderIgnoreCountAttributes,The length of the statement  "            var reader = XElement.Parse(@"<gml:LineString xmlns:gml='http://www.opengis.net/gml'><gml:posList count='foo'/></gml:LineString>").CreateReader(); " is 146.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ResetReader,The length of the statement  "            var invalidReader = XElement.Parse("<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/5555\"><gml:pos>1</gml:pos></gml:Point>").CreateReader(); " is 195.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ResetReader,The length of the statement  "            var validReader = XElement.Parse("<gml:Point xmlns:gml='http://www.opengis.net/gml' gml:srsName=\"http://www.opengis.net/def/crs/EPSG/0/1234\"><gml:pos>2 2</gml:pos></gml:Point>").CreateReader(); " is 195.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ResetReader,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => gmlReader.ReadGeography(invalidReader)' Strings.GmlReader_PosNeedTwoNumbers); " is 143.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadLineStringTest,The length of the statement  "                // <LineString><pointProperty><pos>x1 y1</pos></pointProperty><pointProperty><pos>x2 y2 ...</pos></pointProperty></LineString> " is 126.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadPolygonTest,The length of the statement  "            // <LineString><pointProperty><pos>x1 y1</pos></pointProperty><pointProperty><pos>x2 y2 ...</pos></pointProperty></LineString> " is 126.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ExpectedFullGlobeGml,The length of the statement  "            payloadBuilder.AppendFormat(@"<FullGlobe gml:srsName=""http://www.opengis.net/def/crs/EPSG/0/{0}"" xmlns:gml=""http://www.opengis.net/gml"" xmlns=""http://schemas.microsoft.com/sqlserver/2011/geography""/>"' coordinateSystem.EpsgId); " is 233.
Long Statement,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,GmlShapeElement,The length of the statement  "            return String.Format(@"<gml:{0} xmlns:gml=""http://www.opengis.net/gml"" gml:srsName=""http://www.opengis.net/def/crs/EPSG/0/{1}"">"' shapeType' epsgId.Value); " is 159.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"); " is 129.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"' " is 140.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']" " is 139.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyGmlWriterTest,The length of the statement  "            SpatialTestUtils.VerifyXPaths(nav' xnm' "/node()[@srsName = '" + GmlConstants.SrsPrefix + CoordinateSystem.DefaultGeography.EpsgId + "']"); " is 139.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"' " is 128.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The length of the statement  "            "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']" " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"' " is 127.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"' " is 140.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The length of the statement  "            "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']" " is 139.
Long Statement,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryGmlWriterTest,The length of the statement  "            SpatialTestUtils.VerifyXPaths(nav' xnm' "/node()[@srsName = '" + GmlConstants.SrsPrefix + CoordinateSystem.DefaultGeometry.EpsgId + "']"); " is 138.
Long Statement,Microsoft.Spatial.Tests,SpatialImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialImplementationTests.cs,CurrentImplementationNotNull,The length of the statement  "            Assert.True(SpatialImplementation.CurrentImplementation != null' "There must be default implementation registered always"); " is 123.
Long Statement,Microsoft.Spatial.Tests,SpatialImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialImplementationTests.cs,CurrentImplementationNotNull,The length of the statement  "            Assert.True(typeof(DataServicesSpatialImplementation) == SpatialImplementation.CurrentImplementation.GetType()' "expecting the default implementation to be registered"); " is 169.
Long Statement,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsThrowNotImplemented,The length of the statement  "            foreach (var method in typeof(SpatialOperations).GetMethods(BindingFlags.Instance | BindingFlags.Public).Where(m => m.DeclaringType != typeof(object))) " is 151.
Long Statement,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsThrowNotImplemented,The length of the statement  "                SpatialTestUtils.VerifyExceptionThrown<NotImplementedException>(() => this.InvokeOperation(operations' method)' message); " is 121.
Long Statement,Microsoft.Spatial.Tests,TestSpatialOperations,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,Invoke,The length of the statement  "                var arguments = methodCall.Arguments.Cast<MemberExpression>().Select(m => ((FieldInfo)m.Member).GetValue(((ConstantExpression)m.Expression).Value)).ToArray(); " is 158.
Long Statement,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,InvalidPointTest,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ArgumentException>(() => pipeline.GeographyPipeline.BeginFigure(new GeographyPosition(double.NaN' 122' null' null))' Strings.InvalidPointCoordinate(double.NaN' "latitude")); " is 212.
Long Statement,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,InvalidPointTest,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ArgumentException>(() => pipeline.GeographyPipeline.BeginFigure(new GeographyPosition(47' double.NegativeInfinity' null' null))' Strings.InvalidPointCoordinate(double.NegativeInfinity' "longitude")); " is 238.
Long Statement,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,InvalidPointTest,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ArgumentException>(() => pipeline.GeometryPipeline.BeginFigure(new GeometryPosition(double.PositiveInfinity' 122' null' null))' Strings.InvalidPointCoordinate(double.PositiveInfinity' "x")); " is 229.
Long Statement,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,InvalidPointTest,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ArgumentException>(() => pipeline.GeometryPipeline.BeginFigure(new GeometryPosition(123' double.NaN' null' null))' Strings.InvalidPointCoordinate(double.NaN' "y")); " is 203.
Long Statement,Microsoft.Spatial.Tests,SpatialReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialReaderTests.cs,ErrorOnNullDestinationInCtor,The length of the statement  "            SpatialTestUtils.VerifyExceptionThrown<ArgumentNullException>(act' "Value cannot be null.\r\nParameter name: destination"); " is 123.
Long Statement,Microsoft.Spatial.Tests,CallSequenceLoggingPipeline,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\LoggingPipelines.cs,Merge,The length of the statement  "            this.methodCalls.AddRange(target.methodCalls.Where(kvp => keepAllSetCrsCalls || (kvp.Key != PipelineMethod.GeographySetCoordinateSystem && kvp.Key != PipelineMethod.GeometrySetCoordinateSystem))); " is 196.
Long Statement,Microsoft.Spatial.Tests,GeographyPipe,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\LoggingPipelines.cs,BeginFigure,The length of the statement  "                logger.AddCoordinates(PipelineMethod.GeographyBeginFigure' position.Latitude' position.Longitude' position.Z' position.M); " is 122.
Long Statement,Microsoft.Spatial.Tests,GeographyPipe,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\LoggingPipelines.cs,LineTo,The length of the statement  "                logger.AddCoordinates(PipelineMethod.GeographyAddLineTo' position.Latitude' position.Longitude' position.Z' position.M); " is 120.
Long Statement,Microsoft.Spatial.Tests,SpatialTestUtils,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialTestUtils.cs,RunCatching,The length of the statement  "            Assert.True(false' "Exception of the wrong type thrown - expected " + typeof(T).Name + " but got " + ex.GetType().Name); " is 120.
Long Statement,Microsoft.Spatial.Tests,SpatialTestUtils,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialTestUtils.cs,AssertEqualContents,The length of the statement  "            if (expected.Count != actual.Count || Enumerable.Zip(expected' actual' (e' a) => AreEqualValues(e' a' comparison)).Any(r => !r)) " is 128.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,LineStringM,The length of the statement  "            return new GeometryLineStringImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation' PointM()' PointM()); " is 142.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,PolygonM,The length of the statement  "            return new GeometryPolygonImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation' LineStringM()); " is 134.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPointM,The length of the statement  "            return new GeometryMultiPointImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation' items); " is 129.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPointMEmpty,The length of the statement  "            return new GeometryMultiPointImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation); " is 122.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiLineStringM,The length of the statement  "            return new GeometryMultiLineStringImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation' items); " is 134.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiLineStringMEmpty,The length of the statement  "            return new GeometryMultiLineStringImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation); " is 127.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPolygonM,The length of the statement  "            return new GeometryMultiPolygonImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation' items); " is 131.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPolygonMEmpty,The length of the statement  "            return new GeometryMultiPolygonImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation); " is 124.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,LineStringG,The length of the statement  "            return new GeographyLineStringImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation' PointG()' PointG()); " is 144.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,PolygonG,The length of the statement  "            return new GeographyPolygonImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation' LineStringG()); " is 136.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPointG,The length of the statement  "            return new GeographyMultiPointImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation' items); " is 131.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPointGEmpty,The length of the statement  "            return new GeographyMultiPointImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation); " is 124.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiLineStringG,The length of the statement  "            return new GeographyMultiLineStringImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation' items); " is 136.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiLineStringGEmpty,The length of the statement  "            return new GeographyMultiLineStringImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation); " is 129.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPolygonG,The length of the statement  "            return new GeographyMultiPolygonImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation' items); " is 133.
Long Statement,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPolygonGEmpty,The length of the statement  "            return new GeographyMultiPolygonImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation); " is 126.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The length of the statement  "            this.ReadLineStringTest("LINESTRING (10 20' 10.1 20.1)"' null' new PositionData(20' 10' null' null)' new PositionData(20.1' 10.1' null' null)); " is 143.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The length of the statement  "            this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 20 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' 20' 10)); " is 139.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The length of the statement  "            this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 NULL NULL' 30 20 NULL 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' null' null)' new PositionData(20' 30' null' 10)); " is 198.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The length of the statement  "            this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"' " is 121.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiLineString,The length of the statement  "            var p = this.d2Formatter.Read<Geography>(new StringReader("MULTILINESTRING ((10 10' 20 20)' EMPTY' (30 30' 40 40' 50 50))")); " is 125.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The length of the statement  "            var p = this.d2Formatter.Read<Geography>(new StringReader("MULTIPOLYGON (((10 10' 20 20' 30 30' 10 10)' (30 30' 40 40' 50 50' 30 30))' EMPTY' ((10 10' 20 20' 30 30' 10 10)))")); " is 177.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadCollection,The length of the statement  "            var p = this.d2Formatter.Read<Geography>(new StringReader("GEOMETRYCOLLECTION (POINT(10 10)' LINESTRING(20 20' 20 20)' POLYGON EMPTY' GEOMETRYCOLLECTION(POINT(30 30)))")); " is 171.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("POLYGON ((10 20 30' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"); " is 135.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("POLYGON ((10 20 30' 15 25' 20 30' 10 20)' (15 25' 20 30 40' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"); " is 138.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7 7' 5 5))"); " is 134.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("MULTIPOLYGON (((10 10 10' 20 20' 30 30' 10 10)' (30 30' 40 40' 50 50' 30 30))' EMPTY' ((10 10' 20 20' 30 30' 10 10)))"); " is 152.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("MULTIPOLYGON (((10 10' 20 20 20' 30 30' 10 10)' (30 30' 40 40' 50 50' 30 30))' EMPTY' ((10 10' 20 20' 30 30' 10 10)))"); " is 152.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("MULTIPOLYGON (((10 10' 20 20' 30 30 30' 10 10)' (30 30' 40 40' 50 50' 30 30))' EMPTY' ((10 10' 20 20' 30 30' 10 10)))"); " is 152.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("MULTIPOLYGON (((10 10' 20 20' 30 30' 10 10 10)' (30 30' 40 40' 50 50' 30 30))' EMPTY' ((10 10' 20 20' 30 30' 10 10)))"); " is 152.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("MULTIPOLYGON (((10 10' 20 20' 30 30' 10 10)' (30 30 30' 40 40' 50 50' 30 30))' EMPTY' ((10 10' 20 20' 30 30' 10 10)))"); " is 152.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("MULTIPOLYGON (((10 10' 20 20' 30 30' 10 10)' (30 30' 40 40 40' 50 50' 30 30))' EMPTY' ((10 10' 20 20' 30 30' 10 10)))"); " is 152.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("MULTIPOLYGON (((10 10' 20 20' 30 30' 10 10)' (30 30' 40 40' 50 50 50' 30 30))' EMPTY' ((10 10' 20 20' 30 30' 10 10)))"); " is 152.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("MULTIPOLYGON (((10 10' 20 20' 30 30' 10 10)' (30 30' 40 40' 50 50' 30 30 30))' EMPTY' ((10 10' 20 20' 30 30' 10 10)))"); " is 152.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("MULTIPOLYGON (((10 10' 20 20' 30 30' 10 10)' (30 30' 40 40' 50 50' 30 30))' EMPTY' ((10 10 10' 20 20' 30 30' 10 10)))"); " is 152.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("MULTIPOLYGON (((10 10' 20 20' 30 30' 10 10)' (30 30' 40 40' 50 50' 30 30))' EMPTY' ((10 10' 20 20 20' 30 30' 10 10)))"); " is 152.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("MULTIPOLYGON (((10 10' 20 20' 30 30' 10 10)' (30 30' 40 40' 50 50' 30 30))' EMPTY' ((10 10' 20 20' 30 30 30' 10 10)))"); " is 152.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("MULTIPOLYGON (((10 10' 20 20' 30 30' 10 10)' (30 30' 40 40' 50 50' 30 30))' EMPTY' ((10 10' 20 20' 30 30' 10 10 10)))"); " is 152.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("GEOMETRYCOLLECTION (POINT(10 10 10)' LINESTRING(20 20' 20 20)' POLYGON EMPTY' GEOMETRYCOLLECTION(POINT(30 30)))"); " is 146.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("GEOMETRYCOLLECTION (POINT(10 10)' LINESTRING(20 20 20' 20 20)' POLYGON EMPTY' GEOMETRYCOLLECTION(POINT(30 30)))"); " is 146.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("GEOMETRYCOLLECTION (POINT(10 10)' LINESTRING(20 20' 20 20 20)' POLYGON EMPTY' GEOMETRYCOLLECTION(POINT(30 30)))"); " is 146.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ErrorOnRead3DPoint,The length of the statement  "            TestErrorOn3DValueIn2DOnlyMode("GEOMETRYCOLLECTION (POINT(10 10)' LINESTRING(20 20' 20 20)' POLYGON EMPTY' GEOMETRYCOLLECTION(POINT(30 30 30)))"); " is 146.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The length of the statement  "            GeographyToWktTest(this.d2Formatter' fourD2PointWith2D2Holes' "SRID=4326;POLYGON ((20 10' 30 20' 40 30' 20 10)' (-20 -10' -30 -20' -40 -30' -20 -10)' (-20.5 -10.5' -30.5 -20.5' -40.5 -30.5' -20.5 -10.5))"); " is 206.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The length of the statement  "            GeographyToWktTest(this.d4Formatter' fourD2PointWith2D2Holes' "SRID=4326;POLYGON ((20 10' 30 20' 40 30' 20 10)' (-20 -10' -30 -20' -40 -30' -20 -10)' (-20.5 -10.5' -30.5 -20.5' -40.5 -30.5' -20.5 -10.5))"); " is 206.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The length of the statement  "            GeographyToWktTest(this.d2Formatter' twoD2LineStringCalls' "SRID=4326;MULTILINESTRING ((20 10' 30 20)' EMPTY' (40 30' 50 40))"); " is 128.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The length of the statement  "            GeographyToWktTest(this.d4Formatter' twoD2LineStringCalls' "SRID=4326;MULTILINESTRING ((20 10' 30 20)' EMPTY' (40 30' 50 40))"); " is 128.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The length of the statement  "            GeographyToWktTest(this.d2Formatter' threeLineD2Calls' "SRID=4326;MULTIPOLYGON (((20 10' 30 20' 40 30' 20 10)' (-20.5 -10.5' -30.5 -20.5' -40.5 -30.5' -20.5 -10.5))' EMPTY' ((20 10' 30 20' 40 30' 20 10)))"); " is 207.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The length of the statement  "            GeographyToWktTest(this.d4Formatter' threeLineD2Calls' "SRID=4326;MULTIPOLYGON (((20 10' 30 20' 40 30' 20 10)' (-20.5 -10.5' -30.5 -20.5' -40.5 -30.5' -20.5 -10.5))' EMPTY' ((20 10' 30 20' 40 30' 20 10)))"); " is 207.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteCollection,The length of the statement  "            GeographyToWktTest(this.d2Formatter' pointMultiPointCalls' "SRID=4326;GEOMETRYCOLLECTION (POINT (20 10)' MULTIPOINT ((30 20)' (40 30)))"); " is 138.
Long Statement,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteCollection,The length of the statement  "            GeographyToWktTest(this.d4Formatter' pointMultiPointCalls' "SRID=4326;GEOMETRYCOLLECTION (POINT (20 10)' MULTIPOINT ((30 20)' (40 30)))"); " is 138.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(fullGlobe1.GetHashCode() == fullGlobe2.GetHashCode()' "HashCode must be equal for GeographyCollection with same values"); " is 133.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(fullGlobe1.GetHashCode() != fullGlobe3.GetHashCode()' "HashCode must be equal for GeographyCollection with same values"); " is 133.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(geometryPoint1.GetHashCode() == geometryPoint2.GetHashCode()' "HashCode must be equal for points with same values"); " is 128.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(lineString1.GetHashCode() == lineString2.GetHashCode()' "HashCode must be equal for line string with same values"); " is 127.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(multiLineString1.GetHashCode() == multiLineString2.GetHashCode()' "HashCode must be equal for multiLineString with same values"); " is 141.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(multiPointImplementation1.GetHashCode() == multiPointImplementation2.GetHashCode()' "HashCode must be equal for multiPoint with same values"); " is 154.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(multiPolygon1.GetHashCode() == multiPolygon2.GetHashCode()' "HashCode must be equal for multiPolygon with same values"); " is 132.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(geographyCollection1.GetHashCode() == geographyCollection2.GetHashCode()' "HashCode must be equal for GeographyCollection with same values"); " is 153.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(geometryLineString1.GetHashCode() == geometryLineString2.GetHashCode()' "HashCode must be equal for line string with same values"); " is 143.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(geometrymultiLineString1.GetHashCode() == geometrymultiLineString2.GetHashCode()' "HashCode must be equal for multiLineString with same values"); " is 157.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(geometrymultiPointImplementation1.GetHashCode() == geometrymultiPointImplementation2.GetHashCode()' "HashCode must be equal for multiPoint with same values"); " is 170.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(geometryPolygon1.GetHashCode() == geometryPolygon2.GetHashCode()' "HashCode must be equal for polygon with same values"); " is 133.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(geometryMultiPolygon1.GetHashCode() == geometryMultiPolygon2.GetHashCode()' "HashCode must be equal for MultiPolygon with same values"); " is 148.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The length of the statement  "            Assert.True(geometryCollection1.GetHashCode() == geometryCollection2.GetHashCode()' "HashCode must be equal for GeometryCollection with same values"); " is 150.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,RepresentationEquality_EqualsTests,The length of the statement  "            Assert.True(multiPointImplementation1.Equals(multiPointImplementation2)' "Values must be equal for multiPoint with same values"); " is 129.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,RepresentationEquality_EqualsTests,The length of the statement  "            Assert.True(geographyCollection1.Equals(geographyCollection2)' "Values must be equal for GeographyCollection with same values"); " is 128.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,RepresentationEquality_EqualsTests,The length of the statement  "            Assert.True(geometryMultiLineString1.Equals(geometryMultiLineString2)' "Values must be equal for multiLineString with same values"); " is 132.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,RepresentationEquality_EqualsTests,The length of the statement  "            Assert.True(geometryMultiPointImplementation1.Equals(geometryMultiPointImplementation2)' "Values must be equal for multiPoint with same values"); " is 145.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,RepresentationEquality_EqualsTests,The length of the statement  "            Assert.True(geometryMultiPolygon1.Equals(geometryMultiPolygon2)' "Values must be equal for MultiPolygon with same values"); " is 123.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,RepresentationEquality_EqualsTests,The length of the statement  "            Assert.True(geometryCollection1.Equals(geometryCollection2)' "Values must be equal for GeometryCollection with same values"); " is 125.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialEmptyTypeEquality,The length of the statement  "            Assert.False(Geometry.Equals(emptyGeometryPoint1' GeometryPoint)' "empty points must not be equal to non empty points"); " is 120.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialEmptyTypeEquality,The length of the statement  "            Assert.False(Geometry.Equals(GeometryPoint' emptyGeometryPoint1)' "empty points must not be equal to non empty points"); " is 120.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geography.Equals(GetGeographyType<GeographyPoint>()' GetGeographyType<GeographyCollection>())' "geography point equality must fail when types are different"); " is 171.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geography.Equals(GetGeographyType<GeographyLineString>()' GetGeographyType<GeographyCollection>())' "geography line string equality must fail when types are different"); " is 182.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geography.Equals(GetGeographyType<GeographyMultiLineString>()' GetGeographyType<GeographyCollection>())' "geography multiline string equality must fail when types are different"); " is 192.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geography.Equals(GetGeographyType<GeographyMultiPoint>()' GetGeographyType<GeographyCollection>())' "geography multipoint equality must fail when types are different"); " is 181.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geography.Equals(GetGeographyType<GeographyPolygon>()' GetGeographyType<GeographyCollection>())' "geography polygon equality must fail when types are different"); " is 175.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geography.Equals(GetGeographyType<GeographyMultiPolygon>()' GetGeographyType<GeographyCollection>())' "geography multipolygon equality must fail when types are different"); " is 185.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geography.Equals(GetGeographyType<GeographyCollection>()' GetGeographyType<GeographyMultiPolygon>())' "geography collection equality must fail when types are different"); " is 183.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geography.Equals(GetGeographyType<GeographyFullGlobe>()' GetGeographyType<GeographyMultiPolygon>())' "full globe equality must fail when types are different"); " is 172.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geometry.Equals(GetGeometryType<GeometryPoint>()' GetGeometryType<GeometryCollection>())' "geometry point equality must fail when types are different"); " is 165.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geometry.Equals(GetGeometryType<GeometryLineString>()' GetGeometryType<GeometryCollection>())' "geometry line string equality must fail when types are different"); " is 176.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geometry.Equals(GetGeometryType<GeometryMultiLineString>()' GetGeometryType<GeometryCollection>())' "geometry multiline string equality must fail when types are different"); " is 186.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geometry.Equals(GetGeometryType<GeometryMultiPoint>()' GetGeometryType<GeometryCollection>())' "geometry multipoint equality must fail when types are different"); " is 175.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geometry.Equals(GetGeometryType<GeometryPolygon>()' GetGeometryType<GeometryCollection>())' "geometry polygon equality must fail when types are different"); " is 169.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geometry.Equals(GetGeometryType<GeometryMultiPolygon>()' GetGeometryType<GeometryCollection>())' "geometry multipolygon equality must fail when types are different"); " is 179.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,SpatialTypeMismatchEquality,The length of the statement  "            Assert.False(Geometry.Equals(GetGeometryType<GeometryCollection>()' GetGeometryType<GeometryMultiPolygon>())' "geometry collection equality must fail when types are different"); " is 177.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The length of the statement  "            DefaultEqualityTest(() => GeographyFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build()); " is 154.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The length of the statement  "            DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build()); " is 191.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The length of the statement  "            DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build()); " is 187.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The length of the statement  "            GeographyEqualityTestIncludingBaseObviousStuff(() => GeographyFactory.Point(32.0' -100.0).Build()' () => GeographyFactory.Point().Build()); " is 139.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The length of the statement  "            DefaultEqualityTest(() => GeometryFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build()); " is 153.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The length of the statement  "            DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build()); " is 190.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The length of the statement  "            DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build()); " is 182.
Long Statement,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The length of the statement  "            GeometryEqualityTestIncludingBaseObviousStuff(() => GeometryFactory.Point(32.0' -10.0).Build()' () => GeometryFactory.Point().Build()); " is 135.
Magic Number,Microsoft.Spatial.Tests,CoordinateSystemTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\CoordinateSystemTests.cs,NotEqualWhenIdsDiffer,The following statement contains a magic number: Assert.NotEqual(Coords(epsgId: 1)' Coords(epsgId: 2));
Magic Number,Microsoft.Spatial.Tests,CoordinateSystemTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\CoordinateSystemTests.cs,GetHashCodeImplementation,The following statement contains a magic number: Assert.Equal(1234' CoordinateSystem.Geography(1234).GetHashCode());
Magic Number,Microsoft.Spatial.Tests,CoordinateSystemTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\CoordinateSystemTests.cs,GetHashCodeImplementation,The following statement contains a magic number: Assert.Equal(1234' CoordinateSystem.Geography(1234).GetHashCode());
Magic Number,Microsoft.Spatial.Tests,Call,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ForwardingSegmentTests.cs,GetHashCode,The following statement contains a magic number: return (this.methodName.GetHashCode() * 397) ^ this.args.GetHashCode();
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiLineString(new[]                                                                            {                                                                                new PositionData(10' 20' 30' 40)'                                                                                new PositionData(10' 30' 30' 40)                                                                            }'                                                                        new[]                                                                            {                                                                                new PositionData(10' 30' 30' 40)'                                                                                new PositionData(10' 20' 30' 40)                                                                            });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsMultiPolygon(new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                 }'                                                                         }'                                                                     new[]                                                                         {                                                                             new[]                                                                                 {                                                                                     new PositionData(10' 30' 30' 40)'                                                                                     new PositionData(10' 20' 30' 40)'                                                                                     new PositionData(10' 40' 30' 40)'                                                                                     new PositionData(10' 30' 30' 40)'                                                                                 }'                                                                         });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPoint,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPoint,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPoint,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPoint,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPolygon(new[]                                                                    {                                                                        new PositionData(10' 20' 30' 40)'                                                                        new PositionData(10' 30' 30' 40)'                                                                        new PositionData(10' 40' 30' 40)'                                                                        new PositionData(10' 20' 30' 40)                                                                    });
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuilderAccessBeforeEnd,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuilderAccessBeforeEnd,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuilderAccessBeforeEnd,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuilderAccessBeforeEnd,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuilderAccessBeforeEnd,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  (c2) => c2.VerifyAsCollection((p) => p.VerifyAsPoint(new PositionData(10' 10' 10' 10)))'                  (p) => p.VerifyAsPoint(null));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuilderAccessBeforeEnd,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  (c2) => c2.VerifyAsCollection((p) => p.VerifyAsPoint(new PositionData(10' 10' 10' 10)))'                  (p) => p.VerifyAsPoint(null));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuilderAccessBeforeEnd,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  (c2) => c2.VerifyAsCollection((p) => p.VerifyAsPoint(new PositionData(10' 10' 10' 10)))'                  (p) => p.VerifyAsPoint(null));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuilderAccessBeforeEnd,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsCollection(                  (c2) => c2.VerifyAsCollection((p) => p.VerifyAsPoint(new PositionData(10' 10' 10' 10)))'                  (p) => p.VerifyAsPoint(null));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10 * i' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10 * i' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10 * i' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.BeginFigure(new GeographyPosition(10 * i' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildTwoPoints,The following statement contains a magic number: i < 4
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPoint(new PositionData(30' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPoint(new PositionData(30' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPoint(new PositionData(30' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyBuilderImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyBuilderImplementationTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.ConstructedGeography.VerifyAsPoint(new PositionData(30' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,TestUsageOfValidator,The following statement contains a magic number: Action action = () => GeographyFactory.Polygon().Ring(10' 10).Build();
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,TestUsageOfValidator,The following statement contains a magic number: Action action = () => GeographyFactory.Polygon().Ring(10' 10).Build();
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildWithCommand,The following statement contains a magic number: var point = GeographyFactory.Point(10' 10).Build();
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildWithCommand,The following statement contains a magic number: var point = GeographyFactory.Point(10' 10).Build();
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildWithCommand,The following statement contains a magic number: point.VerifyAsPoint(new PositionData(10' 10));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildWithCommand,The following statement contains a magic number: point.VerifyAsPoint(new PositionData(10' 10));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildWithExplicitCast,The following statement contains a magic number: var point = (Geography)GeographyFactory.Point(10' 10);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildWithExplicitCast,The following statement contains a magic number: var point = (Geography)GeographyFactory.Point(10' 10);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildWithExplicitCast,The following statement contains a magic number: point.VerifyAsPoint(new PositionData(10' 10));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildWithExplicitCast,The following statement contains a magic number: point.VerifyAsPoint(new PositionData(10' 10));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: GeographyPoint p = GeographyFactory.Point(NonDefaultGeographicCoords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: GeographyPoint p = GeographyFactory.Point(NonDefaultGeographicCoords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: GeographyPoint p = GeographyFactory.Point(NonDefaultGeographicCoords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: GeographyPoint p = GeographyFactory.Point(NonDefaultGeographicCoords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeographyFactory.Point(NonDefaultGeographicCoords' 10' 20);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeographyFactory.Point(NonDefaultGeographicCoords' 10' 20);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeographyFactory.Point(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeographyFactory.Point(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeographyFactory.Point(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeographyFactory.Point(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeographyFactory.Point(10' 20);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeographyFactory.Point(10' 20);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeographyFactory.Point().LineTo(10' 20);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeographyFactory.Point().LineTo(10' 20);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeographyLineString ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeographyLineString ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeographyLineString ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeographyLineString ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeographyLineString ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeographyLineString ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeographyLineString ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeographyLineString ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(NonDefaultGeographicCoords' 10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString().LineTo(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString().LineTo(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString().LineTo(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeographyFactory.LineString().LineTo(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeographyPolygon poly = GeographyFactory.Polygon(NonDefaultGeographicCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly = GeographyFactory.Polygon()                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly = GeographyFactory.Polygon()                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly = GeographyFactory.Polygon()                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly = GeographyFactory.Polygon()                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly = GeographyFactory.Polygon()                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly = GeographyFactory.Polygon()                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: GeographyMultiPoint mp = GeographyFactory.MultiPoint(NonDefaultGeographicCoords).Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: GeographyMultiPoint mp = GeographyFactory.MultiPoint(NonDefaultGeographicCoords).Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: GeographyMultiPoint mp = GeographyFactory.MultiPoint(NonDefaultGeographicCoords).Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: GeographyMultiPoint mp = GeographyFactory.MultiPoint(NonDefaultGeographicCoords).Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: GeographyMultiPoint mp = GeographyFactory.MultiPoint(NonDefaultGeographicCoords).Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: GeographyMultiPoint mp = GeographyFactory.MultiPoint(NonDefaultGeographicCoords).Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeographyFactory.MultiPoint().Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeographyFactory.MultiPoint().Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeographyFactory.MultiPoint().Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeographyFactory.MultiPoint().Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeographyFactory.MultiPoint().Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeographyFactory.MultiPoint().Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeographyFactory.MultiPoint().Point(10' 20).Point();
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeographyFactory.MultiPoint().Point(10' 20).Point();
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' null);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' null);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeographyMultiLineString mls = GeographyFactory.MultiLineString(NonDefaultGeographicCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeographyMultiLineString mls = GeographyFactory.MultiLineString(NonDefaultGeographicCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeographyMultiLineString mls = GeographyFactory.MultiLineString(NonDefaultGeographicCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeographyMultiLineString mls = GeographyFactory.MultiLineString(NonDefaultGeographicCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeographyMultiLineString mls = GeographyFactory.MultiLineString(NonDefaultGeographicCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeographyMultiLineString mls = GeographyFactory.MultiLineString(NonDefaultGeographicCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeographyMultiLineString mls = GeographyFactory.MultiLineString(NonDefaultGeographicCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeographyMultiLineString mls = GeographyFactory.MultiLineString(NonDefaultGeographicCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeographyMultiLineString mls = GeographyFactory.MultiLineString(NonDefaultGeographicCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeographyMultiLineString mls = GeographyFactory.MultiLineString(NonDefaultGeographicCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeographyMultiLineString mls = GeographyFactory.MultiLineString(NonDefaultGeographicCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeographyMultiLineString mls = GeographyFactory.MultiLineString(NonDefaultGeographicCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls = GeographyFactory.MultiLineString()                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls = GeographyFactory.MultiLineString()                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls = GeographyFactory.MultiLineString()                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls = GeographyFactory.MultiLineString()                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls = GeographyFactory.MultiLineString()                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls = GeographyFactory.MultiLineString()                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                   new PositionData(20' 30)'                   new PositionData(30' 40)'              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                   new PositionData(20' 30)'                   new PositionData(30' 40)'              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                   new PositionData(20' 30)'                   new PositionData(30' 40)'              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                   new PositionData(20' 30)'                   new PositionData(30' 40)'              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                   new PositionData(20' 30)'                   new PositionData(30' 40)'              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                   new PositionData(20' 30)'                   new PositionData(30' 40)'              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeographyMultiPolygon mp = GeographyFactory.MultiPolygon(NonDefaultGeographicCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeographyMultiPolygon mp = GeographyFactory.MultiPolygon(NonDefaultGeographicCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeographyMultiPolygon mp = GeographyFactory.MultiPolygon(NonDefaultGeographicCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeographyMultiPolygon mp = GeographyFactory.MultiPolygon(NonDefaultGeographicCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeographyMultiPolygon mp = GeographyFactory.MultiPolygon(NonDefaultGeographicCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeographyMultiPolygon mp = GeographyFactory.MultiPolygon(NonDefaultGeographicCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeographyMultiPolygon mp = GeographyFactory.MultiPolygon(NonDefaultGeographicCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeographyMultiPolygon mp = GeographyFactory.MultiPolygon(NonDefaultGeographicCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeographyMultiPolygon mp = GeographyFactory.MultiPolygon(NonDefaultGeographicCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeographyMultiPolygon mp = GeographyFactory.MultiPolygon(NonDefaultGeographicCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeographyMultiPolygon mp = GeographyFactory.MultiPolygon(NonDefaultGeographicCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeographyMultiPolygon mp = GeographyFactory.MultiPolygon(NonDefaultGeographicCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp = GeographyFactory.MultiPolygon()                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp = GeographyFactory.MultiPolygon()                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp = GeographyFactory.MultiPolygon()                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp = GeographyFactory.MultiPolygon()                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp = GeographyFactory.MultiPolygon()                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp = GeographyFactory.MultiPolygon()                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeographyCollection c = GeographyFactory.Collection(NonDefaultGeographicCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: GeographyPoint p = TestData.PointG(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: GeographyPoint p = TestData.PointG(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: GeographyPoint p = TestData.PointG(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: GeographyPoint p = TestData.PointG(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: Assert.Equal(10' p.Latitude);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: Assert.Equal(20' p.Longitude);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: Assert.Equal(30' (double)p.Z);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: Assert.Equal(40' (double)p.M);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: Assert.Equal(1234' p.CoordinateSystem.EpsgId);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: p = TestData.PointG(10' 20' null' null);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: p = TestData.PointG(10' 20' null' null);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: Assert.Equal(10' p.Latitude);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: Assert.Equal(20' p.Longitude);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,CreatePoint,The following statement contains a magic number: Assert.Equal(1234' p.CoordinateSystem.EpsgId);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(10' point.Latitude);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(20' point.Longitude);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(30' point.Z);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(40' point.M);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(10' 20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(10' 20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(10' 20' 30);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(10' point.Latitude);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(20' point.Longitude);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(30' point.Z);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethod2DimensionsDefaultCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(15' 25);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethod2DimensionsDefaultCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(15' 25);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethod2DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(15' point.Latitude);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethod2DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(25' point.Longitude);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsCustomCoords,The following statement contains a magic number: CoordinateSystem coords = CoordinateSystem.Geography(4326);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsCustomCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(coords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsCustomCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(coords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsCustomCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(coords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsCustomCoords,The following statement contains a magic number: GeographyPoint point = GeographyPoint.Create(coords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsCustomCoords,The following statement contains a magic number: Assert.Equal(10' point.Latitude);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsCustomCoords,The following statement contains a magic number: Assert.Equal(20' point.Longitude);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsCustomCoords,The following statement contains a magic number: Assert.Equal(30' point.Z);
Magic Number,Microsoft.Spatial.Tests,GeographyPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPointTests.cs,TestCreateMethodAll4DimensionsCustomCoords,The following statement contains a magic number: Assert.Equal(40' point.M);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,ToStringTests,The following statement contains a magic number: Assert.Equal("GeographyPosition(latitude:10' longitude:20' z:30' m:40)"'                  new GeographyPosition(latitude: 10' longitude: 20' z: 30' m: 40).ToString());
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,ToStringTests,The following statement contains a magic number: Assert.Equal("GeographyPosition(latitude:10' longitude:20' z:30' m:40)"'                  new GeographyPosition(latitude: 10' longitude: 20' z: 30' m: 40).ToString());
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,ToStringTests,The following statement contains a magic number: Assert.Equal("GeographyPosition(latitude:10' longitude:20' z:30' m:40)"'                  new GeographyPosition(latitude: 10' longitude: 20' z: 30' m: 40).ToString());
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,ToStringTests,The following statement contains a magic number: Assert.Equal("GeographyPosition(latitude:10' longitude:20' z:30' m:40)"'                  new GeographyPosition(latitude: 10' longitude: 20' z: 30' m: 40).ToString());
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,ToStringTests,The following statement contains a magic number: Assert.Equal("GeographyPosition(latitude:10' longitude:20' z:null' m:null)"'                  new GeographyPosition(latitude: 10' longitude: 20).ToString());
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,ToStringTests,The following statement contains a magic number: Assert.Equal("GeographyPosition(latitude:10' longitude:20' z:null' m:null)"'                  new GeographyPosition(latitude: 10' longitude: 20).ToString());
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualToNull,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualToNull,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualToNull,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualToNull,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: object position2 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: object position2 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: object position2 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: object position2 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,ConstructorVariationHasSameEffect,The following statement contains a magic number: Assert.Equal(new GeographyPosition(10' 20' null' null)' new GeographyPosition(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,ConstructorVariationHasSameEffect,The following statement contains a magic number: Assert.Equal(new GeographyPosition(10' 20' null' null)' new GeographyPosition(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,ConstructorVariationHasSameEffect,The following statement contains a magic number: Assert.Equal(new GeographyPosition(10' 20' null' null)' new GeographyPosition(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,ConstructorVariationHasSameEffect,The following statement contains a magic number: Assert.Equal(new GeographyPosition(10' 20' null' null)' new GeographyPosition(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,EqualWhenSameInstance,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,EqualWhenSameInstance,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,EqualWhenSameInstance,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,EqualWhenSameInstance,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeographyPosition position2 = new GeographyPosition(10' 20' null' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeographyPosition position2 = new GeographyPosition(10' 20' null' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeographyPosition position2 = new GeographyPosition(10' 20' null' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeometryPosition position2 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeometryPosition position2 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeometryPosition position2 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeometryPosition position2 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: GeographyPosition position1 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: Assert.Equal(2139226112' position1.GetHashCode());
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: GeographyPosition position2 = new GeographyPosition(10' 20' null' null);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: GeographyPosition position2 = new GeographyPosition(10' 20' null' null);
Magic Number,Microsoft.Spatial.Tests,GeographyPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeographyPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: Assert.Equal(48234496' position2.GetHashCode());
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GeoJsonObjectReaderTests,The following statement contains a magic number: arrayOfArrayMultipleElements = new List<object> { arrayOfOnePosition' arrayOfMultiplePositions' new List<object> { new List<object> { 67' 48.0 }' new List<object> { 78.1234' -123 }' new List<object> { 33.99' -76 } } };
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GeoJsonObjectReaderTests,The following statement contains a magic number: arrayOfArrayMultipleElements = new List<object> { arrayOfOnePosition' arrayOfMultiplePositions' new List<object> { new List<object> { 67' 48.0 }' new List<object> { 78.1234' -123 }' new List<object> { 33.99' -76 } } };
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GeoJsonObjectReaderTests,The following statement contains a magic number: arrayOfArrayMultipleElements = new List<object> { arrayOfOnePosition' arrayOfMultiplePositions' new List<object> { new List<object> { 67' 48.0 }' new List<object> { 78.1234' -123 }' new List<object> { 33.99' -76 } } };
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GeoJsonObjectReaderTests,The following statement contains a magic number: arrayOfArrayMultipleElements = new List<object> { arrayOfOnePosition' arrayOfMultiplePositions' new List<object> { new List<object> { 67' 48.0 }' new List<object> { 78.1234' -123 }' new List<object> { 33.99' -76 } } };
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GeoJsonObjectReaderTests,The following statement contains a magic number: arrayOfArrayMultipleElements = new List<object> { arrayOfOnePosition' arrayOfMultiplePositions' new List<object> { new List<object> { 67' 48.0 }' new List<object> { 78.1234' -123 }' new List<object> { 33.99' -76 } } };
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GeoJsonObjectReaderTests,The following statement contains a magic number: arrayOfArrayMultipleElements = new List<object> { arrayOfOnePosition' arrayOfMultiplePositions' new List<object> { new List<object> { 67' 48.0 }' new List<object> { 78.1234' -123 }' new List<object> { 33.99' -76 } } };
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnCoordinatesArrayElementPrimitiveNotDouble_MultipleDimension,The following statement contains a magic number: var coordinates = new object[] {new object[] {new object[] {1.0' 2.0}' new object[] {3.0' "stingVal"}}};
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnCoordinatesArrayElementPrimitiveNotDouble_MultipleDimension,The following statement contains a magic number: var coordinates = new object[] {new object[] {new object[] {1.0' 2.0}' new object[] {3.0' "stingVal"}}};
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnInvalidGeoJSONTypeName_NotAString,The following statement contains a magic number: var input = new Dictionary<string' object>(){{"type"' 55}};
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnInvalidGeoJSONTypeName_NotAString,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() => ExecuteSendToPipeline(input)' Strings.JsonReaderExtensions_CannotReadPropertyValueAsString(55' "type"));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnNullArrayElement_X,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Point' new List<object> {null' 75})'                                                                      Strings.GeoJsonReader_InvalidNullElement);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnNullArrayElement_Y,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Point' new List<object> {32.4' null})'                                                                      Strings.GeoJsonReader_InvalidNullElement);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionLessThan2Elements_MultipleDimensions,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}' new List<object> {22}}})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionLessThan2Elements_MultipleDimensions,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}' new List<object> {22}}})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionLessThan2Elements_MultipleDimensions,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}' new List<object> {22}}})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionLessThan2Elements_SingleDimension,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Point' new List<object> {1.1})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_MultipleDimensions,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}}' new List<object> {new List<object> {22' 88' -121.5' 91.2' 10' 102}}})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_MultipleDimensions,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}}' new List<object> {new List<object> {22' 88' -121.5' 91.2' 10' 102}}})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_MultipleDimensions,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}}' new List<object> {new List<object> {22' 88' -121.5' 91.2' 10' 102}}})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_MultipleDimensions,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}}' new List<object> {new List<object> {22' 88' -121.5' 91.2' 10' 102}}})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_MultipleDimensions,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}}' new List<object> {new List<object> {22' 88' -121.5' 91.2' 10' 102}}})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_MultipleDimensions,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}}' new List<object> {new List<object> {22' 88' -121.5' 91.2' 10' 102}}})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_MultipleDimensions,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}}' new List<object> {new List<object> {22' 88' -121.5' 91.2' 10' 102}}})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_MultipleDimensions,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Polygon' new List<object> {new List<object> {new List<object> {127.3' -88}}' new List<object> {new List<object> {22' 88' -121.5' 91.2' 10' 102}}})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_SingleDimension,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Point' new List<object> {1.1' 5' -32' 99.11' 6})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_SingleDimension,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Point' new List<object> {1.1' 5' -32' 99.11' 6})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_SingleDimension,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Point' new List<object> {1.1' 5' -32' 99.11' 6})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_SingleDimension,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Point' new List<object> {1.1' 5' -32' 99.11' 6})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnPositionMoreThan4Elements_SingleDimension,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ParseErrorException>(() =>                                                                      ExecuteSendToPipeline(SpatialType.Point' new List<object> {1.1' 5' -32' 99.11' 6})'                                                                      Strings.GeoJsonReader_InvalidPosition);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_X,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {new List<object> {19.8888' -22' 190}' -90' 44.2' 77.9});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_X,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {new List<object> {19.8888' -22' 190}' -90' 44.2' 77.9});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_X,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {new List<object> {19.8888' -22' 190}' -90' 44.2' 77.9});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_X,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {new List<object> {19.8888' -22' 190}' -90' 44.2' 77.9});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_X,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {new List<object> {19.8888' -22' 190}' -90' 44.2' 77.9});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_X,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {new List<object> {19.8888' -22' 190}' -90' 44.2' 77.9});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_Z,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {-83.1' 14.2' 97.9' new List<object> {23' 11.2' -142}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_Z,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {-83.1' 14.2' 97.9' new List<object> {23' 11.2' -142}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_Z,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {-83.1' 14.2' 97.9' new List<object> {23' 11.2' -142}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_Z,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {-83.1' 14.2' 97.9' new List<object> {23' 11.2' -142}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_Z,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {-83.1' 14.2' 97.9' new List<object> {23' 11.2' -142}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPoint_Z,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.Point' new List<object> {-83.1' 14.2' 97.9' new List<object> {23' 11.2' -142}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPosition_MultiPolygon,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.MultiPolygon' new List<object> {arrayOfArrayOneElement' arrayOfArrayMultipleElements' new List<object> {new List<object> {new List<object> {67' 48.0}' new List<object> {78.1234' -123' new List<object> {1' 2}}' new List<object> {33.99' -76}}}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPosition_MultiPolygon,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.MultiPolygon' new List<object> {arrayOfArrayOneElement' arrayOfArrayMultipleElements' new List<object> {new List<object> {new List<object> {67' 48.0}' new List<object> {78.1234' -123' new List<object> {1' 2}}' new List<object> {33.99' -76}}}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPosition_MultiPolygon,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.MultiPolygon' new List<object> {arrayOfArrayOneElement' arrayOfArrayMultipleElements' new List<object> {new List<object> {new List<object> {67' 48.0}' new List<object> {78.1234' -123' new List<object> {1' 2}}' new List<object> {33.99' -76}}}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPosition_MultiPolygon,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.MultiPolygon' new List<object> {arrayOfArrayOneElement' arrayOfArrayMultipleElements' new List<object> {new List<object> {new List<object> {67' 48.0}' new List<object> {78.1234' -123' new List<object> {1' 2}}' new List<object> {33.99' -76}}}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPosition_MultiPolygon,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.MultiPolygon' new List<object> {arrayOfArrayOneElement' arrayOfArrayMultipleElements' new List<object> {new List<object> {new List<object> {67' 48.0}' new List<object> {78.1234' -123' new List<object> {1' 2}}' new List<object> {33.99' -76}}}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPosition_MultiPolygon,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.MultiPolygon' new List<object> {arrayOfArrayOneElement' arrayOfArrayMultipleElements' new List<object> {new List<object> {new List<object> {67' 48.0}' new List<object> {78.1234' -123' new List<object> {1' 2}}' new List<object> {33.99' -76}}}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedArrayInPosition_MultiPolygon,The following statement contains a magic number: TestErrorOnUnexpectedArray(SpatialType.MultiPolygon' new List<object> {arrayOfArrayOneElement' arrayOfArrayMultipleElements' new List<object> {new List<object> {new List<object> {67' 48.0}' new List<object> {78.1234' -123' new List<object> {1' 2}}' new List<object> {33.99' -76}}}});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedNumericInLineString,The following statement contains a magic number: TestErrorOnUnexpectedNumeric(SpatialType.LineString' new List<object> {-12.3' position3D' position3D});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedNumericInMultiLineString,The following statement contains a magic number: TestErrorOnUnexpectedNumeric(SpatialType.MultiLineString' new List<object> {arrayOfOnePosition' arrayOfMultiplePositions' -103});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedNumericInMultiPoint,The following statement contains a magic number: TestErrorOnUnexpectedNumeric(SpatialType.MultiPoint' new List<object> {position2D' position3D' 33});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedNumericInMultiPolygon_FirstElement,The following statement contains a magic number: TestErrorOnUnexpectedNumeric(SpatialType.MultiPolygon' new List<object> {98.22222' arrayOfArrayMultipleElements});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedNumericInMultiPolygon_LastElement,The following statement contains a magic number: TestErrorOnUnexpectedNumeric(SpatialType.MultiPolygon' new List<object> {arrayOfArrayOneElement' 47.12999});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,ErrorOnUnexpectedNumericInPolygon,The following statement contains a magic number: TestErrorOnUnexpectedNumeric(SpatialType.Polygon' new List<object> {92.0' arrayOfMultiplePositions' arrayOfMultiplePositions});
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GeoJsonSimpleRoundTripTest,The following statement contains a magic number: var position = new GeographyPosition(12' 34' -12' -34);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GeoJsonSimpleRoundTripTest,The following statement contains a magic number: var position = new GeographyPosition(12' 34' -12' -34);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GeoJsonSimpleRoundTripTest,The following statement contains a magic number: var position = new GeographyPosition(12' 34' -12' -34);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GeoJsonSimpleRoundTripTest,The following statement contains a magic number: var position = new GeographyPosition(12' 34' -12' -34);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GeoJsonSimpleRoundTripTest,The following statement contains a magic number: var coordinateSystem = CoordinateSystem.Geography(54321);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,SendToPipelineCollectionEmpty,The following statement contains a magic number: var expectedPipeline = GetExpectedCollectionPipeline(                  new Func<List<object>' bool' ICommonLoggingPipeline>[0]'                   new List<object>[0]'                                  true'                  true'                  CoordinateSystem.Geography(54321));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,SendToPipelineCollectionWhichResetsCrsInSubType,The following statement contains a magic number: var expectedPipeline = GetExpectedCollectionPipeline(                  new Func<List<object>' bool' ICommonLoggingPipeline>[]                      {                          (positions' isGeography) => GetExpectedPipeline(                              SpatialType.LineString'                              isGeography ? CoordinateSystem.Geography(54321) : CoordinateSystem.Geometry(54321)'                              isGeography'                              (pipeline) => WritePositionArrayToPipeline(positions' pipeline))'                          (positions' isGeography) => GetExpectedPipeline(                              SpatialType.Polygon'                              isGeography ? CoordinateSystem.Geography(54321) : CoordinateSystem.Geometry(54321)'                              isGeography'                              (pipeline) => WriteArrayOfPositionArrayToPipeline(positions' pipeline))                      }'                  new[] {arrayOfMultiplePositions' arrayOfArrayMultipleElements}'                  true'                  true'                  CoordinateSystem.Geography(54321));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,SendToPipelineCollectionWhichResetsCrsInSubType,The following statement contains a magic number: var expectedPipeline = GetExpectedCollectionPipeline(                  new Func<List<object>' bool' ICommonLoggingPipeline>[]                      {                          (positions' isGeography) => GetExpectedPipeline(                              SpatialType.LineString'                              isGeography ? CoordinateSystem.Geography(54321) : CoordinateSystem.Geometry(54321)'                              isGeography'                              (pipeline) => WritePositionArrayToPipeline(positions' pipeline))'                          (positions' isGeography) => GetExpectedPipeline(                              SpatialType.Polygon'                              isGeography ? CoordinateSystem.Geography(54321) : CoordinateSystem.Geometry(54321)'                              isGeography'                              (pipeline) => WriteArrayOfPositionArrayToPipeline(positions' pipeline))                      }'                  new[] {arrayOfMultiplePositions' arrayOfArrayMultipleElements}'                  true'                  true'                  CoordinateSystem.Geography(54321));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,SendToPipelineCollectionWhichResetsCrsInSubType,The following statement contains a magic number: var expectedPipeline = GetExpectedCollectionPipeline(                  new Func<List<object>' bool' ICommonLoggingPipeline>[]                      {                          (positions' isGeography) => GetExpectedPipeline(                              SpatialType.LineString'                              isGeography ? CoordinateSystem.Geography(54321) : CoordinateSystem.Geometry(54321)'                              isGeography'                              (pipeline) => WritePositionArrayToPipeline(positions' pipeline))'                          (positions' isGeography) => GetExpectedPipeline(                              SpatialType.Polygon'                              isGeography ? CoordinateSystem.Geography(54321) : CoordinateSystem.Geometry(54321)'                              isGeography'                              (pipeline) => WriteArrayOfPositionArrayToPipeline(positions' pipeline))                      }'                  new[] {arrayOfMultiplePositions' arrayOfArrayMultipleElements}'                  true'                  true'                  CoordinateSystem.Geography(54321));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,SendToPipelineCollectionWhichResetsCrsInSubType,The following statement contains a magic number: var expectedPipeline = GetExpectedCollectionPipeline(                  new Func<List<object>' bool' ICommonLoggingPipeline>[]                      {                          (positions' isGeography) => GetExpectedPipeline(                              SpatialType.LineString'                              isGeography ? CoordinateSystem.Geography(54321) : CoordinateSystem.Geometry(54321)'                              isGeography'                              (pipeline) => WritePositionArrayToPipeline(positions' pipeline))'                          (positions' isGeography) => GetExpectedPipeline(                              SpatialType.Polygon'                              isGeography ? CoordinateSystem.Geography(54321) : CoordinateSystem.Geometry(54321)'                              isGeography'                              (pipeline) => WriteArrayOfPositionArrayToPipeline(positions' pipeline))                      }'                  new[] {arrayOfMultiplePositions' arrayOfArrayMultipleElements}'                  true'                  true'                  CoordinateSystem.Geography(54321));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,SendToPipelineCollectionWhichResetsCrsInSubType,The following statement contains a magic number: var expectedPipeline = GetExpectedCollectionPipeline(                  new Func<List<object>' bool' ICommonLoggingPipeline>[]                      {                          (positions' isGeography) => GetExpectedPipeline(                              SpatialType.LineString'                              isGeography ? CoordinateSystem.Geography(54321) : CoordinateSystem.Geometry(54321)'                              isGeography'                              (pipeline) => WritePositionArrayToPipeline(positions' pipeline))'                          (positions' isGeography) => GetExpectedPipeline(                              SpatialType.Polygon'                              isGeography ? CoordinateSystem.Geography(54321) : CoordinateSystem.Geometry(54321)'                              isGeography'                              (pipeline) => WriteArrayOfPositionArrayToPipeline(positions' pipeline))                      }'                  new[] {arrayOfMultiplePositions' arrayOfArrayMultipleElements}'                  true'                  true'                  CoordinateSystem.Geography(54321));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,SendToPipeline_CrsSpecified,The following statement contains a magic number: geoPipeline.SetCoordinateSystem(CoordinateSystem.Geometry(54321));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,SendToPipeline_CrsSpecified,The following statement contains a magic number: geoPipeline.BeginFigure(new GeometryPosition(1' 2' null' null));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,SendToPipeline_CrsSpecified,The following statement contains a magic number: var actualPipeline = ExecuteSendToPipeline(SpatialType.Point' new List<object> {1.0' 2.0}' false' crsMembers);
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,GetGeoJson,The following statement contains a magic number: expectedPropertyCount = 2;
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,WritePositionToPipeline,The following statement contains a magic number: var z = position.Count > 2 && position[2] != null ? (double?)Convert.ToDouble(position[2]) : null;
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,WritePositionToPipeline,The following statement contains a magic number: var z = position.Count > 2 && position[2] != null ? (double?)Convert.ToDouble(position[2]) : null;
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,WritePositionToPipeline,The following statement contains a magic number: var z = position.Count > 2 && position[2] != null ? (double?)Convert.ToDouble(position[2]) : null;
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,WritePositionToPipeline,The following statement contains a magic number: var m = position.Count == 4 && position[3] != null ? (double?)Convert.ToDouble(position[3]) : null;
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,WritePositionToPipeline,The following statement contains a magic number: var m = position.Count == 4 && position[3] != null ? (double?)Convert.ToDouble(position[3]) : null;
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectReaderTests.cs,WritePositionToPipeline,The following statement contains a magic number: var m = position.Count == 4 && position[3] != null ? (double?)Convert.ToDouble(position[3]) : null;
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint2D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint2D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint2D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint2D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint3D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint3D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint3D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint3D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint3D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint3D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4D,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4DNullZ,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' null' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4DNullZ,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' null' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4DNullZ,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' null' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4DNullZ,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' null' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4DNullZ,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' null' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint4DNullZ,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' 40);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' null' 40.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint2DNullZM,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint2DNullZM,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint2DNullZM,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint2DNullZM,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint3DNullM,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint3DNullM,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint3DNullM,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint3DNullM,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint3DNullM,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePoint3DNullM,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' 30' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0' 30.0));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringSinglePoint,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString' Array(10.0' 20.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringSinglePoint,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString' Array(10.0' 20.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringSinglePoint,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString' Array(10.0' 20.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringSinglePoint,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString' Array(10.0' 20.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteLineStringMultiplePoints,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' -1.1' null);                  g.LineTo(20' -30' 4.99' null);                  g.LineTo(40.5' 25' null' null);                  g.LineTo(26' 22' 87' -156);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.LineString'                  Array(10.0' 20.0' -1.1)'                  Array(20.0' -30.0' 4.99)'                  Array(40.5' 25.0)'                  Array(26.0' 22.0' 87.0' -156.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonSingleFigure,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      // ring 1                      Array(10.0' 20.0)'          // point 1                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WritePolygonMultipleFigures,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10' -20' null' null);                  g.LineTo(-20' -30' null' null);                  g.LineTo(-30' -40' null' null);                  g.LineTo(-10' -20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();              }' GetExpectedGeoJson(SpatialType.Polygon'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0)'                      Array(30.0' 40.0)'                      Array(10.0' 20.0))'                  Array(                      Array(-10.0' -20.0)'                      Array(-20.0' -30.0)'                      Array(-30.0' -40.0)'                      Array(-10.0' -20.0))'                  Array(                      Array(-10.5' -20.5)'                      Array(-20.5' -30.5)'                      Array(-30.5' -40.5)'                      Array(-10.5' -20.5))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint' Array(10.0' 20.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint' Array(10.0' 20.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint' Array(10.0' 20.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint' Array(10.0' 20.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(-30' -40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(80' 90' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint'                  Array(10.0' 20.0)'                  Array(-30.0' -40.0)'                  Array(80.0' 90.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(-30' -40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(80' 90' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint'                  Array(10.0' 20.0)'                  Array(-30.0' -40.0)'                  Array(80.0' 90.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(-30' -40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(80' 90' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint'                  Array(10.0' 20.0)'                  Array(-30.0' -40.0)'                  Array(80.0' 90.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(-30' -40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(80' 90' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint'                  Array(10.0' 20.0)'                  Array(-30.0' -40.0)'                  Array(80.0' 90.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(-30' -40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(80' 90' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint'                  Array(10.0' 20.0)'                  Array(-30.0' -40.0)'                  Array(80.0' 90.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(-30' -40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(80' 90' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint'                  Array(10.0' 20.0)'                  Array(-30.0' -40.0)'                  Array(80.0' 90.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(-30' -40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(80' 90' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint'                  Array(10.0' 20.0)'                  Array(-30.0' -40.0)'                  Array(80.0' 90.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(-30' -40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(80' 90' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint'                  Array(10.0' 20.0)'                  Array(-30.0' -40.0)'                  Array(80.0' 90.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(-30' -40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(80' 90' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint'                  Array(10.0' 20.0)'                  Array(-30.0' -40.0)'                  Array(80.0' 90.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(-30' -40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(80' 90' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint'                  Array(10.0' 20.0)'                  Array(-30.0' -40.0)'                  Array(80.0' 90.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(-30' -40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(80' 90' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint'                  Array(10.0' 20.0)'                  Array(-30.0' -40.0)'                  Array(80.0' 90.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPointMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(-30' -40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(80' 90' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPoint'                  Array(10.0' 20.0)'                  Array(-30.0' -40.0)'                  Array(80.0' 90.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                  g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                  Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiLineStringMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiLineString'                   Array(                      Array(10.0' 20.0)'                      Array(20.0' 30.0))'                  Array(                      Array(30.0' 40.0)'                      Array(40.0' 50.0))'                  Array(                      Array(-40.0' 50.0)'                      Array(60.0' -70.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteMultiPolygonMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(60' 70' null' null);                  g.LineTo(80' 90' null' null);                  g.LineTo(60' 70' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.MultiPolygon'                   Array(              // polygon 1                      Array(          // ring 1                          Array(60.0' 70.0)'                          Array(80.0' 90.0)'                          Array(60.0' 70.0)))'                  Array(              // polygon 2                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0))'                      Array(          // ring 2                          Array(-10.5' -20.5)'                          Array(-20.5' -30.5)'                          Array(-30.5' -40.5)'                          Array(-10.5' -20.5)))'                  Array(              // polygon 3                      Array(          // ring 1                          Array(10.0' 20.0)'                          Array(20.0' 30.0)'                          Array(30.0' 40.0)'                          Array(10.0' 20.0)))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionSingleChild,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                  g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                  g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionMultipleChildren,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiLineString);                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(30' 40' null' null);                  g.LineTo(40' 50' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.LineString);                  g.BeginFigure(-40' 50' null' null);                  g.LineTo(60' -70' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.MultiPoint);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(20' 30' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(30' 40' null' null);                  g.EndFigure();                  g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.MultiLineString'                      Array(                          Array(10.0' 20.0)'                          Array(20.0' 30.0))'                      Array(                          Array(30.0' 40.0)'                          Array(40.0' 50.0))'                      Array(                          Array(-40.0' 50.0)'                          Array(60.0' -70.0)))'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.MultiPoint'                      Array(20.0' 30.0)'                      Array(30.0' 40.0))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteCollectionWithCollection,The following statement contains a magic number: WriteGeoJsonTest(g =>              {                  g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.Point);                  g.BeginFigure(10' 20' null' null);                  g.EndFigure();                  g.EndGeo();                    g.BeginGeo(SpatialType.Collection);                    g.BeginGeo(SpatialType.MultiPolygon);                    g.BeginGeo(SpatialType.Polygon);                    g.BeginFigure(10' 20' null' null);                  g.LineTo(20' 30' null' null);                  g.LineTo(30' 40' null' null);                  g.LineTo(10' 20' null' null);                  g.EndFigure();                    g.BeginFigure(-10.5' -20.5' null' null);                  g.LineTo(-20.5' -30.5' null' null);                  g.LineTo(-30.5' -40.5' null' null);                  g.LineTo(-10.5' -20.5' null' null);                  g.EndFigure();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();                    g.EndGeo();              }'              GetExpectedGeoJson(SpatialType.Collection'                  GetExpectedGeoJson(SpatialType.Point' 10.0' 20.0)'                  GetExpectedGeoJson(SpatialType.Collection'                      GetExpectedGeoJson(SpatialType.MultiPolygon'                          Array(                              Array(                                  Array(10.0' 20.0)'                                  Array(20.0' 30.0)'                                  Array(30.0' 40.0)'                                  Array(10.0' 20.0))'                              Array(                                  Array(-10.5' -20.5)'                                  Array(-20.5' -30.5)'                                  Array(-30.5' -40.5)'                                  Array(-10.5' -20.5)))))));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteGeoJsonTest,The following statement contains a magic number: WriteGeoJsonTest(pipelineCalls' expectedJsonObject' true' CoordinateSystem.Geometry(1234));
Magic Number,Microsoft.Spatial.Tests,GeoJsonObjectWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeoJsonObjectWriterTests.cs,WriteGeoJsonTest,The following statement contains a magic number: WriteGeoJsonTest(pipelineCalls' expectedJsonObject' false' CoordinateSystem.Geography(4321));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildCollection,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsCollection(                  g => g.VerifyAsPoint(new PositionData(10' 20' 30' 40))'                  g => g.VerifyAsPolygon(new[]                                               {                                                   new PositionData(10' 20' 30' 40)'                                                   new PositionData(10' 30' 30' 40)'                                                   new PositionData(10' 40' 30' 40)'                                                   new PositionData(10' 20' 30' 40)'                                               }));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiLineString,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiLineString(new[]                                                                           {                                                                               new PositionData(10' 20' 30' 40)'                                                                               new PositionData(10' 30' 30' 40)                                                                           }'                                                                       new[]                                                                           {                                                                               new PositionData(10' 30' 30' 40)'                                                                               new PositionData(10' 20' 30' 40)                                                                           });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPoint,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPoint(new PositionData(10' 20' 30' 40)' new PositionData(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildMultiPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsMultiPolygon(new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                }'                                                                        }'                                                                    new[]                                                                        {                                                                            new[]                                                                                {                                                                                    new PositionData(10' 30' 30' 40)'                                                                                    new PositionData(10' 20' 30' 40)'                                                                                    new PositionData(10' 40' 30' 40)'                                                                                    new PositionData(10' 30' 30' 40)'                                                                                }'                                                                        });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPoint,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPoint,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPoint,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPoint,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPoint,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 30' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 40' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildPolygon,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPolygon(new[]                                                                   {                                                                       new PositionData(10' 20' 30' 40)'                                                                       new PositionData(10' 30' 30' 40)'                                                                       new PositionData(10' 40' 30' 40)'                                                                       new PositionData(10' 20' 30' 40)                                                                   });
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10 * i' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10 * i' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10 * i' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.BeginFigure(new GeometryPosition(10 * i' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildTwoPoints,The following statement contains a magic number: i < 4
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPoint(new PositionData(30' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPoint(new PositionData(30' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPoint(new PositionData(30' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryBuilderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryBuilderTests.cs,BuildTwoPoints,The following statement contains a magic number: this.builder.ConstructedGeometry.VerifyAsPoint(new PositionData(30' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,TestUsageOfValidator,The following statement contains a magic number: Action action = () => GeometryFactory.Polygon().Ring(10' 10).Build();
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,TestUsageOfValidator,The following statement contains a magic number: Action action = () => GeometryFactory.Polygon().Ring(10' 10).Build();
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildWithCommand,The following statement contains a magic number: var point = GeometryFactory.Point(10' 10).Build();
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildWithCommand,The following statement contains a magic number: var point = GeometryFactory.Point(10' 10).Build();
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildWithCommand,The following statement contains a magic number: point.VerifyAsPoint(new PositionData(10' 10));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildWithCommand,The following statement contains a magic number: point.VerifyAsPoint(new PositionData(10' 10));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: GeometryPoint p = GeometryFactory.Point(NonDefaultGeometricCoords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: GeometryPoint p = GeometryFactory.Point(NonDefaultGeometricCoords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: GeometryPoint p = GeometryFactory.Point(NonDefaultGeometricCoords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: GeometryPoint p = GeometryFactory.Point(NonDefaultGeometricCoords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeometryFactory.Point(NonDefaultGeometricCoords' 10' 20);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeometryFactory.Point(NonDefaultGeometricCoords' 10' 20);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeometryFactory.Point(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeometryFactory.Point(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeometryFactory.Point(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeometryFactory.Point(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeometryFactory.Point(10' 20);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeometryFactory.Point(10' 20);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeometryFactory.Point().LineTo(10' 20);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p = GeometryFactory.Point().LineTo(10' 20);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPoint,The following statement contains a magic number: p.VerifyAsPoint(new PositionData(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeometryLineString ls = GeometryFactory.LineString(NonDefaultGeometricCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeometryLineString ls = GeometryFactory.LineString(NonDefaultGeometricCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeometryLineString ls = GeometryFactory.LineString(NonDefaultGeometricCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeometryLineString ls = GeometryFactory.LineString(NonDefaultGeometricCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeometryLineString ls = GeometryFactory.LineString(NonDefaultGeometricCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeometryLineString ls = GeometryFactory.LineString(NonDefaultGeometricCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeometryLineString ls = GeometryFactory.LineString(NonDefaultGeometricCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: GeometryLineString ls = GeometryFactory.LineString(NonDefaultGeometricCoords' 10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(NonDefaultGeometricCoords' 10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(NonDefaultGeometricCoords' 10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(NonDefaultGeometricCoords' 10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(NonDefaultGeometricCoords' 10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(10' 20' 30' 40).LineTo(20' 30' 40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20' 30' 40)' new PositionData(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString().LineTo(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString().LineTo(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString().LineTo(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls = GeometryFactory.LineString().LineTo(10' 20).LineTo(20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildLineString,The following statement contains a magic number: ls.VerifyAsLineString(new PositionData(10' 20)' new PositionData(20' 30));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: GeometryPolygon poly = GeometryFactory.Polygon(NonDefaultGeometricCoords)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Ring(15' 25).LineTo(25' 35).LineTo(35' 45).LineTo(15' 25)                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40).LineTo(10' 20).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              }'              new PositionData[] {                  new PositionData(15'25)'                  new PositionData(25'35)'                  new PositionData(35'45)'                  new PositionData(15'25)              }'              new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)'                  new PositionData(40'50)'                                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly = GeometryFactory.Polygon()                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly = GeometryFactory.Polygon()                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly = GeometryFactory.Polygon()                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly = GeometryFactory.Polygon()                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly = GeometryFactory.Polygon()                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly = GeometryFactory.Polygon()                  .Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildPolygon,The following statement contains a magic number: poly.VerifyAsPolygon(new PositionData[] {                  new PositionData(10'20)'                  new PositionData(20'30)'                  new PositionData(30'40)'                  new PositionData(10'20)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: GeometryMultiPoint mp = GeometryFactory.MultiPoint(NonDefaultGeometricCoords).Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: GeometryMultiPoint mp = GeometryFactory.MultiPoint(NonDefaultGeometricCoords).Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: GeometryMultiPoint mp = GeometryFactory.MultiPoint(NonDefaultGeometricCoords).Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: GeometryMultiPoint mp = GeometryFactory.MultiPoint(NonDefaultGeometricCoords).Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: GeometryMultiPoint mp = GeometryFactory.MultiPoint(NonDefaultGeometricCoords).Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: GeometryMultiPoint mp = GeometryFactory.MultiPoint(NonDefaultGeometricCoords).Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeometryFactory.MultiPoint().Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeometryFactory.MultiPoint().Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeometryFactory.MultiPoint().Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeometryFactory.MultiPoint().Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeometryFactory.MultiPoint().Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeometryFactory.MultiPoint().Point(10' 20).Point(20' 30).Point(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' new PositionData(20' 30)' new PositionData(30' 40));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeometryFactory.MultiPoint().Point(10' 20).Point();
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp = GeometryFactory.MultiPoint().Point(10' 20).Point();
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' null);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPoint,The following statement contains a magic number: mp.VerifyAsMultiPoint(new PositionData(10' 20)' null);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeometryMultiLineString mls = GeometryFactory.MultiLineString(NonDefaultGeometricCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeometryMultiLineString mls = GeometryFactory.MultiLineString(NonDefaultGeometricCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeometryMultiLineString mls = GeometryFactory.MultiLineString(NonDefaultGeometricCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeometryMultiLineString mls = GeometryFactory.MultiLineString(NonDefaultGeometricCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeometryMultiLineString mls = GeometryFactory.MultiLineString(NonDefaultGeometricCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeometryMultiLineString mls = GeometryFactory.MultiLineString(NonDefaultGeometricCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeometryMultiLineString mls = GeometryFactory.MultiLineString(NonDefaultGeometricCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeometryMultiLineString mls = GeometryFactory.MultiLineString(NonDefaultGeometricCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeometryMultiLineString mls = GeometryFactory.MultiLineString(NonDefaultGeometricCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeometryMultiLineString mls = GeometryFactory.MultiLineString(NonDefaultGeometricCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeometryMultiLineString mls = GeometryFactory.MultiLineString(NonDefaultGeometricCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: GeometryMultiLineString mls = GeometryFactory.MultiLineString(NonDefaultGeometricCoords)                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40)                  .LineString(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                  new PositionData(20' 30)'                   new PositionData(30' 40)'              }'              new PositionData[]               {                  new PositionData(20' 30)'                   new PositionData(30' 40)'                   new PositionData(40' 50)              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls = GeometryFactory.MultiLineString()                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls = GeometryFactory.MultiLineString()                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls = GeometryFactory.MultiLineString()                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls = GeometryFactory.MultiLineString()                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls = GeometryFactory.MultiLineString()                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls = GeometryFactory.MultiLineString()                  .LineString(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                   new PositionData(20' 30)'                   new PositionData(30' 40)'              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                   new PositionData(20' 30)'                   new PositionData(30' 40)'              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                   new PositionData(20' 30)'                   new PositionData(30' 40)'              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                   new PositionData(20' 30)'                   new PositionData(30' 40)'              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                   new PositionData(20' 30)'                   new PositionData(30' 40)'              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiLineString,The following statement contains a magic number: mls.VerifyAsMultiLineString(new PositionData[]               {                  new PositionData(10' 20)'                   new PositionData(20' 30)'                   new PositionData(30' 40)'              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeometryMultiPolygon mp = GeometryFactory.MultiPolygon(NonDefaultGeometricCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeometryMultiPolygon mp = GeometryFactory.MultiPolygon(NonDefaultGeometricCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeometryMultiPolygon mp = GeometryFactory.MultiPolygon(NonDefaultGeometricCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeometryMultiPolygon mp = GeometryFactory.MultiPolygon(NonDefaultGeometricCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeometryMultiPolygon mp = GeometryFactory.MultiPolygon(NonDefaultGeometricCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeometryMultiPolygon mp = GeometryFactory.MultiPolygon(NonDefaultGeometricCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeometryMultiPolygon mp = GeometryFactory.MultiPolygon(NonDefaultGeometricCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeometryMultiPolygon mp = GeometryFactory.MultiPolygon(NonDefaultGeometricCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeometryMultiPolygon mp = GeometryFactory.MultiPolygon(NonDefaultGeometricCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeometryMultiPolygon mp = GeometryFactory.MultiPolygon(NonDefaultGeometricCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeometryMultiPolygon mp = GeometryFactory.MultiPolygon(NonDefaultGeometricCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: GeometryMultiPolygon mp = GeometryFactory.MultiPolygon(NonDefaultGeometricCoords)                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40)                  .Polygon().Ring(20' 30).LineTo(30' 40).LineTo(40' 50);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              }'              new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(40' 50)'                      new PositionData(20' 30)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp = GeometryFactory.MultiPolygon()                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp = GeometryFactory.MultiPolygon()                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp = GeometryFactory.MultiPolygon()                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp = GeometryFactory.MultiPolygon()                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp = GeometryFactory.MultiPolygon()                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp = GeometryFactory.MultiPolygon()                  .Polygon().Ring(10' 20).LineTo(20' 30).LineTo(30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildMultiPolygon,The following statement contains a magic number: mp.VerifyAsMultiPolygon(new PositionData[][]              {                  new PositionData[]                  {                      new PositionData(10' 20)'                      new PositionData(20' 30)'                      new PositionData(30' 40)'                      new PositionData(10' 20)'                  }              });
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: GeometryCollection c = GeometryFactory.Collection(NonDefaultGeometricCoords)                  .MultiPoint().Point(5' 5).Point(10' 10)                  .LineString(0' 0).LineTo(0' 5)                  .MultiPolygon()                      .Polygon().Ring(-5' -5).LineTo(0' -5).LineTo(0' -2)                      .Polygon().Ring(-10' -10).LineTo(-5' -10).LineTo(-5' -7)                  .Collection()                      .Point(5' 5);
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryFactoryTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryFactoryTests.cs,BuildCollection,The following statement contains a magic number: c.VerifyAsCollection(                  (mp) => mp.VerifyAsMultiPoint(new PositionData(5' 5)' new PositionData(10' 10))'                  (ls) => ls.VerifyAsLineString(new PositionData(0' 0)' new PositionData(0' 5))'                  (mp) => mp.VerifyAsMultiPolygon(                      new PositionData[][] {                           new PositionData[] { new PositionData(-5'-5)' new PositionData(0'-5)' new PositionData(0' -2)' new PositionData(-5'-5) }}'                      new PositionData[][]                {                          new PositionData[] { new PositionData(-10'-10)' new PositionData(-5'-10)' new PositionData(-5' -7)' new PositionData(-10'-10) }})'                  (col) => col.VerifyAsCollection(                      (p) => p.VerifyAsPoint(new PositionData(5' 5))));
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(10' point.X);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(20' point.Y);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(30' point.Z);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethodAll4DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(40' point.M);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: CoordinateSystem coords = CoordinateSystem.Geometry(12);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(10' 20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(10' 20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(10' 20' 30);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(10' point.X);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(20' point.Y);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(30' point.Z);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod2DimensionsDefaultCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(15' 25);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod2DimensionsDefaultCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(15' 25);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod2DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(15' point.X);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod2DimensionsDefaultCoords,The following statement contains a magic number: Assert.Equal(25' point.Y);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsCustomCoords,The following statement contains a magic number: CoordinateSystem coords = CoordinateSystem.Geometry(12);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsCustomCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(coords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsCustomCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(coords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsCustomCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(coords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsCustomCoords,The following statement contains a magic number: GeometryPoint point = GeometryPoint.Create(coords' 10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsCustomCoords,The following statement contains a magic number: Assert.Equal(10' point.X);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsCustomCoords,The following statement contains a magic number: Assert.Equal(20' point.Y);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsCustomCoords,The following statement contains a magic number: Assert.Equal(30' point.Z);
Magic Number,Microsoft.Spatial.Tests,GeometryPointTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPointTests.cs,TestCreateMethod3DimensionsCustomCoords,The following statement contains a magic number: Assert.Equal(40' point.M);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,ToStringTests,The following statement contains a magic number: Assert.Equal("GeometryPosition(10' 20' 30' 40)"'                  new GeometryPosition(10' 20' 30' 40).ToString());
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,ToStringTests,The following statement contains a magic number: Assert.Equal("GeometryPosition(10' 20' 30' 40)"'                  new GeometryPosition(10' 20' 30' 40).ToString());
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,ToStringTests,The following statement contains a magic number: Assert.Equal("GeometryPosition(10' 20' 30' 40)"'                  new GeometryPosition(10' 20' 30' 40).ToString());
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,ToStringTests,The following statement contains a magic number: Assert.Equal("GeometryPosition(10' 20' 30' 40)"'                  new GeometryPosition(10' 20' 30' 40).ToString());
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,ToStringTests,The following statement contains a magic number: Assert.Equal("GeometryPosition(10' 20' null' null)"'                  new GeometryPosition(10' 20).ToString());
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,ToStringTests,The following statement contains a magic number: Assert.Equal("GeometryPosition(10' 20' null' null)"'                  new GeometryPosition(10' 20).ToString());
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualToNull,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualToNull,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualToNull,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualToNull,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: object position2 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: object position2 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: object position2 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,EqualWhenEverythingMatches,The following statement contains a magic number: object position2 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,ConstructorVariationHasSameEffect,The following statement contains a magic number: Assert.Equal(new GeometryPosition(10' 20' null' null)' new GeometryPosition(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,ConstructorVariationHasSameEffect,The following statement contains a magic number: Assert.Equal(new GeometryPosition(10' 20' null' null)' new GeometryPosition(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,ConstructorVariationHasSameEffect,The following statement contains a magic number: Assert.Equal(new GeometryPosition(10' 20' null' null)' new GeometryPosition(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,ConstructorVariationHasSameEffect,The following statement contains a magic number: Assert.Equal(new GeometryPosition(10' 20' null' null)' new GeometryPosition(10' 20));
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,EqualWhenSameInstance,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,EqualWhenSameInstance,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,EqualWhenSameInstance,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,EqualWhenSameInstance,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeometryPosition position2 = new GeometryPosition(40' 30' 20' 10);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeometryPosition position2 = new GeometryPosition(40' 30' 20' 10);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeometryPosition position2 = new GeometryPosition(40' 30' 20' 10);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualPositions,The following statement contains a magic number: GeometryPosition position2 = new GeometryPosition(40' 30' 20' 10);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeographyPosition position2 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeographyPosition position2 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeographyPosition position2 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,NotEqualObjects,The following statement contains a magic number: GeographyPosition position2 = new GeographyPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: GeometryPosition position1 = new GeometryPosition(10' 20' 30' 40);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: Assert.Equal(2139226112' position1.GetHashCode());
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: GeometryPosition position2 = new GeometryPosition(10' 20' null' null);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: GeometryPosition position2 = new GeometryPosition(10' 20' null' null);
Magic Number,Microsoft.Spatial.Tests,GeometryPositionTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GeometryPositionTests.cs,GetHashCodeImplementation,The following statement contains a magic number: Assert.Equal(48234496' position2.GetHashCode());
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadCoordinateSystemGmlNamespace,The following statement contains a magic number: Assert.Equal(CoordinateSystem.Geography(1234)' target.CoordinateSystem);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadCoordinateSystemDefaultNamespace,The following statement contains a magic number: Assert.Equal(CoordinateSystem.Geography(1234)' target.CoordinateSystem);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReaderIgnoreNameAndDescriptionOnPolygon,The following statement contains a magic number: Assert.Equal(pipeline.Coordinates.Count' 12);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReaderIgnoreNameAndDescriptionOnMultiType,The following statement contains a magic number: Assert.Equal(pipeline.Coordinates.Count' 3);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint2D,The following statement contains a magic number: ReadPointTest(null' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint2D,The following statement contains a magic number: ReadPointTest(new PositionData(0' 0)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint2D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint2D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint2D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint2D,The following statement contains a magic number: ReadPointTest(new PositionData(-10' -10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint2D,The following statement contains a magic number: ReadPointTest(new PositionData(-10' -10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint2D,The following statement contains a magic number: ReadPointTest(new PositionData(-10' -10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint2D,The following statement contains a magic number: ReadPointTest(new PositionData(double.MinValue' double.MaxValue)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint3D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' null)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint3D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' null)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint3D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' null)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint3D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' double.MaxValue' null)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint3D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' double.MaxValue' null)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint3D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' double.MinValue' null)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint3D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' double.MinValue' null)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint4D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' 10)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint4D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' 10)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint4D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' 10)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint4D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' 10)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint4D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' double.MaxValue)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint4D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' double.MaxValue)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint4D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' double.MaxValue)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint4D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' double.MinValue)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint4D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' double.MinValue)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint4D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' 10' double.MinValue)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint4D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' null' double.MaxValue)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPoint4D,The following statement contains a magic number: ReadPointTest(new PositionData(10' 10' null' double.MaxValue)' CoordinateSystem.DefaultGeography);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyLineString,The following statement contains a magic number: ReadLineStringTest(CoordinateSystem.Geography(0)'                  new PositionData(10' 10)' new PositionData(20' 20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyLineString,The following statement contains a magic number: ReadLineStringTest(CoordinateSystem.Geography(0)'                  new PositionData(10' 10)' new PositionData(20' 20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyLineString,The following statement contains a magic number: ReadLineStringTest(CoordinateSystem.Geography(0)'                  new PositionData(10' 10)' new PositionData(20' 20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyLineString,The following statement contains a magic number: ReadLineStringTest(CoordinateSystem.Geography(0)'                  new PositionData(10' 10)' new PositionData(20' 20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyLineString,The following statement contains a magic number: ReadLineStringTest(CoordinateSystem.Geography(0)'                  new PositionData(-10' -10)' new PositionData(-20' -20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyLineString,The following statement contains a magic number: ReadLineStringTest(CoordinateSystem.Geography(0)'                  new PositionData(-10' -10)' new PositionData(-20' -20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyLineString,The following statement contains a magic number: ReadLineStringTest(CoordinateSystem.Geography(0)'                  new PositionData(-10' -10)' new PositionData(-20' -20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyLineString,The following statement contains a magic number: ReadLineStringTest(CoordinateSystem.Geography(0)'                  new PositionData(-10' -10)' new PositionData(-20' -20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPolygon,The following statement contains a magic number: ReadPolygonTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPolygon,The following statement contains a magic number: ReadPolygonTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPolygon,The following statement contains a magic number: ReadPolygonTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPolygon,The following statement contains a magic number: ReadPolygonTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPolygon,The following statement contains a magic number: ReadPolygonTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPolygon,The following statement contains a magic number: ReadPolygonTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPolygon,The following statement contains a magic number: ReadPolygonTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPolygon,The following statement contains a magic number: ReadPolygonTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPolygon,The following statement contains a magic number: ReadPolygonTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPolygon,The following statement contains a magic number: ReadPolygonTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPolygon,The following statement contains a magic number: ReadPolygonTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyPolygon,The following statement contains a magic number: ReadPolygonTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPoint,The following statement contains a magic number: ReadMultiPointTest(CoordinateSystem.Geography(0)'                  new PositionData(10' 10)' new PositionData(20' 20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPoint,The following statement contains a magic number: ReadMultiPointTest(CoordinateSystem.Geography(0)'                  new PositionData(10' 10)' new PositionData(20' 20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPoint,The following statement contains a magic number: ReadMultiPointTest(CoordinateSystem.Geography(0)'                  new PositionData(10' 10)' new PositionData(20' 20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPoint,The following statement contains a magic number: ReadMultiPointTest(CoordinateSystem.Geography(0)'                  new PositionData(10' 10)' new PositionData(20' 20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPoint,The following statement contains a magic number: ReadMultiPointTest(CoordinateSystem.Geography(0)'                  new PositionData(-10' -10)' new PositionData(-20' -20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPoint,The following statement contains a magic number: ReadMultiPointTest(CoordinateSystem.Geography(0)'                  new PositionData(-10' -10)' new PositionData(-20' -20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPoint,The following statement contains a magic number: ReadMultiPointTest(CoordinateSystem.Geography(0)'                  new PositionData(-10' -10)' new PositionData(-20' -20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPoint,The following statement contains a magic number: ReadMultiPointTest(CoordinateSystem.Geography(0)'                  new PositionData(-10' -10)' new PositionData(-20' -20));
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiLineString,The following statement contains a magic number: ReadMultiLineStringTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiLineString,The following statement contains a magic number: ReadMultiLineStringTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiLineString,The following statement contains a magic number: ReadMultiLineStringTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiLineString,The following statement contains a magic number: ReadMultiLineStringTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiLineString,The following statement contains a magic number: ReadMultiLineStringTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiLineString,The following statement contains a magic number: ReadMultiLineStringTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiLineString,The following statement contains a magic number: ReadMultiLineStringTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiLineString,The following statement contains a magic number: ReadMultiLineStringTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiLineString,The following statement contains a magic number: ReadMultiLineStringTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiLineString,The following statement contains a magic number: ReadMultiLineStringTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiLineString,The following statement contains a magic number: ReadMultiLineStringTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiLineString,The following statement contains a magic number: ReadMultiLineStringTest(CoordinateSystem.Geography(0)'                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                  new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                  new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) });
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPolygon,The following statement contains a magic number: ReadMultiPolygonTest(CoordinateSystem.Geography(0)'                  new[]                      {                      new[] { new PositionData(10' 10)' new PositionData(20' 20) }}'                  new[]                      {                                                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                      new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                      new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) }});
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPolygon,The following statement contains a magic number: ReadMultiPolygonTest(CoordinateSystem.Geography(0)'                  new[]                      {                      new[] { new PositionData(10' 10)' new PositionData(20' 20) }}'                  new[]                      {                                                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                      new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                      new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) }});
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPolygon,The following statement contains a magic number: ReadMultiPolygonTest(CoordinateSystem.Geography(0)'                  new[]                      {                      new[] { new PositionData(10' 10)' new PositionData(20' 20) }}'                  new[]                      {                                                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                      new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                      new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) }});
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPolygon,The following statement contains a magic number: ReadMultiPolygonTest(CoordinateSystem.Geography(0)'                  new[]                      {                      new[] { new PositionData(10' 10)' new PositionData(20' 20) }}'                  new[]                      {                                                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                      new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                      new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) }});
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPolygon,The following statement contains a magic number: ReadMultiPolygonTest(CoordinateSystem.Geography(0)'                  new[]                      {                      new[] { new PositionData(10' 10)' new PositionData(20' 20) }}'                  new[]                      {                                                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                      new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                      new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) }});
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPolygon,The following statement contains a magic number: ReadMultiPolygonTest(CoordinateSystem.Geography(0)'                  new[]                      {                      new[] { new PositionData(10' 10)' new PositionData(20' 20) }}'                  new[]                      {                                                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                      new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                      new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) }});
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPolygon,The following statement contains a magic number: ReadMultiPolygonTest(CoordinateSystem.Geography(0)'                  new[]                      {                      new[] { new PositionData(10' 10)' new PositionData(20' 20) }}'                  new[]                      {                                                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                      new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                      new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) }});
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPolygon,The following statement contains a magic number: ReadMultiPolygonTest(CoordinateSystem.Geography(0)'                  new[]                      {                      new[] { new PositionData(10' 10)' new PositionData(20' 20) }}'                  new[]                      {                                                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                      new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                      new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) }});
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPolygon,The following statement contains a magic number: ReadMultiPolygonTest(CoordinateSystem.Geography(0)'                  new[]                      {                      new[] { new PositionData(10' 10)' new PositionData(20' 20) }}'                  new[]                      {                                                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                      new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                      new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) }});
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPolygon,The following statement contains a magic number: ReadMultiPolygonTest(CoordinateSystem.Geography(0)'                  new[]                      {                      new[] { new PositionData(10' 10)' new PositionData(20' 20) }}'                  new[]                      {                                                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                      new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                      new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) }});
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPolygon,The following statement contains a magic number: ReadMultiPolygonTest(CoordinateSystem.Geography(0)'                  new[]                      {                      new[] { new PositionData(10' 10)' new PositionData(20' 20) }}'                  new[]                      {                                                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                      new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                      new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) }});
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadGeographyMultiPolygon,The following statement contains a magic number: ReadMultiPolygonTest(CoordinateSystem.Geography(0)'                  new[]                      {                      new[] { new PositionData(10' 10)' new PositionData(20' 20) }}'                  new[]                      {                                                  new[] { new PositionData(10' 10)' new PositionData(20' 20) }'                      new[] { new PositionData(-10' -10)' new PositionData(-20' -20) }'                      new[] { new PositionData(double.MinValue' double.MaxValue)' new PositionData(double.MinValue' double.MaxValue) }});
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ResetReader,The following statement contains a magic number: Assert.Equal(CoordinateSystem.Geography(1234)' target.CoordinateSystem);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadCollectionTest,The following statement contains a magic number: PositionData[] data = { new PositionData(10' 10)' new PositionData(20' 20) };
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadCollectionTest,The following statement contains a magic number: PositionData[] data = { new PositionData(10' 10)' new PositionData(20' 20) };
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadCollectionTest,The following statement contains a magic number: PositionData[] data = { new PositionData(10' 10)' new PositionData(20' 20) };
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadCollectionTest,The following statement contains a magic number: PositionData[] data = { new PositionData(10' 10)' new PositionData(20' 20) };
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadCollectionTest,The following statement contains a magic number: expected.BeginFigure(10' 10' null' null);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadCollectionTest,The following statement contains a magic number: expected.BeginFigure(10' 10' null' null);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadCollectionTest,The following statement contains a magic number: expected.BeginFigure(20' 20' null' null);
Magic Number,Microsoft.Spatial.Tests,GmlReaderTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlReaderTests.cs,ReadCollectionTest,The following statement contains a magic number: expected.BeginFigure(20' 20' null' null);
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePoint2D,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();              }' "gml:Point/gml:pos[text()='0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePoint2D,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();              }' "gml:Point/gml:pos[text()='0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePoint3D,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' 0.1' null));                  p.EndFigure();                  p.EndGeography();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePoint3D,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' 0.1' null));                  p.EndFigure();                  p.EndGeography();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePoint3D,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' 0.1' null));                  p.EndFigure();                  p.EndGeography();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePoint4D,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' 0.1' 0.1));                  p.EndFigure();                  p.EndGeography();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePoint4D,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' 0.1' 0.1));                  p.EndFigure();                  p.EndGeography();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePoint4D,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' 0.1' 0.1));                  p.EndFigure();                  p.EndGeography();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePoint4D,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' 0.1' 0.1));                  p.EndFigure();                  p.EndGeography();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePoint4D,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' 0.1));                  p.EndFigure();                  p.EndGeography();              }' "gml:Point/gml:pos[text()='0.1 0.1 NaN 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePoint4D,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' 0.1));                  p.EndFigure();                  p.EndGeography();              }' "gml:Point/gml:pos[text()='0.1 0.1 NaN 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePoint4D,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' 0.1));                  p.EndFigure();                  p.EndGeography();              }' "gml:Point/gml:pos[text()='0.1 0.1 NaN 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPoint,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPoint);                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'               "gml:MultiPoint/gml:pointMembers/gml:Point[1]/gml:pos[text()='0.1 0.1']"'               "gml:MultiPoint/gml:pointMembers/gml:Point[2]/gml:pos[text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPoint,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPoint);                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'               "gml:MultiPoint/gml:pointMembers/gml:Point[1]/gml:pos[text()='0.1 0.1']"'               "gml:MultiPoint/gml:pointMembers/gml:Point[2]/gml:pos[text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPoint,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPoint);                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'               "gml:MultiPoint/gml:pointMembers/gml:Point[1]/gml:pos[text()='0.1 0.1']"'               "gml:MultiPoint/gml:pointMembers/gml:Point[2]/gml:pos[text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPoint,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPoint);                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'               "gml:MultiPoint/gml:pointMembers/gml:Point[1]/gml:pos[text()='0.1 0.1']"'               "gml:MultiPoint/gml:pointMembers/gml:Point[2]/gml:pos[text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteLineString,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();              }' "gml:LineString/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:LineString/gml:pos[position() = 2 and text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteLineString,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();              }' "gml:LineString/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:LineString/gml:pos[position() = 2 and text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteLineString,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();              }' "gml:LineString/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:LineString/gml:pos[position() = 2 and text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteLineString,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();              }' "gml:LineString/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:LineString/gml:pos[position() = 2 and text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiLineString,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiLineString);                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeography();                    p.EndGeography();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiLineString,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiLineString);                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeography();                    p.EndGeography();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiLineString,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiLineString);                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeography();                    p.EndGeography();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiLineString,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiLineString);                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeography();                    p.EndGeography();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiLineString,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiLineString);                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeography();                    p.EndGeography();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiLineString,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiLineString);                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeography();                    p.EndGeography();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiLineString,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiLineString);                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeography();                    p.EndGeography();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiLineString,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiLineString);                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeography();                    p.EndGeography();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWritePolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeography();              }'               "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteMultiPolygon,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.MultiPolygon);                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(2.1' 2.1' null' null));                  p.LineTo(new GeographyPosition(2.2' 2.2' null' null));                  p.LineTo(new GeographyPosition(2.3' 2.3' null' null));                  p.LineTo(new GeographyPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(3.1' 3.1' null' null));                  p.LineTo(new GeographyPosition(3.2' 3.2' null' null));                  p.LineTo(new GeographyPosition(3.3' 3.3' null' null));                  p.LineTo(new GeographyPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollection,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);                    p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Polygon);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.LineTo(new GeographyPosition(0.3' 0.3' null' null));                  p.LineTo(new GeographyPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeographyPosition(1.1' 1.1' null' null));                  p.LineTo(new GeographyPosition(1.2' 1.2' null' null));                  p.LineTo(new GeographyPosition(1.3' 1.3' null' null));                  p.LineTo(new GeographyPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeography();                    p.BeginGeography(SpatialType.Collection);                  p.BeginGeography(SpatialType.LineString);                  p.BeginFigure(new GeographyPosition(0.1' 0.1' null' null));                  p.LineTo(new GeographyPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeography();                  p.EndGeography();                    p.EndGeography();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'                "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollectionEmpty,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);    // c1                  p.BeginGeography(SpatialType.Collection);    // c2                  p.EndGeography();                            // c2                    p.BeginGeography(SpatialType.Collection);    // c3                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(10' 10' null' null));                  p.EndFigure();                  p.EndGeography();    // point                  p.EndGeography();    // collection 3                  p.EndGeography();    // collection 1              }'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry[position() = 1 and not(text())]"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry[2]/gml:geometryMembers/gml:Point");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeographyWriteCollectionEmpty,The following statement contains a magic number: GeographyGmlWriterTest(p =>              {                  p.BeginGeography(SpatialType.Collection);    // c1                  p.BeginGeography(SpatialType.Collection);    // c2                  p.EndGeography();                            // c2                    p.BeginGeography(SpatialType.Collection);    // c3                  p.BeginGeography(SpatialType.Point);                  p.BeginFigure(new GeographyPosition(10' 10' null' null));                  p.EndFigure();                  p.EndGeography();    // point                  p.EndGeography();    // collection 3                  p.EndGeography();    // collection 1              }'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry[position() = 1 and not(text())]"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry[2]/gml:geometryMembers/gml:Point");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePoint2D,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }' "gml:Point/gml:pos[text()='0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePoint2D,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }' "gml:Point/gml:pos[text()='0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePoint3D,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' 0.1' null));                  p.EndFigure();                  p.EndGeometry();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePoint3D,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' 0.1' null));                  p.EndFigure();                  p.EndGeometry();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePoint3D,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' 0.1' null));                  p.EndFigure();                  p.EndGeometry();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePoint4D,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' 0.1' 0.1));                  p.EndFigure();                  p.EndGeometry();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePoint4D,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' 0.1' 0.1));                  p.EndFigure();                  p.EndGeometry();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePoint4D,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' 0.1' 0.1));                  p.EndFigure();                  p.EndGeometry();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePoint4D,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' 0.1' 0.1));                  p.EndFigure();                  p.EndGeometry();              }' "gml:Point/gml:pos[text()='0.1 0.1 0.1 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePoint4D,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' 0.1));                  p.EndFigure();                  p.EndGeometry();              }' "gml:Point/gml:pos[text()='0.1 0.1 NaN 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePoint4D,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' 0.1));                  p.EndFigure();                  p.EndGeometry();              }' "gml:Point/gml:pos[text()='0.1 0.1 NaN 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePoint4D,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' 0.1));                  p.EndFigure();                  p.EndGeometry();              }' "gml:Point/gml:pos[text()='0.1 0.1 NaN 0.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPoint,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPoint);                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiPoint/gml:pointMembers/gml:Point[1]/gml:pos[text()='0.1 0.1']"'              "gml:MultiPoint/gml:pointMembers/gml:Point[2]/gml:pos[text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPoint,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPoint);                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiPoint/gml:pointMembers/gml:Point[1]/gml:pos[text()='0.1 0.1']"'              "gml:MultiPoint/gml:pointMembers/gml:Point[2]/gml:pos[text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPoint,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPoint);                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiPoint/gml:pointMembers/gml:Point[1]/gml:pos[text()='0.1 0.1']"'              "gml:MultiPoint/gml:pointMembers/gml:Point[2]/gml:pos[text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPoint,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPoint);                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiPoint/gml:pointMembers/gml:Point[1]/gml:pos[text()='0.1 0.1']"'              "gml:MultiPoint/gml:pointMembers/gml:Point[2]/gml:pos[text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteLineString,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();              }' "gml:LineString/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:LineString/gml:pos[position() = 2 and text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteLineString,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();              }' "gml:LineString/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:LineString/gml:pos[position() = 2 and text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteLineString,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();              }' "gml:LineString/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:LineString/gml:pos[position() = 2 and text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteLineString,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();              }' "gml:LineString/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:LineString/gml:pos[position() = 2 and text()='0.2 0.2']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiLineString,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiLineString);                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.EndGeometry();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiLineString,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiLineString);                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.EndGeometry();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiLineString,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiLineString);                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.EndGeometry();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiLineString,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiLineString);                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.EndGeometry();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiLineString,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiLineString);                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.EndGeometry();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiLineString,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiLineString);                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.EndGeometry();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiLineString,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiLineString);                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.EndGeometry();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiLineString,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiLineString);                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.4' 0.4' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.EndGeometry();              }' "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 1 and text()='0.1 0.1']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[1]/gml:pos[position() = 2 and text()='0.2 0.2']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 1 and text()='0.3 0.3']"'              "gml:MultiCurve/gml:curveMembers/gml:LineString[2]/gml:pos[position() = 2 and text()='0.4 0.4']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWritePolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.EndGeometry();              }'              "count(gml:Polygon/gml:exterior) = 1"'              "count(gml:Polygon/gml:interior) = 2"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:Polygon/gml:interior[1]/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:Polygon/gml:interior[2]/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteMultiPolygon,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.MultiPolygon);                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(2.1' 2.1' null' null));                  p.LineTo(new GeometryPosition(2.2' 2.2' null' null));                  p.LineTo(new GeometryPosition(2.3' 2.3' null' null));                  p.LineTo(new GeometryPosition(2.1' 2.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(3.1' 3.1' null' null));                  p.LineTo(new GeometryPosition(3.2' 3.2' null' null));                  p.LineTo(new GeometryPosition(3.3' 3.3' null' null));                  p.LineTo(new GeometryPosition(3.1' 3.1' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();              }'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[1]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '2.2 2.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '2.3 2.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '2.1 2.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '3.1 3.1']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '3.2 3.2']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '3.3 3.3']"'              "gml:MultiSurface/gml:surfaceMembers/gml:Polygon[2]/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '3.1 3.1']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollection,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);                    p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Polygon);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.LineTo(new GeometryPosition(0.3' 0.3' null' null));                  p.LineTo(new GeometryPosition(0.1' 0.1' null' null));                  p.EndFigure();                  p.BeginFigure(new GeometryPosition(1.1' 1.1' null' null));                  p.LineTo(new GeometryPosition(1.2' 1.2' null' null));                  p.LineTo(new GeometryPosition(1.3' 1.3' null' null));                  p.LineTo(new GeometryPosition(1.1' 1.1' null' null));                  p.EndFigure();                  p.EndGeometry();                    p.BeginGeometry(SpatialType.Collection);                  p.BeginGeometry(SpatialType.LineString);                  p.BeginFigure(new GeometryPosition(0.1' 0.1' null' null));                  p.LineTo(new GeometryPosition(0.2' 0.2' null' null));                  p.EndFigure();                  p.EndGeometry();                  p.EndGeometry();                    p.EndGeometry();              }'              "gml:MultiGeometry/gml:geometryMembers/gml:Point/gml:pos[text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 2 and text() = '0.2 0.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 3 and text() = '0.3 0.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:exterior/gml:LinearRing/gml:pos[position() = 4 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 1 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 2 and text() = '1.2 1.2']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 3 and text() = '1.3 1.3']"'              "gml:MultiGeometry/gml:geometryMembers/gml:Polygon/gml:interior/gml:LinearRing/gml:pos[position() = 4 and text() = '1.1 1.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 1 and text() = '0.1 0.1']"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry/gml:geometryMembers/gml:LineString/gml:pos[position() = 2 and text() = '0.2 0.2']"              );
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollectionEmpty,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);    // c1                  p.BeginGeometry(SpatialType.Collection);    // c2                  p.EndGeometry();                            // c2                    p.BeginGeometry(SpatialType.Collection);    // c3                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(10' 10' null' null));                  p.EndFigure();                  p.EndGeometry();    // point                  p.EndGeometry();    // collection 3                  p.EndGeometry();    // collection 1              }'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry[position() = 1 and not(text())]"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry[2]/gml:geometryMembers/gml:Point");
Magic Number,Microsoft.Spatial.Tests,GmlWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\GmlWriterTests.cs,GeometryWriteCollectionEmpty,The following statement contains a magic number: GeometryGmlWriterTest(p =>              {                  p.BeginGeometry(SpatialType.Collection);    // c1                  p.BeginGeometry(SpatialType.Collection);    // c2                  p.EndGeometry();                            // c2                    p.BeginGeometry(SpatialType.Collection);    // c3                  p.BeginGeometry(SpatialType.Point);                  p.BeginFigure(new GeometryPosition(10' 10' null' null));                  p.EndFigure();                  p.EndGeometry();    // point                  p.EndGeometry();    // collection 3                  p.EndGeometry();    // collection 1              }'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry[position() = 1 and not(text())]"'              "gml:MultiGeometry/gml:geometryMembers/gml:MultiGeometry[2]/gml:geometryMembers/gml:Point");
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomPoints.Add(GeometryFactory.Point(1' 2));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomPoints.Add(GeometryFactory.Point(3' 4));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomPoints.Add(GeometryFactory.Point(3' 4));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomPoints.Add(GeometryFactory.Point(5' 6));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomPoints.Add(GeometryFactory.Point(5' 6));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(1' 2).LineTo(3' 4));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(1' 2).LineTo(3' 4));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(1' 2).LineTo(3' 4));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(5' 6).LineTo(7' 8));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(5' 6).LineTo(7' 8));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(5' 6).LineTo(7' 8));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(5' 6).LineTo(7' 8));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(9' 10).LineTo(11' 12));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(9' 10).LineTo(11' 12));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(9' 10).LineTo(11' 12));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(9' 10).LineTo(11' 12));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(13' 14).LineTo(15' 16));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(13' 14).LineTo(15' 16));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(13' 14).LineTo(15' 16));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geomLines.Add(GeometryFactory.LineString(13' 14).LineTo(15' 16));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogPoints.Add(GeographyFactory.Point(1' 2));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogPoints.Add(GeographyFactory.Point(3' 4));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogPoints.Add(GeographyFactory.Point(3' 4));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogPoints.Add(GeographyFactory.Point(5' 6));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogPoints.Add(GeographyFactory.Point(5' 6));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(1' 2).LineTo(3' 4));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(1' 2).LineTo(3' 4));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(1' 2).LineTo(3' 4));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(5' 6).LineTo(7' 8));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(5' 6).LineTo(7' 8));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(5' 6).LineTo(7' 8));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(5' 6).LineTo(7' 8));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(9' 10).LineTo(11' 12));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(9' 10).LineTo(11' 12));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(9' 10).LineTo(11' 12));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(9' 10).LineTo(11' 12));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(13' 14).LineTo(15' 16));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(13' 14).LineTo(15' 16));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(13' 14).LineTo(15' 16));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.geogLines.Add(GeographyFactory.LineString(13' 14).LineTo(15' 16));
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.numbers.Add(1.23);
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.numbers.Add(3.45);
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.numbers.Add(5.67);
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.numbers.Add(8.90);
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.numbers.Add(-1.23);
Magic Number,Microsoft.Spatial.Tests,SpatialOperationsTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialOperationsTests.cs,SpatialOperationsTests,The following statement contains a magic number: this.numbers.Add(-3.45);
Magic Number,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,TestSpatialPipelineEvents,The following statement contains a magic number: pipeline.GeographyPipeline.BeginFigure(new GeographyPosition(47.8' -122.05' 500' null));
Magic Number,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,TestSpatialPipelineEvents,The following statement contains a magic number: pipeline.GeographyPipeline.BeginFigure(new GeographyPosition(47.8' -122.05' 500' null));
Magic Number,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,TestSpatialPipelineEvents,The following statement contains a magic number: pipeline.GeographyPipeline.BeginFigure(new GeographyPosition(47.8' -122.05' 500' null));
Magic Number,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,TestSpatialPipelineEvents,The following statement contains a magic number: pipeline.GeometryPipeline.BeginFigure(new GeometryPosition(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,TestSpatialPipelineEvents,The following statement contains a magic number: pipeline.GeometryPipeline.BeginFigure(new GeometryPosition(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,TestSpatialPipelineEvents,The following statement contains a magic number: pipeline.GeometryPipeline.BeginFigure(new GeometryPosition(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,TestSpatialPipelineEvents,The following statement contains a magic number: pipeline.GeometryPipeline.BeginFigure(new GeometryPosition(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,InvalidPointTest,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ArgumentException>(() => pipeline.GeographyPipeline.BeginFigure(new GeographyPosition(double.NaN' 122' null' null))' Strings.InvalidPointCoordinate(double.NaN' "latitude"));
Magic Number,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,InvalidPointTest,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ArgumentException>(() => pipeline.GeographyPipeline.BeginFigure(new GeographyPosition(47' double.NegativeInfinity' null' null))' Strings.InvalidPointCoordinate(double.NegativeInfinity' "longitude"));
Magic Number,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,InvalidPointTest,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ArgumentException>(() => pipeline.GeometryPipeline.BeginFigure(new GeometryPosition(double.PositiveInfinity' 122' null' null))' Strings.InvalidPointCoordinate(double.PositiveInfinity' "x"));
Magic Number,Microsoft.Spatial.Tests,SpatialPipelineTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialPipelineTests.cs,InvalidPointTest,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<ArgumentException>(() => pipeline.GeometryPipeline.BeginFigure(new GeometryPosition(123' double.NaN' null' null))' Strings.InvalidPointCoordinate(double.NaN' "y"));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidateLatitude_Geography,The following statement contains a magic number: var ex = SpatialTestUtils.RunCatching<FormatException>(() => v.BeginFigure(new GeographyPosition(-91' 0' 0' 0)));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidateLatitude_Geography,The following statement contains a magic number: Assert.Equal(Strings.Validator_InvalidLatitudeCoordinate(-91)' ex.Message);
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidateLatitude_Geography,The following statement contains a magic number: ex = SpatialTestUtils.RunCatching<FormatException>(() => v.BeginFigure(new GeographyPosition(91' 0' 0' 0)));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidateLatitude_Geography,The following statement contains a magic number: Assert.Equal(Strings.Validator_InvalidLatitudeCoordinate(91)' ex.Message);
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidateLongitude_Geography,The following statement contains a magic number: var ex = SpatialTestUtils.RunCatching<FormatException>(() => v.BeginFigure(new GeographyPosition(0' -15070' 0' 0)));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidateLongitude_Geography,The following statement contains a magic number: Assert.Equal(Strings.Validator_InvalidLongitudeCoordinate(-15070)' ex.Message);
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidateLongitude_Geography,The following statement contains a magic number: ex = SpatialTestUtils.RunCatching<FormatException>(() => v.BeginFigure(new GeographyPosition(0' 15070' 0' 0)));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidateLongitude_Geography,The following statement contains a magic number: Assert.Equal(Strings.Validator_InvalidLongitudeCoordinate(15070)' ex.Message);
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 50' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 50' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 50' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 50' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.BeginFigure(new GeographyPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(10' 20 + 360' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(10' 20 + 360' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(10' 20 + 360' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(10' 20 + 360' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Longitude_Geography,The following statement contains a magic number: v.LineTo(new GeographyPosition(10' 20 + 360' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geometry,The following statement contains a magic number: v.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geometry,The following statement contains a magic number: v.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geometry,The following statement contains a magic number: v.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geometry,The following statement contains a magic number: v.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_LessThanFour_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 50' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 50' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 50' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_NotARing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 50' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.BeginFigure(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 30' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(20' 40' 40' 50));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorImplementationTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorImplementationTests.cs,ValidatePolygonRing_Geometry,The following statement contains a magic number: v.LineTo(new GeometryPosition(10' 20' 30' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PointBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Point);                  v.BeginFigure(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PointBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Point);                  v.BeginFigure(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PointBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Point);                  v.BeginFigure(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PointBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Point);                  v.BeginFigure(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PointEndState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Point);                  v.BeginFigure(10' 20' 30' 40);                  v.EndFigure();                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PointEndState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Point);                  v.BeginFigure(10' 20' 30' 40);                  v.EndFigure();                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PointEndState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Point);                  v.BeginFigure(10' 20' 30' 40);                  v.EndFigure();                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PointEndState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Point);                  v.BeginFigure(10' 20' 30' 40);                  v.EndFigure();                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineBuildingStateWithOnePoint,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineBuildingStateWithOnePoint,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineBuildingStateWithOnePoint,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineBuildingStateWithOnePoint,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineBuildingStateWithTwoPoints,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineBuildingStateWithTwoPoints,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineBuildingStateWithTwoPoints,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineBuildingStateWithTwoPoints,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineBuildingStateWithTwoPoints,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineBuildingStateWithTwoPoints,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineBuildingStateWithTwoPoints,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineBuildingStateWithTwoPoints,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineStringEndState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  v.EndFigure();                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineStringEndState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  v.EndFigure();                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineStringEndState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  v.EndFigure();                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineStringEndState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  v.EndFigure();                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineStringEndState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  v.EndFigure();                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineStringEndState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  v.EndFigure();                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineStringEndState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  v.EndFigure();                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,LineStringEndState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.LineString);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(10' 20' 30' 40);                  v.EndFigure();                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,PolygonBuildingEndingState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Polygon);                  v.BeginFigure(10' 20' 30' 40);                  v.LineTo(20' 30' 40' 50);                  v.LineTo(20' 40' 40' 50);                  v.LineTo(20' 50' 40' 50);                  v.LineTo(10' 20' 30' 40);                  return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,RestartAtFinishedState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Point);                  v.BeginFigure(10' 20' 30' 40);                  v.EndFigure();                  v.EndGeo();                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,RestartAtFinishedState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Point);                  v.BeginFigure(10' 20' 30' 40);                  v.EndFigure();                  v.EndGeo();                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,RestartAtFinishedState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Point);                  v.BeginFigure(10' 20' 30' 40);                  v.EndFigure();                  v.EndGeo();                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,RestartAtFinishedState,The following statement contains a magic number: Func<TypeWashedPipeline' TypeWashedPipeline> stateSetup = v =>              {                  v.SetCoordinateSystem(NonDefaultEpsgId);                  v.BeginGeo(SpatialType.Point);                  v.BeginFigure(10' 20' 30' 40);                  v.EndFigure();                  v.EndGeo();                    return v;              };
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,InvalidPointTest,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<FormatException>(                      () => validator.BeginFigure(10' 20' double.NaN' 40)'                      Strings.Validator_InvalidPointCoordinate(10' 20' double.NaN' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,InvalidPointTest,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<FormatException>(                      () => validator.BeginFigure(10' 20' double.NaN' 40)'                      Strings.Validator_InvalidPointCoordinate(10' 20' double.NaN' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,InvalidPointTest,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<FormatException>(                      () => validator.BeginFigure(10' 20' double.NaN' 40)'                      Strings.Validator_InvalidPointCoordinate(10' 20' double.NaN' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,InvalidPointTest,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<FormatException>(                      () => validator.BeginFigure(10' 20' double.NaN' 40)'                      Strings.Validator_InvalidPointCoordinate(10' 20' double.NaN' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,InvalidPointTest,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<FormatException>(                      () => validator.BeginFigure(10' 20' double.NaN' 40)'                      Strings.Validator_InvalidPointCoordinate(10' 20' double.NaN' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,InvalidPointTest,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<FormatException>(                      () => validator.BeginFigure(10' 20' double.NaN' 40)'                      Strings.Validator_InvalidPointCoordinate(10' 20' double.NaN' 40));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,MaxGeometryDepth,The following statement contains a magic number: i < 28
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,MaxGeometryDepth,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<FormatException>(                     () => validator.BeginGeo(SpatialType.Point)'                     Strings.Validator_NestingOverflow(28));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,UnexpectedGeometry,The following statement contains a magic number: validator2.GeographyPipeline.BeginFigure(new GeographyPosition(45' 180' null' null));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,UnexpectedGeometry,The following statement contains a magic number: validator2.GeographyPipeline.BeginFigure(new GeographyPosition(45' 180' null' null));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,UnexpectedGeometry,The following statement contains a magic number: validator4.GeometryPipeline.BeginFigure(new GeometryPosition(45' 180' null' null));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,UnexpectedGeometry,The following statement contains a magic number: validator4.GeometryPipeline.BeginFigure(new GeometryPosition(45' 180' null' null));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,UnexpectedGeometry,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<FormatException>(                    () => validator5.GeometryPipeline.BeginFigure(new GeometryPosition(333' 3333333' 333' 333))'                    Strings.Validator_UnexpectedCall("SetCoordinateSystem"' "BeginFigure"));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,UnexpectedGeometry,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<FormatException>(                    () => validator5.GeometryPipeline.BeginFigure(new GeometryPosition(333' 3333333' 333' 333))'                    Strings.Validator_UnexpectedCall("SetCoordinateSystem"' "BeginFigure"));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,UnexpectedGeometry,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<FormatException>(                    () => validator5.GeometryPipeline.BeginFigure(new GeometryPosition(333' 3333333' 333' 333))'                    Strings.Validator_UnexpectedCall("SetCoordinateSystem"' "BeginFigure"));
Magic Number,Microsoft.Spatial.Tests,SpatialValidatorTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\SpatialValidatorTests.cs,UnexpectedGeometry,The following statement contains a magic number: SpatialTestUtils.VerifyExceptionThrown<FormatException>(                    () => validator5.GeometryPipeline.BeginFigure(new GeometryPosition(333' 3333333' 333' 333))'                    Strings.Validator_UnexpectedCall("SetCoordinateSystem"' "BeginFigure"));
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: PointData = new List<PositionData>                              {                                  new PositionData(10' 20' 30' 40)'                                  new PositionData(20' 30' null' 40)'                                  new PositionData(30' 40' 10' null)'                                  new PositionData(10' 30' null' null)'                                  new PositionData(-10' -20' -30' -40)'                              };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,PositionData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\PositionData.cs,PositionData,The following statement contains a magic number: RingFigureData = new List<PositionData[]>                                   {                                       new[]                                           {                                               new PositionData(10' 20' 30' 40)'                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 20' 30' 40)'                                           }'                                       new[]                                           {                                               new PositionData(20' 30' null' 40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(20' 30' null' 40)'                                           }'                                       new[]                                           {                                               new PositionData(-10' -20' -30' -40)'                                               new PositionData(30' 40' 10' null)'                                               new PositionData(10' 30' null' null)'                                               new PositionData(-10' -20' -30' -40)'                                           }                                   };
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,PointM,The following statement contains a magic number: coords = coords ?? CoordinateSystem.Geometry(1234);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,LineStringM,The following statement contains a magic number: return new GeometryLineStringImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation' PointM()' PointM());
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,PolygonM,The following statement contains a magic number: return new GeometryPolygonImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation' LineStringM());
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPointM,The following statement contains a magic number: return new GeometryMultiPointImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation' items);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPointMEmpty,The following statement contains a magic number: return new GeometryMultiPointImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiLineStringM,The following statement contains a magic number: return new GeometryMultiLineStringImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation' items);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiLineStringMEmpty,The following statement contains a magic number: return new GeometryMultiLineStringImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPolygonM,The following statement contains a magic number: return new GeometryMultiPolygonImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation' items);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPolygonMEmpty,The following statement contains a magic number: return new GeometryMultiPolygonImplementation(CoordinateSystem.Geometry(1234)' SpatialImplementation.CurrentImplementation);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,PointG,The following statement contains a magic number: coords = coords ?? CoordinateSystem.Geography(1234);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,LineStringG,The following statement contains a magic number: return new GeographyLineStringImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation' PointG()' PointG());
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,PolygonG,The following statement contains a magic number: return new GeographyPolygonImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation' LineStringG());
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,FullGlobe,The following statement contains a magic number: crs = crs ?? CoordinateSystem.Geography(1234);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPointG,The following statement contains a magic number: return new GeographyMultiPointImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation' items);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPointGEmpty,The following statement contains a magic number: return new GeographyMultiPointImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiLineStringG,The following statement contains a magic number: return new GeographyMultiLineStringImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation' items);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiLineStringGEmpty,The following statement contains a magic number: return new GeographyMultiLineStringImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPolygonG,The following statement contains a magic number: return new GeographyMultiPolygonImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation' items);
Magic Number,Microsoft.Spatial.Tests,TestData,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\TestData.cs,MultiPolygonGEmpty,The following statement contains a magic number: return new GeographyMultiPolygonImplementation(CoordinateSystem.Geography(1234)' SpatialImplementation.CurrentImplementation);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint_Ordering,The following statement contains a magic number: Assert.Equal(20' point.Latitude);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint_Ordering,The following statement contains a magic number: Assert.Equal(10' point.Longitude);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadSRIDTest,The following statement contains a magic number: this.ReadPointTest("SRID=1234;POINT(10 20)"' new PositionData(20' 10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadSRIDTest,The following statement contains a magic number: this.ReadPointTest("SRID=1234;POINT(10 20)"' new PositionData(20' 10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadSRIDTest,The following statement contains a magic number: this.ReadPointTest("SRID=1234;POINT(10 20)"' new PositionData(20' 10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,NullPipelineTest,The following statement contains a magic number: Assert.Equal(12345' point.X);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,NullPipelineTest,The following statement contains a magic number: Assert.Equal(567890' point.Y);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReaderIgnoreWhitespace,The following statement contains a magic number: this.ReadPointTest("SRID = 1234; POINT\t( 10 \r\n 20 )"' new PositionData(20' 10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReaderIgnoreWhitespace,The following statement contains a magic number: this.ReadPointTest("SRID = 1234; POINT\t( 10 \r\n 20 )"' new PositionData(20' 10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReaderIgnoreWhitespace,The following statement contains a magic number: this.ReadPointTest("SRID = 1234; POINT\t( 10 \r\n 20 )"' new PositionData(20' 10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReaderIgnoreCase,The following statement contains a magic number: this.ReadPointTest("sRiD=1234;pOinT( 10 20 )"' new PositionData(20' 10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReaderIgnoreCase,The following statement contains a magic number: this.ReadPointTest("sRiD=1234;pOinT( 10 20 )"' new PositionData(20' 10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReaderIgnoreCase,The following statement contains a magic number: this.ReadPointTest("sRiD=1234;pOinT( 10 20 )"' new PositionData(20' 10)' CoordinateSystem.Geography(1234));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20)"' new PositionData(20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20)"' new PositionData(20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10.1 20)"' new PositionData(20' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10.1 20)"' new PositionData(20' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10.1 20.1)"' new PositionData(20.1' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10.1 20.1)"' new PositionData(20.1' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20.1)"' new PositionData(20.1' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20.1)"' new PositionData(20.1' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (-10 20)"' new PositionData(20' -10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (-10 20)"' new PositionData(20' -10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (+10.1 20)"' new PositionData(20' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (+10.1 20)"' new PositionData(20' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10.1 -20.1)"' new PositionData(-20.1' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10.1 -20.1)"' new PositionData(-20.1' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 +20.1)"' new PositionData(+20.1' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 +20.1)"' new PositionData(+20.1' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30)"' new PositionData(20' 10' 30' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30)"' new PositionData(20' 10' 30' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30)"' new PositionData(20' 10' 30' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20.1 30)"' new PositionData(20.1' 10' 30' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20.1 30)"' new PositionData(20.1' 10' 30' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20.1 30)"' new PositionData(20.1' 10' 30' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1)"' new PositionData(20' 10' 30.1' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1)"' new PositionData(20' 10' 30.1' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1)"' new PositionData(20' 10' 30.1' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 -30.0)"' new PositionData(20' 10' -30' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 -30.0)"' new PositionData(20' 10' -30' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 -30.0)"' new PositionData(20' 10' -30' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20.1 +30.1)"' new PositionData(20.1' 10' 30.1' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20.1 +30.1)"' new PositionData(20.1' 10' 30.1' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20.1 +30.1)"' new PositionData(20.1' 10' 30.1' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 NULL)"' new PositionData(20' 10' null' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 NULL)"' new PositionData(20' 10' null' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30 40)"' new PositionData(20' 10' 30' 40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30 40)"' new PositionData(20' 10' 30' 40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30 40)"' new PositionData(20' 10' 30' 40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30 40)"' new PositionData(20' 10' 30' 40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1 40)"' new PositionData(20' 10' 30.1' 40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1 40)"' new PositionData(20' 10' 30.1' 40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1 40)"' new PositionData(20' 10' 30.1' 40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1 40)"' new PositionData(20' 10' 30.1' 40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30 40.1)"' new PositionData(20' 10' 30' 40.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30 40.1)"' new PositionData(20' 10' 30' 40.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30 40.1)"' new PositionData(20' 10' 30' 40.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30 40.1)"' new PositionData(20' 10' 30' 40.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30 -40)"' new PositionData(20' 10' 30' -40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30 -40)"' new PositionData(20' 10' 30' -40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30 -40)"' new PositionData(20' 10' 30' -40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30 -40)"' new PositionData(20' 10' 30' -40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1 +40.5)"' new PositionData(20' 10' 30.1' 40.5));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1 +40.5)"' new PositionData(20' 10' 30.1' 40.5));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1 +40.5)"' new PositionData(20' 10' 30.1' 40.5));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1 +40.5)"' new PositionData(20' 10' 30.1' 40.5));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 NULL 40)"' new PositionData(20' 10' null' 40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 NULL 40)"' new PositionData(20' 10' null' 40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 NULL 40)"' new PositionData(20' 10' null' 40));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1 NULL)"' new PositionData(20' 10' 30.1' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1 NULL)"' new PositionData(20' 10' 30.1' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 30.1 NULL)"' new PositionData(20' 10' 30.1' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 NULL NULL)"' new PositionData(20' 10' null' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPoint,The following statement contains a magic number: this.ReadPointTest("POINT (10 20 NULL NULL)"' new PositionData(20' 10' null' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20' 10.1 20.1)"' null' new PositionData(20' 10' null' null)' new PositionData(20.1' 10.1' null' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20' 10.1 20.1)"' null' new PositionData(20' 10' null' null)' new PositionData(20.1' 10.1' null' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20' 10.1 20.1)"' null' new PositionData(20' 10' null' null)' new PositionData(20.1' 10.1' null' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20' 10.1 20.1)"' null' new PositionData(20' 10' null' null)' new PositionData(20.1' 10.1' null' null));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 20 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' 20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 20 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' 20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 20 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' 20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 20 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' 20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 20 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' 20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 20 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' 20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 20 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' 20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 20 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' 20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 NULL NULL' 30 20 NULL 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' null' null)' new PositionData(20' 30' null' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 NULL NULL' 30 20 NULL 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' null' null)' new PositionData(20' 30' null' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 NULL NULL' 30 20 NULL 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' null' null)' new PositionData(20' 30' null' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 NULL NULL' 30 20 NULL 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' null' null)' new PositionData(20' 30' null' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 NULL NULL' 30 20 NULL 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' null' null)' new PositionData(20' 30' null' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 NULL NULL' 30 20 NULL 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' null' null)' new PositionData(20' 30' null' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 NULL NULL' 30 20 NULL 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' null' null)' new PositionData(20' 30' null' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 NULL NULL' 30 20 NULL 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' null' null)' new PositionData(20' 30' null' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadLineString,The following statement contains a magic number: this.ReadLineStringTest("LINESTRING (10 20 30 40' 40 30 NULL NULL' 30 20 NULL 10)"' null' new PositionData(20' 10' 30' 40)' new PositionData(30' 40' null' null)' new PositionData(20' 30' null' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadPolygon,The following statement contains a magic number: this.ReadPolygonTest("POLYGON ((10 20' 15 25' 20 30' 10 20)' (15 25' 20 30' 25 35' 15 25)' EMPTY' (5 5' 6 6' 7 7' 5 5))"'                  null'                  new[] {                       new PositionData(20' 10)' new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(20' 10) }'                  new[] {                       new PositionData(25' 15)' new PositionData(30' 20)' new PositionData(35' 25)' new PositionData(25' 15) }'                   new[] {                       new PositionData(5' 5)' new PositionData(6' 6)' new PositionData(7' 7)' new PositionData(5' 5) });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPoint,The following statement contains a magic number: p.VerifyAsMultiPoint(new PositionData(20' 10)' null' new PositionData(40' 30));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPoint,The following statement contains a magic number: p.VerifyAsMultiPoint(new PositionData(20' 10)' null' new PositionData(40' 30));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPoint,The following statement contains a magic number: p.VerifyAsMultiPoint(new PositionData(20' 10)' null' new PositionData(40' 30));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPoint,The following statement contains a magic number: p.VerifyAsMultiPoint(new PositionData(20' 10)' null' new PositionData(40' 30));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiLineString,The following statement contains a magic number: p.VerifyAsMultiLineString(                  new[] {                       new PositionData(10' 10)'                      new PositionData(20' 20)'                  }'                  null'                  new[] {                      new PositionData(30' 30)'                      new PositionData(40' 40)'                      new PositionData(50' 50)'                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiLineString,The following statement contains a magic number: p.VerifyAsMultiLineString(                  new[] {                       new PositionData(10' 10)'                      new PositionData(20' 20)'                  }'                  null'                  new[] {                      new PositionData(30' 30)'                      new PositionData(40' 40)'                      new PositionData(50' 50)'                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiLineString,The following statement contains a magic number: p.VerifyAsMultiLineString(                  new[] {                       new PositionData(10' 10)'                      new PositionData(20' 20)'                  }'                  null'                  new[] {                      new PositionData(30' 30)'                      new PositionData(40' 40)'                      new PositionData(50' 50)'                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiLineString,The following statement contains a magic number: p.VerifyAsMultiLineString(                  new[] {                       new PositionData(10' 10)'                      new PositionData(20' 20)'                  }'                  null'                  new[] {                      new PositionData(30' 30)'                      new PositionData(40' 40)'                      new PositionData(50' 50)'                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiLineString,The following statement contains a magic number: p.VerifyAsMultiLineString(                  new[] {                       new PositionData(10' 10)'                      new PositionData(20' 20)'                  }'                  null'                  new[] {                      new PositionData(30' 30)'                      new PositionData(40' 40)'                      new PositionData(50' 50)'                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiLineString,The following statement contains a magic number: p.VerifyAsMultiLineString(                  new[] {                       new PositionData(10' 10)'                      new PositionData(20' 20)'                  }'                  null'                  new[] {                      new PositionData(30' 30)'                      new PositionData(40' 40)'                      new PositionData(50' 50)'                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiLineString,The following statement contains a magic number: p.VerifyAsMultiLineString(                  new[] {                       new PositionData(10' 10)'                      new PositionData(20' 20)'                  }'                  null'                  new[] {                      new PositionData(30' 30)'                      new PositionData(40' 40)'                      new PositionData(50' 50)'                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiLineString,The following statement contains a magic number: p.VerifyAsMultiLineString(                  new[] {                       new PositionData(10' 10)'                      new PositionData(20' 20)'                  }'                  null'                  new[] {                      new PositionData(30' 30)'                      new PositionData(40' 40)'                      new PositionData(50' 50)'                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiLineString,The following statement contains a magic number: p.VerifyAsMultiLineString(                  new[] {                       new PositionData(10' 10)'                      new PositionData(20' 20)'                  }'                  null'                  new[] {                      new PositionData(30' 30)'                      new PositionData(40' 40)'                      new PositionData(50' 50)'                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiLineString,The following statement contains a magic number: p.VerifyAsMultiLineString(                  new[] {                       new PositionData(10' 10)'                      new PositionData(20' 20)'                  }'                  null'                  new[] {                      new PositionData(30' 30)'                      new PositionData(40' 40)'                      new PositionData(50' 50)'                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadMultiPolygon,The following statement contains a magic number: p.VerifyAsMultiPolygon(                  new[]                      {  // poly 1                      new[] {  // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }'                      new[] { // ring 2                          new PositionData(30'30)'                          new PositionData(40'40)'                          new PositionData(50'50)'                          new PositionData(30'30)'                      }'                  }'                  null' // poly 2                  new[]                      {  // poly 3                      new[] { // ring 1                          new PositionData(10'10)'                          new PositionData(20'20)'                          new PositionData(30'30)'                          new PositionData(10'10)'                      }                  });
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadCollection,The following statement contains a magic number: p.VerifyAsCollection(                  (g) => g.VerifyAsPoint(new PositionData(10' 10))'                  (g) => g.VerifyAsLineString(new PositionData(20' 20)' new PositionData(20' 20))'                  (g) => g.VerifyAsPolygon(null)'                  (g) => g.VerifyAsCollection(                      (g1) => g1.VerifyAsPoint(new PositionData(30' 30))));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadCollection,The following statement contains a magic number: p.VerifyAsCollection(                  (g) => g.VerifyAsPoint(new PositionData(10' 10))'                  (g) => g.VerifyAsLineString(new PositionData(20' 20)' new PositionData(20' 20))'                  (g) => g.VerifyAsPolygon(null)'                  (g) => g.VerifyAsCollection(                      (g1) => g1.VerifyAsPoint(new PositionData(30' 30))));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadCollection,The following statement contains a magic number: p.VerifyAsCollection(                  (g) => g.VerifyAsPoint(new PositionData(10' 10))'                  (g) => g.VerifyAsLineString(new PositionData(20' 20)' new PositionData(20' 20))'                  (g) => g.VerifyAsPolygon(null)'                  (g) => g.VerifyAsCollection(                      (g1) => g1.VerifyAsPoint(new PositionData(30' 30))));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadCollection,The following statement contains a magic number: p.VerifyAsCollection(                  (g) => g.VerifyAsPoint(new PositionData(10' 10))'                  (g) => g.VerifyAsLineString(new PositionData(20' 20)' new PositionData(20' 20))'                  (g) => g.VerifyAsPolygon(null)'                  (g) => g.VerifyAsCollection(                      (g1) => g1.VerifyAsPoint(new PositionData(30' 30))));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadCollection,The following statement contains a magic number: p.VerifyAsCollection(                  (g) => g.VerifyAsPoint(new PositionData(10' 10))'                  (g) => g.VerifyAsLineString(new PositionData(20' 20)' new PositionData(20' 20))'                  (g) => g.VerifyAsPolygon(null)'                  (g) => g.VerifyAsCollection(                      (g1) => g1.VerifyAsPoint(new PositionData(30' 30))));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadCollection,The following statement contains a magic number: p.VerifyAsCollection(                  (g) => g.VerifyAsPoint(new PositionData(10' 10))'                  (g) => g.VerifyAsLineString(new PositionData(20' 20)' new PositionData(20' 20))'                  (g) => g.VerifyAsPolygon(null)'                  (g) => g.VerifyAsCollection(                      (g1) => g1.VerifyAsPoint(new PositionData(30' 30))));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadCollection,The following statement contains a magic number: p.VerifyAsCollection(                  (g) => g.VerifyAsPoint(new PositionData(10' 10))'                  (g) => g.VerifyAsLineString(new PositionData(20' 20)' new PositionData(20' 20))'                  (g) => g.VerifyAsPolygon(null)'                  (g) => g.VerifyAsCollection(                      (g1) => g1.VerifyAsPoint(new PositionData(30' 30))));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadCollection,The following statement contains a magic number: p.VerifyAsCollection(                  (g) => g.VerifyAsPoint(new PositionData(10' 10))'                  (g) => g.VerifyAsLineString(new PositionData(20' 20)' new PositionData(20' 20))'                  (g) => g.VerifyAsPolygon(null)'                  (g) => g.VerifyAsCollection(                      (g1) => g1.VerifyAsPoint(new PositionData(30' 30))));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(2' serializer.Coordinates.Count);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(3' serializer.Coordinates.Count);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(new PositionData(20' 10' null' 40)' serializer.Coordinates[0]);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(new PositionData(20' 10' null' 40)' serializer.Coordinates[0]);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(new PositionData(20' 10' null' 40)' serializer.Coordinates[0]);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(new PositionData(30' 10' null' 40)' serializer.Coordinates[1]);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(new PositionData(30' 10' null' 40)' serializer.Coordinates[1]);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(new PositionData(30' 10' null' 40)' serializer.Coordinates[1]);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(new PositionData(30' 10' null' 40)' serializer.Coordinates[2]);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(new PositionData(30' 10' null' 40)' serializer.Coordinates[2]);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(new PositionData(30' 10' null' 40)' serializer.Coordinates[2]);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(new PositionData(30' 10' null' 40)' serializer.Coordinates[2]);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,ReadGeographyPipeline,The following statement contains a magic number: Assert.Equal(CoordinateSystem.Geography(1234)' serializer.CoordinateSystem);
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParserMultipleStreamsOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' new StringReader("POINT (10 20)")' new PositionData(20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParserMultipleStreamsOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' new StringReader("POINT (10 20)")' new PositionData(20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParserMultipleStreamsOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' new StringReader("POINT (10.1 20)")' new PositionData(20' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParserMultipleStreamsOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' new StringReader("POINT (10.1 20)")' new PositionData(20' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParserMultipleStreamsOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' new StringReader("POINT (10.1 20.1)")' new PositionData(20.1' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParserMultipleStreamsOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' new StringReader("POINT (10.1 20.1)")' new PositionData(20.1' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParserMultipleStreamsOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' new StringReader("POINT (10 20.1)")' new PositionData(20.1' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParserMultipleStreamsOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' new StringReader("POINT (10 20.1)")' new PositionData(20.1' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParseOneMultiShapeStreamOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' reader' new PositionData(20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParseOneMultiShapeStreamOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' reader' new PositionData(20' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParseOneMultiShapeStreamOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' reader' new PositionData(20' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParseOneMultiShapeStreamOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' reader' new PositionData(20' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParseOneMultiShapeStreamOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' reader' new PositionData(20.1' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParseOneMultiShapeStreamOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' reader' new PositionData(20.1' 10.1));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParseOneMultiShapeStreamOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' reader' new PositionData(20.1' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextSqlFormatterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,OneParseOneMultiShapeStreamOfGeographies,The following statement contains a magic number: ReadPointTest(this.d4Formatter' reader' new PositionData(20.1' 10));
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePoint,The following statement contains a magic number: Action<GeographyPipeline> d4PointCalls = (w) =>                                                           {                                                               w.BeginGeography(SpatialType.Point);                                                               w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                               w.EndFigure();                                                               w.EndGeography();                                                           };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePoint,The following statement contains a magic number: Action<GeographyPipeline> d4PointCalls = (w) =>                                                           {                                                               w.BeginGeography(SpatialType.Point);                                                               w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                               w.EndFigure();                                                               w.EndGeography();                                                           };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePoint,The following statement contains a magic number: Action<GeographyPipeline> d4PointCalls = (w) =>                                                           {                                                               w.BeginGeography(SpatialType.Point);                                                               w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                               w.EndFigure();                                                               w.EndGeography();                                                           };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePoint,The following statement contains a magic number: Action<GeographyPipeline> d4PointCalls = (w) =>                                                           {                                                               w.BeginGeography(SpatialType.Point);                                                               w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                               w.EndFigure();                                                               w.EndGeography();                                                           };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePoint,The following statement contains a magic number: Action<GeographyPipeline> d3PointCalls = (w) =>                                                        {                                                            w.BeginGeography(SpatialType.Point);                                                            w.BeginFigure(new GeographyPosition(10' 20' 30' null));                                                            w.EndFigure();                                                            w.EndGeography();                                                        };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePoint,The following statement contains a magic number: Action<GeographyPipeline> d3PointCalls = (w) =>                                                        {                                                            w.BeginGeography(SpatialType.Point);                                                            w.BeginFigure(new GeographyPosition(10' 20' 30' null));                                                            w.EndFigure();                                                            w.EndGeography();                                                        };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePoint,The following statement contains a magic number: Action<GeographyPipeline> d3PointCalls = (w) =>                                                        {                                                            w.BeginGeography(SpatialType.Point);                                                            w.BeginFigure(new GeographyPosition(10' 20' 30' null));                                                            w.EndFigure();                                                            w.EndGeography();                                                        };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePoint,The following statement contains a magic number: Action<GeographyPipeline> d2PointCalls = (w) =>                                                        {                                                            w.BeginGeography(SpatialType.Point);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                            w.EndFigure();                                                            w.EndGeography();                                                        };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePoint,The following statement contains a magic number: Action<GeographyPipeline> d2PointCalls = (w) =>                                                        {                                                            w.BeginGeography(SpatialType.Point);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                            w.EndFigure();                                                            w.EndGeography();                                                        };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePoint,The following statement contains a magic number: Action<GeographyPipeline> skipPointCalls =              (w) =>                  {                      w.BeginGeography(SpatialType.Point);                      w.BeginFigure(new GeographyPosition(10' 20' null' 40));                      w.EndFigure();                      w.EndGeography();                  };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePoint,The following statement contains a magic number: Action<GeographyPipeline> skipPointCalls =              (w) =>                  {                      w.BeginGeography(SpatialType.Point);                      w.BeginFigure(new GeographyPosition(10' 20' null' 40));                      w.EndFigure();                      w.EndGeography();                  };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePoint,The following statement contains a magic number: Action<GeographyPipeline> skipPointCalls =              (w) =>                  {                      w.BeginGeography(SpatialType.Point);                      w.BeginFigure(new GeographyPosition(10' 20' null' 40));                      w.EndFigure();                      w.EndGeography();                  };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD2Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD2Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD2Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD2Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> threeD2Point = (w) =>                                                        {                                                            w.BeginGeography(SpatialType.LineString);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                            w.LineTo(new GeographyPosition(-20.5' -30' null' null));                                                            w.LineTo(new GeographyPosition(30' 40' null' null));                                                            w.EndFigure();                                                            w.EndGeography();                                                        };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> threeD2Point = (w) =>                                                        {                                                            w.BeginGeography(SpatialType.LineString);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                            w.LineTo(new GeographyPosition(-20.5' -30' null' null));                                                            w.LineTo(new GeographyPosition(30' 40' null' null));                                                            w.EndFigure();                                                            w.EndGeography();                                                        };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> threeD2Point = (w) =>                                                        {                                                            w.BeginGeography(SpatialType.LineString);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                            w.LineTo(new GeographyPosition(-20.5' -30' null' null));                                                            w.LineTo(new GeographyPosition(30' 40' null' null));                                                            w.EndFigure();                                                            w.EndGeography();                                                        };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> threeD2Point = (w) =>                                                        {                                                            w.BeginGeography(SpatialType.LineString);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                            w.LineTo(new GeographyPosition(-20.5' -30' null' null));                                                            w.LineTo(new GeographyPosition(30' 40' null' null));                                                            w.EndFigure();                                                            w.EndGeography();                                                        };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> threeD2Point = (w) =>                                                        {                                                            w.BeginGeography(SpatialType.LineString);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                            w.LineTo(new GeographyPosition(-20.5' -30' null' null));                                                            w.LineTo(new GeographyPosition(30' 40' null' null));                                                            w.EndFigure();                                                            w.EndGeography();                                                        };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> threeD2Point = (w) =>                                                        {                                                            w.BeginGeography(SpatialType.LineString);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                            w.LineTo(new GeographyPosition(-20.5' -30' null' null));                                                            w.LineTo(new GeographyPosition(30' 40' null' null));                                                            w.EndFigure();                                                            w.EndGeography();                                                        };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD4Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                          w.LineTo(new GeographyPosition(20' 30' 40' 50));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD4Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                          w.LineTo(new GeographyPosition(20' 30' 40' 50));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD4Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                          w.LineTo(new GeographyPosition(20' 30' 40' 50));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD4Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                          w.LineTo(new GeographyPosition(20' 30' 40' 50));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD4Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                          w.LineTo(new GeographyPosition(20' 30' 40' 50));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD4Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                          w.LineTo(new GeographyPosition(20' 30' 40' 50));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD4Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                          w.LineTo(new GeographyPosition(20' 30' 40' 50));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD4Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                          w.LineTo(new GeographyPosition(20' 30' 40' 50));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2Point = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WritePolygon,The following statement contains a magic number: Action<GeographyPipeline> fourD2PointWith2D2Holes = (w) =>                                                       {                                                           w.BeginGeography(SpatialType.Polygon);                                                           w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                           w.LineTo(new GeographyPosition(20' 30' null' null));                                                           w.LineTo(new GeographyPosition(30' 40' null' null));                                                           w.LineTo(new GeographyPosition(10' 20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10' -20' null' null));                                                           w.LineTo(new GeographyPosition(-20' -30' null' null));                                                           w.LineTo(new GeographyPosition(-30' -40' null' null));                                                           w.LineTo(new GeographyPosition(-10' -20' null' null));                                                           w.EndFigure();                                                             w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                           w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                           w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                           w.EndFigure();                                                           w.EndGeography();                                                       };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPoint,The following statement contains a magic number: Action<GeographyPipeline> twoD2PointsCalls = (w) =>                                                         {                                                             w.BeginGeography(SpatialType.MultiPoint);                                                             w.BeginGeography(SpatialType.Point);                                                             w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                             w.EndFigure();                                                             w.EndGeography();                                                               w.BeginGeography(SpatialType.Point);                                                             w.EndGeography();                                                               w.BeginGeography(SpatialType.Point);                                                             w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                             w.EndFigure();                                                             w.EndGeography();                                                             w.EndGeography();                                                         };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPoint,The following statement contains a magic number: Action<GeographyPipeline> twoD2PointsCalls = (w) =>                                                         {                                                             w.BeginGeography(SpatialType.MultiPoint);                                                             w.BeginGeography(SpatialType.Point);                                                             w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                             w.EndFigure();                                                             w.EndGeography();                                                               w.BeginGeography(SpatialType.Point);                                                             w.EndGeography();                                                               w.BeginGeography(SpatialType.Point);                                                             w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                             w.EndFigure();                                                             w.EndGeography();                                                             w.EndGeography();                                                         };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPoint,The following statement contains a magic number: Action<GeographyPipeline> twoD2PointsCalls = (w) =>                                                         {                                                             w.BeginGeography(SpatialType.MultiPoint);                                                             w.BeginGeography(SpatialType.Point);                                                             w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                             w.EndFigure();                                                             w.EndGeography();                                                               w.BeginGeography(SpatialType.Point);                                                             w.EndGeography();                                                               w.BeginGeography(SpatialType.Point);                                                             w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                             w.EndFigure();                                                             w.EndGeography();                                                             w.EndGeography();                                                         };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPoint,The following statement contains a magic number: Action<GeographyPipeline> twoD2PointsCalls = (w) =>                                                         {                                                             w.BeginGeography(SpatialType.MultiPoint);                                                             w.BeginGeography(SpatialType.Point);                                                             w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                             w.EndFigure();                                                             w.EndGeography();                                                               w.BeginGeography(SpatialType.Point);                                                             w.EndGeography();                                                               w.BeginGeography(SpatialType.Point);                                                             w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                             w.EndFigure();                                                             w.EndGeography();                                                             w.EndGeography();                                                         };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPoint,The following statement contains a magic number: Action<GeographyPipeline> singleD3PointCalls = (w) =>                                                            {                                                                w.BeginGeography(SpatialType.MultiPoint);                                                                w.BeginGeography(SpatialType.Point);                                                                w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                                w.EndFigure();                                                                w.EndGeography();                                                                w.EndGeography();                                                            };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPoint,The following statement contains a magic number: Action<GeographyPipeline> singleD3PointCalls = (w) =>                                                            {                                                                w.BeginGeography(SpatialType.MultiPoint);                                                                w.BeginGeography(SpatialType.Point);                                                                w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                                w.EndFigure();                                                                w.EndGeography();                                                                w.EndGeography();                                                            };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPoint,The following statement contains a magic number: Action<GeographyPipeline> singleD3PointCalls = (w) =>                                                            {                                                                w.BeginGeography(SpatialType.MultiPoint);                                                                w.BeginGeography(SpatialType.Point);                                                                w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                                w.EndFigure();                                                                w.EndGeography();                                                                w.EndGeography();                                                            };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPoint,The following statement contains a magic number: Action<GeographyPipeline> singleD3PointCalls = (w) =>                                                            {                                                                w.BeginGeography(SpatialType.MultiPoint);                                                                w.BeginGeography(SpatialType.Point);                                                                w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                                w.EndFigure();                                                                w.EndGeography();                                                                w.EndGeography();                                                            };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD2LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(40' 50' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD2LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(40' 50' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD2LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(40' 50' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD2LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(40' 50' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD2LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(40' 50' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD2LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(40' 50' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD2LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(40' 50' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> twoD2LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(40' 50' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> singleD3LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 40' null));                                                          w.LineTo(new GeographyPosition(20' 30' 50' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> singleD3LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 40' null));                                                          w.LineTo(new GeographyPosition(20' 30' 50' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> singleD3LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 40' null));                                                          w.LineTo(new GeographyPosition(20' 30' 50' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> singleD3LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 40' null));                                                          w.LineTo(new GeographyPosition(20' 30' 50' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> singleD3LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 40' null));                                                          w.LineTo(new GeographyPosition(20' 30' 50' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiLineString,The following statement contains a magic number: Action<GeographyPipeline> singleD3LineStringCalls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiLineString);                                                          w.BeginGeography(SpatialType.LineString);                                                          w.BeginFigure(new GeographyPosition(10' 20' 40' null));                                                          w.LineTo(new GeographyPosition(20' 30' 50' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteMultiPolygon,The following statement contains a magic number: Action<GeographyPipeline> threeLineD2Calls = (w) =>                                                      {                                                          w.BeginGeography(SpatialType.MultiPolygon);                                                          w.BeginGeography(SpatialType.Polygon);                                                          w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.BeginFigure(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.LineTo(new GeographyPosition(-20.5' -30.5' null' null));                                                          w.LineTo(new GeographyPosition(-30.5' -40.5' null' null));                                                          w.LineTo(new GeographyPosition(-10.5' -20.5' null' null));                                                          w.EndFigure();                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                          w.EndGeography();                                                            w.BeginGeography(SpatialType.Polygon);                                                            w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                          w.LineTo(new GeographyPosition(20' 30' null' null));                                                          w.LineTo(new GeographyPosition(30' 40' null' null));                                                          w.LineTo(new GeographyPosition(10' 20' null' null));                                                          w.EndFigure();                                                            w.EndGeography();                                                          w.EndGeography();                                                      };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteCollection,The following statement contains a magic number: Action<GeographyPipeline> singlePointCalls = (w) =>                                                            {                                                                w.BeginGeography(SpatialType.Collection);                                                                w.BeginGeography(SpatialType.Point);                                                                w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                                w.EndFigure();                                                                w.EndGeography();                                                                w.EndGeography();                                                            };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteCollection,The following statement contains a magic number: Action<GeographyPipeline> singlePointCalls = (w) =>                                                            {                                                                w.BeginGeography(SpatialType.Collection);                                                                w.BeginGeography(SpatialType.Point);                                                                w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                                w.EndFigure();                                                                w.EndGeography();                                                                w.EndGeography();                                                            };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteCollection,The following statement contains a magic number: Action<GeographyPipeline> singlePointCalls = (w) =>                                                            {                                                                w.BeginGeography(SpatialType.Collection);                                                                w.BeginGeography(SpatialType.Point);                                                                w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                                w.EndFigure();                                                                w.EndGeography();                                                                w.EndGeography();                                                            };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteCollection,The following statement contains a magic number: Action<GeographyPipeline> singlePointCalls = (w) =>                                                            {                                                                w.BeginGeography(SpatialType.Collection);                                                                w.BeginGeography(SpatialType.Point);                                                                w.BeginFigure(new GeographyPosition(10' 20' 30' 40));                                                                w.EndFigure();                                                                w.EndGeography();                                                                w.EndGeography();                                                            };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteCollection,The following statement contains a magic number: Action<GeographyPipeline> pointMultiPointCalls = (w) =>                                                                {                                                                    w.BeginGeography(SpatialType.Collection);                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                      w.BeginGeography(SpatialType.MultiPoint);                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(20' 30' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                    w.EndGeography();                                                                      w.EndGeography();                                                                };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteCollection,The following statement contains a magic number: Action<GeographyPipeline> pointMultiPointCalls = (w) =>                                                                {                                                                    w.BeginGeography(SpatialType.Collection);                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                      w.BeginGeography(SpatialType.MultiPoint);                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(20' 30' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                    w.EndGeography();                                                                      w.EndGeography();                                                                };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteCollection,The following statement contains a magic number: Action<GeographyPipeline> pointMultiPointCalls = (w) =>                                                                {                                                                    w.BeginGeography(SpatialType.Collection);                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                      w.BeginGeography(SpatialType.MultiPoint);                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(20' 30' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                    w.EndGeography();                                                                      w.EndGeography();                                                                };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteCollection,The following statement contains a magic number: Action<GeographyPipeline> pointMultiPointCalls = (w) =>                                                                {                                                                    w.BeginGeography(SpatialType.Collection);                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                      w.BeginGeography(SpatialType.MultiPoint);                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(20' 30' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                    w.EndGeography();                                                                      w.EndGeography();                                                                };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteCollection,The following statement contains a magic number: Action<GeographyPipeline> pointMultiPointCalls = (w) =>                                                                {                                                                    w.BeginGeography(SpatialType.Collection);                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                      w.BeginGeography(SpatialType.MultiPoint);                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(20' 30' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                    w.EndGeography();                                                                      w.EndGeography();                                                                };
Magic Number,Microsoft.Spatial.Tests,WellKnownTextWriterTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\WellKnownTextSqlFormatterTests.cs,WriteCollection,The following statement contains a magic number: Action<GeographyPipeline> pointMultiPointCalls = (w) =>                                                                {                                                                    w.BeginGeography(SpatialType.Collection);                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(10' 20' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                      w.BeginGeography(SpatialType.MultiPoint);                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(20' 30' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                    w.BeginGeography(SpatialType.Point);                                                                    w.BeginFigure(new GeographyPosition(30' 40' null' null));                                                                    w.EndFigure();                                                                    w.EndGeography();                                                                    w.EndGeography();                                                                      w.EndGeography();                                                                };
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTests,The following statement contains a magic number: var fullGlobe3 = TestData.FullGlobe(CoordinateSystem.Geography(5555));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTestsForEmptyTypes,The following statement contains a magic number: var differentPointG = TestData.PointGEmpty(CoordinateSystem.Geography(5555));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,GetHashCodeTestsForEmptyTypes,The following statement contains a magic number: var differentPointM = TestData.PointMEmpty(CoordinateSystem.Geometry(5555));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,RepresentationEquality_EqualsTests,The following statement contains a magic number: var fullGlobe3 = TestData.FullGlobe(CoordinateSystem.Geography(5555));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Collection().Point(-19.99' -12.0).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Collection().Point(-19.99' -12.0).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.LineString(33.1' -110.0).LineTo(35.97' -110).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.LineString(33.1' -110.0).LineTo(35.97' -110).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.LineString(33.1' -110.0).LineTo(35.97' -110).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.LineString(33.1' -110.0).LineTo(35.97' -110).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(11.9' 11.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(11.9' 11.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(11.9' 11.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPoint().Point(10.2' 11.2).Point(11.9' 11.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Point(32.0' -100.0).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Point(32.0' -100.0).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeographyFactory.Polygon().Ring(33.1' -110.0).LineTo(35.97' -110.15).LineTo(11.45' 87.75).Ring(35.97' -110).LineTo(36.97' -110.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: GeographyEqualityTestIncludingBaseObviousStuff(() => GeographyFactory.Point(32.0' -100.0).Build()' () => GeographyFactory.Point().Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: GeographyEqualityTestIncludingBaseObviousStuff(() => GeographyFactory.Point(32.0' -100.0).Build()' () => GeographyFactory.Point().Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Collection().Point(-19.99' -12.0).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Collection().Point(-19.99' -12.0).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.LineString(33.1' -11.5).LineTo(35.97' -11).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.LineString(33.1' -11.5).LineTo(35.97' -11).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.LineString(33.1' -11.5).LineTo(35.97' -11).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.LineString(33.1' -11.5).LineTo(35.97' -11).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiLineString().LineString(10.2' 11.2).LineTo(11.9' 11.6).LineString(16.2' 17.2).LineTo(18.9' 19.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(11.9' 11.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(11.9' 11.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(11.9' 11.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPoint().Point(10.2' 11.2).Point(11.9' 11.6).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.MultiPolygon().Polygon().Ring(10.2' 11.2).LineTo(11.9' 11.6).LineTo(11.45' 87.75).Ring(16.2' 17.2).LineTo(18.9' 19.6).LineTo(11.45' 87.75).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Point(32.0' -10.0).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Point(32.0' -10.0).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: DefaultEqualityTest(() => GeometryFactory.Polygon().Ring(33.1' -13.6).LineTo(35.97' -11.15).LineTo(11.45' 87.75).Ring(35.97' -11).LineTo(36.97' -11.15).LineTo(45.23' 23.18).Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: GeometryEqualityTestIncludingBaseObviousStuff(() => GeometryFactory.Point(32.0' -10.0).Build()' () => GeometryFactory.Point().Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialEqualityTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialEqualityTests.cs,DefaultEqualityTest,The following statement contains a magic number: GeometryEqualityTestIncludingBaseObviousStuff(() => GeometryFactory.Point(32.0' -10.0).Build()' () => GeometryFactory.Point().Build());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Point)'                  GeographyFactory.Point(nonDefaultGeography' 10' 20)'                  GeographyFactory.Point(10' 10)'                  GeographyFactory.Point(10' 10' 10' 10)'                  GeographyFactory.Point(10' 10' 10' null)'                  GeographyFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.LineString)'                  GeographyFactory.LineString(nonDefaultGeography' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeographyFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeographyFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Polygon)'                  GeographyFactory.Polygon(nonDefaultGeography).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeographyFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPoint)'                  GeographyFactory.MultiPoint(nonDefaultGeography).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeographyFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiLineString)'                  GeographyFactory.MultiLineString(nonDefaultGeography)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeographyFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.MultiPolygon)'                  GeographyFactory.MultiPolygon(nonDefaultGeography)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeographyFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geography,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeography(SpatialType.Collection)'                  GeographyFactory.Collection(nonDefaultGeography)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeographyFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Point)'                  GeometryFactory.Point(nonDefaultGeometry' 10' 20)'                  GeometryFactory.Point(10' 10)'                  GeometryFactory.Point(10' 10' 10' 10)'                  GeometryFactory.Point(10' 10' 10' null)'                  GeometryFactory.Point(10' 10' 10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,LineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.LineString)'                  GeometryFactory.LineString(nonDefaultGeometry' 10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' 10).LineTo(10' 10' 10' 10)'                  GeometryFactory.LineString(10' 10' 10' null).LineTo(10' 10' 10' null)'                  GeometryFactory.LineString(10' 10).LineTo(10' 10));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,PolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Polygon)'                  GeometryFactory.Polygon(nonDefaultGeometry).Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)'                  GeometryFactory.Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPointRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPoint)'                  GeometryFactory.MultiPoint(nonDefaultGeometry).Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30)'                  GeometryFactory.MultiPoint().Point(10' 10).Point(20' 20' 20' null).Point(30' 30' 30' 30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiLineStringRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiLineString)'                  GeometryFactory.MultiLineString(nonDefaultGeometry)                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)'                  GeometryFactory.MultiLineString()                      .LineString(10' 10).LineTo(20' 20' 20' null).LineTo(30' 30' 30' 30)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,MultiPolygonRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.MultiPolygon)'                  GeometryFactory.MultiPolygon(nonDefaultGeometry)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)'                  GeometryFactory.MultiPolygon()                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30));
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
Magic Number,Microsoft.Spatial.Tests.ScenarioTests,SpatialFormatterRoundTripTests,C:\research\architectureSmells\repos\OData_odata.net\test\FunctionalTests\Microsoft.Spatial.Tests\ScenarioTests\SpatialFormatterRoundTripTests.cs,CollectionRoundTrip_Geometry,The following statement contains a magic number: this.RoundTripTest(                  EmptyGeometry(SpatialType.Collection)'                  GeometryFactory.Collection(nonDefaultGeometry)                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection()'                  GeometryFactory.Collection()                      .Point(10' 10)                      .LineString(10' 10).LineTo(30' 30).LineTo(20' 20)                      .Polygon().Ring(10' 10' 10' 10).LineTo(20' 20' 20' 20).LineTo(30' 30' 30' 30)                      .Ring(-10' -10' 100' 100).LineTo(-20' -20' 200' 200).LineTo(-30' -30' 300' 300)                      .Collection()                      .Polygon().Ring(-10' -10).LineTo(-20' -20' -20' null).LineTo(-30' -30' -30' -30)                      .LineString(10' 10).LineTo(20' 20' 20' null)                      .Collection());
