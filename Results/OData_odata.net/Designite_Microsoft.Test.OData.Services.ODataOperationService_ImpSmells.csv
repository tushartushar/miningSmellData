Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The method has 167 lines of code.
Long Identifier,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the parameter customerCollectionTypeReference is 31.
Long Identifier,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the parameter getCustomersForAddressesFunction is 32.
Long Identifier,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the parameter getCustomerForAddressesFunction is 31.
Long Identifier,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the parameter getOrdersFromCustomerByNotesFunction is 36.
Long Identifier,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the parameter getCustomersByOrdersUnboundFunction is 35.
Long Identifier,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the parameter getCustomerByOrderUnboundFunction is 33.
Long Identifier,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the parameter getCustomerAddressUnboundFunction is 33.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            homeAddressType.AddProperty(new EdmStructuralProperty(homeAddressType' "FamilyName"' EdmCoreModel.Instance.GetString(true))); " is 125.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            companyAddressType.AddProperty(new EdmStructuralProperty(companyAddressType' "CompanyName"' EdmCoreModel.Instance.GetString(false))); " is 133.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            orderDetailType.AddProperty(new EdmStructuralProperty(orderDetailType' "Quantity"' EdmCoreModel.Instance.GetInt32(false))); " is 123.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            orderDetailType.AddProperty(new EdmStructuralProperty(orderDetailType' "UnitPrice"' EdmCoreModel.Instance.GetSingle(false))); " is 125.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            infoFromCustomerType.AddProperty(new EdmStructuralProperty(infoFromCustomerType' "CustomerMessage"' EdmCoreModel.Instance.GetString(false))); " is 141.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            customerType.AddStructuralProperty("Emails"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetString(true)))); " is 139.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            orderType.AddStructuralProperty("Notes"' new EdmCollectionTypeReference(new EdmCollectionType(EdmCoreModel.Instance.GetString(true)))); " is 135.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            orderType.AddStructuralProperty("OrderDetails"' new EdmCollectionTypeReference(new EdmCollectionType(new EdmComplexTypeReference(orderDetailType' true)))); " is 155.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var getCustomerForAddressFunction = new EdmFunction(ns' "GetCustomerForAddress"' customerTypeReference' true' new EdmPathExpression("customers")' true); " is 152.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            //Bound Function : Bound to Collection Of Entity' Parameter is Collection of Complex Value' Return Collection Of Entity. " is 120.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var getCustomersForAddressesFunction = new EdmFunction(ns' "GetCustomersForAddresses"' customerCollectionTypeReference' true' new EdmPathExpression("customers")' true); " is 168.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var getCustomerForAddressesFunction = new EdmFunction(ns' "GetCustomerForAddresses"' customerTypeReference' true' new EdmPathExpression("customers")' true); " is 156.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var verifyCustomerAddressFunction = new EdmFunction(ns' "VerifyCustomerAddress"' customerTypeReference' true' new EdmPathExpression("customer")' true); " is 151.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var verifyCustomerByOrderFunction = new EdmFunction(ns' "VerifyCustomerByOrder"' customerTypeReference' true' new EdmPathExpression("customer")' true); " is 151.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var getOrdersFromCustomerByNotesFunction = new EdmFunction(ns' "GetOrdersFromCustomerByNotes"' orderCollectionTypeReference' true' new EdmPathExpression("customer/Orders")' true); " is 179.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var getOrdersByNoteFunction = new EdmFunction(ns' "GetOrdersByNote"' orderCollectionTypeReference' true' new EdmPathExpression("orders")' true); " is 144.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var getOrderByNoteFunction = new EdmFunction(ns' "GetOrderByNote"' orderTypeReference' true' new EdmPathExpression("orders")' true); " is 132.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var getCustomersByOrdersFunction = new EdmFunction(ns' "GetCustomersByOrders"' customerCollectionTypeReference' true' new EdmPathExpression("customers")' true); " is 160.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var getCustomerByOrderFunction = new EdmFunction(ns' "GetCustomerByOrder"' customerTypeReference' true' new EdmPathExpression("customers")' true); " is 146.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var getCustomersByOrdersUnboundFunction = new EdmFunction(ns' "GetCustomersByOrders"' customerCollectionTypeReference' false' null' true); " is 138.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            defaultContainer.AddFunctionImport(getCustomersByOrdersUnboundFunction.Name' getCustomersByOrdersUnboundFunction' new EdmPathExpression("Customers")); " is 150.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var getCustomerByOrderUnboundFunction = new EdmFunction(ns' "GetCustomerByOrder"' customerTypeReference' false' null' true); " is 124.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            defaultContainer.AddFunctionImport(getCustomerByOrderUnboundFunction.Name' getCustomerByOrderUnboundFunction' new EdmPathExpression("Customers")); " is 146.
Long Statement,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The length of the statement  "            var getCustomerAddressUnboundFunction = new EdmFunction(ns' "GetCustomerAddress"' addressTypeReference' false' null' true); " is 123.
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Customers.AddRange(new List<Customer>              {                  new Customer()                  {                      ID = 1'                      FirstName = "Bob"'                      LastName = "Cat"'                      Emails = new Collection<string> { "abc@abc.com" }'                                            Address = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                      }'                  }'                  new Customer()                  {                      ID = 2'                      FirstName = "Jill"'                      LastName = "Jones"'                      Emails = new Collection<string>()'                  }'                  new Customer()                  {                      ID = 3'                      FirstName = "Jacob"'                      LastName = "Zip"'                      Emails = new Collection<string> { null }'                      Address = new Address()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                      }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Customers.AddRange(new List<Customer>              {                  new Customer()                  {                      ID = 1'                      FirstName = "Bob"'                      LastName = "Cat"'                      Emails = new Collection<string> { "abc@abc.com" }'                                            Address = new HomeAddress()                      {                          City = "Tokyo"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                          FamilyName = "Cats"'                      }'                  }'                  new Customer()                  {                      ID = 2'                      FirstName = "Jill"'                      LastName = "Jones"'                      Emails = new Collection<string>()'                  }'                  new Customer()                  {                      ID = 3'                      FirstName = "Jacob"'                      LastName = "Zip"'                      Emails = new Collection<string> { null }'                      Address = new Address()                      {                          City = "Sydney"'                          PostalCode = "98052"'                          Street = "1 Microsoft Way"'                      }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders.AddRange(new List<Order>()              {                  new Order()                  {                      ID = 0'                      OrderDate = new DateTimeOffset(2011' 5' 29' 14' 21' 12' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "child"}'                      OrderDetails = new List<OrderDetail>{}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'                  new Order()                  {                      ID = 1'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>()'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}                  }'                  new Order()                  {                      ID = 2'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"1111"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                    }'                  new Order()                  {                      ID = 3'                      OrderDate = new DateTimeOffset(2011' 3' 4' 16' 3' 57' TimeSpan.FromHours(-8))'                      Notes = new List<string>{"child"' "parent"}'                      OrderDetails = new List<OrderDetail>{ new OrderDetail { Quantity = 1' UnitPrice = 1.0f }}'                      InfoFromCustomer = new InfoFromCustomer(){ CustomerMessage = "XXL" }                  }'              });
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Customers[2].Orders.Add(this.Orders[0]);
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceDataSource,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceDataSource.cs,Initialize,The following statement contains a magic number: this.Orders[2].Customer = this.Customers[0];
Magic Number,Microsoft.Test.OData.Services.ODataOperationService,OperationServiceInMemoryModel,C:\research\architectureSmells\repos\OData_odata.net\test\EndToEndTests\Services\ODataOperationService\OperationServiceInMemoryModel.cs,CreateODataServiceModel,The following statement contains a magic number: customerLevelType.AddMember("Gold"' new EdmEnumMemberValue(2));
