Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,PokerBot,Player,C:\repos\JosephDevaney_PokerBot\PokerBot\Player.cs,MakeAction,Cyclomatic complexity of the method is 11
Complex Method,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,Cyclomatic complexity of the method is 16
Long Statement,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The length of the statement  "			actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound); " is 124.
Long Statement,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The length of the statement  "				actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound); " is 124.
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,Card,The following statement contains a magic number: suit = r.Next (3);  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,Card,The following statement contains a magic number: rank = r.Next (1' 13);  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (suit == 0) {  	s = 'S';  }  else if (suit == 1) {  	s = 'H';  }  else if (suit == 2) {  	s = 'D';  }  else {  	s = 'C';  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (suit == 1) {  	s = 'H';  }  else if (suit == 2) {  	s = 'D';  }  else {  	s = 'C';  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (suit == 2) {  	s = 'D';  }  else {  	s = 'C';  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 10) {  	r = 'T';  }  else if (rank == 11) {  	r = 'J';  }  else if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 10) {  	r = 'T';  }  else if (rank == 11) {  	r = 'J';  }  else if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 10) {  	r = 'T';  }  else if (rank == 11) {  	r = 'J';  }  else if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 10) {  	r = 'T';  }  else if (rank == 11) {  	r = 'J';  }  else if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 10) {  	r = 'T';  }  else if (rank == 11) {  	r = 'J';  }  else if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 10) {  	r = 'T';  }  else if (rank == 11) {  	r = 'J';  }  else if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 11) {  	r = 'J';  }  else if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 11) {  	r = 'J';  }  else if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 11) {  	r = 'J';  }  else if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 11) {  	r = 'J';  }  else if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 11) {  	r = 'J';  }  else if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 12) {  	r = 'Q';  }  else if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 13) {  	r = 'K';  }  else if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: if (rank == 14) {  	r = 'A';  }  else {  	r = Convert.ToChar (rank + 48);  }  
Magic Number,PokerBot,Card,C:\repos\JosephDevaney_PokerBot\PokerBot\Card.cs,ToString,The following statement contains a magic number: r = Convert.ToChar (rank + 48);  
Magic Number,PokerBot,Deck,C:\repos\JosephDevaney_PokerBot\PokerBot\Deck.cs,Deck,The following statement contains a magic number: cards = new Card[52];  
Magic Number,PokerBot,Deck,C:\repos\JosephDevaney_PokerBot\PokerBot\Deck.cs,Deck,The following statement contains a magic number: top = 51;  
Magic Number,PokerBot,Deck,C:\repos\JosephDevaney_PokerBot\PokerBot\Deck.cs,Deck,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	for (int j = 2; j < 15; j++) {  		cards [index].Suit = i;  		cards [index].Rank = j;  		index++;  	}  }  
Magic Number,PokerBot,Deck,C:\repos\JosephDevaney_PokerBot\PokerBot\Deck.cs,Deck,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	for (int j = 2; j < 15; j++) {  		cards [index].Suit = i;  		cards [index].Rank = j;  		index++;  	}  }  
Magic Number,PokerBot,Deck,C:\repos\JosephDevaney_PokerBot\PokerBot\Deck.cs,Deck,The following statement contains a magic number: for (int i = 0; i < 4; i++) {  	for (int j = 2; j < 15; j++) {  		cards [index].Suit = i;  		cards [index].Rank = j;  		index++;  	}  }  
Magic Number,PokerBot,Deck,C:\repos\JosephDevaney_PokerBot\PokerBot\Deck.cs,Deck,The following statement contains a magic number: for (int j = 2; j < 15; j++) {  	cards [index].Suit = i;  	cards [index].Rank = j;  	index++;  }  
Magic Number,PokerBot,Deck,C:\repos\JosephDevaney_PokerBot\PokerBot\Deck.cs,Deck,The following statement contains a magic number: for (int j = 2; j < 15; j++) {  	cards [index].Suit = i;  	cards [index].Rank = j;  	index++;  }  
Magic Number,PokerBot,Deck,C:\repos\JosephDevaney_PokerBot\PokerBot\Deck.cs,Shuffle,The following statement contains a magic number: top = 51;  
Magic Number,PokerBot,Deck,C:\repos\JosephDevaney_PokerBot\PokerBot\Deck.cs,Deal,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	for (int j = 0; j < players.Length; j++) {  		player = NextPlayer (player' players.Length);  		players [player].SetCard (cards [top--]' i);  	}  }  
Magic Number,PokerBot,Hand,C:\repos\JosephDevaney_PokerBot\PokerBot\Hand.cs,Hand,The following statement contains a magic number: size = 5;  
Magic Number,PokerBot,Hand,C:\repos\JosephDevaney_PokerBot\PokerBot\Hand.cs,Hand,The following statement contains a magic number: hand = new Card[5];  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 4)// 4-of-a-kind   {  	handValue [0] = 2;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 4)// 4-of-a-kind   {  	handValue [0] = 2;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 4)// 4-of-a-kind   {  	handValue [0] = 2;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 4)// 4-of-a-kind   {  	handValue [0] = 2;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 4)// 4-of-a-kind   {  	handValue [0] = 2;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 4)// 4-of-a-kind   {  	handValue [0] = 2;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 4)// 4-of-a-kind   {  	handValue [0] = 2;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 4)// 4-of-a-kind   {  	handValue [0] = 2;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 4)// 4-of-a-kind   {  	handValue [0] = 2;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 4)// 4-of-a-kind   {  	handValue [0] = 2;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 4)// 4-of-a-kind   {  	handValue [0] = 2;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 4)// 4-of-a-kind   {  	handValue [0] = 2;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: handValue [0] = 2;  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 2)// Full-House   {  	handValue [0] = 3;  }  else if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: handValue [0] = 3;  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 3 && hist [0' 1] == 1)// 3-of-a-kind   {  	handValue [0] = 6;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: handValue [0] = 6;  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 2 && hist [0' 1] == 2)// 2 Pair   {  	handValue [0] = 7;  }  else if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: handValue [0] = 7;  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: if (hist [0' 0] == 2 && hist [0' 1] == 1)// 1 Pair   {  	handValue [0] = 8;  }  else {  	handValue [0] = StraightOrFlush (hist' hand);  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,HandValue,The following statement contains a magic number: handValue [0] = 8;  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,StraightOrFlush,The following statement contains a magic number: if (hand.Get (0).Rank - hand.Get (hand.Size - 1).Rank == 4) {  	isStraight = true;  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,StraightOrFlush,The following statement contains a magic number: if (isFlush && isStraight) {  	return 1;  	// Straight Flush  }  else if (isFlush) {  	return 4;  	// Flush  }  else if (isStraight) {  	return 5;  	// Straight  }  else {  	return 9;  	// High Card  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,StraightOrFlush,The following statement contains a magic number: if (isFlush && isStraight) {  	return 1;  	// Straight Flush  }  else if (isFlush) {  	return 4;  	// Flush  }  else if (isStraight) {  	return 5;  	// Straight  }  else {  	return 9;  	// High Card  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,StraightOrFlush,The following statement contains a magic number: if (isFlush && isStraight) {  	return 1;  	// Straight Flush  }  else if (isFlush) {  	return 4;  	// Flush  }  else if (isStraight) {  	return 5;  	// Straight  }  else {  	return 9;  	// High Card  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,StraightOrFlush,The following statement contains a magic number: if (isFlush) {  	return 4;  	// Flush  }  else if (isStraight) {  	return 5;  	// Straight  }  else {  	return 9;  	// High Card  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,StraightOrFlush,The following statement contains a magic number: if (isFlush) {  	return 4;  	// Flush  }  else if (isStraight) {  	return 5;  	// Straight  }  else {  	return 9;  	// High Card  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,StraightOrFlush,The following statement contains a magic number: if (isFlush) {  	return 4;  	// Flush  }  else if (isStraight) {  	return 5;  	// Straight  }  else {  	return 9;  	// High Card  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,StraightOrFlush,The following statement contains a magic number: return 4;  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,StraightOrFlush,The following statement contains a magic number: if (isStraight) {  	return 5;  	// Straight  }  else {  	return 9;  	// High Card  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,StraightOrFlush,The following statement contains a magic number: if (isStraight) {  	return 5;  	// Straight  }  else {  	return 9;  	// High Card  }  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,StraightOrFlush,The following statement contains a magic number: return 5;  
Magic Number,PokerBot,HandEvaluator,C:\repos\JosephDevaney_PokerBot\PokerBot\HandEvaluator.cs,StraightOrFlush,The following statement contains a magic number: return 9;  
Magic Number,PokerBot,Hero,C:\repos\JosephDevaney_PokerBot\PokerBot\Hero.cs,Action,The following statement contains a magic number: if ((ContribToPot * 2) == pot) {  	options.Add ("check");  	options.Add ("bet");  }  else if ((ContribToPot * 2) < pot) {  	options.Add ("fold");  	options.Add ("call");  	if (totalBets < 4) {  		options.Add ("raise");  	}  }  
Magic Number,PokerBot,Hero,C:\repos\JosephDevaney_PokerBot\PokerBot\Hero.cs,Action,The following statement contains a magic number: if ((ContribToPot * 2) == pot) {  	options.Add ("check");  	options.Add ("bet");  }  else if ((ContribToPot * 2) < pot) {  	options.Add ("fold");  	options.Add ("call");  	if (totalBets < 4) {  		options.Add ("raise");  	}  }  
Magic Number,PokerBot,Hero,C:\repos\JosephDevaney_PokerBot\PokerBot\Hero.cs,Action,The following statement contains a magic number: if ((ContribToPot * 2) == pot) {  	options.Add ("check");  	options.Add ("bet");  }  else if ((ContribToPot * 2) < pot) {  	options.Add ("fold");  	options.Add ("call");  	if (totalBets < 4) {  		options.Add ("raise");  	}  }  
Magic Number,PokerBot,Hero,C:\repos\JosephDevaney_PokerBot\PokerBot\Hero.cs,Action,The following statement contains a magic number: if ((ContribToPot * 2) < pot) {  	options.Add ("fold");  	options.Add ("call");  	if (totalBets < 4) {  		options.Add ("raise");  	}  }  
Magic Number,PokerBot,Hero,C:\repos\JosephDevaney_PokerBot\PokerBot\Hero.cs,Action,The following statement contains a magic number: if ((ContribToPot * 2) < pot) {  	options.Add ("fold");  	options.Add ("call");  	if (totalBets < 4) {  		options.Add ("raise");  	}  }  
Magic Number,PokerBot,Hero,C:\repos\JosephDevaney_PokerBot\PokerBot\Hero.cs,Action,The following statement contains a magic number: if (totalBets < 4) {  	options.Add ("raise");  }  
Magic Number,PokerBot,Player,C:\repos\JosephDevaney_PokerBot\PokerBot\Player.cs,Player,The following statement contains a magic number: chipStack = 100;  
Magic Number,PokerBot,Player,C:\repos\JosephDevaney_PokerBot\PokerBot\Player.cs,DisplayHand,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Console.Write (hand.Get (i).ToString () + " ");  }  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Table,The following statement contains a magic number: players = new Player[2];  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Table,The following statement contains a magic number: smallBet = 2;  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,ActionComplete,The following statement contains a magic number: if ((hero.ContribToPot * 2) == pot) {  	allContribEqual = true;  }  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: while (true) {  	Console.Clear ();  	foreach (Player p in players) {  		ShowPlayer (p);  	}  	deck.Shuffle ();  	pot = players [dealer].PostBlind (smallBet / 2);  	curPlay = NextPlayer (dealer);  	pot += players [curPlay].PostBlind (smallBet);  	players [curPlay].NumBets++;  	deck.Burn ();  	deck.Deal (players' dealer);  	hero.DisplayHand ();  	curPlay = dealer;  	betsThisRound = 0;  	while (!ActionComplete ()) {  		actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound);  		if (actionResult == -1) {  			WinByDefault (curPlay);  			break;  		}  		pot += actionResult;  		betsThisRound = hero.NumBets + villain.NumBets;  		curPlay = NextPlayer (curPlay);  	}  	if (actionResult == -1) {  		continue;  	}  	for (int i = 0; i < 3; i++) {  		deck.Burn ();  		curPlay = NextPlayer (dealer);  		for (int j = 0; j < players.Length; j++) {  			discards = players [curPlay].GetDiscards ();  			if (discards != null) {  				players [curPlay].Discard (discards);  				deck.DealDiscards (players [curPlay]' discards);  				Console.WriteLine (players [curPlay].Name + " draws " + discards.Length + " cards.");  			}  			else {  				Console.WriteLine (players [curPlay].Name + " stands pat.");  			}  			curPlay = NextPlayer (curPlay);  		}  		hero.DisplayHand ();  		curPlay = NextPlayer (dealer);  		if (i == 0) {  			bet = smallBet;  		}  		else {  			bet = smallBet * 2;  		}  		foreach (Player p in players) {  			p.ActedThisRound = false;  			p.NumBets = 0;  		}  		betsThisRound = 0;  		while (!ActionComplete ()) {  			actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound);  			if (actionResult == -1) {  				WinByDefault (curPlay);  				break;  			}  			pot += actionResult;  			betsThisRound = hero.NumBets + villain.NumBets;  			curPlay = NextPlayer (curPlay);  		}  		if (actionResult == -1) {  			break;  		}  	}  	if (actionResult == -1) {  		continue;  	}  	hero.SortHand ();  	Console.Write ("\n\nHero: ");  	hero.DisplayHand ();  	villain.SortHand ();  	Console.Write ("Villain: ");  	villain.DisplayHand ();  	if (hero == villain) {  		Console.WriteLine ("\n\nIt's a draw' both players win!");  		hero.ChipStack += pot / 2;  		villain.ChipStack += pot / 2;  	}  	else {  		Console.WriteLine ("\n\n" + Winner () + " wins");  	}  	Console.WriteLine ("\nPress any key to continue!");  	Console.ReadKey ();  	ResetHand ();  	dealer = NextPlayer (dealer);  }  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: while (true) {  	Console.Clear ();  	foreach (Player p in players) {  		ShowPlayer (p);  	}  	deck.Shuffle ();  	pot = players [dealer].PostBlind (smallBet / 2);  	curPlay = NextPlayer (dealer);  	pot += players [curPlay].PostBlind (smallBet);  	players [curPlay].NumBets++;  	deck.Burn ();  	deck.Deal (players' dealer);  	hero.DisplayHand ();  	curPlay = dealer;  	betsThisRound = 0;  	while (!ActionComplete ()) {  		actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound);  		if (actionResult == -1) {  			WinByDefault (curPlay);  			break;  		}  		pot += actionResult;  		betsThisRound = hero.NumBets + villain.NumBets;  		curPlay = NextPlayer (curPlay);  	}  	if (actionResult == -1) {  		continue;  	}  	for (int i = 0; i < 3; i++) {  		deck.Burn ();  		curPlay = NextPlayer (dealer);  		for (int j = 0; j < players.Length; j++) {  			discards = players [curPlay].GetDiscards ();  			if (discards != null) {  				players [curPlay].Discard (discards);  				deck.DealDiscards (players [curPlay]' discards);  				Console.WriteLine (players [curPlay].Name + " draws " + discards.Length + " cards.");  			}  			else {  				Console.WriteLine (players [curPlay].Name + " stands pat.");  			}  			curPlay = NextPlayer (curPlay);  		}  		hero.DisplayHand ();  		curPlay = NextPlayer (dealer);  		if (i == 0) {  			bet = smallBet;  		}  		else {  			bet = smallBet * 2;  		}  		foreach (Player p in players) {  			p.ActedThisRound = false;  			p.NumBets = 0;  		}  		betsThisRound = 0;  		while (!ActionComplete ()) {  			actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound);  			if (actionResult == -1) {  				WinByDefault (curPlay);  				break;  			}  			pot += actionResult;  			betsThisRound = hero.NumBets + villain.NumBets;  			curPlay = NextPlayer (curPlay);  		}  		if (actionResult == -1) {  			break;  		}  	}  	if (actionResult == -1) {  		continue;  	}  	hero.SortHand ();  	Console.Write ("\n\nHero: ");  	hero.DisplayHand ();  	villain.SortHand ();  	Console.Write ("Villain: ");  	villain.DisplayHand ();  	if (hero == villain) {  		Console.WriteLine ("\n\nIt's a draw' both players win!");  		hero.ChipStack += pot / 2;  		villain.ChipStack += pot / 2;  	}  	else {  		Console.WriteLine ("\n\n" + Winner () + " wins");  	}  	Console.WriteLine ("\nPress any key to continue!");  	Console.ReadKey ();  	ResetHand ();  	dealer = NextPlayer (dealer);  }  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: while (true) {  	Console.Clear ();  	foreach (Player p in players) {  		ShowPlayer (p);  	}  	deck.Shuffle ();  	pot = players [dealer].PostBlind (smallBet / 2);  	curPlay = NextPlayer (dealer);  	pot += players [curPlay].PostBlind (smallBet);  	players [curPlay].NumBets++;  	deck.Burn ();  	deck.Deal (players' dealer);  	hero.DisplayHand ();  	curPlay = dealer;  	betsThisRound = 0;  	while (!ActionComplete ()) {  		actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound);  		if (actionResult == -1) {  			WinByDefault (curPlay);  			break;  		}  		pot += actionResult;  		betsThisRound = hero.NumBets + villain.NumBets;  		curPlay = NextPlayer (curPlay);  	}  	if (actionResult == -1) {  		continue;  	}  	for (int i = 0; i < 3; i++) {  		deck.Burn ();  		curPlay = NextPlayer (dealer);  		for (int j = 0; j < players.Length; j++) {  			discards = players [curPlay].GetDiscards ();  			if (discards != null) {  				players [curPlay].Discard (discards);  				deck.DealDiscards (players [curPlay]' discards);  				Console.WriteLine (players [curPlay].Name + " draws " + discards.Length + " cards.");  			}  			else {  				Console.WriteLine (players [curPlay].Name + " stands pat.");  			}  			curPlay = NextPlayer (curPlay);  		}  		hero.DisplayHand ();  		curPlay = NextPlayer (dealer);  		if (i == 0) {  			bet = smallBet;  		}  		else {  			bet = smallBet * 2;  		}  		foreach (Player p in players) {  			p.ActedThisRound = false;  			p.NumBets = 0;  		}  		betsThisRound = 0;  		while (!ActionComplete ()) {  			actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound);  			if (actionResult == -1) {  				WinByDefault (curPlay);  				break;  			}  			pot += actionResult;  			betsThisRound = hero.NumBets + villain.NumBets;  			curPlay = NextPlayer (curPlay);  		}  		if (actionResult == -1) {  			break;  		}  	}  	if (actionResult == -1) {  		continue;  	}  	hero.SortHand ();  	Console.Write ("\n\nHero: ");  	hero.DisplayHand ();  	villain.SortHand ();  	Console.Write ("Villain: ");  	villain.DisplayHand ();  	if (hero == villain) {  		Console.WriteLine ("\n\nIt's a draw' both players win!");  		hero.ChipStack += pot / 2;  		villain.ChipStack += pot / 2;  	}  	else {  		Console.WriteLine ("\n\n" + Winner () + " wins");  	}  	Console.WriteLine ("\nPress any key to continue!");  	Console.ReadKey ();  	ResetHand ();  	dealer = NextPlayer (dealer);  }  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: while (true) {  	Console.Clear ();  	foreach (Player p in players) {  		ShowPlayer (p);  	}  	deck.Shuffle ();  	pot = players [dealer].PostBlind (smallBet / 2);  	curPlay = NextPlayer (dealer);  	pot += players [curPlay].PostBlind (smallBet);  	players [curPlay].NumBets++;  	deck.Burn ();  	deck.Deal (players' dealer);  	hero.DisplayHand ();  	curPlay = dealer;  	betsThisRound = 0;  	while (!ActionComplete ()) {  		actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound);  		if (actionResult == -1) {  			WinByDefault (curPlay);  			break;  		}  		pot += actionResult;  		betsThisRound = hero.NumBets + villain.NumBets;  		curPlay = NextPlayer (curPlay);  	}  	if (actionResult == -1) {  		continue;  	}  	for (int i = 0; i < 3; i++) {  		deck.Burn ();  		curPlay = NextPlayer (dealer);  		for (int j = 0; j < players.Length; j++) {  			discards = players [curPlay].GetDiscards ();  			if (discards != null) {  				players [curPlay].Discard (discards);  				deck.DealDiscards (players [curPlay]' discards);  				Console.WriteLine (players [curPlay].Name + " draws " + discards.Length + " cards.");  			}  			else {  				Console.WriteLine (players [curPlay].Name + " stands pat.");  			}  			curPlay = NextPlayer (curPlay);  		}  		hero.DisplayHand ();  		curPlay = NextPlayer (dealer);  		if (i == 0) {  			bet = smallBet;  		}  		else {  			bet = smallBet * 2;  		}  		foreach (Player p in players) {  			p.ActedThisRound = false;  			p.NumBets = 0;  		}  		betsThisRound = 0;  		while (!ActionComplete ()) {  			actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound);  			if (actionResult == -1) {  				WinByDefault (curPlay);  				break;  			}  			pot += actionResult;  			betsThisRound = hero.NumBets + villain.NumBets;  			curPlay = NextPlayer (curPlay);  		}  		if (actionResult == -1) {  			break;  		}  	}  	if (actionResult == -1) {  		continue;  	}  	hero.SortHand ();  	Console.Write ("\n\nHero: ");  	hero.DisplayHand ();  	villain.SortHand ();  	Console.Write ("Villain: ");  	villain.DisplayHand ();  	if (hero == villain) {  		Console.WriteLine ("\n\nIt's a draw' both players win!");  		hero.ChipStack += pot / 2;  		villain.ChipStack += pot / 2;  	}  	else {  		Console.WriteLine ("\n\n" + Winner () + " wins");  	}  	Console.WriteLine ("\nPress any key to continue!");  	Console.ReadKey ();  	ResetHand ();  	dealer = NextPlayer (dealer);  }  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: while (true) {  	Console.Clear ();  	foreach (Player p in players) {  		ShowPlayer (p);  	}  	deck.Shuffle ();  	pot = players [dealer].PostBlind (smallBet / 2);  	curPlay = NextPlayer (dealer);  	pot += players [curPlay].PostBlind (smallBet);  	players [curPlay].NumBets++;  	deck.Burn ();  	deck.Deal (players' dealer);  	hero.DisplayHand ();  	curPlay = dealer;  	betsThisRound = 0;  	while (!ActionComplete ()) {  		actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound);  		if (actionResult == -1) {  			WinByDefault (curPlay);  			break;  		}  		pot += actionResult;  		betsThisRound = hero.NumBets + villain.NumBets;  		curPlay = NextPlayer (curPlay);  	}  	if (actionResult == -1) {  		continue;  	}  	for (int i = 0; i < 3; i++) {  		deck.Burn ();  		curPlay = NextPlayer (dealer);  		for (int j = 0; j < players.Length; j++) {  			discards = players [curPlay].GetDiscards ();  			if (discards != null) {  				players [curPlay].Discard (discards);  				deck.DealDiscards (players [curPlay]' discards);  				Console.WriteLine (players [curPlay].Name + " draws " + discards.Length + " cards.");  			}  			else {  				Console.WriteLine (players [curPlay].Name + " stands pat.");  			}  			curPlay = NextPlayer (curPlay);  		}  		hero.DisplayHand ();  		curPlay = NextPlayer (dealer);  		if (i == 0) {  			bet = smallBet;  		}  		else {  			bet = smallBet * 2;  		}  		foreach (Player p in players) {  			p.ActedThisRound = false;  			p.NumBets = 0;  		}  		betsThisRound = 0;  		while (!ActionComplete ()) {  			actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound);  			if (actionResult == -1) {  				WinByDefault (curPlay);  				break;  			}  			pot += actionResult;  			betsThisRound = hero.NumBets + villain.NumBets;  			curPlay = NextPlayer (curPlay);  		}  		if (actionResult == -1) {  			break;  		}  	}  	if (actionResult == -1) {  		continue;  	}  	hero.SortHand ();  	Console.Write ("\n\nHero: ");  	hero.DisplayHand ();  	villain.SortHand ();  	Console.Write ("Villain: ");  	villain.DisplayHand ();  	if (hero == villain) {  		Console.WriteLine ("\n\nIt's a draw' both players win!");  		hero.ChipStack += pot / 2;  		villain.ChipStack += pot / 2;  	}  	else {  		Console.WriteLine ("\n\n" + Winner () + " wins");  	}  	Console.WriteLine ("\nPress any key to continue!");  	Console.ReadKey ();  	ResetHand ();  	dealer = NextPlayer (dealer);  }  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: pot = players [dealer].PostBlind (smallBet / 2);  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	deck.Burn ();  	curPlay = NextPlayer (dealer);  	for (int j = 0; j < players.Length; j++) {  		discards = players [curPlay].GetDiscards ();  		if (discards != null) {  			players [curPlay].Discard (discards);  			deck.DealDiscards (players [curPlay]' discards);  			Console.WriteLine (players [curPlay].Name + " draws " + discards.Length + " cards.");  		}  		else {  			Console.WriteLine (players [curPlay].Name + " stands pat.");  		}  		curPlay = NextPlayer (curPlay);  	}  	hero.DisplayHand ();  	curPlay = NextPlayer (dealer);  	if (i == 0) {  		bet = smallBet;  	}  	else {  		bet = smallBet * 2;  	}  	foreach (Player p in players) {  		p.ActedThisRound = false;  		p.NumBets = 0;  	}  	betsThisRound = 0;  	while (!ActionComplete ()) {  		actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound);  		if (actionResult == -1) {  			WinByDefault (curPlay);  			break;  		}  		pot += actionResult;  		betsThisRound = hero.NumBets + villain.NumBets;  		curPlay = NextPlayer (curPlay);  	}  	if (actionResult == -1) {  		break;  	}  }  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	deck.Burn ();  	curPlay = NextPlayer (dealer);  	for (int j = 0; j < players.Length; j++) {  		discards = players [curPlay].GetDiscards ();  		if (discards != null) {  			players [curPlay].Discard (discards);  			deck.DealDiscards (players [curPlay]' discards);  			Console.WriteLine (players [curPlay].Name + " draws " + discards.Length + " cards.");  		}  		else {  			Console.WriteLine (players [curPlay].Name + " stands pat.");  		}  		curPlay = NextPlayer (curPlay);  	}  	hero.DisplayHand ();  	curPlay = NextPlayer (dealer);  	if (i == 0) {  		bet = smallBet;  	}  	else {  		bet = smallBet * 2;  	}  	foreach (Player p in players) {  		p.ActedThisRound = false;  		p.NumBets = 0;  	}  	betsThisRound = 0;  	while (!ActionComplete ()) {  		actionResult = players [curPlay].Action (pot' smallBet' Math.Abs (hero.ContribToPot - villain.ContribToPot)' betsThisRound);  		if (actionResult == -1) {  			WinByDefault (curPlay);  			break;  		}  		pot += actionResult;  		betsThisRound = hero.NumBets + villain.NumBets;  		curPlay = NextPlayer (curPlay);  	}  	if (actionResult == -1) {  		break;  	}  }  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: if (i == 0) {  	bet = smallBet;  }  else {  	bet = smallBet * 2;  }  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: bet = smallBet * 2;  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: if (hero == villain) {  	Console.WriteLine ("\n\nIt's a draw' both players win!");  	hero.ChipStack += pot / 2;  	villain.ChipStack += pot / 2;  }  else {  	Console.WriteLine ("\n\n" + Winner () + " wins");  }  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: if (hero == villain) {  	Console.WriteLine ("\n\nIt's a draw' both players win!");  	hero.ChipStack += pot / 2;  	villain.ChipStack += pot / 2;  }  else {  	Console.WriteLine ("\n\n" + Winner () + " wins");  }  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: hero.ChipStack += pot / 2;  
Magic Number,PokerBot,Table,C:\repos\JosephDevaney_PokerBot\PokerBot\Table.cs,Play,The following statement contains a magic number: villain.ChipStack += pot / 2;  
Magic Number,PokerBot,Villain,C:\repos\JosephDevaney_PokerBot\PokerBot\Villain.cs,Action,The following statement contains a magic number: if ((ContribToPot * 2) == pot) {  	options.Add ("check");  	options.Add ("bet");  }  else if ((ContribToPot * 2) < pot) {  	options.Add ("call");  	if (totalBets < 4) {  		options.Add ("raise");  	}  }  
Magic Number,PokerBot,Villain,C:\repos\JosephDevaney_PokerBot\PokerBot\Villain.cs,Action,The following statement contains a magic number: if ((ContribToPot * 2) == pot) {  	options.Add ("check");  	options.Add ("bet");  }  else if ((ContribToPot * 2) < pot) {  	options.Add ("call");  	if (totalBets < 4) {  		options.Add ("raise");  	}  }  
Magic Number,PokerBot,Villain,C:\repos\JosephDevaney_PokerBot\PokerBot\Villain.cs,Action,The following statement contains a magic number: if ((ContribToPot * 2) == pot) {  	options.Add ("check");  	options.Add ("bet");  }  else if ((ContribToPot * 2) < pot) {  	options.Add ("call");  	if (totalBets < 4) {  		options.Add ("raise");  	}  }  
Magic Number,PokerBot,Villain,C:\repos\JosephDevaney_PokerBot\PokerBot\Villain.cs,Action,The following statement contains a magic number: if ((ContribToPot * 2) < pot) {  	options.Add ("call");  	if (totalBets < 4) {  		options.Add ("raise");  	}  }  
Magic Number,PokerBot,Villain,C:\repos\JosephDevaney_PokerBot\PokerBot\Villain.cs,Action,The following statement contains a magic number: if ((ContribToPot * 2) < pot) {  	options.Add ("call");  	if (totalBets < 4) {  		options.Add ("raise");  	}  }  
Magic Number,PokerBot,Villain,C:\repos\JosephDevaney_PokerBot\PokerBot\Villain.cs,Action,The following statement contains a magic number: if (totalBets < 4) {  	options.Add ("raise");  }  
