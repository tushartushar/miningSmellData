Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NBi.Testing.Core.Decoration.DataEngineering,DecorationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Decoration\DecorationFactoryTest.cs,GetCommandArgsMock,Cyclomatic complexity of the method is 20
Long Parameter List,NBi.Testing.Core.Calculation.Predicate,PredicateWithoutReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateWithoutReferenceTest.cs,Compare_DateTime_Result,The method has 5 parameters. Parameters: comparerType' hours' minutes' seconds' result
Long Parameter List,NBi.Testing.Core.FlatFile,CsvReaderProxy,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,SplitLine,The method has 5 parameters. Parameters: row' fieldSeparator' textQualifier' escapeTextQualifier' emptyCell
Long Parameter List,NBi.Testing.Core.FlatFile,CsvReaderProxy,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,GetNextRecords,The method has 5 parameters. Parameters: reader' recordSeparator' bufferSize' alreadyRead' extraRead
Long Parameter List,NBi.Testing.Core.FlatFile,CsvReaderProxy,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,Read,The method has 10 parameters. Parameters: stream' encoding' encodingBytesCount' isFirstRowHeader' recordSeparator' fieldSeparator' textQualifier' escapeTextQualifier' emptyCell' missingCell
Long Parameter List,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,Run_MonthDuration_CorrectResult,The method has 6 parameters. Parameters: monthDay' count' stepMonth' expectedDay' expectedMonth' expectedYear
Long Parameter List,NBi.Testing.Core.Hierarchical.Xml,XPathStreamEngine,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Xml\XPathEngineTest.cs,XPathStreamEngine,The method has 5 parameters. Parameters: streamReader' from' selects' prefix' ignoreDefaultNamespace
Long Statement,NBi.Testing.Core.Assemblies,AssemblyManagerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\AssemblyManagerTest.cs,GetInstance_ExistingTypeConstructoreWithZeroParam_InstantiatedAndNotNull,The length of the statement  "            var actual = am.GetInstance(FileOnDisk.GetDirectoryPath() + "NBi.Testing.Core.dll"' "NBi.Testing.Core.Assemblies.Resource.Klass"' null); " is 136.
Long Statement,NBi.Testing.Core.Assemblies,AssemblyManagerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\AssemblyManagerTest.cs,Execute_ExistingType_GetTypeForStaticUsage,The length of the statement  "            var actual = am.GetStatic(FileOnDisk.GetDirectoryPath() + "NBi.Testing.Core.dll"' "NBi.Testing.Core.Assemblies.Resource.StaticKlass"); " is 134.
Long Statement,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_SingleColumn_TwoGroups,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "beta"' 2 }' new object[] { "BETA"' 3 }' new object[] { "alpha"' 4 } }); " is 168.
Long Statement,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "ALPHA"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "ALPHA"' "2"' 40 } }); " is 193.
Long Statement,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumnsWithContext_ThreeGroups,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' "1" }' new object[] { "ALPHA"' "1"' "1" }' new object[] { "beta"' "2"' "2" }' new object[] { "ALPHA"' "2"' "4" } }); " is 197.
Long Statement,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumnsWithContext_ThreeGroups,The length of the statement  "                    new SinglePredication(new TextEqual(false' new ContextScalarResolver<string>(contextArgs))' new ColumnOrdinalIdentifier(1))' " is 124.
Long Statement,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_SingleColumn_TwoGroups,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } }); " is 169.
Long Statement,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "alpha"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "alpha"' "2"' 40 } }); " is 193.
Long Statement,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } }); " is 186.
Long Statement,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_SingleColumn_TwoGroups,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } }); " is 169.
Long Statement,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "alpha"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "alpha"' "2"' 40 } }); " is 193.
Long Statement,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The length of the statement  "            var settings = new SettingsOrdinalResultSet(KeysChoice.AllExpectLast' ValuesChoice.None' NumericAbsoluteTolerance.None); " is 120.
Long Statement,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } }); " is 186.
Long Statement,NBi.Testing.Unit.Core.Calculation.Predication,AndCombinationPredicationTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predication\AndCombinationPredicationTest.cs,Execute_FalseTrue_StopOnFirst,The length of the statement  "            var predication = factory.Instantiate(new[] { leftPredicationMock.Object' rightPredicationMock.Object }' CombinationOperator.And); " is 130.
Long Statement,NBi.Testing.Unit.Core.Calculation.Predication,OrCombinationPredicationTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predication\OrCombinationPredicationTest.cs,Execute_TrueFalse_StopOnFirst,The length of the statement  "            var predication = factory.Instantiate(new[] { leftPredicationMock.Object' rightPredicationMock.Object }' CombinationOperator.Or); " is 129.
Long Statement,NBi.Testing.Unit.Core.Calculation.Predication,XOrCombinationPredicationTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predication\XOrCombinationPredicationTest.cs,Execute_TrueFalseTrue_GoUntilTheEnd,The length of the statement  "            var predication = factory.Instantiate(new[] { predicationMock1.Object' predicationMock2.Object' predicationMock3.Object }' CombinationOperator.XOr); " is 148.
Long Statement,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_And_CorrectResult,The length of the statement  "            var filter = factory.Instantiate(CombinationOperator.And' new[] { predication1.Object' predication2.Object }' new Context(null' aliases' Array.Empty<IColumnExpression>())); " is 172.
Long Statement,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_AndWillNotEvaluateAll_CorrectResult,The length of the statement  "            var filter = factory.Instantiate(CombinationOperator.And' new[] { predication1.Object' predication2.Object }' new Context(null' aliases' Array.Empty<IColumnExpression>())); " is 172.
Long Statement,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The length of the statement  "            var filter = factory.Instantiate(CombinationOperator.Or' new[] { predication1.Object' predication2.Object }' new Context(null' aliases' Array.Empty<IColumnExpression>())); " is 171.
Long Statement,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_OrWillNotEvaluateAll_CorrectResult,The length of the statement  "            var filter = factory.Instantiate(CombinationOperator.Or' new[] { predication1.Object' predication2.Object }' new Context(null' aliases' Array.Empty<IColumnExpression>())); " is 171.
Long Statement,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The length of the statement  "            var filter = factory.Instantiate(CombinationOperator.XOr' new[] { predication1.Object' predication2.Object }' new Context(null' aliases' Array.Empty<IColumnExpression>())); " is 172.
Long Statement,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2OneKey_ResultSetReduced,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } }); " is 169.
Long Statement,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2None_ResultSetReduced,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } }); " is 169.
Long Statement,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_NumericVariablePartOfDictionary_PointlessVariableIsNotEvaluated,The length of the statement  "            var variables = new Dictionary<string' ITestVariable>() { { "var"' variableUsed.Object }' { "x"' variablePointless.Object } }; " is 126.
Long Statement,NBi.Testing.Core.Calculation.Ranking,BottomRankingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Ranking\BottomRankingTest.cs,Apply_Exp_Success,The length of the statement  "            var ranking = new BottomRanking(new ColumnNameIdentifier("exp")' columnType' Enumerable.Repeat(alias' 1)' Enumerable.Repeat(exp' 1)); " is 133.
Long Statement,NBi.Testing.Core.Calculation.Ranking,TopRankingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Ranking\TopRankingTest.cs,Apply_Exp_Success,The length of the statement  "            var ranking = new TopRanking(new ColumnNameIdentifier("exp")' columnType' Enumerable.Repeat(alias' 1)' Enumerable.Repeat(exp' 1)); " is 130.
Long Statement,NBi.Testing.Core.Decoration.DataEngineering,DecorationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Decoration\DecorationFactoryTest.cs,GetCommandArgsMock,The length of the statement  "                case Type x when x == typeof(IBatchRunCommandArgs): return Mock.Of<IBatchRunCommandArgs>(m => m.ConnectionString == ConnectionStringReader.GetSqlClient()); " is 155.
Long Statement,NBi.Testing.Core.Decoration.DataEngineering,DecorationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Decoration\DecorationFactoryTest.cs,GetCommandArgsMock,The length of the statement  "                case Type x when x == typeof(ILoadCommandArgs): return Mock.Of<ILoadCommandArgs>(m => m.ConnectionString == ConnectionStringReader.GetSqlClient()); " is 147.
Long Statement,NBi.Testing.Core.Decoration.DataEngineering,DecorationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Decoration\DecorationFactoryTest.cs,GetCommandArgsMock,The length of the statement  "                case Type x when x == typeof(IResetCommandArgs): return Mock.Of<IResetCommandArgs>(m => m.ConnectionString == ConnectionStringReader.GetSqlClient()); " is 149.
Long Statement,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_BasicMathValid_True,The length of the statement  "            var result = validator.Execute(new Dictionary<string' object>()' expressions).Aggregate(true' (total' r) => total && r.IsValid); " is 128.
Long Statement,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_BasicMathInvalid_False,The length of the statement  "            var result = validator.Execute(new Dictionary<string' object>()' expressions).Aggregate(true' (total' r) => total && r.IsValid); " is 128.
Long Statement,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileMissingCell_CorrectResults,The length of the statement  "                var dataTable = reader.Read(stream' Encoding.UTF8' 0' false' recordSeparator' fieldSeparator' '\"'' '\"'' "_"' missingCell); " is 124.
Long Statement,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileEmptyCell_CorrectResults,The length of the statement  "                var dataTable = reader.Read(stream' Encoding.UTF8' 0' false' recordSeparator' fieldSeparator' '\"'' '\"'' emptyCell' "_"); " is 122.
Long Statement,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_Example_FirstColumnIsCorrect,The length of the statement  "                Assert.That(result.Select(x => ((x as IEnumerable<object>).ElementAt(0) as string).Length)' Is.All.EqualTo(6)); //Format is 123-XY " is 130.
Long Statement,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_Example_AllColumnsAreCorrect,The length of the statement  "                Assert.That(result.Select(x => ((x as IEnumerable<object>).ElementAt(0) as string).Length)' Is.All.EqualTo(6)); //Format is 123-XY " is 130.
Long Statement,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_Example_AllColumnsAreCorrect,The length of the statement  "                Assert.That(result.Select(x => (x as IEnumerable<object>).ElementAt(1))' Is.All.EqualTo(1).Or.EqualTo(2)); //All quantity are between 1 and 2 " is 141.
Long Statement,NBi.Testing.Core.Injection,ServiceLocatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Injection\ServiceLocatorTest.cs,GetResultSetResolverFactory_UnderlyingServiceLocatorIsSingleton,The length of the statement  "            var field = typeof(ResultSetResolverFactory).GetField("serviceLocator"' BindingFlags.NonPublic | BindingFlags.Instance); " is 120.
Long Statement,NBi.Testing.Core.Query.Client,OdbcClientFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Client\OdbcClientFactoryTest.cs,Get_Odbc_OdbcConnection,The length of the statement  "            var connStr = "Driver={SQL Server Native Client 10.0};Server=myServerAddress;Database=myDataBase;Uid=myUsername;Pwd=myPassword;"; " is 129.
Long Statement,NBi.Testing.Core.Query.Client,OleDbClientFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Client\OleDbClientFactoryTest.cs,Get_OleDbExcel_OleDbConnection,The length of the statement  "            var connStr = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=c:\\myFolder\\myExcel2007file.xlsx;Extended Properties=\"Excel 12.0 Xml;HDR=YES\";"; " is 145.
Long Statement,NBi.Testing.Core.Query.Client,PowerBIClientFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Client\PowerBIClientFactoryTest.cs,Get_PowerBiDesktop_AdommdConnection,The length of the statement  "            Assert.That((conn as AdomdConnection).ConnectionString' Is.EqualTo(PowerBiDesktopConnectionStringBuilderFake.ConnectionString)); " is 128.
Long Statement,NBi.Testing.Core.Query.Command,OleDbCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\OleDbCommandFactoryTest.cs,Build_TimeoutSpecified_TimeoutSet,The length of the statement  "            var conn = new DbClient(DbProviderFactories.GetFactory("System.Data.OleDb")' typeof(OleDbConnection)' ConnectionStringReader.GetOleDbSql()); " is 140.
Long Statement,NBi.Testing.Core.Query.Command,OleDbCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\OleDbCommandFactoryTest.cs,Build_TimeoutSetToZero_TimeoutSet0Seconds,The length of the statement  "            var conn = new DbClient(DbProviderFactories.GetFactory("System.Data.OleDb")' typeof(OleDbConnection)' ConnectionStringReader.GetOleDbSql()); " is 140.
Long Statement,NBi.Testing.Core.Query.Command,OleDbCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\OleDbCommandFactoryTest.cs,Build_TimeoutSetTo30_TimeoutSet30Seconds,The length of the statement  "            var conn = new DbClient(DbProviderFactories.GetFactory("System.Data.OleDb")' typeof(OleDbConnection)' ConnectionStringReader.GetOleDbSql()); " is 140.
Long Statement,NBi.Testing.Core.Query.Command,OleDbCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\OleDbCommandFactoryTest.cs,Build_CommandTypeSetToText_CommandTypeSetText,The length of the statement  "            var conn = new DbClient(DbProviderFactories.GetFactory("System.Data.OleDb")' typeof(OleDbConnection)' ConnectionStringReader.GetOleDbSql()); " is 140.
Long Statement,NBi.Testing.Core.Query.Command,OleDbCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\OleDbCommandFactoryTest.cs,Build_CommandTypeSetToStoredProcedure_CommandTypeSetStoredProcedure,The length of the statement  "            var conn = new DbClient(DbProviderFactories.GetFactory("System.Data.OleDb")' typeof(OleDbConnection)' ConnectionStringReader.GetOleDbSql()); " is 140.
Long Statement,NBi.Testing.Core.Query.Command,SqlCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\SqlCommandFactoryTest.cs,Build_TimeoutSpecified_TimeoutSet,The length of the statement  "            var conn = new DbClient(DbProviderFactories.GetFactory("System.Data.SqlClient")' typeof(SqlConnection)' "Data Source=server;Initial Catalog=database;Integrated Security=SSPI"); " is 176.
Long Statement,NBi.Testing.Core.Query.Command,SqlCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\SqlCommandFactoryTest.cs,Build_TimeoutSetToZero_TimeoutSet0Seconds,The length of the statement  "            var conn = new DbClient(DbProviderFactories.GetFactory("System.Data.SqlClient")' typeof(SqlConnection)' "Data Source=server;Initial Catalog=database;Integrated Security=SSPI"); " is 176.
Long Statement,NBi.Testing.Core.Query.Command,SqlCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\SqlCommandFactoryTest.cs,Build_TimeoutSetTo30_TimeoutSet30Seconds,The length of the statement  "            var conn = new DbClient(DbProviderFactories.GetFactory("System.Data.SqlClient")' typeof(SqlConnection)' "Data Source=server;Initial Catalog=database;Integrated Security=SSPI"); " is 176.
Long Statement,NBi.Testing.Core.Query.Command,SqlCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\SqlCommandFactoryTest.cs,Build_CommandTypeSetToText_CommandTypeSetText,The length of the statement  "            var conn = new DbClient(DbProviderFactories.GetFactory("System.Data.SqlClient")' typeof(SqlConnection)' "Data Source=server;Initial Catalog=database;Integrated Security=SSPI"); " is 176.
Long Statement,NBi.Testing.Core.Query.Command,SqlCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\SqlCommandFactoryTest.cs,Build_CommandTypeSetToStoredProcedure_CommandTypeSetStoredProcedure,The length of the statement  "            var conn = new DbClient(DbProviderFactories.GetFactory("System.Data.SqlClient")' typeof(SqlConnection)' "Data Source=server;Initial Catalog=database;Integrated Security=SSPI"); " is 176.
Long Statement,NBi.Testing.Core.Query,QueryParameterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\QueryParameterTest.cs,GetValue_Variable_CorrectValue,The length of the statement  "            var resolver = new GlobalVariableScalarResolver<object>("alpha"' new Dictionary<string' ITestVariable>() {{ "alpha"' variable }}); " is 130.
Long Statement,NBi.Testing.Core.Query,QueryParameterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\QueryParameterTest.cs,GetValue_Variable_GetValueCalledOnce,The length of the statement  "            var resolver = new GlobalVariableScalarResolver<object>("alpha"' new Dictionary<string' ITestVariable>() { { "alpha"' new GlobalVariable(internalResolverMock.Object) } }); " is 171.
Long Statement,NBi.Testing.Core.Query.Resolver,EmbeddedQueryResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Resolver\EmbeddedQueryResolverTest.cs,BuildArgs,The length of the statement  "                new List<IQueryTemplateVariable>() { Mock.Of<IQueryTemplateVariable>(x => x.Name == "operator" && x.Value == "not in") }' " is 121.
Long Statement,NBi.Testing.Core.Query.Resolver,ReportDataSetQueryResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Resolver\ReportDataSetQueryResolverTest.cs,BuildArgs,The length of the statement  "                new List<IQueryTemplateVariable>() { Mock.Of<IQueryTemplateVariable>(x => x.Name == "operator" && x.Value == "not in" ) }' " is 122.
Long Statement,NBi.Testing.Core.Query.Resolver,SharedDataSetQueryResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Resolver\SharedDataSetQueryResolverTest.cs,BuildArgs,The length of the statement  "                new List<IQueryTemplateVariable>() { Mock.Of<IQueryTemplateVariable>(x => x.Name == "operator" && x.Value == "not in" ) }' " is 122.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } }); " is 149.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } }); " is 149.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } }); " is 149.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } }); " is 149.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectEngineTest.cs,Execute_DuplicatedIdentifiersAndChangeOrder_ColumnFilteredOrderedChanged,The length of the statement  "            var filter = new ProjectEngine(new ProjectArgs(new[] { factory.Instantiate("#2")' factory.Instantiate(id1)' factory.Instantiate(id2) })); " is 137.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Renaming,NewNameRenamingEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Renaming\NewNameRenamingEngineTest.cs,Execute_ExistingColumnByOrdinal_ColumnRenamed,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new[] { "100'12"' "Alpha" }' new[] { "100"' "Beta" }' new[] { "0'1"' "Gamma" } }); " is 134.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Renaming,NewNameRenamingEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Renaming\NewNameRenamingEngineTest.cs,Execute_ExistingColumnByName_ColumnRenamed,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new[] { "100'12"' "Alpha" }' new[] { "100"' "Beta" }' new[] { "0'1"' "Gamma" } }); " is 134.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Renaming,NewNameRenamingEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Renaming\NewNameRenamingEngineTest.cs,Execute_NotExistingColumnFailureStrategy_IgnoreIssue,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new[] { "100'12"' "Alpha" }' new[] { "100"' "Beta" }' new[] { "0'1"' "Gamma" } }); " is 134.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Renaming,NewNameRenamingEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Renaming\NewNameRenamingEngineTest.cs,Execute_NotExistingColumnSkipStrategy_IgnoreIssue,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new[] { "100'12"' "Alpha" }' new[] { "100"' "Beta" }' new[] { "0'1"' "Gamma" } }); " is 134.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeySingleValue_ExpectedResultSet,The length of the statement  "                    { Mock.Of<IColumnDefinitionLight>(x => x.Identifier == new ColumnNameIdentifier("keyColumn") && x.Type == ColumnType.Text) } " is 124.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The length of the statement  "                    { Mock.Of<IColumnDefinitionLight>(x => x.Identifier == new ColumnNameIdentifier("keyColumn") && x.Type == ColumnType.Text) } " is 124.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["A_value1Column"]) == 1); " is 130.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["B_value1Column"]) == 2); " is 130.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta")["A_value1Column"]) == 3); " is 129.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta")["B_value1Column"]) == 4); " is 129.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["A_value2Column"]) == -1); " is 131.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["B_value2Column"]) == -2); " is 131.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta")["A_value2Column"]) == -3); " is 130.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta")["B_value2Column"]) == -4); " is 130.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The length of the statement  "                        Mock.Of<IColumnDefinitionLight>(x => x.Identifier == new ColumnNameIdentifier("key1Column") && x.Type == ColumnType.Text)' " is 122.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The length of the statement  "                        Mock.Of<IColumnDefinitionLight>(x => x.Identifier == new ColumnNameIdentifier("key2Column") && x.Type == ColumnType.Text)' " is 122.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["key1Column"] as string == "alpha" && x["key2Column"] as string == "one")["A"]) == 1); " is 156.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["key1Column"] as string == "alpha" && x["key2Column"] as string == "one")["B"]) == 2); " is 156.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["key1Column"] as string == "beta" && x["key2Column"] as string == "one")["A"]) == 3); " is 155.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["key1Column"] as string == "beta" && x["key2Column"] as string == "one")["B"]) == 4); " is 155.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["key1Column"] as string == "beta" && x["key2Column"] as string == "two")["B"]) == -4); " is 156.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The length of the statement  "            Assert.That(result.Rows.Cast<DataRow>().Single(x => x["key1Column"] as string == "beta" && x["key2Column"] as string == "two")["A"] == DBNull.Value); " is 149.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasNotExpected_ExpectedResultSet,The length of the statement  "                    { Mock.Of<IColumnDefinitionLight>(x => x.Identifier == new ColumnNameIdentifier("keyColumn") && x.Type == ColumnType.Text) }' " is 125.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasAlreadyExpected_ExpectedResultSet,The length of the statement  "                    { Mock.Of<IColumnDefinitionLight>(x => x.Identifier == new ColumnNameIdentifier("keyColumn") && x.Type == ColumnType.Text) }' " is 125.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_LargeResultSet_ExpectedPerformance,The length of the statement  "                    { Mock.Of<IColumnDefinitionLight>(x => x.Identifier == new ColumnNameIdentifier("keyColumn") && x.Type == ColumnType.Text) } " is 124.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Build,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } }); " is 169.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeySingleAggregation_ExpectedResultSet,The length of the statement  "                    { new ColumnAggregationArgs(new ColumnNameIdentifier("valueColumn")' AggregationFunctionType.Sum' ColumnType.Numeric) }' " is 120.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeySingleAggregation_ExpectedResultSet,The length of the statement  "                    { Mock.Of<IColumnDefinitionLight>(x => x.Identifier == new ColumnNameIdentifier("keyColumn") && x.Type == ColumnType.Text) } " is 124.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeySingleAggregation_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["valueColumn"]) == 7); " is 127.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeySingleAggregation_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta")["valueColumn"]) == 3); " is 126.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeySingleAggregation_ExpectedResultSet,The length of the statement  "                    new[] { new object[] { "alpha"' "foo"' 1 }' new object[] { "alpha"' "foo"' 2 }' new object[] { "beta"' "foo"' 3 }' new object[] { "alpha"' "bar"' 4 } }) " is 152.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeySingleAggregation_ExpectedResultSet,The length of the statement  "                    { new ColumnAggregationArgs(new ColumnNameIdentifier("valueColumn")' AggregationFunctionType.Sum' ColumnType.Numeric) }' " is 120.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeySingleAggregation_ExpectedResultSet,The length of the statement  "            Assert.That(result.Rows.Cast<DataRow>().Any(x => x["ColumnA"] as string == "alpha" && x["ColumnB"] as string == "foo")); " is 120.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeySingleAggregation_ExpectedResultSet,The length of the statement  "            Assert.That(result.Rows.Cast<DataRow>().Any(x => x["ColumnA"] as string == "beta"  && x["ColumnB"] as string == "foo")); " is 120.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeySingleAggregation_ExpectedResultSet,The length of the statement  "            Assert.That(result.Rows.Cast<DataRow>().Any(x => x["ColumnA"] as string == "alpha" && x["ColumnB"] as string == "bar")); " is 120.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeyNonAlphabeticalOrderSingleAggregation_ExpectedResultSet,The length of the statement  "                    new[] { new object[] { "alpha"' "foo"' 1 }' new object[] { "alpha"' "foo"' 2 }' new object[] { "beta"' "foo"' 3 }' new object[] { "alpha"' "bar"' 4 } }) " is 152.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeyNonAlphabeticalOrderSingleAggregation_ExpectedResultSet,The length of the statement  "                    { new ColumnAggregationArgs(new ColumnNameIdentifier("valueColumn")' AggregationFunctionType.Sum' ColumnType.Numeric) }' " is 120.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeyNonAlphabeticalOrderSingleAggregation_ExpectedResultSet,The length of the statement  "            Assert.That(result.Rows.Cast<DataRow>().Any(x => x["ColumnB"] as string == "alpha" && x["ColumnA"] as string == "foo")); " is 120.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeyNonAlphabeticalOrderSingleAggregation_ExpectedResultSet,The length of the statement  "            Assert.That(result.Rows.Cast<DataRow>().Any(x => x["ColumnB"] as string == "beta"  && x["ColumnA"] as string == "foo")); " is 120.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeyNonAlphabeticalOrderSingleAggregation_ExpectedResultSet,The length of the statement  "            Assert.That(result.Rows.Cast<DataRow>().Any(x => x["ColumnB"] as string == "alpha" && x["ColumnA"] as string == "bar")); " is 120.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeyMultipleAggregations_ExpectedResultSet,The length of the statement  "                    { Mock.Of<IColumnDefinitionLight>(x => x.Identifier == new ColumnNameIdentifier("keyColumn") && x.Type == ColumnType.Text) } " is 124.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeyMultipleAggregations_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["valueColumn_Sum"]) == 7); " is 131.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeyMultipleAggregations_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["valueColumn_Min"]) == 1); " is 131.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeyMultipleAggregations_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["valueColumn_Max"]) == 4); " is 131.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeyMultipleAggregations_ExpectedResultSet,The length of the statement  "            Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta").ItemArray.Skip(1).Distinct().Single()) == 3); " is 149.
Long Statement,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_LargeResultSet_ExpectedPerformance,The length of the statement  "                    { Mock.Of<IColumnDefinitionLight>(x => x.Identifier == new ColumnNameIdentifier("keyColumn") && x.Type == ColumnType.Text) } " is 124.
Long Statement,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArray_ColumnsCorrectlyReturned,The length of the statement  "            var result = builder.Build("[{ \"name\":\"John\"' \"hometown\":\"New York\"' \"children\":[{\"name\": \"Mike\"' \"age\": \"6\"}' {\"name\": \"Helen\"' \"age\": \"6\"}] }]"); " is 173.
Long Statement,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElement_ColumnsCorrectlyReturned,The length of the statement  "            var result = builder.Build("[{ \"name\":\"John\"' \"hometown\":\"New York\"' \"children\":[{\"name\": \"Mike\"' \"age\": \"6\"}' {\"name\": \"Helen\"' \"age\": \"6\"}]' \"job\": \"lawyer\" }]"); " is 194.
Long Statement,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElementAndMissingAttribute_ColumnsCorrectlyReturned,The length of the statement  "            var result = builder.Build("[{ \"name\":\"John\"' \"hometown\":\"New York\"' \"children\":[{\"age\": \"6\"}' {\"name\": \"Helen\"' \"age\": \"6\"}]' \"job\": \"lawyer\" }]"); " is 174.
Long Statement,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArray_RowsCorrectlyReturned,The length of the statement  "            var result = builder.Build("[{ \"name\":\"John\"' \"age\":31' \"children\":[{\"name\": \"Mike\"}' {\"name\": \"Helen\"}] }]"); " is 126.
Long Statement,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayMissingAttributes_RowsCorrectlyReturned,The length of the statement  "            var result = builder.Build("[{ \"name\":\"John\"' \"age\":31' \"children\":[{\"name\": \"Mike\"}' {\"name\": \"Helen\"' \"age\":5}] }]"); " is 137.
Long Statement,NBi.Testing.Core.ResultSet,ResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\ResultSetTest.cs,Load_TwoObjectsArray_TwoRowsAndThreeColumns,The length of the statement  "            var objects = new object[] { new object[] { "A"' "B"' "C" }' new object[] { "D"' "E"' "F" } }.AsEnumerable().Cast<object[]>(); " is 126.
Long Statement,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_FirstColumnIsText_FirstColumnIsNumeric,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new[] { "100'12"' "Alpha" }' new[] { "100"' "Beta" }' new[] { "0'1"' "Gamma" } }); " is 134.
Long Statement,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_LastColumnIsText_LastColumnIsNumeric,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new[] { "Alpha"' "100'12" }' new[] { "Beta"' "100" }' new[] { "Gamma"' "0'1" } }); " is 134.
Long Statement,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsText_MiddleColumnIsNumeric,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new[] { "Alpha"' "100'12"' "true" }' new[] { "Beta"' "100"' "false" }' new[] { "Gamma"' "N/A"' "false" } }); " is 160.
Long Statement,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDate_MiddleColumnIsDate,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new[] { "Alpha"' "06/01/2018"' "true" }' new[] { "Beta"' "17/12/2015"' "false" }' new[] { "Gamma"' "Before 2014"' "false" } }); " is 179.
Long Statement,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The length of the statement  "            var args = new ObjectsResultSetResolverArgs(new[] { new[] { "Alpha"' "06/01/2018 08:12:00"' "true" }' new[] { "Beta"' "17/12/2015 08:12:00"' "false" }' new[] { "Gamma"' "Before 2014"' "false" } }); " is 197.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_SameRows_ReturnEqual,The length of the statement  "            var reference = BuildDataTable(new string[] { "KeyName"' "ValueName" }' new object[] { "Key0"' 0 }' new object[] { "Key1"' 1 }); " is 128.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_SameRows_ReturnEqual,The length of the statement  "            var actual = BuildDataTable(new string[] { "KeyName"' "ValueName" }' new object[] { "Key0"' 0 }' new object[] { "Key1"' 1 }); " is 125.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_DifferentRows_ReturnEqual,The length of the statement  "            var reference = BuildDataTable(new string[] { "KeyName"' "ValueName" }' new object[] { "Key0"' 0 }' new object[] { "Key1"' 1 }); " is 128.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_DifferentRows_ReturnEqual,The length of the statement  "            var actual = BuildDataTable(new string[] { "KeyName"' "ValueName" }' new object[] { "Key0"' 2 }' new object[] { "Key1"' 1 }); " is 125.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_DifferentRowsByKeys_ReturnEqual,The length of the statement  "            var reference = BuildDataTable(new string[] { "KeyName"' "ValueName" }' new object[] { "Key0"' 0 }' new object[] { "Key1"' 1 }); " is 128.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_DifferentRowsByKeys_ReturnEqual,The length of the statement  "            var actual = BuildDataTable(new string[] { "KeyName"' "ValueName" }' new object[] { "Key1"' 1 }' new object[] { "Key2"' 1 }); " is 125.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_SameRowsMixedColumns_ReturnEqual,The length of the statement  "            var reference = BuildDataTable(new string[] { "KeyName"' "ValueName" }' new object[] { "Key0"' 0 }' new object[] { "Key1"' 1 }); " is 128.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_SameRowsMixedColumns_ReturnEqual,The length of the statement  "            var actual = BuildDataTable(new string[] { "ValueName"' "KeyName" }' new object[] { 0' "Key0" }' new object[] { 1' "Key1" }); " is 125.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_DifferentRowsMixedColumns_ReturnNotEqual,The length of the statement  "            var reference = BuildDataTable(new string[] { "KeyName"' "ValueName" }' new object[] { "Key0"' 0 }' new object[] { "Key1"' 1 }); " is 128.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_DifferentRowsMixedColumns_ReturnNotEqual,The length of the statement  "            var actual = BuildDataTable(new string[] { "ValueName"' "KeyName" }' new object[] { 2' "Key0" }' new object[] { 1' "Key1" }); " is 125.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_DifferentRowsByKeysMixedColumns_ReturnNotEqual,The length of the statement  "            var reference = BuildDataTable(new string[] { "KeyName"' "ValueName" }' new object[] { "Key0"' 0 }' new object[] { "Key1"' 1 }); " is 128.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_DifferentRowsByKeysMixedColumns_ReturnNotEqual,The length of the statement  "            var actual = BuildDataTable(new string[] { "ValueName"' "KeyName" }' new object[] { 2' "Key2" }' new object[] { 1' "Key1" }); " is 125.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,BuildSettingsKeyValue,The length of the statement  "                    new Column() { Identifier = new ColumnNameIdentifier("ValueName")' Role = ColumnRole.Value' Type = ColumnType.Numeric' Tolerance = tolerance.ToString() } " is 153.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentLargeArrays_ReturnQuicklyDifferent,The length of the statement  "            var actual = BuildDataTable(RandomLargeArrayString(count' Convert.ToInt32(count * 0.8))' RandomLargeArrayDouble(count)); " is 120.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameRowsDateTimeKeysWithDateTimeType_ReturnEqual,The length of the statement  "            var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18) }' new double[] { 0' 1 }); " is 134.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsNumericKeysWithDateTimeType_ReturnNotEqual,The length of the statement  "            var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 19) }' new double[] { 0' 1 }); " is 134.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsWithHoursNumericKeysWithDateTimeType_ReturnNotEqual,The length of the statement  "            var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18' 8' 0' 0) }' new double[] { 0' 1 }); " is 143.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameKeysSameValuesUselessColumnNotMatching_ReturnEqual,The length of the statement  "            var reference = BuildDataTable(new string[] { "Key0"' "Key1" }' new double[] { 0' 1 }' new string[] { "Useless0"' "Useless1" }); " is 128.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameKeysSameValuesUselessColumnNotMatching_ReturnEqual,The length of the statement  "            var actual = BuildDataTable(new string[] { "Key0"' "Key1" }' new double[] { 0' 1 }' new string[] { "0Useless0"' "0Useless1" }); " is 127.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameKeysSameValuesUselessColumnsNoneValuesMatching_ReturnEqual,The length of the statement  "            var reference = BuildDataTable(new string[] { "Key0"' "Key1" }' new double[] { 0' 1 }' new string[] { "Useless0"' "Useless1" }); " is 128.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameKeysSameValuesUselessColumnsNoneValuesMatching_ReturnEqual,The length of the statement  "            var actual = BuildDataTable(new string[] { "Key0"' "Key1" }' new double[] { 0' 1 }' new string[] { "0Useless0"' "0Useless1" }); " is 127.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,BuildSettingsKeyValue,The length of the statement  "                new Column() { Identifier = new ColumnOrdinalIdentifier(1)' Role = ColumnRole.Value' Type = ColumnType.Numeric' Tolerance = tolerance.ToString() } " is 146.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,BuildSettingsKeyValueIgnore,The length of the statement  "                new Column() { Identifier = new ColumnOrdinalIdentifier(1)' Role = ColumnRole.Value' Type = ColumnType.Numeric' Tolerance = tolerance.ToString() }' " is 147.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,SingleRowNameEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowNameEquivalerTest.cs,Compare_NonSimilarRow_ReturnEqual,The length of the statement  "            var comparer = new SingleRowNameEquivaler(new SettingsSingleRowNameResultSet(ColumnType.Numeric' null' new List<IColumnDefinition>() { myColumnDefinition })); " is 158.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,SingleRowNameEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowNameEquivalerTest.cs,Compare_SimilarRow_ReturnEqual,The length of the statement  "            var comparer = new SingleRowNameEquivaler(new SettingsSingleRowNameResultSet(ColumnType.Numeric' null' new List<IColumnDefinition>() { myColumnDefinition })); " is 158.
Long Statement,NBi.Testing.Core.ResultSet.Equivalence,SingleRowOrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowOrdinalEquivalerTest.cs,Compare_ObjectsVersusSameTypedButWithPrecision_ReturnEqual,The length of the statement  "            var comparer = new SingleRowOrdinalEquivaler(new SettingsSingleRowOrdinalResultSet (ColumnType.Numeric' null' BuildColumnsStringDecimal())); " is 140.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByNameTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByNameTest.cs,GetKeys_UniqueCellNumericCasting_CorrectCell,The length of the statement  "            var table = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { "0"' "1.0"' "0.00" }); " is 129.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByOrdinalTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByOrdinalTest.cs,GetKeys_UniqueCellNumericCasting_CorrectCell,The length of the statement  "            var table = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { "0"' "1.0"' "0.00" }); " is 129.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,ColumnMappingCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\ColumnMappingCollectionTest.cs,Add_MixOfNameAndOrdinalInOneMapping_NoException,The length of the statement  "            Assert.DoesNotThrow(() => mappings.Add(new ColumnMapping(new ColumnNameIdentifier("name")' new ColumnOrdinalIdentifier(1)' ColumnType.Text))); " is 142.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,ColumnMappingCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\ColumnMappingCollectionTest.cs,Add_MixOfNameAndOrdinalInSecondMapping_NoException,The length of the statement  "            Assert.DoesNotThrow(() => mappings.Add(new ColumnMapping(new ColumnNameIdentifier("name")' new ColumnOrdinalIdentifier(1)' ColumnType.Text))); " is 142.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,BuildColumnMapping,The length of the statement  "                mappings.Add(new ColumnMapping(new ColumnOrdinalIdentifier(i)' new ColumnOrdinalIdentifier(i + shift)' ColumnType.Text)); " is 121.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysreferenceLargerThanCandidateDuplicateKeys_NoViolation,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 1' 2' 3 }); " is 122.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteValueColumn_NoViolation,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"'  "Fie" }' new object[] { 1' 2' 3 }); " is 123.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteKeyColumns_NoViolation,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"' "Fie" }' new object[] { 1' 2' 3 }); " is 122.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_DuplicatedKeyColumns_NoViolation,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 1' 2' 3 }); " is 122.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_DuplicatedKeyColumnsOnBothSide_NoViolation,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 1' 2' 3 }); " is 122.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_DuplicatedKeyColumnsOnBothSideMixingType_NoViolation,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1" }' new[] { "Foo"' "Bar"' "Bar" }' new [] { "0.000"' "1.0"' "2" }); " is 128.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_NamedColumns_NoViolation,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1" }' new[] { "Foo"' "Bar"' "Bar" }' new[] { "0.000"' "1.0"' "2" }); " is 127.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_NamedColumnsShuffle_NoViolation,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1" }' new[] { "Foo"' "Bar"' "Bar" }' new[] { "0.000"' "1.0"' "2" }); " is 127.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_RenamedColumnsShuffle_NoViolation,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1" }' new[] { "Foo"' "Bar"' "Bar" }' new[] { "0.000"' "1.0"' "2" }); " is 127.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MixNameAndOrdinal_NoViolation,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1" }' new[] { "Foo"' "Bar"' "Bar" }' new[] { "0.000"' "1.0"' "2" }); " is 127.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_LargeVolumeChild_Fast,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { 1' 2' 3 }); " is 122.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,BuildColumnMapping,The length of the statement  "                mappings.Add(new ColumnMapping(new ColumnOrdinalIdentifier(i + shift)' new ColumnOrdinalIdentifier(i + shift)' columnType)); " is 124.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_ReferenceLargerThanCandidateMatchingValueWhenToleranceApplied_NoViolation,The length of the statement  "            var tolerances = new Dictionary<IColumnIdentifier' Tolerance>() { { new ColumnIdentifierFactory().Instantiate("#1")' new NumericAbsoluteTolerance(1' SideTolerance.Both) } }; " is 173.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_ReferenceLargerThanCandidateMatchingValueWhenToleranceApplied_NoViolation,The length of the statement  "            var analyzer = new LookupMatchesAnalyzer(BuildColumnMapping(1)' BuildColumnMapping(1' 1' ColumnType.Numeric)' tolerances); " is 122.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_MultipleKeysreferenceLargerThanCandidateDuplicateKeys_NoViolation,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 0' 1' 2 }); " is 122.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_LargeVolumeReference_Fast,The length of the statement  "            var candidate = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { 1' 2' 3 }); " is 122.
Long Statement,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_LargeVolumeCandidate_Fast,The length of the statement  "            var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { 1' 2' 3 }); " is 122.
Long Statement,NBi.Testing.Core.Scalar.Conversion,TextToDateTimeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateTimeConverterTest.cs,Execute_ValidDateTime_Date,The length of the statement  "            var text = (new DateTime(2018' 1' 6' 5' 12' 25)).ToString(cultureInfo.DateTimeFormat.ShortDatePattern + " " + cultureInfo.DateTimeFormat.LongTimePattern' cultureInfo.DateTimeFormat); " is 182.
Long Statement,NBi.Testing.Core.Scalar.Resolver,FormatScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\FormatScalarResolverTest.cs,Execute_VariableWithNativeTransformation_CorrectEvaluation,The length of the statement  "                { "myVar" ' new GlobalVariable(new CSharpScalarResolver<object>( new CSharpScalarResolverArgs("new DateTime(2019' 6' 1)"))) }' " is 126.
Long Statement,NBi.Testing.Core.Scalar.Resolver,FormatScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\FormatScalarResolverTest.cs,Execute_VariableWithNativeTransformation_CorrectEvaluation,The length of the statement  "            var args = new FormatScalarResolverArgs("First of May was a {@myVar | dateTime-to-previous-month:dddd}"' globalVariables); " is 122.
Long Statement,NBi.Testing.Core.Scalar.Resolver,FormatScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\FormatScalarResolverTest.cs,Execute_VariableWithTwoNativeTransformations_CorrectEvaluation,The length of the statement  "                { "myVar" ' new GlobalVariable(new CSharpScalarResolver<object>( new CSharpScalarResolverArgs("new DateTime(2019' 6' 12)"))) }' " is 127.
Long Statement,NBi.Testing.Core.Scalar.Resolver,FormatScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\FormatScalarResolverTest.cs,Execute_VariableWithTwoNativeTransformations_CorrectEvaluation,The length of the statement  "            var args = new FormatScalarResolverArgs("First day of the month before was a {@myVar | dateTime-to-previous-month | dateTime-to-first-of-month:dddd}"' globalVariables); " is 168.
Long Statement,NBi.Testing.Core.Scalar.Resolver,FormatScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\FormatScalarResolverTest.cs,Execute_VariableWithNativeTransformationParametrized_CorrectEvaluation,The length of the statement  "            var args = new FormatScalarResolverArgs("My clipped value is {@myVar | numeric-to-clip(20' 80):##.00}"' globalVariables); " is 121.
Long Statement,NBi.Testing.Core.Scalar.Resolver,FormatScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\FormatScalarResolverTest.cs,Execute_ExistingDateTimeVariable_CorrectEvaluation,The length of the statement  "                { "myVar" ' new GlobalVariable(new CSharpScalarResolver<object>( new CSharpScalarResolverArgs("new DateTime(2018'1'1)"))) }' " is 124.
Long Statement,NBi.Testing.Core.Scalar.Resolver,GlobalVariableScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\GlobalVariableScalarResolverTest.cs,Execute_ExistingVariableWrongType_CorrectEvaluation,The length of the statement  "                { "myVar" ' new GlobalVariable(new CSharpScalarResolver<object>( new CSharpScalarResolverArgs("(10*10).ToString()"))) }' " is 120.
Long Statement,NBi.Testing.Core.Scalar.Resolver,ScalarResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\ScalarResolverFactoryTest.cs,Instantiate_GlobalVariableArgs_GlobalVariableResolver,The length of the statement  "            var args = new GlobalVariableScalarResolverArgs("myVar"' new Dictionary<string' ITestVariable>() { { "myVar"' null } }); " is 120.
Long Statement,NBi.Testing.Core.Scalar.Resolver,ScalarResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\ScalarResolverFactoryTest.cs,Instantiate_QueryArgs_QueryResolver,The length of the statement  "            var args = new QueryScalarResolverArgs(new EmbeddedQueryResolverArgs("select * from table;"' "connStr"' null' null' new TimeSpan())); " is 133.
Long Statement,NBi.Testing.Core.Scalar.Resolver,CustomScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\CustomScalarResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The length of the statement  "                new LiteralScalarResolver<string>($"{typeof(MyCustomClassWithParams).Namespace}.{typeof(MyCustomClassWithParams).Name}")' " is 121.
Long Statement,NBi.Testing.Core.Scalar.Resolver,CustomScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\CustomScalarResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The length of the statement  "                new Dictionary<string' IScalarResolver>() { { "foo"' new LiteralScalarResolver<int>(5) }' { "bar"' new LiteralScalarResolver<DateTime>(new DateTime(2019' 1' 1)) } } " is 164.
Long Statement,NBi.Testing.Core.Sequence.Resolver,CustomSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\CustomSequenceResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The length of the statement  "                new LiteralScalarResolver<string>($"{typeof(MyCustomClassWithParams).Namespace}.{typeof(MyCustomClassWithParams).Name}")' " is 121.
Long Statement,NBi.Testing.Core.Sequence.Resolver,CustomSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\CustomSequenceResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The length of the statement  "                new Dictionary<string' IScalarResolver>() { { "foo"' new LiteralScalarResolver<int>(5) }' { "bar"' new LiteralScalarResolver<DateTime>(new DateTime(2019' 1' 1)) } } " is 164.
Long Statement,NBi.Testing.Core.Sequence.Resolver,QuerySequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\QuerySequenceResolverTest.cs,Execute_QueryEmbedded_CorrectlyExecuted,The length of the statement  "            var executionEngineFactory = Mock.Of<ExecutionEngineFactory>(x => x.Instantiate(It.IsAny<IQuery>()) == executionEngine); " is 120.
Long Statement,NBi.Testing.Core.Sequence.Resolver,QuerySequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\QuerySequenceResolverTest.cs,Execute_QueryEmbedded_CorrectCallsToServiceLocatorMethods,The length of the statement  "            var executionEngineFactory = Mock.Of<ExecutionEngineFactory>(x => x.Instantiate(It.IsAny<IQuery>()) == executionEngine); " is 120.
Long Statement,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountDateTime_ExactSequence,The length of the statement  "            Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 30)' new DateTime(2018' 1' 31)' new DateTime(2018' 2' 1) })); " is 139.
Long Statement,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The length of the statement  "            var args = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 2)' new FixedDuration(new TimeSpan(2' 0' 0' 0))); " is 147.
Long Statement,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The length of the statement  "            Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) })); " is 139.
Long Statement,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The length of the statement  "            var args = new SentinelHalfOpenDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 3)' new FixedDuration(new TimeSpan(2' 0' 0' 0))); " is 150.
Long Statement,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The length of the statement  "            Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) })); " is 139.
Long Statement,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_CountLoopDateTime_LoopSequenceResolver,The length of the statement  "            var args = new CountLoopSequenceResolverArgs<DateTime' IDuration>(3' new DateTime(2018'3'1)' new FixedDuration(new TimeSpan(1'0'0'0))); " is 135.
Long Statement,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_SentinelLoopDateTime_LoopSequenceResolver,The length of the statement  "            var args = new SentinelLoopSequenceResolverArgs<DateTime' IDuration>(new DateTime(2018' 1' 1)' new DateTime(2018' 3' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0))' IntervalMode.Close); " is 186.
Long Statement,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,Run_parameters_CorrectResult,The length of the statement  "            var strategy = new CountDateTimeLoopStrategy(count' new DateTime(2018' 1' 1)' new FixedDuration(new TimeSpan(stepDay' 0' 0' 0))); " is 129.
Long Statement,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,GetNext_FirstTime_Seed,The length of the statement  "            var strategy = new CountDateTimeLoopStrategy(10' new DateTime(2018' 1' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0))); " is 120.
Long Statement,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,IsOngoing_NTimes_True,The length of the statement  "            var strategy = new CountDateTimeLoopStrategy(10' new DateTime(2015' 1' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0))); " is 120.
Long Statement,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_day_CorrectResult,The length of the statement  "            var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 5)' new FixedDuration(new TimeSpan(stepDay' 0' 0' 0))); " is 156.
Long Statement,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_Month_CorrectResult,The length of the statement  "            var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 5' 10)' new MonthDuration(stepMonth)); " is 136.
Long Statement,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_Year_CorrectResult,The length of the statement  "            var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2019' 4' 10)' new YearDuration(stepMonth)); " is 135.
Long Statement,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,GetNext_FirstTime_Seed,The length of the statement  "            var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 2)' new FixedDuration(new TimeSpan(1' 0' 0' 0))); " is 150.
Long Statement,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,IsOngoing_ZeroTimes_False,The length of the statement  "            var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 3)' new DateTime(2018' 1' 2)' new FixedDuration(new TimeSpan(1' 0' 0' 0))); " is 150.
Long Statement,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,IsOngoing_OneTimes_TrueThenFalse,The length of the statement  "            var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0))); " is 150.
Long Statement,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,IsOngoing_NTimes_True,The length of the statement  "            var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 10)' new FixedDuration(new TimeSpan(1' 0' 0' 0))); " is 151.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_Tabular_GetCorrectServerMode,The length of the statement  "                        + "<Server xmlns=\"http://schemas.microsoft.com/analysisservices/2003/engine\">                                                                                                    " " is 180.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_Tabular_GetCorrectServerMode,The length of the statement  "                        + "            <CreatedTimestamp>2015-07-02T21:56:04.076667</CreatedTimestamp>                                         " " is 120.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_Tabular_GetCorrectServerMode,The length of the statement  "                        + "            <LastSchemaUpdate>2015-07-02T21:56:04.093333</LastSchemaUpdate>                                         " " is 120.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_Tabular_GetCorrectServerMode,The length of the statement  "                        + "            <Version>12.0.2000.8</Version>                                                                          " " is 120.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_Tabular_GetCorrectServerMode,The length of the statement  "                        + "            <Edition>Developer64</Edition>                                                                          " " is 120.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_Tabular_GetCorrectServerMode,The length of the statement  "                        + "            <EditionID>2176971986</EditionID>                                                                       " " is 120.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_Tabular_GetCorrectServerMode,The length of the statement  "                        + "            <ddl300:ServerMode xmlns:ddl300=\"http://schemas.microsoft.com/analysisservices/2011/engine/300\">$value$</ddl300:ServerMode>" " is 141.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_Tabular_GetCorrectServerMode,The length of the statement  "                        + "            <ddl400:ServerLocation xmlns:ddl400=\"http://schemas.microsoft.com/analysisservices/2012/engine/400\">OnPremise</ddl400:ServerLocation>" " is 151.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_Tabular_GetCorrectServerMode,The length of the statement  "                        + "            <ddl400:DefaultCompatibilityLevel xmlns:ddl400=\"http://schemas.microsoft.com/analysisservices/2012/engine/400\">1100</ddl400:DefaultCompatibilityLevel>" " is 168.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_VersionBefore11_GetCorrectServerMode,The length of the statement  "                        + "<Server xmlns=\"http://schemas.microsoft.com/analysisservices/2003/engine\">                                                                                                    " " is 180.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_VersionBefore11_GetCorrectServerMode,The length of the statement  "                        + "            <CreatedTimestamp>2015-07-02T21:56:04.076667</CreatedTimestamp>                                         " " is 120.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_VersionBefore11_GetCorrectServerMode,The length of the statement  "                        + "            <LastSchemaUpdate>2015-07-02T21:56:04.093333</LastSchemaUpdate>                                         " " is 120.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_VersionBefore11_GetCorrectServerMode,The length of the statement  "                        + "            <Edition>Developer64</Edition>                                                                          " " is 120.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_VersionBefore11_GetCorrectServerMode,The length of the statement  "                        + "            <EditionID>2176971986</EditionID>                                                                       " " is 120.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_VersionAfter11_ThrowExceptionImpossibleToGuess,The length of the statement  "                        + "<Server xmlns=\"http://schemas.microsoft.com/analysisservices/2003/engine\">                                                                                                    " " is 180.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_VersionAfter11_ThrowExceptionImpossibleToGuess,The length of the statement  "                        + "            <CreatedTimestamp>2015-07-02T21:56:04.076667</CreatedTimestamp>                                         " " is 120.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_VersionAfter11_ThrowExceptionImpossibleToGuess,The length of the statement  "                        + "            <LastSchemaUpdate>2015-07-02T21:56:04.093333</LastSchemaUpdate>                                         " " is 120.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_VersionAfter11_ThrowExceptionImpossibleToGuess,The length of the statement  "                        + "            <Edition>Developer64</Edition>                                                                          " " is 120.
Long Statement,NBi.Testing.Core.Structure,StructureDiscoveryFactoryProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Structure\StructureDiscoveryFactoryProviderTest.cs,ParseXmlaResponse_VersionAfter11_ThrowExceptionImpossibleToGuess,The length of the statement  "                        + "            <EditionID>2176971986</EditionID>                                                                       " " is 120.
Long Statement,NBi.Testing.Core.Transformation,TransformationProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\TransformationProviderTest.cs,Transform_NativeTranformationUnknown_Exception,The length of the statement  "            Assert.Throws<NotImplementedTransformationException>(() => provider.Add(new ColumnOrdinalIdentifier(0)' transformation)); " is 121.
Long Statement,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_TextToLastCharsWithVariable_Valid,The length of the statement  "            var variables = new Dictionary<string' ITestVariable>() { { "length"' new GlobalVariable(new LiteralScalarResolver<int>(6)) } }; " is 128.
Long Statement,NBi.Testing.Core.Transformation.Transformer.Native,DateToPointInTimeTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\Native\DateToPointInTimeTest.cs,Execute_DateTimeToClip_Valid,The length of the statement  "            var function = new DateTimeToClip(new LiteralScalarResolver<DateTime>("2019-03-01")' new LiteralScalarResolver<DateTime>("2019-03-31")); " is 136.
Long Statement,NBi.Testing.Core.Transformation.Transformer.Native,DateToPointInTimeTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\Native\DateToPointInTimeTest.cs,Execute_DateTimeToSubtract_Valid,The length of the statement  "            var function = new DateTimeToSubtract(new LiteralScalarResolver<string>(timeSpan)' new LiteralScalarResolver<int>(times)); " is 122.
Long Statement,NBi.Testing.Core.Transformation.Transformer.Native,TextTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\Native\TextTest.cs,Execute_TextToLastCharsWithVariable_Valid,The length of the statement  "            var args = new GlobalVariableScalarResolverArgs("length"' new Dictionary<string' ITestVariable>() { { "length"' new GlobalVariable(new LiteralScalarResolver<int>(6) )} }); " is 171.
Long Statement,NBi.Testing.Core.Transformation.Transformer.Native,TextTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\Native\TextTest.cs,Execute_TextToDateTimeWithCulture_Valid,The length of the statement  "            var function = new TextToDateTime(new LiteralScalarResolver<string>(format)' new LiteralScalarResolver<string>(culture)); " is 121.
Long Statement,NBi.Testing.Core.Variable,InstanceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Variable\InstanceFactoryTest.cs,Instantiate_DerivedFromMain_Success,The length of the statement  "            resolver.Setup(x => x.Execute()).Returns(new[] { "BE_20190101"' "BE_20190102"' "BE_20190103"' "BE_20190104"' "BE_20190105" }); " is 126.
Long Statement,NBi.Testing.Core.Variable,VariableFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Variable\VariableFactoryTest.cs,Instantiate_QueryScalar_GlobalVariable,The length of the statement  "            var resolver = new QueryScalarResolver<object>(new QueryScalarResolverArgs(queryResolverArgsMock.Object)' new ServiceLocator()); " is 128.
Magic Number,NBi.Testing.Core.Api.Rest,RestEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Api\Rest\RestEngineTest.cs,Execute_PathAndParameters_CorrectResponse,The following statement contains a magic number: Assert.That(result.Length' Is.GreaterThan(20));
Magic Number,NBi.Testing.Core.Assemblies,CustomCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\CustomCommandFactoryTest.cs,Instantiate_WithoutCtorTwoParameters_Instantiated,The following statement contains a magic number: var instance = factory.Instantiate              (                  typeof(CustomCommandWithTwoParameters)'                  new ReadOnlyDictionary<string' object>(new Dictionary<string' object>()                  {                      { "name"' "myName" }'                      { "count"' 5 }'                  })              );
Magic Number,NBi.Testing.Core.Assemblies,CustomConditionFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\CustomConditionFactoryTest.cs,Instantiate_WithoutCtorTwoParameters_Instantiated,The following statement contains a magic number: var instance = factory.Instantiate              (                  typeof(CustomConditionWithTwoParameters)'                  new ReadOnlyDictionary<string' object>(new Dictionary<string' object>()                  {                      { "name"' "myName" }'                      { "count"' 5 }'                  })              );
Magic Number,NBi.Testing.Core.Assemblies,TypeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\TypeConverterTest.cs,Convert_StringToDecimal_CorrectValue,The following statement contains a magic number: Assert.That(actual' Is.EqualTo(10));
Magic Number,NBi.Testing.Core.Assemblies,TypeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\TypeConverterTest.cs,Convert_StringToDateTime_YMDCorrectValue,The following statement contains a magic number: Assert.That(actual' Is.EqualTo(new DateTime(2012' 05' 10)));
Magic Number,NBi.Testing.Core.Assemblies,TypeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\TypeConverterTest.cs,Convert_StringToDateTime_YMDCorrectValue,The following statement contains a magic number: Assert.That(actual' Is.EqualTo(new DateTime(2012' 05' 10)));
Magic Number,NBi.Testing.Core.Assemblies,TypeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\TypeConverterTest.cs,Convert_StringToDateTime_YMDCorrectValue,The following statement contains a magic number: Assert.That(actual' Is.EqualTo(new DateTime(2012' 05' 10)));
Magic Number,NBi.Testing.Core.Assemblies,TypeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\TypeConverterTest.cs,Convert_StringToDateTime_YMDHMCorrectValue,The following statement contains a magic number: Assert.That(actual' Is.EqualTo(new DateTime(2012' 05' 10' 10' 15' 0)));
Magic Number,NBi.Testing.Core.Assemblies,TypeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\TypeConverterTest.cs,Convert_StringToDateTime_YMDHMCorrectValue,The following statement contains a magic number: Assert.That(actual' Is.EqualTo(new DateTime(2012' 05' 10' 10' 15' 0)));
Magic Number,NBi.Testing.Core.Assemblies,TypeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\TypeConverterTest.cs,Convert_StringToDateTime_YMDHMCorrectValue,The following statement contains a magic number: Assert.That(actual' Is.EqualTo(new DateTime(2012' 05' 10' 10' 15' 0)));
Magic Number,NBi.Testing.Core.Assemblies,TypeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\TypeConverterTest.cs,Convert_StringToDateTime_YMDHMCorrectValue,The following statement contains a magic number: Assert.That(actual' Is.EqualTo(new DateTime(2012' 05' 10' 10' 15' 0)));
Magic Number,NBi.Testing.Core.Assemblies,TypeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\TypeConverterTest.cs,Convert_StringToDateTime_YMDHMCorrectValue,The following statement contains a magic number: Assert.That(actual' Is.EqualTo(new DateTime(2012' 05' 10' 10' 15' 0)));
Magic Number,NBi.Testing.Core.Assemblies.Resource,Klass,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\Resource\Klass.cs,ExecuteDoubleParam,The following statement contains a magic number: paramDateTime == new DateTime(2012'05'07) && paramEnum == Enumeration.Beta
Magic Number,NBi.Testing.Core.Assemblies.Resource,Klass,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\Resource\Klass.cs,ExecuteDoubleParam,The following statement contains a magic number: paramDateTime == new DateTime(2012'05'07) && paramEnum == Enumeration.Beta
Magic Number,NBi.Testing.Core.Assemblies.Resource,Klass,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Assemblies\Resource\Klass.cs,ExecuteDoubleParam,The following statement contains a magic number: paramDateTime == new DateTime(2012'05'07) && paramEnum == Enumeration.Beta
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "beta"' 2 }' new object[] { "BETA"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "beta"' 2 }' new object[] { "BETA"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "beta"' 2 }' new object[] { "BETA"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: Assert.That(result' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: Assert.That(result.ElementAt(0).Value.Rows' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "ALPHA"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "ALPHA"' "2"' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "ALPHA"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "ALPHA"' "2"' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "ALPHA"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "ALPHA"' "2"' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "ALPHA"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "ALPHA"' "2"' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result.ElementAt(0).Value.Rows' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result.ElementAt(2).Value.Rows' Has.Count.EqualTo(1));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumnsWithContext_ThreeGroups,The following statement contains a magic number: var contextArgs = new ContextScalarResolverArgs(context' new ColumnOrdinalIdentifier(2));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumnsWithContext_ThreeGroups,The following statement contains a magic number: Assert.That(result' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumnsWithContext_ThreeGroups,The following statement contains a magic number: Assert.That(result.ElementAt(0).Value.Rows' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,CaseGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\CaseBased\CaseGroupingTest.cs,Execute_TwoColumnsWithContext_ThreeGroups,The following statement contains a magic number: Assert.That(result.ElementAt(2).Value.Rows' Has.Count.EqualTo(1));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: Assert.That(result' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: Assert.That(result[new KeyCollection(new[] { "alpha" })].Rows' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "alpha"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "alpha"' "2"' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "alpha"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "alpha"' "2"' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "alpha"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "alpha"' "2"' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "alpha"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "alpha"' "2"' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result[new KeyCollection(new object[] { "alpha"' "1" })].Rows' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result[new KeyCollection(new object[] { "alpha"' 1m })].Rows' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result[new KeyCollection(new object[] { "alpha"' 2m })].Rows' Has.Count.EqualTo(1));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,NameColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\NameColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result[new KeyCollection(new object[] { "beta"' 2m })].Rows' Has.Count.EqualTo(1));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: Assert.That(result' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_SingleColumn_TwoGroups,The following statement contains a magic number: Assert.That(result[new KeyCollection(new[] { "alpha" })].Rows' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "alpha"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "alpha"' "2"' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "alpha"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "alpha"' "2"' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "alpha"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "alpha"' "2"' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' "1"' 10 }' new object[] { "alpha"' "1"' 20 }' new object[] { "beta"' "2"' 30 }' new object[] { "alpha"' "2"' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result[new KeyCollection(new object[] { "alpha"' "1" })].Rows' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1d' 10 }' new object[] { "alpha"' 1' 20 }' new object[] { "beta"' 2' 30 }' new object[] { "alpha"' 2' 40 } });
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result[new KeyCollection(new object[] { "alpha"' 1m })].Rows' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result[new KeyCollection(new object[] { "alpha"' 2m })].Rows' Has.Count.EqualTo(1));
Magic Number,NBi.Testing.Core.Calculation.Grouping.ColumnBased,OrdinalColumnGroupingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Grouping\ColumnBased\OrdinalColumnGroupingTest.cs,Execute_TwoCustomColumns_ThreeGroups,The following statement contains a magic number: Assert.That(result[new KeyCollection(new object[] { "beta"' 2m })].Rows' Has.Count.EqualTo(1));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_And_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_And_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_And_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_And_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_And_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_And_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_And_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_And_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_And_CorrectResult,The following statement contains a magic number: predicate2.SetupGet(p => p.Reference).Returns(new LiteralScalarResolver<decimal>(10));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_And_CorrectResult,The following statement contains a magic number: Assert.That(result.Rows' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_AndWillNotEvaluateAll_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { null }'                          new List<object>() { 5 }'                          new List<object>() { 10 }'                          new List<object>() { null }'                          new List<object>() { 20 }'                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_AndWillNotEvaluateAll_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { null }'                          new List<object>() { 5 }'                          new List<object>() { 10 }'                          new List<object>() { null }'                          new List<object>() { 20 }'                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_AndWillNotEvaluateAll_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { null }'                          new List<object>() { 5 }'                          new List<object>() { 10 }'                          new List<object>() { null }'                          new List<object>() { 20 }'                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_AndWillNotEvaluateAll_CorrectResult,The following statement contains a magic number: predicate2.SetupGet(p => p.Reference).Returns(new LiteralScalarResolver<decimal>(10));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The following statement contains a magic number: predicate2.SetupGet(p => p.Reference).Returns(new LiteralScalarResolver<decimal>(10));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_Or_CorrectResult,The following statement contains a magic number: Assert.That(result.Rows' Has.Count.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_OrWillNotEvaluateAll_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { null }'                          new List<object>() { 5 }'                          new List<object>() { 10 }'                          new List<object>() { null }'                          new List<object>() { 20 }'                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_OrWillNotEvaluateAll_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { null }'                          new List<object>() { 5 }'                          new List<object>() { 10 }'                          new List<object>() { null }'                          new List<object>() { 20 }'                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_OrWillNotEvaluateAll_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { null }'                          new List<object>() { 5 }'                          new List<object>() { 10 }'                          new List<object>() { null }'                          new List<object>() { 20 }'                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_OrWillNotEvaluateAll_CorrectResult,The following statement contains a magic number: predicate2.SetupGet(p => p.Reference).Returns(new LiteralScalarResolver<decimal>(10));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_OrWillNotEvaluateAll_CorrectResult,The following statement contains a magic number: Assert.That(result.Rows' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The following statement contains a magic number: var service = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new object[]                      {                          new List<object>() { "(null)"' 10' 100 }'                          new List<object>() { "(empty)"' 2' 75 }'                          new List<object>() { "(empty)"' 20' 75 }'                          new List<object>() { "C"' 5' 50 }'                          new List<object>() { "C"' 15' 50 }                      }));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The following statement contains a magic number: predicate2.SetupGet(p => p.Reference).Returns(new LiteralScalarResolver<decimal>(10));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,PredicationFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\PredicationFilterTest.cs,Apply_XOr_CorrectResult,The following statement contains a magic number: Assert.That(result.Rows' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2OneKey_ResultSetReduced,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2OneKey_ResultSetReduced,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2OneKey_ResultSetReduced,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2OneKey_ResultSetReduced,The following statement contains a magic number: var filter = new TopRanking(2' new ColumnOrdinalIdentifier(1)' ColumnType.Numeric);
Magic Number,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2OneKey_ResultSetReduced,The following statement contains a magic number: Assert.That(result.Table.Rows' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2OneKey_ResultSetReduced,The following statement contains a magic number: Assert.That(result.Table.Rows.Cast<DataRow>().Where(x => x[0].ToString()=="alpha").Count()' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2None_ResultSetReduced,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2None_ResultSetReduced,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2None_ResultSetReduced,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2None_ResultSetReduced,The following statement contains a magic number: var filter = new TopRanking(2' new ColumnOrdinalIdentifier(1)' ColumnType.Numeric);
Magic Number,NBi.Testing.Core.ResultSet.Filtering,GroupByFilterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Filtering\GroupByFilterTest.cs,Execute_Top2None_ResultSetReduced,The following statement contains a magic number: Assert.That(result.Table.Rows' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_DateTime_Success,The following statement contains a magic number: predicate.SetupGet(p => p.Reference).Returns(new LiteralScalarResolver<DateTime>(new DateTime(2015' y' 1)));
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_DateTime_Success,The following statement contains a magic number: Assert.That(comparer.Execute(new DateTime(2015' x' 1))' Is.True);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_DateTimeRange_Success,The following statement contains a magic number: Assert.That(comparer.Execute(new DateTime(2015' 8' 1))' Is.True);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_DateTimeRange_Success,The following statement contains a magic number: Assert.That(comparer.Execute(new DateTime(2015' 8' 1))' Is.True);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_NumericVariable_VariableIsEvaluated,The following statement contains a magic number: variable.Setup(v => v.GetValue()).Returns(10);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_NumericVariable_VariableIsEvaluated,The following statement contains a magic number: Assert.That(predicate.Execute(9)' Is.True);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_NumericVariable_VariableIsEvaluated,The following statement contains a magic number: Assert.That(predicate.Execute(11)' Is.False);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_NumericVariable_VariableIsEvaluated,The following statement contains a magic number: variable.Verify(x => x.GetValue()' Times.Exactly(2));
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_NumericVariablePartOfDictionary_VariableIsEvaluated,The following statement contains a magic number: variable.Setup(v => v.GetValue()).Returns(10);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_NumericVariablePartOfDictionary_VariableIsEvaluated,The following statement contains a magic number: Assert.That(predicate.Execute(9)' Is.True);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_NumericVariablePartOfDictionary_VariableIsEvaluated,The following statement contains a magic number: Assert.That(predicate.Execute(11)' Is.False);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_NumericVariablePartOfDictionary_VariableIsEvaluated,The following statement contains a magic number: variable.Verify(x => x.GetValue()' Times.Exactly(2));
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_NumericVariablePartOfDictionary_PointlessVariableIsNotEvaluated,The following statement contains a magic number: variableUsed.Setup(v => v.GetValue()).Returns(10);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_NumericVariablePartOfDictionary_PointlessVariableIsNotEvaluated,The following statement contains a magic number: Assert.That(predicate.Execute(9)' Is.True);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateReferenceTest.cs,Compare_NumericVariablePartOfDictionary_PointlessVariableIsNotEvaluated,The following statement contains a magic number: Assert.That(predicate.Execute(11)' Is.False);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateWithoutReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateWithoutReferenceTest.cs,Compare_NotNullDateTime_Failure,The following statement contains a magic number: Assert.That(comparer.Execute(new DateTime(2015' 10' 1))' Is.False);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateWithoutReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateWithoutReferenceTest.cs,Compare_NotNullDateTime_Failure,The following statement contains a magic number: Assert.That(comparer.Execute(new DateTime(2015' 10' 1))' Is.False);
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateWithoutReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateWithoutReferenceTest.cs,Compare_DateTime_Result,The following statement contains a magic number: Assert.That(comparer.Execute(new DateTime(2015' 10' 1' hours' minutes' seconds))' Is.EqualTo(result));
Magic Number,NBi.Testing.Core.Calculation.Predicate,PredicateWithoutReferenceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Predicate\PredicateWithoutReferenceTest.cs,Compare_DateTime_Result,The following statement contains a magic number: Assert.That(comparer.Execute(new DateTime(2015' 10' 1' hours' minutes' seconds))' Is.EqualTo(result));
Magic Number,NBi.Testing.Core.Calculation.Ranking,BottomRankingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Ranking\BottomRankingTest.cs,Apply_TopTwo_Success,The following statement contains a magic number: var ranking = new BottomRanking(2' new ColumnOrdinalIdentifier(1)' columnType' null' null);
Magic Number,NBi.Testing.Core.Calculation.Ranking,BottomRankingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Ranking\BottomRankingTest.cs,Apply_TopTwo_Success,The following statement contains a magic number: Assert.That(filteredRs.Rows.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.Calculation.Ranking,BottomRankingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Ranking\BottomRankingTest.cs,Apply_Larger_Success,The following statement contains a magic number: var ranking = new BottomRanking(10' new ColumnOrdinalIdentifier(1)' columnType' null' null);
Magic Number,NBi.Testing.Core.Calculation.Ranking,BottomRankingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Ranking\BottomRankingTest.cs,Apply_Larger_Success,The following statement contains a magic number: Assert.That(filteredRs.Rows[values.Count() - 1].ItemArray[0]' Is.EqualTo(index[2].ToString()));
Magic Number,NBi.Testing.Core.Calculation.Ranking,TopRankingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Ranking\TopRankingTest.cs,Apply_TopTwo_Success,The following statement contains a magic number: var ranking = new TopRanking(2' new ColumnOrdinalIdentifier(1)' columnType' null' null);
Magic Number,NBi.Testing.Core.Calculation.Ranking,TopRankingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Ranking\TopRankingTest.cs,Apply_TopTwo_Success,The following statement contains a magic number: Assert.That(filteredRs.Rows.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.Calculation.Ranking,TopRankingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Ranking\TopRankingTest.cs,Apply_Larger_Success,The following statement contains a magic number: var ranking = new TopRanking(10' new ColumnOrdinalIdentifier(1)' columnType' null' null);
Magic Number,NBi.Testing.Core.Calculation.Ranking,TopRankingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Calculation\Ranking\TopRankingTest.cs,Apply_Larger_Success,The following statement contains a magic number: Assert.That(filteredRs.Rows[values.Count() - 1].ItemArray[0]' Is.EqualTo(index[2].ToString()));
Magic Number,NBi.Testing.Core,ListComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ListComparerTest.cs,Sample_LessThan10Items_DontThrowException,The following statement contains a magic number: var sampledRes = res.Sample(2);
Magic Number,NBi.Testing.Core,ListComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ListComparerTest.cs,Sample_LessThan10Items_DontThrowException,The following statement contains a magic number: Assert.That(sampledRes.Missing.Count()' Is.EqualTo(2));
Magic Number,NBi.Testing.Core,ListComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ListComparerTest.cs,Sample_LessThan10Items_DontThrowException,The following statement contains a magic number: Assert.That(sampledRes.MissingCount' Is.GreaterThan(2));
Magic Number,NBi.Testing.Core,StringHelperTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\StringHelperTest.cs,LevenshteinDistance_TwoPermuttedLetters_Two,The following statement contains a magic number: Assert.That(distance' Is.EqualTo(2));
Magic Number,NBi.Testing.Core,StringHelperTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\StringHelperTest.cs,LevenshteinDistance_TwoIncorrectLetters_Two,The following statement contains a magic number: Assert.That(distance' Is.EqualTo(2));
Magic Number,NBi.Testing.Core,StringHelperTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\StringHelperTest.cs,LevenshteinDistance_TwoMissingLetters_Two,The following statement contains a magic number: Assert.That(distance' Is.EqualTo(2));
Magic Number,NBi.Testing.Core,StringHelperTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\StringHelperTest.cs,LevenshteinDistance_IncorrectLetterAfterMissing_Two,The following statement contains a magic number: Assert.That(distance' Is.EqualTo(5));
Magic Number,NBi.Testing,FileOnDisk,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FileOnDisk.cs,CopyStream,The following statement contains a magic number: byte[] buffer = new byte[8 * 1024];
Magic Number,NBi.Testing,FileOnDisk,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FileOnDisk.cs,CopyStream,The following statement contains a magic number: byte[] buffer = new byte[8 * 1024];
Magic Number,NBi.Testing.Core.DataType,DataTypeInfoFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\DataType\DataTypeInfoFactoryTest.cs,Instantiate_TextType_CorrectLength,The following statement contains a magic number: Assert.That((obj as ILength).Length' Is.EqualTo(10));
Magic Number,NBi.Testing.Core.DataType,DataTypeInfoFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\DataType\DataTypeInfoFactoryTest.cs,Instantiate_NumericType_CorrectScalePrecision,The following statement contains a magic number: Assert.That((obj as IPrecision).Precision' Is.EqualTo(10));
Magic Number,NBi.Testing.Core.DataType,DataTypeInfoFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\DataType\DataTypeInfoFactoryTest.cs,Instantiate_NumericType_CorrectScalePrecision,The following statement contains a magic number: Assert.That((obj as IScale).Scale' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_BasicMathValid_True,The following statement contains a magic number: var expressions = new List<ValuedExpression>() { new ValuedExpression("=4+4"' 8) };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_VariableValid_True,The following statement contains a magic number: var expressions = new List<ValuedExpression>() { new ValuedExpression("=X+4"' 9) };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_VariableValid_True,The following statement contains a magic number: var variables = new Dictionary<string' object>() { { "X"' 5 } };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_VariableInvalid_False,The following statement contains a magic number: var variables = new Dictionary<string' object>() { { "X"' 5 } };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_MathVariablesValid_True,The following statement contains a magic number: var expressions = new List<ValuedExpression>() { new ValuedExpression("=Abs(x*y)"' 10) };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_MathVariablesValid_True,The following statement contains a magic number: var variables = new Dictionary<string' object>()              {                  {"x"' -5 }'                  {"y"' 2 }              };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_MathVariablesValid_True,The following statement contains a magic number: var variables = new Dictionary<string' object>()              {                  {"x"' -5 }'                  {"y"' 2 }              };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_MathVariablesInvalid_False,The following statement contains a magic number: var variables = new Dictionary<string' object>()              {                  {"x"' -5 }'                  {"y"' 2 }              };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_MathVariablesInvalid_False,The following statement contains a magic number: var variables = new Dictionary<string' object>()              {                  {"x"' -5 }'                  {"y"' 2 }              };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_MathVariablesToleranceValid_True,The following statement contains a magic number: var expressions = new List<ValuedExpression>() { new ValuedExpression("=Abs(x*y)"' 9' 2) };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_MathVariablesToleranceValid_True,The following statement contains a magic number: var expressions = new List<ValuedExpression>() { new ValuedExpression("=Abs(x*y)"' 9' 2) };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_MathVariablesToleranceValid_True,The following statement contains a magic number: var variables = new Dictionary<string' object>()              {                  { "x"' -5 }'                  { "y"' 2 }              };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_MathVariablesToleranceValid_True,The following statement contains a magic number: var variables = new Dictionary<string' object>()              {                  { "x"' -5 }'                  { "y"' 2 }              };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_MathVariablesToleranceInvalid_False,The following statement contains a magic number: var expressions = new List<ValuedExpression>() { new ValuedExpression("=Abs(x*y)"' 0' 2) };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_MathVariablesToleranceInvalid_False,The following statement contains a magic number: var variables = new Dictionary<string' object>()              {                  { "x"' -5 }'                  { "y"' 2 }              };
Magic Number,NBi.Testing.Core.Evaluate,RowValidatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Evaluate\RowValidatorTest.cs,Execute_MathVariablesToleranceInvalid_False,The following statement contains a magic number: var variables = new Dictionary<string' object>()              {                  { "x"' -5 }'                  { "y"' 2 }              };
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileMissingCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[0].ItemArray[2]' Is.EqualTo("c"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileMissingCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[1].ItemArray[2]' Is.EqualTo("?"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileMissingCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[2].ItemArray[0]' Is.EqualTo("a"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileMissingCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[2].ItemArray[1]' Is.EqualTo("?"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileMissingCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[2].ItemArray[2]' Is.EqualTo("?"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileMissingCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[2].ItemArray[2]' Is.EqualTo("?"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileMissingCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[3].ItemArray[0]' Is.EqualTo("a"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileMissingCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[3].ItemArray[1]' Is.EqualTo("b"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileMissingCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[3].ItemArray[2]' Is.EqualTo("?"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileMissingCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[3].ItemArray[2]' Is.EqualTo("?"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileEmptyCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[0].ItemArray[2]' Is.EqualTo("c"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileEmptyCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[1].ItemArray[2]' Is.EqualTo("c"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileEmptyCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[2].ItemArray[0]' Is.EqualTo("?"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileEmptyCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[2].ItemArray[1]' Is.EqualTo("b"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileEmptyCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[2].ItemArray[2]' Is.EqualTo("c"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileEmptyCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[2].ItemArray[2]' Is.EqualTo("c"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileEmptyCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[3].ItemArray[0]' Is.EqualTo("?"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileEmptyCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[3].ItemArray[1]' Is.EqualTo("b"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileEmptyCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[3].ItemArray[2]' Is.EqualTo("?"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,NextRecords_CsvWithCsvProfileEmptyCell_CorrectResults,The following statement contains a magic number: Assert.That(dataTable.Rows[3].ItemArray[2]' Is.EqualTo("?"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,Read_Csv_CorrectResult,The following statement contains a magic number: Assert.That(dataTable.Rows' Has.Count.EqualTo(4));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,Read_Csv_CorrectResult,The following statement contains a magic number: Assert.That(cell.ToString()' Has.Length.EqualTo(3).Or.EqualTo("(empty)").Or.EqualTo("(null)"));
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,IdentifyPartialRecordSeparator_Csv_CorrectResult,The following statement contains a magic number: var reader = new CsvReaderProxy(20);
Magic Number,NBi.Testing.Core.FlatFile,CsvReaderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvReaderTest.cs,Read_MissingValue_MatchWithNullValue,The following statement contains a magic number: Assert.That(dataTable.Rows[1][2]' Is.EqualTo("(null)"));
Magic Number,NBi.Testing.Core.FlatFile,CsvWriterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvWriterTest.cs,Write_TwoRowsWithHeader_ThreeLines,The following statement contains a magic number: text.Remove(text.Length - 2);
Magic Number,NBi.Testing.Core.FlatFile,CsvWriterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvWriterTest.cs,Write_TwoRowsWithHeader_ThreeLines,The following statement contains a magic number: Assert.That(countLine' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.FlatFile,CsvWriterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvWriterTest.cs,Write_TwoRowsWithoutHeader_TwoLines,The following statement contains a magic number: text.Remove(text.Length - 2);
Magic Number,NBi.Testing.Core.FlatFile,CsvWriterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvWriterTest.cs,Write_TwoRowsWithoutHeader_TwoLines,The following statement contains a magic number: Assert.That(countLine' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.FlatFile,CsvWriterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\FlatFile\CsvWriterTest.cs,Write_TwoRowsWithoutHeader_AllLinesHaveTwoFieldSeparator,The following statement contains a magic number: Assert.That(countLine' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.Format,RegexBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Format\RegexBuilderTest.cs,Build_NumericFormat_CorrectRegex,The following statement contains a magic number: var result = builder.Build(                      Mock.Of<INumericFormat>                      (                          x =>                          x.DecimalDigits ==2                          && x.DecimalSeparator=="."                          && x.GroupSeparator=="'"                      )                  );
Magic Number,NBi.Testing.Core.Format,RegexBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Format\RegexBuilderTest.cs,Build_NumericFormatWithoutGroupSeparator_CorrectRegex,The following statement contains a magic number: var result = builder.Build(                      Mock.Of<INumericFormat>                      (                          x =>                          x.DecimalDigits == 3                          && x.DecimalSeparator == "'"                          && x.GroupSeparator == ""                      )                  );
Magic Number,NBi.Testing.Core.Format,RegexBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Format\RegexBuilderTest.cs,Build_CurrencyFormat_CorrectRegex,The following statement contains a magic number: var result = builder.Build(                      Mock.Of<ICurrencyFormat>                      (                          x =>                          x.DecimalDigits == 2                          && x.DecimalSeparator == "."                          && x.GroupSeparator == "'"                          && x.CurrencySymbol == "$"                          && x.CurrencyPattern==CurrencyPattern.Prefix                      )                  );
Magic Number,NBi.Testing.Core.Format,RegexBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Format\RegexBuilderTest.cs,Build_CurrencyFormatSpaceEuro_CorrectRegex,The following statement contains a magic number: var result = builder.Build(                      Mock.Of<ICurrencyFormat>                      (                          x =>                           x.DecimalDigits == 2                          && x.DecimalSeparator == "'"                          && x.GroupSeparator == " "                          && x.CurrencySymbol == "€"                          && x.CurrencyPattern == CurrencyPattern.SuffixSpace                      )                  );
Magic Number,NBi.Testing.Core.Format,RegexBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Format\RegexBuilderTest.cs,Build_CurrencyFormatSpaceKiloEuro_CorrectRegex,The following statement contains a magic number: var result = builder.Build(                      Mock.Of<ICurrencyFormat>                      (                          x =>                          x.DecimalDigits == 2                          && x.DecimalSeparator == "'"                          && x.GroupSeparator == " "                          && x.CurrencySymbol == "k€"                          && x.CurrencyPattern == CurrencyPattern.SuffixSpace                      )                  );
Magic Number,NBi.Testing.Core.Format,RegexBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Format\RegexBuilderTest.cs,Build_CurrencyFormatSpaceKiloEuroinLetter_CorrectRegex,The following statement contains a magic number: var result = builder.Build(                      Mock.Of<ICurrencyFormat>                      (                          x => x.DecimalDigits == 2 &&                          x.DecimalSeparator == "'" &&                          x.GroupSeparator == " " &&                          x.CurrencySymbol == "Kilo Euro (k€)" &&                          x.CurrencyPattern == CurrencyPattern.SuffixSpace                      )                  );
Magic Number,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_Example_FirstColumnIsCorrect,The following statement contains a magic number: Assert.That(result.Count' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_Example_FirstColumnIsCorrect,The following statement contains a magic number: Assert.That(result.Select(x => ((x as IEnumerable<object>).ElementAt(0) as string).Length)' Is.All.EqualTo(6));
Magic Number,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_Example_AllColumnsAreCorrect,The following statement contains a magic number: Assert.That(result.Count' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_Example_AllColumnsAreCorrect,The following statement contains a magic number: Assert.That(result.Count' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_Example_AllColumnsAreCorrect,The following statement contains a magic number: Assert.That(result.Select(x => ((x as IEnumerable<object>).ElementAt(0) as string).Length)' Is.All.EqualTo(6));
Magic Number,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_Example_AllColumnsAreCorrect,The following statement contains a magic number: Assert.That(result.Select(x => (x as IEnumerable<object>).ElementAt(1))' Is.All.EqualTo(1).Or.EqualTo(2));
Magic Number,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_MissingElement_Null,The following statement contains a magic number: Assert.That((result.ElementAt(3) as IEnumerable<object>).ElementAt(0)' Is.EqualTo("(null)"));
Magic Number,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_ParentElement_ValueCorrect,The following statement contains a magic number: Assert.That((result.ElementAt(2) as IEnumerable<object>).ElementAt(0)' Does.Contain("99505"));
Magic Number,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_ParentElement_ValueCorrect,The following statement contains a magic number: Assert.That((result.ElementAt(2) as IEnumerable<object>).ElementAt(1)' Does.Contain("456-NM"));
Magic Number,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_ParentElementGoingAboveRoot_ValueCorrect,The following statement contains a magic number: Assert.That((result.ElementAt(2) as IEnumerable<object>).ElementAt(0)' Does.Contain("(null)"));
Magic Number,NBi.Testing.Core.Hierarchical.Json,JsonPathFileEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Json\JsonPathFileEngineTest.cs,Execute_ParentElementGoingAboveRoot_ValueCorrect,The following statement contains a magic number: Assert.That((result.ElementAt(2) as IEnumerable<object>).ElementAt(1)' Does.Contain("456-NM"));
Magic Number,NBi.Testing.Core.Members,PredefinedMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\PredefinedMembersFactoryTest.cs,Instantiate_DaysOfWeekInFrench_ListFromLundiToDimanche,The following statement contains a magic number: Assert.That(days[6]' Is.EqualTo("Dimanche"));
Magic Number,NBi.Testing.Core.Members,PredefinedMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\PredefinedMembersFactoryTest.cs,Instantiate_DaysOfWeekInFrench_ListFromLundiToDimanche,The following statement contains a magic number: Assert.That(days.Count' Is.EqualTo(7));
Magic Number,NBi.Testing.Core.Members,PredefinedMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\PredefinedMembersFactoryTest.cs,Instantiate_DaysOfWeekInEnglish_ListFromMondayToSunday,The following statement contains a magic number: Assert.That(days[6]' Is.EqualTo("Sunday"));
Magic Number,NBi.Testing.Core.Members,PredefinedMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\PredefinedMembersFactoryTest.cs,Instantiate_DaysOfWeekInEnglish_ListFromMondayToSunday,The following statement contains a magic number: Assert.That(days.Count' Is.EqualTo(7));
Magic Number,NBi.Testing.Core.Members,PredefinedMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\PredefinedMembersFactoryTest.cs,Instantiate_MonthsOfYearInEnglish_ListFromJanuaryToDecember,The following statement contains a magic number: Assert.That(months[11]' Is.EqualTo("December"));
Magic Number,NBi.Testing.Core.Members,PredefinedMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\PredefinedMembersFactoryTest.cs,Instantiate_MonthsOfYearInEnglish_ListFromJanuaryToDecember,The following statement contains a magic number: Assert.That(months.Count' Is.EqualTo(12));
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_IntegerFrom3To10_ListFrom3To10,The following statement contains a magic number: var integerRange = new IntegerRange()                  {                      Start = 3'                      End = 10'                      Step = 1                  };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_IntegerFrom3To10_ListFrom3To10,The following statement contains a magic number: var integerRange = new IntegerRange()                  {                      Start = 3'                      End = 10'                      Step = 1                  };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_IntegerFrom3To10_ListFrom3To10,The following statement contains a magic number: Assert.That(values[7]' Is.EqualTo("10"));
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_IntegerFrom3To10_ListFrom3To10,The following statement contains a magic number: Assert.That(values.Count' Is.EqualTo(8));
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_IntegerFrom3To10Step3_ListFrom3To9,The following statement contains a magic number: var integerRange = new IntegerRange()              {                  Start = 3'                  End = 10'                  Step = 3              };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_IntegerFrom3To10Step3_ListFrom3To9,The following statement contains a magic number: var integerRange = new IntegerRange()              {                  Start = 3'                  End = 10'                  Step = 3              };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_IntegerFrom3To10Step3_ListFrom3To9,The following statement contains a magic number: var integerRange = new IntegerRange()              {                  Start = 3'                  End = 10'                  Step = 3              };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_IntegerFrom3To10Step3_ListFrom3To9,The following statement contains a magic number: Assert.That(values[2]' Is.EqualTo("9"));
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_IntegerFrom3To10Step3_ListFrom3To9,The following statement contains a magic number: Assert.That(values.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_IntegerFrom1To52WithPrefixPattern_ListFromWeek1ToWeek52,The following statement contains a magic number: var integerRange = new IntegerPatternRange()              {                  Start = 1'                  End = 52'                  Step = 1'                  Pattern="Week "'                  Position= PositionValue.Prefix              };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_IntegerFrom1To52WithPrefixPattern_ListFromWeek1ToWeek52,The following statement contains a magic number: Assert.That(values[51]' Is.EqualTo("Week 52"));
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_IntegerFrom1To52WithPrefixPattern_ListFromWeek1ToWeek52,The following statement contains a magic number: Assert.That(values.Count' Is.EqualTo(52));
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2013_ListWithAllDays,The following statement contains a magic number: var dateRange = new DateRange()              {                  Start = new DateTime(2013' 1' 1)'                  End = new DateTime(2013' 12' 31)'                  Culture = culture              };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2013_ListWithAllDays,The following statement contains a magic number: var dateRange = new DateRange()              {                  Start = new DateTime(2013' 1' 1)'                  End = new DateTime(2013' 12' 31)'                  Culture = culture              };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2013_ListWithAllDays,The following statement contains a magic number: var dateRange = new DateRange()              {                  Start = new DateTime(2013' 1' 1)'                  End = new DateTime(2013' 12' 31)'                  Culture = culture              };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2013_ListWithAllDays,The following statement contains a magic number: var dateRange = new DateRange()              {                  Start = new DateTime(2013' 1' 1)'                  End = new DateTime(2013' 12' 31)'                  Culture = culture              };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2013_ListWithAllDays,The following statement contains a magic number: Assert.That(values.Count' Is.EqualTo(365));
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2013_ListWithAllDays,The following statement contains a magic number: var januaryFirst = new DateTime(2013' 1' 1).ToString(culture.DateTimeFormat.ShortDatePattern);
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2013_ListWithAllDays,The following statement contains a magic number: var decemberLast = new DateTime(2013' 12' 31).ToString(culture.DateTimeFormat.ShortDatePattern);
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2013_ListWithAllDays,The following statement contains a magic number: var decemberLast = new DateTime(2013' 12' 31).ToString(culture.DateTimeFormat.ShortDatePattern);
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2013_ListWithAllDays,The following statement contains a magic number: var decemberLast = new DateTime(2013' 12' 31).ToString(culture.DateTimeFormat.ShortDatePattern);
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2013_ListWithAllDays,The following statement contains a magic number: Assert.That(values[364]' Is.EqualTo(decemberLast));
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2012InFrenchWithLongFormat_ListWithAllDays,The following statement contains a magic number: var dateRange = new DateRange()              {                  Start = new DateTime(2012' 1' 1)'                  End = new DateTime(2012' 12' 31)'                  Culture = new CultureInfo("fr")'                  Format = "MMMM dd' yyyy"              };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2012InFrenchWithLongFormat_ListWithAllDays,The following statement contains a magic number: var dateRange = new DateRange()              {                  Start = new DateTime(2012' 1' 1)'                  End = new DateTime(2012' 12' 31)'                  Culture = new CultureInfo("fr")'                  Format = "MMMM dd' yyyy"              };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2012InFrenchWithLongFormat_ListWithAllDays,The following statement contains a magic number: var dateRange = new DateRange()              {                  Start = new DateTime(2012' 1' 1)'                  End = new DateTime(2012' 12' 31)'                  Culture = new CultureInfo("fr")'                  Format = "MMMM dd' yyyy"              };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2012InFrenchWithLongFormat_ListWithAllDays,The following statement contains a magic number: var dateRange = new DateRange()              {                  Start = new DateTime(2012' 1' 1)'                  End = new DateTime(2012' 12' 31)'                  Culture = new CultureInfo("fr")'                  Format = "MMMM dd' yyyy"              };
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2012InFrenchWithLongFormat_ListWithAllDays,The following statement contains a magic number: Assert.That(values.Count' Is.EqualTo(366));
Magic Number,NBi.Testing.Core.Members,RangeMembersFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Members\RangeMembersFactoryTest.cs,Instantiate_DateFrom1stJanuaryTo31December2012InFrenchWithLongFormat_ListWithAllDays,The following statement contains a magic number: Assert.That(values[365]' Is.EqualTo("décembre 31' 2012"));
Magic Number,NBi.Testing.Core.Query.Command,OleDbCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\OleDbCommandFactoryTest.cs,Build_TimeoutSpecified_TimeoutSet,The following statement contains a magic number: var query = Mock.Of<IQuery>(                  x => x.ConnectionString == ConnectionStringReader.GetOleDbSql()                  && x.Statement == "WAITFOR DELAY '00:00:15'"                  && x.Timeout == new TimeSpan(0' 0' 5)                  );
Magic Number,NBi.Testing.Core.Query.Command,OleDbCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\OleDbCommandFactoryTest.cs,Build_TimeoutSpecified_TimeoutSet,The following statement contains a magic number: Assert.That((cmd.Implementation as OleDbCommand).CommandTimeout' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.Query.Command,OleDbCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\OleDbCommandFactoryTest.cs,Build_TimeoutSetTo30_TimeoutSet30Seconds,The following statement contains a magic number: var query = Mock.Of<IQuery>(                  x => x.ConnectionString == ConnectionStringReader.GetOleDbSql()                  && x.Statement == "WAITFOR DELAY '00:00:15'"                  && x.Timeout == new TimeSpan(0' 0' 30)                  );
Magic Number,NBi.Testing.Core.Query.Command,OleDbCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\OleDbCommandFactoryTest.cs,Build_TimeoutSetTo30_TimeoutSet30Seconds,The following statement contains a magic number: Assert.That((cmd.Implementation as OleDbCommand).CommandTimeout' Is.EqualTo(30));
Magic Number,NBi.Testing.Core.Query.Command,SqlCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\SqlCommandFactoryTest.cs,Build_TimeoutSpecified_TimeoutSet,The following statement contains a magic number: var query = Mock.Of<IQuery>(                  x => x.ConnectionString == "Data Source=server;Initial Catalog=database;Integrated Security=SSPI"                  && x.Statement == "WAITFOR DELAY '00:00:15'"                  && x.Timeout == new TimeSpan(0' 0' 5)                  );
Magic Number,NBi.Testing.Core.Query.Command,SqlCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\SqlCommandFactoryTest.cs,Build_TimeoutSpecified_TimeoutSet,The following statement contains a magic number: Assert.That((cmd.Implementation as SqlCommand).CommandTimeout' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.Query.Command,SqlCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\SqlCommandFactoryTest.cs,Build_TimeoutSetTo30_TimeoutSet30Seconds,The following statement contains a magic number: var query = Mock.Of<IQuery>(                  x => x.ConnectionString == "Data Source=server;Initial Catalog=database;Integrated Security=SSPI"                  && x.Statement == "WAITFOR DELAY '00:00:15'"                  && x.Timeout == new TimeSpan(0' 0' 30)                  );
Magic Number,NBi.Testing.Core.Query.Command,SqlCommandFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Command\SqlCommandFactoryTest.cs,Build_TimeoutSetTo30_TimeoutSet30Seconds,The following statement contains a magic number: Assert.That((cmd.Implementation as SqlCommand).CommandTimeout' Is.EqualTo(30));
Magic Number,NBi.Testing.Core.Query,DbTypeBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\DbTypeBuilderTest.cs,Build_Varchar255_AnsiStringWithSize,The following statement contains a magic number: Assert.That(result.Size' Is.EqualTo(255));
Magic Number,NBi.Testing.Core.Query,DbTypeBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\DbTypeBuilderTest.cs,Build_Decimal10And2_DecimalWithSizeAndPrecision,The following statement contains a magic number: Assert.That(result.Size' Is.EqualTo(10));
Magic Number,NBi.Testing.Core.Query,DbTypeBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\DbTypeBuilderTest.cs,Build_Decimal10And2_DecimalWithSizeAndPrecision,The following statement contains a magic number: Assert.That(result.Precision' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.Query,QueryParameterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\QueryParameterTest.cs,GetValue_Variable_CorrectValue,The following statement contains a magic number: Assert.That(param.GetValue()' Is.EqualTo(30));
Magic Number,NBi.Testing.Core.Query.Resolver,EmbeddedQueryResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Resolver\EmbeddedQueryResolverTest.cs,BuildArgs,The following statement contains a magic number: return new EmbeddedQueryResolverArgs(                  "select * from myTable;"'                  ConnectionStringReader.GetSqlClient()'                  new List<IQueryParameter>() { new QueryParameter("param"' "10") }'                  new List<IQueryTemplateVariable>() { Mock.Of<IQueryTemplateVariable>(x => x.Name == "operator" && x.Value == "not in") }'                  new TimeSpan(0' 0' 10));
Magic Number,NBi.Testing.Core.Query.Resolver,ReportDataSetQueryResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Resolver\ReportDataSetQueryResolverTest.cs,BuildArgs,The following statement contains a magic number: return new ReportDataSetQueryResolverArgs(                  @"C:\"' @"Path\"' "MyReport"' "MyDataSet"'                  ConnectionStringReader.GetSqlClient()'                  new List<IQueryParameter>() { new QueryParameter("param"' "10") }'                  new List<IQueryTemplateVariable>() { Mock.Of<IQueryTemplateVariable>(x => x.Name == "operator" && x.Value == "not in" ) }'                  new TimeSpan(0' 0' 10));
Magic Number,NBi.Testing.Core.Query.Resolver,SharedDataSetQueryResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Query\Resolver\SharedDataSetQueryResolverTest.cs,BuildArgs,The following statement contains a magic number: return new SharedDataSetQueryResolverArgs(                  @"C:\"' @"Path\"' "MyReport"'                    ConnectionStringReader.GetSqlClient()'                  new List<IQueryParameter>() { new QueryParameter("param"' "10") }'                  new List<IQueryTemplateVariable>() { Mock.Of<IQueryTemplateVariable>(x => x.Name == "operator" && x.Value == "not in" ) }'                  new TimeSpan(0' 0' 10));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: var extender = new NativeExtendEngine(                  new ServiceLocator()'                  new ColumnOrdinalIdentifier(3)'                  "#1 | numeric-to-multiply(#2)"                  );
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Columns.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[0][3]' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[0][3]' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[1][3]' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[1][3]' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[2][3]' Is.EqualTo(35));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[2][3]' Is.EqualTo(35));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[2][3]' Is.EqualTo(35));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: rs.Columns[2].ColumnName = "c";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Columns.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Columns[3].ColumnName' Is.EqualTo("d"));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[0][3]' Is.EqualTo("AL"));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[1][3]' Is.EqualTo("BE"));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[2][3]' Is.EqualTo("GAMMA"));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[2][3]' Is.EqualTo("GAMMA"));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NativeExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NativeExtendEngineTest.cs,Execute_ManyTimes_Performances,The following statement contains a magic number: Assert.That(stopWatch.ElapsedMilliseconds' Is.LessThanOrEqualTo(5000));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: var extender = new NCalcExtendEngine(                  new ServiceLocator()'                  new ColumnOrdinalIdentifier(3)'                  "[#1] * [#2]"                  );
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Columns.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[0][3]' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[0][3]' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[1][3]' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[1][3]' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[2][3]' Is.EqualTo(35));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[2][3]' Is.EqualTo(35));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnOrdinal_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[2][3]' Is.EqualTo(35));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "Alpha"' 1' 2 }' new object[] { "Beta"' 3' 2 }' new object[] { "Gamma"' 5' 7 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: rs.Columns[2].ColumnName = "c";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Columns.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Columns[3].ColumnName' Is.EqualTo("d"));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[0][3]' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[0][3]' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[1][3]' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[1][3]' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[2][3]' Is.EqualTo(35));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[2][3]' Is.EqualTo(35));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_StandardRsColumnName_CorrectExtension,The following statement contains a magic number: Assert.That(newRs.Rows[2][3]' Is.EqualTo(35));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Extension,NCalcExtendEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Extension\NCalcExtendEngineTest.cs,Execute_ManyTimes_Performances,The following statement contains a magic number: Assert.That(stopWatch.ElapsedMilliseconds' Is.LessThanOrEqualTo(5000));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,Execute_AllLookupFound_CorrectReplacement,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "B"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,Execute_AllLookupFound_CorrectReplacement,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "B"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,Execute_AllLookupFound_CorrectReplacement,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "B"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,Execute_AllLookupFound_CorrectReplacement,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "B"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,Execute_AllLookupFound_CorrectReplacement,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "B"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,Execute_AllLookupFound_CorrectReplacement,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "B"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,Execute_AllLookupFound_CorrectReplacement,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "B"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,Execute_AllLookupFound_CorrectReplacement,The following statement contains a magic number: Assert.That(result.Columns.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,Execute_AllLookupFound_CorrectReplacement,The following statement contains a magic number: Assert.That(result.Rows.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithFailureStretegy_OneLookupMissing_ExceptionThrown,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithFailureStretegy_OneLookupMissing_ExceptionThrown,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithFailureStretegy_OneLookupMissing_ExceptionThrown,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithFailureStretegy_OneLookupMissing_ExceptionThrown,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithFailureStretegy_OneLookupMissing_ExceptionThrown,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithFailureStretegy_OneLookupMissing_ExceptionThrown,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithFailureStretegy_OneLookupMissing_ExceptionThrown,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDefaultValueStrategy_OneLookupMissing_DefaultValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDefaultValueStrategy_OneLookupMissing_DefaultValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDefaultValueStrategy_OneLookupMissing_DefaultValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDefaultValueStrategy_OneLookupMissing_DefaultValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDefaultValueStrategy_OneLookupMissing_DefaultValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDefaultValueStrategy_OneLookupMissing_DefaultValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDefaultValueStrategy_OneLookupMissing_DefaultValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDefaultValueStrategy_OneLookupMissing_DefaultValueApplied,The following statement contains a magic number: Assert.That(result.Rows.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithOriginalValueStrategy_OneLookupMissing_OriginalValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithOriginalValueStrategy_OneLookupMissing_OriginalValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithOriginalValueStrategy_OneLookupMissing_OriginalValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithOriginalValueStrategy_OneLookupMissing_OriginalValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithOriginalValueStrategy_OneLookupMissing_OriginalValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithOriginalValueStrategy_OneLookupMissing_OriginalValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithOriginalValueStrategy_OneLookupMissing_OriginalValueApplied,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithOriginalValueStrategy_OneLookupMissing_OriginalValueApplied,The following statement contains a magic number: Assert.That(result.Rows.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDiscardRowStrategy_OneLookupMissing_LessRowsReturned,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDiscardRowStrategy_OneLookupMissing_LessRowsReturned,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDiscardRowStrategy_OneLookupMissing_LessRowsReturned,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDiscardRowStrategy_OneLookupMissing_LessRowsReturned,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDiscardRowStrategy_OneLookupMissing_LessRowsReturned,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDiscardRowStrategy_OneLookupMissing_LessRowsReturned,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDiscardRowStrategy_OneLookupMissing_LessRowsReturned,The following statement contains a magic number: var candidate = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { 1' "A"' 100 }'                          new object[] { 2' "B"' 101 }'                          new object[] { 3' "A"' 125 }'                          new object[] { 4' "C"' 155 }                      }                  )).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Lookup,LookupReplaceEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Lookup\LookupReplaceEngineTest.cs,ExecuteWithDiscardRowStrategy_OneLookupMissing_LessRowsReturned,The following statement contains a magic number: Assert.That(result.Rows.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectAwayEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectAwayEngineTest.cs,Execute_Identifier_ColumnSkipped,The following statement contains a magic number: rs.Columns[2].ColumnName = "Col2";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectAwayEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectAwayEngineTest.cs,Execute_Identifier_ColumnSkipped,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectAwayEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectAwayEngineTest.cs,Execute_MultipleIdentifiers_ColumnSkipped,The following statement contains a magic number: rs.Columns[2].ColumnName = "Bar";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectAwayEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectAwayEngineTest.cs,Execute_DuplicatedIdentifiers_ColumnSkipped,The following statement contains a magic number: rs.Columns[2].ColumnName = "Col2";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectAwayEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectAwayEngineTest.cs,Execute_DuplicatedIdentifiers_ColumnSkipped,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectAwayEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectAwayEngineTest.cs,Execute_NonExistingIdentifiers_ColumnSkipped,The following statement contains a magic number: rs.Columns[2].ColumnName = "Col2";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectAwayEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectAwayEngineTest.cs,Execute_NonExistingIdentifiers_ColumnSkipped,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectEngineTest.cs,Execute_Identifier_ColumnFilterped,The following statement contains a magic number: rs.Columns[2].ColumnName = "Col2";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectEngineTest.cs,Execute_MultipleIdentifiers_ColumnFilterped,The following statement contains a magic number: rs.Columns[2].ColumnName = "Bar";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectEngineTest.cs,Execute_MultipleIdentifiers_ColumnFilterped,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectEngineTest.cs,Execute_MultipleIdentifiersNotSameOrder_ColumnFilteredOrderChanged,The following statement contains a magic number: rs.Columns[2].ColumnName = "Bar";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectEngineTest.cs,Execute_MultipleIdentifiersNotSameOrder_ColumnFilteredOrderChanged,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectEngineTest.cs,Execute_DuplicatedIdentifiers_ColumnFilterped,The following statement contains a magic number: rs.Columns[2].ColumnName = "Col2";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectEngineTest.cs,Execute_DuplicatedIdentifiersAndChangeOrder_ColumnFilteredOrderedChanged,The following statement contains a magic number: rs.Columns[2].ColumnName = "Bar";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectEngineTest.cs,Execute_DuplicatedIdentifiersAndChangeOrder_ColumnFilteredOrderedChanged,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Projection,ProjectEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Projection\ProjectEngineTest.cs,Execute_NonExistingIdentifiers_ColumnFilterped,The following statement contains a magic number: rs.Columns[2].ColumnName = "Col2";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeySingleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1 }'                          new object[] { "alpha"' "B"' 2 }'                          new object[] { "beta"' "A"' 3 }'                          new object[] { "beta"' "B"' 4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeySingleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1 }'                          new object[] { "alpha"' "B"' 2 }'                          new object[] { "beta"' "A"' 3 }'                          new object[] { "beta"' "B"' 4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeySingleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1 }'                          new object[] { "alpha"' "B"' 2 }'                          new object[] { "beta"' "A"' 3 }'                          new object[] { "beta"' "B"' 4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeySingleValue_ExpectedResultSet,The following statement contains a magic number: rs.Columns[2].ColumnName = "valueColumn";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeySingleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Columns.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeySingleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Rows.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeySingleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["B"]) == 2);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeySingleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta")["A"]) == 3);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeySingleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta")["B"]) == 4);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1' -1 }'                          new object[] { "alpha"' "B"' 2' -2 }'                          new object[] { "beta"' "A"' 3' -3 }'                          new object[] { "beta"' "B"' 4' -4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1' -1 }'                          new object[] { "alpha"' "B"' 2' -2 }'                          new object[] { "beta"' "A"' 3' -3 }'                          new object[] { "beta"' "B"' 4' -4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1' -1 }'                          new object[] { "alpha"' "B"' 2' -2 }'                          new object[] { "beta"' "A"' 3' -3 }'                          new object[] { "beta"' "B"' 4' -4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1' -1 }'                          new object[] { "alpha"' "B"' 2' -2 }'                          new object[] { "beta"' "A"' 3' -3 }'                          new object[] { "beta"' "B"' 4' -4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1' -1 }'                          new object[] { "alpha"' "B"' 2' -2 }'                          new object[] { "beta"' "A"' 3' -3 }'                          new object[] { "beta"' "B"' 4' -4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1' -1 }'                          new object[] { "alpha"' "B"' 2' -2 }'                          new object[] { "beta"' "A"' 3' -3 }'                          new object[] { "beta"' "B"' 4' -4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: rs.Columns[2].ColumnName = "value1Column";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: rs.Columns[3].ColumnName = "value2Column";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Columns.Count' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Rows.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["B_value1Column"]) == 2);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta")["A_value1Column"]) == 3);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta")["B_value1Column"]) == 4);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["B_value2Column"]) == -2);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta")["A_value2Column"]) == -3);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_SingleKeyMultipleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta")["B_value2Column"]) == -4);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "one"' "A"' 1 }'                          new object[] { "alpha"' "one"' "B"' 2 }'                          new object[] { "beta"' "one"' "A"' 3 }'                          new object[] { "beta"' "one"' "B"' 4 }'                          new object[] { "beta"' "two"' "B"' -4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "one"' "A"' 1 }'                          new object[] { "alpha"' "one"' "B"' 2 }'                          new object[] { "beta"' "one"' "A"' 3 }'                          new object[] { "beta"' "one"' "B"' 4 }'                          new object[] { "beta"' "two"' "B"' -4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "one"' "A"' 1 }'                          new object[] { "alpha"' "one"' "B"' 2 }'                          new object[] { "beta"' "one"' "A"' 3 }'                          new object[] { "beta"' "one"' "B"' 4 }'                          new object[] { "beta"' "two"' "B"' -4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "one"' "A"' 1 }'                          new object[] { "alpha"' "one"' "B"' 2 }'                          new object[] { "beta"' "one"' "A"' 3 }'                          new object[] { "beta"' "one"' "B"' 4 }'                          new object[] { "beta"' "two"' "B"' -4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The following statement contains a magic number: rs.Columns[2].ColumnName = "headerColumn";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The following statement contains a magic number: rs.Columns[3].ColumnName = "valueColumn";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Columns.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Rows.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["key1Column"] as string == "alpha" && x["key2Column"] as string == "one")["B"]) == 2);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["key1Column"] as string == "beta" && x["key2Column"] as string == "one")["A"]) == 3);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["key1Column"] as string == "beta" && x["key2Column"] as string == "one")["B"]) == 4);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_MultipleKeysSingleValue_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["key1Column"] as string == "beta" && x["key2Column"] as string == "two")["B"]) == -4);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasNotExpected_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1 }'                          new object[] { "alpha"' "B"' 2 }'                          new object[] { "beta"' "A"' 3 }'                          new object[] { "beta"' "B"' 4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasNotExpected_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1 }'                          new object[] { "alpha"' "B"' 2 }'                          new object[] { "beta"' "A"' 3 }'                          new object[] { "beta"' "B"' 4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasNotExpected_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1 }'                          new object[] { "alpha"' "B"' 2 }'                          new object[] { "beta"' "A"' 3 }'                          new object[] { "beta"' "B"' 4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasNotExpected_ExpectedResultSet,The following statement contains a magic number: rs.Columns[2].ColumnName = "valueColumn";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasNotExpected_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Columns.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasNotExpected_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Rows.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasAlreadyExpected_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1 }'                          new object[] { "alpha"' "B"' 2 }'                          new object[] { "beta"' "A"' 3 }'                          new object[] { "beta"' "B"' 4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasAlreadyExpected_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1 }'                          new object[] { "alpha"' "B"' 2 }'                          new object[] { "beta"' "A"' 3 }'                          new object[] { "beta"' "B"' 4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasAlreadyExpected_ExpectedResultSet,The following statement contains a magic number: var resolver = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] {                          new object[] { "alpha"' "A"' 1 }'                          new object[] { "alpha"' "B"' 2 }'                          new object[] { "beta"' "A"' 3 }'                          new object[] { "beta"' "B"' 4 }                      }                  ));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasAlreadyExpected_ExpectedResultSet,The following statement contains a magic number: rs.Columns[2].ColumnName = "valueColumn";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_EnforcedColumnsThatWasAlreadyExpected_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Columns.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_LargeResultSet_ExpectedPerformance,The following statement contains a magic number: values.Add(new object[] { i % 2 == 0 ? "alpha" : "beta"' (i/2) % (count/2)' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_LargeResultSet_ExpectedPerformance,The following statement contains a magic number: values.Add(new object[] { i % 2 == 0 ? "alpha" : "beta"' (i/2) % (count/2)' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_LargeResultSet_ExpectedPerformance,The following statement contains a magic number: values.Add(new object[] { i % 2 == 0 ? "alpha" : "beta"' (i/2) % (count/2)' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_LargeResultSet_ExpectedPerformance,The following statement contains a magic number: rs.Columns[2].ColumnName = "valueColumn";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Reshaping,UnstackEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Reshaping\UnstackEngineTest.cs,Execute_LargeResultSet_ExpectedPerformance,The following statement contains a magic number: Assert.That(stopWatch.Elapsed.TotalSeconds' Is.LessThan(15));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Build,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Build,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Build,The following statement contains a magic number: var args = new ObjectsResultSetResolverArgs(new[] { new object[] { "alpha"' 1 }' new object[] { "alpha"' 2 }' new object[] { "beta"' 3 }' new object[] { "alpha"' 4 } });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,BuildLarge,The following statement contains a magic number: values.Add(new object[] { i % 2 == 0 ? "alpha" : "beta"' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeySingleAggregation_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Columns.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeySingleAggregation_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Rows.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeySingleAggregation_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["valueColumn"]) == 7);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeySingleAggregation_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta")["valueColumn"]) == 3);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeySingleAggregation_ExpectedResultSet,The following statement contains a magic number: var rs = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] { new object[] { "alpha"' "foo"' 1 }' new object[] { "alpha"' "foo"' 2 }' new object[] { "beta"' "foo"' 3 }' new object[] { "alpha"' "bar"' 4 } })                  ).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeySingleAggregation_ExpectedResultSet,The following statement contains a magic number: var rs = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] { new object[] { "alpha"' "foo"' 1 }' new object[] { "alpha"' "foo"' 2 }' new object[] { "beta"' "foo"' 3 }' new object[] { "alpha"' "bar"' 4 } })                  ).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeySingleAggregation_ExpectedResultSet,The following statement contains a magic number: var rs = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] { new object[] { "alpha"' "foo"' 1 }' new object[] { "alpha"' "foo"' 2 }' new object[] { "beta"' "foo"' 3 }' new object[] { "alpha"' "bar"' 4 } })                  ).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeySingleAggregation_ExpectedResultSet,The following statement contains a magic number: rs.Columns[2].ColumnName = "valueColumn";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeySingleAggregation_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Columns.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeySingleAggregation_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Rows.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeyNonAlphabeticalOrderSingleAggregation_ExpectedResultSet,The following statement contains a magic number: var rs = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] { new object[] { "alpha"' "foo"' 1 }' new object[] { "alpha"' "foo"' 2 }' new object[] { "beta"' "foo"' 3 }' new object[] { "alpha"' "bar"' 4 } })                  ).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeyNonAlphabeticalOrderSingleAggregation_ExpectedResultSet,The following statement contains a magic number: var rs = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] { new object[] { "alpha"' "foo"' 1 }' new object[] { "alpha"' "foo"' 2 }' new object[] { "beta"' "foo"' 3 }' new object[] { "alpha"' "bar"' 4 } })                  ).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeyNonAlphabeticalOrderSingleAggregation_ExpectedResultSet,The following statement contains a magic number: var rs = new ObjectsResultSetResolver(                  new ObjectsResultSetResolverArgs(                      new[] { new object[] { "alpha"' "foo"' 1 }' new object[] { "alpha"' "foo"' 2 }' new object[] { "beta"' "foo"' 3 }' new object[] { "alpha"' "bar"' 4 } })                  ).Execute();
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeyNonAlphabeticalOrderSingleAggregation_ExpectedResultSet,The following statement contains a magic number: rs.Columns[2].ColumnName = "valueColumn";
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeyNonAlphabeticalOrderSingleAggregation_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Columns.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_MultipleKeyNonAlphabeticalOrderSingleAggregation_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Rows.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeyMultipleAggregations_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Columns.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeyMultipleAggregations_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Rows.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeyMultipleAggregations_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["valueColumn_Sum"]) == 7);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeyMultipleAggregations_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "alpha")["valueColumn_Max"]) == 4);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_SingleKeyMultipleAggregations_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows.Cast<DataRow>().Single(x => x["keyColumn"] as string == "beta").ItemArray.Skip(1).Distinct().Single()) == 3);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_NoKeySingleAggregations_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows[0][0]) == 10);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_NoKeyMultipleAggregations_ExpectedResultSet,The following statement contains a magic number: Assert.That(result.Columns.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_NoKeyMultipleAggregations_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows[0][0]) == 10);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_NoKeyMultipleAggregations_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows[0][2]) == 4);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_NoKeyMultipleAggregations_ExpectedResultSet,The following statement contains a magic number: Assert.That(Convert.ToInt32(result.Rows[0][2]) == 4);
Magic Number,NBi.Testing.Core.ResultSet.Alteration.Summarization,SummarizeEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Alteration\Summarization\SummarizeEngineTest.cs,Execute_LargeResultSet_ExpectedPerformance,The following statement contains a magic number: Assert.That(stopWatch.Elapsed.TotalSeconds' Is.LessThan(10));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnType_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: actual.ApplyTo(10);
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnType_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnType(2)' Is.EqualTo(ColumnType.Text));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnType_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnType(3)' Is.EqualTo(ColumnType.Text));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnType_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnType(4)' Is.EqualTo(ColumnType.Numeric));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnType_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnType(5)' Is.EqualTo(ColumnType.Text));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnType_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnType(6)' Is.EqualTo(ColumnType.Text));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnType_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnType(7)' Is.EqualTo(ColumnType.Text));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnType_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnType(8)' Is.EqualTo(ColumnType.Text));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnType_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnType(9)' Is.EqualTo(ColumnType.Numeric));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetTolerance_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: actual.ApplyTo(10);
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetTolerance_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(Tolerance.IsNullOrNone(actual.GetTolerance(2)));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetTolerance_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetTolerance(4)' Is.TypeOf<NumericAbsoluteTolerance>());
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetTolerance_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That((actual.GetTolerance(4) as NumericAbsoluteTolerance).Side' Is.EqualTo(SideTolerance.Both));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetTolerance_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That((actual.GetTolerance(4) as NumericAbsoluteTolerance).Value' Is.EqualTo(100));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetTolerance_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That((actual.GetTolerance(4) as NumericAbsoluteTolerance).Value' Is.EqualTo(100));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetTolerance_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetTolerance(9)' Is.TypeOf<NumericAbsoluteTolerance>());
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetTolerance_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That((actual.GetTolerance(9) as NumericAbsoluteTolerance).Side' Is.EqualTo(SideTolerance.Both));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetTolerance_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That((actual.GetTolerance(9) as NumericAbsoluteTolerance).Value' Is.EqualTo(100));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetTolerance_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That((actual.GetTolerance(9) as NumericAbsoluteTolerance).Value' Is.EqualTo(100));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnRole_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: actual.ApplyTo(10);
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnRole_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnRole(2)' Is.EqualTo(ColumnRole.Value));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnRole_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnRole(3)' Is.EqualTo(ColumnRole.Key));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnRole_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnRole(4)' Is.EqualTo(ColumnRole.Value));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnRole_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnRole(5)' Is.EqualTo(ColumnRole.Ignore));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnRole_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnRole(6)' Is.EqualTo(ColumnRole.Key));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnRole_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnRole(7)' Is.EqualTo(ColumnRole.Key));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnRole_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnRole(8)' Is.EqualTo(ColumnRole.Key));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,GetColumnRole_EqualToAndColumnsDefinedCorrectResult,The following statement contains a magic number: Assert.That(actual.GetColumnRole(9)' Is.EqualTo(ColumnRole.Value));
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,BuildColumns,The following statement contains a magic number: var colLightXml = new Column()              {                  Identifier = new ColumnOrdinalIdentifier(2)'                  Role = ColumnRole.Value'              };
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,BuildColumns,The following statement contains a magic number: var col4Xml = new Column()              {                  Identifier = new ColumnOrdinalIdentifier(4)'                  Role = ColumnRole.Value'                  Type = ColumnType.Numeric'              };
Magic Number,NBi.Testing.Core.ResultSet,SettingsIndexResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsOrdinalResultSetTest.cs,BuildColumns,The following statement contains a magic number: var colIgnoreXml = new Column()              {                  Identifier = new ColumnOrdinalIdentifier(5)'                  Role = ColumnRole.Ignore'              };
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_TwoElementsOneattribute_RowCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementTwoattributes_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementTwoattributes_RowCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray.Length' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementTwoattributes_RowCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray[1]' Is.EqualTo(31));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArray_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns' Has.Count.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArray_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns[2].ColumnName' Is.EqualTo("children.name"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArray_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns[3].ColumnName' Is.EqualTo("children.age"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElement_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns' Has.Count.EqualTo(5));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElement_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns[2].ColumnName' Is.EqualTo("children.name"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElement_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns[3].ColumnName' Is.EqualTo("children.age"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElement_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns[4].ColumnName' Is.EqualTo("job"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElementAndMissingAttribute_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns' Has.Count.EqualTo(5));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElementAndMissingAttribute_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns[2].ColumnName' Is.EqualTo("children.age").Or.EqualTo("children.name"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElementAndMissingAttribute_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns[3].ColumnName' Is.EqualTo("children.name").Or.EqualTo("children.age"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElementAndMissingAttribute_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns[4].ColumnName' Is.EqualTo("job"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElementAndMissingAttributeInNextElements_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns' Has.Count.EqualTo(5));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElementAndMissingAttributeInNextElements_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns[2].ColumnName' Is.EqualTo("children.age").Or.EqualTo("children.name"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElementAndMissingAttributeInNextElements_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns[3].ColumnName' Is.EqualTo("children.name").Or.EqualTo("children.age"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayAndPostElementAndMissingAttributeInNextElements_ColumnsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Columns[4].ColumnName' Is.EqualTo("job"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray.Length' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray[1]' Is.EqualTo(31));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray[2]' Is.EqualTo("Mike"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[1].ItemArray[1]' Is.EqualTo(31));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[1].ItemArray[2]' Is.EqualTo("Helen"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayMissingAttributes_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows' Has.Count.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayMissingAttributes_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray.Length' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayMissingAttributes_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray[1]' Is.EqualTo(31));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayMissingAttributes_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray[2]' Is.EqualTo("Mike"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayMissingAttributes_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray[3]' Is.EqualTo(DBNull.Value));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayMissingAttributes_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[1].ItemArray[1]' Is.EqualTo(31));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayMissingAttributes_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[1].ItemArray[2]' Is.EqualTo("Helen"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayMissingAttributes_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[1].ItemArray[3]' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayMissingAttributes_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[1].ItemArray[3]' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows' Has.Count.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray.Length' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray[2]' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray[2]' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray[3]' Is.EqualTo(DBNull.Value));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[0].ItemArray[4]' Is.EqualTo("lawyer"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[1].ItemArray[2]' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[1].ItemArray[2]' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[1].ItemArray[3]' Is.EqualTo("Helen"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[1].ItemArray[4]' Is.EqualTo("lawyer"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[2].ItemArray[0]' Is.EqualTo("Andrew"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[2].ItemArray[1]' Is.EqualTo("Chicago"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[2].ItemArray[2]' Is.EqualTo(DBNull.Value));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[2].ItemArray[2]' Is.EqualTo(DBNull.Value));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[2].ItemArray[3]' Is.EqualTo(DBNull.Value));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[2].ItemArray[3]' Is.EqualTo(DBNull.Value));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[2].ItemArray[4]' Is.EqualTo("engineer"));
Magic Number,NBi.Testing.Core.ResultSet,JsonResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\JsonResultSetTest.cs,Build_OneElementWithArrayEmptyArray_RowsCorrectlyReturned,The following statement contains a magic number: Assert.That(result.Rows[2].ItemArray[4]' Is.EqualTo("engineer"));
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_True,The following statement contains a magic number: var a1 = new KeyCollection (new object[] { 100' "a"' true' new DateTime(2015'05'12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_True,The following statement contains a magic number: var a1 = new KeyCollection (new object[] { 100' "a"' true' new DateTime(2015'05'12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_True,The following statement contains a magic number: var a1 = new KeyCollection (new object[] { 100' "a"' true' new DateTime(2015'05'12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_True,The following statement contains a magic number: var a1 = new KeyCollection (new object[] { 100' "a"' true' new DateTime(2015'05'12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_True,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "a"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_True,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "a"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_True,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "a"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_True,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "a"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_True,The following statement contains a magic number: var a3 = new KeyCollection(new object[] { 100' "a"' false' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_True,The following statement contains a magic number: var a3 = new KeyCollection(new object[] { 100' "a"' false' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_True,The following statement contains a magic number: var a3 = new KeyCollection(new object[] { 100' "a"' false' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_True,The following statement contains a magic number: var a3 = new KeyCollection(new object[] { 100' "a"' false' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNull_Equal_True,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' DBNull.Value' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNull_Equal_True,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' DBNull.Value' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNull_Equal_True,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' DBNull.Value' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNull_Equal_True,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' DBNull.Value' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNull_Equal_True,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "(null)"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNull_Equal_True,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "(null)"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNull_Equal_True,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "(null)"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNull_Equal_True,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "(null)"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithEmpty_Equal_True,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' string.Empty' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithEmpty_Equal_True,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' string.Empty' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithEmpty_Equal_True,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' string.Empty' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithEmpty_Equal_True,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' string.Empty' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithEmpty_Equal_True,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "(empty)"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithEmpty_Equal_True,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "(empty)"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithEmpty_Equal_True,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "(empty)"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithEmpty_Equal_True,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "(empty)"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_False,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' "a"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_False,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' "a"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_False,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' "a"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_False,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' "a"' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_False,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "a"' false' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_False,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "a"' false' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_False,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "a"' false' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollection_Equal_False,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' "a"' false' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNullVersusEmpty_Equal_False,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' DBNull.Value' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNullVersusEmpty_Equal_False,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' DBNull.Value' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNullVersusEmpty_Equal_False,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' DBNull.Value' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNullVersusEmpty_Equal_False,The following statement contains a magic number: var a1 = new KeyCollection(new object[] { 100' DBNull.Value' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNullVersusEmpty_Equal_False,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' string.Empty' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNullVersusEmpty_Equal_False,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' string.Empty' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNullVersusEmpty_Equal_False,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' string.Empty' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,KeyCollectionTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\KeyCollectionTest.cs,KeyCollectionWithNullVersusEmpty_Equal_False,The following statement contains a magic number: var a2 = new KeyCollection(new object[] { 100' string.Empty' true' new DateTime(2015' 05' 12) });
Magic Number,NBi.Testing.Core.ResultSet,ResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\ResultSetTest.cs,Load_TwoObjectsArray_TwoRowsAndThreeColumns,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet,ResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\ResultSetTest.cs,Load_TwoObjectsArray_TwoRowsAndThreeColumns,The following statement contains a magic number: Assert.That(rs.Rows.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet,ResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\ResultSetTest.cs,Load_ThreeIRowsWithTwoICells_ThreeRowsAndTwoColumns,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet,ResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\ResultSetTest.cs,Load_ThreeIRowsWithTwoICells_ThreeRowsAndTwoColumns,The following statement contains a magic number: Assert.That(rs.Rows.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet,ResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\ResultSetTest.cs,DataSetToDataFrame_FewRows_FastEnougth,The following statement contains a magic number: objects.Add(new object[] { i' i.ToString()' null' i * 2 });
Magic Number,NBi.Testing.Core.ResultSet,ResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\ResultSetTest.cs,DataSetToDataFrame_FewRows_FastEnougth,The following statement contains a magic number: Assert.That(stopWatch.ElapsedMilliseconds' Is.LessThan(5000));
Magic Number,NBi.Testing.Core.ResultSet,ResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\ResultSetTest.cs,DataFrameToDataSet_FewRows_FastEnougth,The following statement contains a magic number: objects.Add(new object[] { i' i.ToString()' null' i * 2 });
Magic Number,NBi.Testing.Core.ResultSet,ResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\ResultSetTest.cs,DataFrameToDataSet_FewRows_FastEnougth,The following statement contains a magic number: Assert.That(stopWatch.ElapsedMilliseconds' Is.LessThan(5000));
Magic Number,NBi.Testing.Core.ResultSet.Combination,CartesianProductSequenceCombinationTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Combination\CartesianProductSequenceCombinationTest.cs,Initialize,The following statement contains a magic number: i < 20
Magic Number,NBi.Testing.Core.ResultSet.Combination,CartesianProductSequenceCombinationTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Combination\CartesianProductSequenceCombinationTest.cs,Execute_TwentyRowsAndSequenceOfTwo_SixtyRows,The following statement contains a magic number: Assert.That(rs.Rows.Count' Is.EqualTo(60));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_FirstColumnIsText_FirstColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_FirstColumnIsText_FirstColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Rows[0][0]' Is.EqualTo(100.12));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_FirstColumnIsText_FirstColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Rows[1][0]' Is.EqualTo(100));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_FirstColumnIsText_FirstColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Rows[2][0]' Is.EqualTo(0.1));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_FirstColumnIsText_FirstColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Rows[2][0]' Is.EqualTo(0.1));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_LastColumnIsText_LastColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_LastColumnIsText_LastColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Rows[0][1]' Is.EqualTo(100.12));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_LastColumnIsText_LastColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Rows[1][1]' Is.EqualTo(100));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_LastColumnIsText_LastColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo(0.1));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_LastColumnIsText_LastColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo(0.1));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsText_MiddleColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsText_MiddleColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Rows[0][1]' Is.EqualTo(100.12));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsText_MiddleColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Rows[1][1]' Is.EqualTo(100));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsText_MiddleColumnIsNumeric,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo(DBNull.Value));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDate_MiddleColumnIsDate,The following statement contains a magic number: var converter = factory.Instantiate("text"' "date"' new DateTime(2013'1'1)' "fr-fr");
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDate_MiddleColumnIsDate,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDate_MiddleColumnIsDate,The following statement contains a magic number: Assert.That(rs.Rows[0][1]' Is.EqualTo(new DateTime(2018'1'6)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDate_MiddleColumnIsDate,The following statement contains a magic number: Assert.That(rs.Rows[0][1]' Is.EqualTo(new DateTime(2018'1'6)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDate_MiddleColumnIsDate,The following statement contains a magic number: Assert.That(rs.Rows[1][1]' Is.EqualTo(new DateTime(2015' 12' 17)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDate_MiddleColumnIsDate,The following statement contains a magic number: Assert.That(rs.Rows[1][1]' Is.EqualTo(new DateTime(2015' 12' 17)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDate_MiddleColumnIsDate,The following statement contains a magic number: Assert.That(rs.Rows[1][1]' Is.EqualTo(new DateTime(2015' 12' 17)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDate_MiddleColumnIsDate,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo(new DateTime(2013' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDate_MiddleColumnIsDate,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo(new DateTime(2013' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: var converter = factory.Instantiate("text"' "dateTime"' new DateTime(2019' 12' 31' 23' 59' 59)' "fr-fr");
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: var converter = factory.Instantiate("text"' "dateTime"' new DateTime(2019' 12' 31' 23' 59' 59)' "fr-fr");
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: var converter = factory.Instantiate("text"' "dateTime"' new DateTime(2019' 12' 31' 23' 59' 59)' "fr-fr");
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: var converter = factory.Instantiate("text"' "dateTime"' new DateTime(2019' 12' 31' 23' 59' 59)' "fr-fr");
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: var converter = factory.Instantiate("text"' "dateTime"' new DateTime(2019' 12' 31' 23' 59' 59)' "fr-fr");
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: var converter = factory.Instantiate("text"' "dateTime"' new DateTime(2019' 12' 31' 23' 59' 59)' "fr-fr");
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[0][1]' Is.EqualTo(new DateTime(2018' 1' 6' 8'12'0)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[0][1]' Is.EqualTo(new DateTime(2018' 1' 6' 8'12'0)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[0][1]' Is.EqualTo(new DateTime(2018' 1' 6' 8'12'0)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[0][1]' Is.EqualTo(new DateTime(2018' 1' 6' 8'12'0)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[1][1]' Is.EqualTo(new DateTime(2015' 12' 17' 8' 12' 0)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[1][1]' Is.EqualTo(new DateTime(2015' 12' 17' 8' 12' 0)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[1][1]' Is.EqualTo(new DateTime(2015' 12' 17' 8' 12' 0)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[1][1]' Is.EqualTo(new DateTime(2015' 12' 17' 8' 12' 0)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[1][1]' Is.EqualTo(new DateTime(2015' 12' 17' 8' 12' 0)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo(new DateTime(2019' 12' 31' 23' 59' 59)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo(new DateTime(2019' 12' 31' 23' 59' 59)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo(new DateTime(2019' 12' 31' 23' 59' 59)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo(new DateTime(2019' 12' 31' 23' 59' 59)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo(new DateTime(2019' 12' 31' 23' 59' 59)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo(new DateTime(2019' 12' 31' 23' 59' 59)));
Magic Number,NBi.Testing.Core.ResultSet.Conversion,ConverterEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Conversion\ConverterEngineTest.cs,Execute_MiddleColumnIsTextualDateTime_MiddleColumnIsDateTime,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo(new DateTime(2019' 12' 31' 23' 59' 59)));
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_DifferentRows_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTable(new string[] { "KeyName"' "ValueName" }' new object[] { "Key0"' 2 }' new object[] { "Key1"' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_DifferentRowsMixedColumns_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTable(new string[] { "ValueName"' "KeyName" }' new object[] { 2' "Key0" }' new object[] { 1' "Key1" });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,NameComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\NameEquivalerTest.cs,Compare_DifferentRowsByKeysMixedColumns_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTable(new string[] { "ValueName"' "KeyName" }' new object[] { 2' "Key2" }' new object[] { 1' "Key1" });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentLargeArrays_ReturnQuicklyDifferent,The following statement contains a magic number: var actual = BuildDataTable(RandomLargeArrayString(count' Convert.ToInt32(count * 0.8))' RandomLargeArrayDouble(count));
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameRowsNumericKeysWithNumericType_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTableNumeric(new decimal[] { new decimal(100)' new decimal(12.75) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameRowsNumericKeysWithNumericType_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTableNumeric(new decimal[] { new decimal(100)' new decimal(12.75) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameRowsDateTimeKeysWithDateTimeType_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameRowsDateTimeKeysWithDateTimeType_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameRowsDateTimeKeysWithDateTimeType_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameRowsDateTimeKeysWithDateTimeType_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRows_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTable(new string[] { "Key10"' "Key1" }' new double[] { 10' 11 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRows_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTable(new string[] { "Key10"' "Key1" }' new double[] { 10' 11 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsNumericKeysWithNumericType_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTableNumeric(new decimal[] { new decimal(999)' new decimal(12.75) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsNumericKeysWithNumericType_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTableNumeric(new decimal[] { new decimal(999)' new decimal(12.75) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsNumericKeysWithDateTimeType_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 19) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsNumericKeysWithDateTimeType_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 19) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsNumericKeysWithDateTimeType_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 19) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsNumericKeysWithDateTimeType_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 19) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsWithHoursNumericKeysWithDateTimeType_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18' 8' 0' 0) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsWithHoursNumericKeysWithDateTimeType_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18' 8' 0' 0) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsWithHoursNumericKeysWithDateTimeType_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18' 8' 0' 0) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsWithHoursNumericKeysWithDateTimeType_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18' 8' 0' 0) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DifferentRowsWithHoursNumericKeysWithDateTimeType_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTableDateTime(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18' 8' 0' 0) }' new double[] { 0' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_UnexpectedRow_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTable(new string[] { "Key0"' "Key1"' "Key2" }' new double[] { 0' 1' 2 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DuplicatedRowButWithDifferentValue_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTable(new string[] { "Key0"' "Key1"' "Key2" }' new double[] { 0' 1' 2 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_DuplicatedRowInRef_ThrowException,The following statement contains a magic number: var reference = BuildDataTable(new string[] { "Key0"' "Key1"' "Key1" }' new double[] { 0' 1' 2 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameKeysButDifferentValues_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTable(new string[] { "Key0"' "Key1" }' new double[] { 10' 11 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameKeysButDifferentValues_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTable(new string[] { "Key0"' "Key1" }' new double[] { 10' 11 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameKeysDifferentValuesButWithinTolerance_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTable(new string[] { "Key0"' "Key1" }' new double[] { 0.5' 1.5 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_SameKeysDifferentValuesButWithinTolerance_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTable(new string[] { "Key0"' "Key1" }' new double[] { 0.5' 1.5 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,Compare_ObjectsVersusDifferentTyped_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTable(new string[] { "Key0"' "Key1" }' new double[] { 0' 11 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,BuildSettingsKeyValueIgnore,The following statement contains a magic number: var columnsDef = new List<IColumnDefinition>()              {                  new Column() { Identifier = new ColumnOrdinalIdentifier(1)' Role = ColumnRole.Value' Type = ColumnType.Numeric' Tolerance = tolerance.ToString() }'                  new Column() { Identifier = new ColumnOrdinalIdentifier(2)' Role = ColumnRole.Ignore }              };
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,OrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\OrdinalEquivalerTest.cs,RandomLargeArrayDouble,The following statement contains a magic number: array.Add(random.NextDouble() * 100000);
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SettingsComparerBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsEquivalerBuilderTest.cs,Build_TwiceTheSameNamedColumn_Exception,The following statement contains a magic number: builder.Setup(Enumerable.Repeat(columnDef' 2).ToList());
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SettingsComparerBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsEquivalerBuilderTest.cs,Build_TwiceTheSameOrdinalColumn_Exception,The following statement contains a magic number: builder.Setup(Enumerable.Repeat(columnDef' 2).ToList());
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SettingsComparerBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsEquivalerBuilderTest.cs,Build_IncoherenceDefaultToleranceAndValueType_Exception,The following statement contains a magic number: builder.Setup(ColumnType.Numeric' new DateTimeTolerance(new TimeSpan(1000)));
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SettingsNameResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsNameResultSetTest.cs,GetTolerance_EqualToAndColumnsDefinedName_CorrectResult,The following statement contains a magic number: Assert.That((actual.GetTolerance("Four") as NumericAbsoluteTolerance).Value' Is.EqualTo(100));
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SettingsNameResultSetTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SettingsNameResultSetTest.cs,GetTolerance_EqualToAndColumnsDefinedName_CorrectResult,The following statement contains a magic number: Assert.That((actual.GetTolerance("Nine") as NumericAbsoluteTolerance).Value' Is.EqualTo(100));
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SingleRowNameEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowNameEquivalerTest.cs,Compare_NonSimilarRow_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTable(new double[] { 2' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SingleRowNameEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowNameEquivalerTest.cs,Compare_SimilarRow_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTable(new double[] { 0.05' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SingleRowOrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowOrdinalEquivalerTest.cs,Compare_SameRowsDateTime_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTable<DateTime>(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18) });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SingleRowOrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowOrdinalEquivalerTest.cs,Compare_SameRowsDateTime_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTable<DateTime>(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18) });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SingleRowOrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowOrdinalEquivalerTest.cs,Compare_SameRowsDateTime_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTable<DateTime>(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18) });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SingleRowOrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowOrdinalEquivalerTest.cs,Compare_SameRowsDateTime_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTable<DateTime>(new DateTime[] { new DateTime(2015' 01' 17)' new DateTime(2015' 01' 18) });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SingleRowOrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowOrdinalEquivalerTest.cs,Compare_DifferentRowsNumeric_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTable<decimal>(new decimal[] { new decimal(999)' new decimal(12.75) });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SingleRowOrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowOrdinalEquivalerTest.cs,Compare_DifferentRowsNumeric_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataTable<decimal>(new decimal[] { new decimal(999)' new decimal(12.75) });
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SingleRowOrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowOrdinalEquivalerTest.cs,Compare_UnexpectedRow_ReturnNotEqual,The following statement contains a magic number: var reference = BuildDataEmptyTable<string>(3);
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SingleRowOrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowOrdinalEquivalerTest.cs,Compare_MissingRow_ReturnNotEqual,The following statement contains a magic number: var actual = BuildDataEmptyTable<string>(3);
Magic Number,NBi.Testing.Core.ResultSet.Equivalence,SingleRowOrdinalEquivalerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Equivalence\SingleRowOrdinalEquivalerTest.cs,Compare_ObjectsVersusSameTypedButWithPrecision_ReturnEqual,The following statement contains a magic number: var actual = BuildDataTable<object>(new object[] { "Value0"' 100.5 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByNameTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByNameTest.cs,GetKeys_UniqueCell_CorrectCell,The following statement contains a magic number: Assert.That(keyRetriever.GetColumns(table.Rows[2]).Members' Is.EqualTo(new[] { "Key0" }));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByNameTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByNameTest.cs,GetKeys_UniqueCellNumeric_CorrectCell,The following statement contains a magic number: Assert.That(keyRetriever.GetColumns(table.Rows[2]).Members' Is.EqualTo(new[] { 0 }));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByNameTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByNameTest.cs,GetKeys_UniqueCellNumericCasting_CorrectCell,The following statement contains a magic number: Assert.That(keyRetriever.GetColumns(table.Rows[2]).Members' Is.EqualTo(new[] { 0 }));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByNameTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByNameTest.cs,GetKeys_TwoCells_CorrectCells,The following statement contains a magic number: Assert.That(keyRetriever.GetColumns(table.Rows[2]).Members' Is.EqualTo(new[] { "Key0"' "Foo" }));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByNameTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByNameTest.cs,GetKeys_TwoCellsDifferentTypes_CorrectCells,The following statement contains a magic number: Assert.That(keyRetriever.GetColumns(table.Rows[2]).Members' Is.EqualTo(new object[] { "Key0"' 0 }));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByNameTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByNameTest.cs,GetKeys_TwoCellsReverseOrder_CorrectCells,The following statement contains a magic number: Assert.That(keyRetriever.GetColumns(table.Rows[2]).Members' Is.EqualTo(new[] { "Foo"' "Key0" }));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByOrdinalTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByOrdinalTest.cs,GetKeys_UniqueCell_CorrectCell,The following statement contains a magic number: Assert.That(keyRetriever.GetColumns(table.Rows[2]).Members' Is.EqualTo(new[] { "Key0" }));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByOrdinalTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByOrdinalTest.cs,GetKeys_UniqueCellNumeric_CorrectCell,The following statement contains a magic number: var columns = new List<IColumnDefinition>()              {                  new Column() { Identifier= new ColumnOrdinalIdentifier(2)' Type=ColumnType.Numeric}              };
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByOrdinalTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByOrdinalTest.cs,GetKeys_UniqueCellNumeric_CorrectCell,The following statement contains a magic number: Assert.That(keyRetriever.GetColumns(table.Rows[2]).Members' Is.EqualTo(new[] { 0 }));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByOrdinalTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByOrdinalTest.cs,GetKeys_UniqueCellNumericCasting_CorrectCell,The following statement contains a magic number: var columns = new List<IColumnDefinition>()              {                  new Column() { Identifier= new ColumnOrdinalIdentifier(2)' Type=ColumnType.Numeric}              };
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByOrdinalTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByOrdinalTest.cs,GetKeys_UniqueCellNumericCasting_CorrectCell,The following statement contains a magic number: Assert.That(keyRetriever.GetColumns(table.Rows[2]).Members' Is.EqualTo(new[] { 0 }));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByOrdinalTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByOrdinalTest.cs,GetKeys_TwoCells_CorrectCells,The following statement contains a magic number: Assert.That(keyRetriever.GetColumns(table.Rows[2]).Members' Is.EqualTo(new[] { "Key0"' "Foo" }));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByOrdinalTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByOrdinalTest.cs,GetKeys_TwoCellsDifferentTypes_CorrectCells,The following statement contains a magic number: var columns = new List<IColumnDefinition>()              {                  new Column() { Identifier= new ColumnOrdinalIdentifier(0)' Type=ColumnType.Text}'                  new Column() { Identifier= new ColumnOrdinalIdentifier(2)' Type=ColumnType.Numeric}              };
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByOrdinalTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByOrdinalTest.cs,GetKeys_TwoCellsDifferentTypes_CorrectCells,The following statement contains a magic number: Assert.That(keyRetriever.GetColumns(table.Rows[2]).Members' Is.EqualTo(new object[] { "Key0"' 0 }));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,CellsRetrieverByOrdinalTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\CellsRetrieverByOrdinalTest.cs,GetKeys_TwoCellsReverseOrder_CorrectCells,The following statement contains a magic number: Assert.That(keyRetriever.GetColumns(table.Rows[2]).Members' Is.EqualTo(new[] { "Foo"' "Key0" }));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysreferenceLargerThanCandidateDuplicateKeys_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysreferenceLargerThanCandidateDuplicateKeys_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysreferenceLargerThanCandidateDuplicateKeys_NoViolation,The following statement contains a magic number: var referencer = new LookupExistsAnalyzer(BuildColumnMapping(2));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysMissingItem_NoViolation,The following statement contains a magic number: var referencer = new LookupExistsAnalyzer(BuildColumnMapping(2));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteValueColumn_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"'  "Fie" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteValueColumn_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"'  "Fie" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteValueColumn_NoViolation,The following statement contains a magic number: reference.Columns[2].SetOrdinal(0);
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteValueColumn_NoViolation,The following statement contains a magic number: var referencer = new LookupExistsAnalyzer(BuildColumnMapping(2' 1));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteValueColumnOneMissingreference_OneViolation,The following statement contains a magic number: var child = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 1' 2' 2 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteValueColumnOneMissingreference_OneViolation,The following statement contains a magic number: var child = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 1' 2' 2 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteValueColumnOneMissingreference_OneViolation,The following statement contains a magic number: reference.Columns[2].SetOrdinal(0);
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteValueColumnOneMissingreference_OneViolation,The following statement contains a magic number: var referencer = new LookupExistsAnalyzer(BuildColumnMapping(2' 1));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteKeyColumns_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"' "Fie" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteKeyColumns_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"' "Fie" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteKeyColumnsOneMissingreference_OneViolation,The following statement contains a magic number: var child = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"' "Fie" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_MultipleKeysPermuteKeyColumnsOneMissingreference_OneViolation,The following statement contains a magic number: var child = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"' "Fie" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_DuplicatedKeyColumns_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_DuplicatedKeyColumns_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_DuplicatedKeyColumnsOnBothSide_NoViolation,The following statement contains a magic number: var child = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { 0' 1' 2 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_DuplicatedKeyColumnsOnBothSide_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_DuplicatedKeyColumnsOnBothSide_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_DuplicatedKeyColumnsOnBothSideMixingType_NoViolation,The following statement contains a magic number: var mapping = new ColumnMappingCollection              {                  new ColumnMapping(new ColumnOrdinalIdentifier(0)' ColumnType.Text)'                  new ColumnMapping(new ColumnOrdinalIdentifier(1)' ColumnType.Text)'                  new ColumnMapping(new ColumnOrdinalIdentifier(2)' ColumnType.Numeric)              };
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_LargeVolumeReference_Fast,The following statement contains a magic number: var child = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_LargeVolumeReference_Fast,The following statement contains a magic number: var child = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_LargeVolumeReference_Fast,The following statement contains a magic number: Assert.That(stopWatch.Elapsed.TotalSeconds' Is.LessThan(30));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_LargeVolumeChild_Fast,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_LargeVolumeChild_Fast,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_LargeVolumeChild_Fast,The following statement contains a magic number: Assert.That(stopWatch.Elapsed.TotalSeconds' Is.LessThan(10));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupExistsAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupExistsAnalyzerTest.cs,Execute_LargeVolumeChildAndReference_Fast,The following statement contains a magic number: Assert.That(stopWatch.Elapsed.TotalSeconds' Is.LessThan(10));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_ReferenceLargerThanCandidateMatchingValueWhenNoToleranceApplied_OneViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new object[] { 0' 2' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_ReferenceLargerThanCandidateMatchingValueWhenToleranceApplied_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new object[] { 0' 2' 1 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_ReferenceLargerThanCandidateDuplicateKeys_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2"' "Key1"' "Key2" }' new object[] { 0' 2' 3' 1' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_ReferenceLargerThanCandidateDuplicateKeys_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2"' "Key1"' "Key2" }' new object[] { 0' 2' 3' 1' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_ReferenceLargerThanCandidateDuplicateKeys_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2"' "Key1"' "Key2" }' new object[] { 0' 2' 3' 1' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_NotMatchValueInReference_OneViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1"' "Key0"' "Key2" }' new object[] { 0' 2' 3' 4' 5 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_NotMatchValueInReference_OneViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1"' "Key0"' "Key2" }' new object[] { 0' 2' 3' 4' 5 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_NotMatchValueInReference_OneViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1"' "Key0"' "Key2" }' new object[] { 0' 2' 3' 4' 5 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_NotMatchValueInReference_OneViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key1"' "Key0"' "Key2" }' new object[] { 0' 2' 3' 4' 5 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_MultipleKeysreferenceLargerThanCandidateDuplicateKeys_NoViolation,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key2" }' new[] { "Foo"' "Bar"' "Bar" }' new object[] { 0' 1' 2 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_MultipleKeysreferenceLargerThanCandidateDuplicateKeys_NoViolation,The following statement contains a magic number: var referencer = new LookupMatchesAnalyzer(BuildColumnMapping(2)' BuildColumnMapping(1' 2));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_MultipleKeysreferenceLargerThanCandidateDuplicateKeys_NoViolation,The following statement contains a magic number: var referencer = new LookupMatchesAnalyzer(BuildColumnMapping(2)' BuildColumnMapping(1' 2));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_LargeVolumeReference_Fast,The following statement contains a magic number: var candidate = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_LargeVolumeReference_Fast,The following statement contains a magic number: var candidate = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_LargeVolumeReference_Fast,The following statement contains a magic number: Assert.That(stopWatch.Elapsed.TotalSeconds' Is.LessThan(20));
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_LargeVolumeCandidate_Fast,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_LargeVolumeCandidate_Fast,The following statement contains a magic number: var reference = BuildDataTable(new[] { "Key0"' "Key1"' "Key0" }' new[] { "Foo"' "Bar"' "Foo" }' new object[] { 1' 2' 3 });
Magic Number,NBi.Testing.Core.ResultSet.Lookup,LookupMatchesAnalyzerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Lookup\LookupMatchesAnalyzerTest.cs,Execute_LargeVolumeCandidate_Fast,The following statement contains a magic number: Assert.That(stopWatch.Elapsed.TotalSeconds' Is.LessThan(7));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,EmptyResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\EmptyResultSetResolverTest.cs,Instantiate_ColumnsBased_CorrectType,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,EmptyResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\EmptyResultSetResolverTest.cs,Instantiate_ColumnCountBased_CorrectType,The following statement contains a magic number: var args = new EmptyResultSetResolverArgs(new LiteralScalarResolver<int>(4));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,EmptyResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\EmptyResultSetResolverTest.cs,Instantiate_ColumnCountBased_CorrectType,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,EmptyResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\EmptyResultSetResolverTest.cs,Instantiate_ColumnsAndColumnCountBased_CorrectType,The following statement contains a magic number: var args = new EmptyResultSetResolverArgs(                  new List<ColumnNameIdentifier>                  {                      new ColumnNameIdentifier("myFirstColumn")'                      new ColumnNameIdentifier("mySecondColumn")'                  }' new LiteralScalarResolver<int>(4)              );
Magic Number,NBi.Testing.Core.ResultSet.Resolver,EmptyResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\EmptyResultSetResolverTest.cs,Instantiate_ColumnsAndColumnCountBased_CorrectType,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_OneSequence_Initialize,The following statement contains a magic number: Assert.That(rs.Rows.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_OneSequence_Initialize,The following statement contains a magic number: Assert.That(rs.Rows[0][0]' Is.EqualTo(new DateTime(2015' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_OneSequence_Initialize,The following statement contains a magic number: Assert.That(rs.Rows[1][0]' Is.EqualTo(new DateTime(2016' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_OneSequence_Initialize,The following statement contains a magic number: Assert.That(rs.Rows[2][0]' Is.EqualTo(new DateTime(2017' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_OneSequence_Initialize,The following statement contains a magic number: Assert.That(rs.Rows[2][0]' Is.EqualTo(new DateTime(2017' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Count' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[0][0]' Is.EqualTo(new DateTime(2015' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[1][0]' Is.EqualTo(new DateTime(2016' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[2][0]' Is.EqualTo(new DateTime(2017' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[2][0]' Is.EqualTo(new DateTime(2017' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[3][0]' Is.EqualTo(new DateTime(2015' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[3][0]' Is.EqualTo(new DateTime(2015' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[4][0]' Is.EqualTo(new DateTime(2016' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[4][0]' Is.EqualTo(new DateTime(2016' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[5][0]' Is.EqualTo(new DateTime(2017' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[5][0]' Is.EqualTo(new DateTime(2017' 1' 1)));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[2][1]' Is.EqualTo("fr"));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[3][1]' Is.EqualTo("be"));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[4][1]' Is.EqualTo("be"));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_TwoSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows[5][1]' Is.EqualTo("be"));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: var resolver = new SequenceCombinationResultSetResolver(                  new SequenceCombinationResultSetResolverArgs(new ISequenceResolver[] {                      new ListSequenceResolver<decimal>(                          new ListSequenceResolverArgs(new[] {                              new LiteralScalarResolver<decimal>(1)'                              new LiteralScalarResolver<decimal>(2)'                          })                      )'                      new ListSequenceResolver<DateTime>(                          new ListSequenceResolverArgs(new[] {                              new LiteralScalarResolver<string>("2015-01-01")'                              new LiteralScalarResolver<string>("2016-01-01")'                              new LiteralScalarResolver<string>("2017-01-01")'                          })                      )'                      new ListSequenceResolver<string>(                          new ListSequenceResolverArgs(new[] {                              new LiteralScalarResolver<string>("fr")'                              new LiteralScalarResolver<string>("be")'                          })                      )'                  })              );
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Columns.Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Count' Is.EqualTo(12));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<decimal>(0) == 1)' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<decimal>(0) == 2)' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<decimal>(0) == 2)' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<DateTime>(1).Year == 2015)' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<DateTime>(1).Year == 2015)' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<DateTime>(1).Year == 2016)' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<DateTime>(1).Year == 2016)' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<DateTime>(1).Year == 2017)' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<DateTime>(1).Year == 2017)' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<string>(2) == "fr")' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<string>(2) == "fr")' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<string>(2) == "be")' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_ThreeSequences_CartesianProduct,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<string>(2) == "be")' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_UniqueSequence_CorrectResult,The following statement contains a magic number: var resolver = new SequenceCombinationResultSetResolver(                  new SequenceResultSetResolverArgs(                      new ListSequenceResolver<decimal>(                          new ListSequenceResolverArgs(new[] {                              new LiteralScalarResolver<decimal>(1)'                              new LiteralScalarResolver<decimal>(2)'                          })                      )                  )              );
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_UniqueSequence_CorrectResult,The following statement contains a magic number: Assert.That(rs.Rows.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Resolver,SequenceCartesianProductResultSetResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Resolver\SequenceCombinationResultSetResolverTest.cs,Execute_UniqueSequence_CorrectResult,The following statement contains a magic number: Assert.That(rs.Rows.Cast<DataRow>().Count(x => x.Field<decimal>(0) == 2)' Is.EqualTo(1));
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_NoDuplicate_True,The following statement contains a magic number: var resultSet = BuildDataTable(                  new List<List<object>>()                  {                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "c"' 140 }'                      new List<object>() {"a" ' "d"' 150 }'                  });
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_NoDuplicate_True,The following statement contains a magic number: var resultSet = BuildDataTable(                  new List<List<object>>()                  {                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "c"' 140 }'                      new List<object>() {"a" ' "d"' 150 }'                  });
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_NoDuplicate_True,The following statement contains a magic number: var resultSet = BuildDataTable(                  new List<List<object>>()                  {                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "c"' 140 }'                      new List<object>() {"a" ' "d"' 150 }'                  });
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_Duplicate_False,The following statement contains a magic number: var resultSet = BuildDataTable(                  new List<List<object>>()                  {                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "d"' 150 }'                  });
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_Duplicate_False,The following statement contains a magic number: var resultSet = BuildDataTable(                  new List<List<object>>()                  {                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "d"' 150 }'                  });
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_Duplicate_False,The following statement contains a magic number: var resultSet = BuildDataTable(                  new List<List<object>>()                  {                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "d"' 150 }'                  });
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_Duplicate_OneOccurence,The following statement contains a magic number: var resultSet = BuildDataTable(                  new List<List<object>>()                  {                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "d"' 150 }'                  });
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_Duplicate_OneOccurence,The following statement contains a magic number: var resultSet = BuildDataTable(                  new List<List<object>>()                  {                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "d"' 150 }'                  });
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_Duplicate_OneOccurence,The following statement contains a magic number: var resultSet = BuildDataTable(                  new List<List<object>>()                  {                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "d"' 150 }'                  });
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_Duplicate_OneOccurence,The following statement contains a magic number: Assert.That(result.Values.ElementAt(0).OccurenceCount' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_Duplicate_TwoOccurences,The following statement contains a magic number: var resultSet = BuildDataTable(                  new List<List<object>>()                  {                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "b"' 120 }'                  });
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_Duplicate_TwoOccurences,The following statement contains a magic number: var resultSet = BuildDataTable(                  new List<List<object>>()                  {                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "b"' 120 }'                  });
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_Duplicate_TwoOccurences,The following statement contains a magic number: var resultSet = BuildDataTable(                  new List<List<object>>()                  {                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "b"' 120 }'                      new List<object>() {"a" ' "b"' 120 }'                  });
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_Duplicate_TwoOccurences,The following statement contains a magic number: Assert.That(result.Values.ElementAt(0).OccurenceCount' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.ResultSet.Uniqueness,OrdinalUniqueRowsEvaluatorTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\ResultSet\Uniqueness\OrdinalUniqueRowsEvaluatorTest.cs,Execute_Duplicate_TwoOccurences,The following statement contains a magic number: Assert.That(result.Rows.ElementAt(0).ItemArray' Has.Member(3));
Magic Number,NBi.Testing.Core.Scalar.Caster,BaseNumericConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Casting\BaseNumericCasterTest.cs,IsValid_Decimal_True,The following statement contains a magic number: Assert.That(new BaseNumericCaster().IsValid((new decimal(10)))' Is.True);
Magic Number,NBi.Testing.Core.Scalar.Caster,BaseNumericConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Casting\BaseNumericCasterTest.cs,IsValid_Int_True,The following statement contains a magic number: Assert.That(new BaseNumericCaster().IsValid(10)' Is.True);
Magic Number,NBi.Testing.Core.Scalar.Caster,BaseNumericConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Casting\BaseNumericCasterTest.cs,IsValid_Double_True,The following statement contains a magic number: Assert.That(new BaseNumericCaster().IsValid(10.5)' Is.True);
Magic Number,NBi.Testing.Core.Scalar.Caster,BaseNumericConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Casting\BaseNumericCasterTest.cs,IsValid_NegativeDouble_True,The following statement contains a magic number: Assert.That(new BaseNumericCaster().IsValid(-10.5)' Is.True);
Magic Number,NBi.Testing.Core.Scalar.Caster,NumericCasterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Casting\NumericCasterTest.cs,Execute_Decimal_Decimal,The following statement contains a magic number: Assert.That(new NumericCaster().Execute((new decimal(10)))' Is.EqualTo(10));
Magic Number,NBi.Testing.Core.Scalar.Caster,NumericCasterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Casting\NumericCasterTest.cs,Execute_Decimal_Decimal,The following statement contains a magic number: Assert.That(new NumericCaster().Execute((new decimal(10)))' Is.EqualTo(10));
Magic Number,NBi.Testing.Core.Scalar.Comparer,BooleanComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\BooleanComparerTest.cs,Compare_2AndStringTrue_False,The following statement contains a magic number: var result = comparer.Compare(new decimal(2)' "True");
Magic Number,NBi.Testing.Core.Scalar.Comparer,BooleanComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\BooleanComparerTest.cs,Compare_2AndStringFalse_False,The following statement contains a magic number: var result = comparer.Compare(new decimal(2)' "False");
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_xxxxyyyy_True,The following statement contains a magic number: var result = comparer.Compare("2013-10-16"' new DateTime(2013' 10' 16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_xxxxyyyy_True,The following statement contains a magic number: var result = comparer.Compare("2013-10-16"' new DateTime(2013' 10' 16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_xxxxyyyy_True,The following statement contains a magic number: var result = comparer.Compare("2013-10-16"' new DateTime(2013' 10' 16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_ddmmyyyy_True,The following statement contains a magic number: var result = comparer.Compare("16/10/2013"' new DateTime(2013' 10' 16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_ddmmyyyy_True,The following statement contains a magic number: var result = comparer.Compare("16/10/2013"' new DateTime(2013' 10' 16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_ddmmyyyy_True,The following statement contains a magic number: var result = comparer.Compare("16/10/2013"' new DateTime(2013' 10' 16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_mmddyyyy_True,The following statement contains a magic number: var result = comparer.Compare("10/16/2013"' new DateTime(2013'10'16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_mmddyyyy_True,The following statement contains a magic number: var result = comparer.Compare("10/16/2013"' new DateTime(2013'10'16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_mmddyyyy_True,The following statement contains a magic number: var result = comparer.Compare("10/16/2013"' new DateTime(2013'10'16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_mmddyyyyhhmmss_True,The following statement contains a magic number: var result = comparer.Compare("10/16/2013 00:00:00"' new DateTime(2013' 10' 16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_mmddyyyyhhmmss_True,The following statement contains a magic number: var result = comparer.Compare("10/16/2013 00:00:00"' new DateTime(2013' 10' 16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_mmddyyyyhhmmss_True,The following statement contains a magic number: var result = comparer.Compare("10/16/2013 00:00:00"' new DateTime(2013' 10' 16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_NullAndString_False,The following statement contains a magic number: var result = comparer.Compare(null' new DateTime(2013' 10' 16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_NullAndString_False,The following statement contains a magic number: var result = comparer.Compare(null' new DateTime(2013' 10' 16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeComparerTest.cs,Compare_NullAndString_False,The following statement contains a magic number: var result = comparer.Compare(null' new DateTime(2013' 10' 16));
Magic Number,NBi.Testing.Core.Scalar.Comparer,DateTimeRoundingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\DateTimeRoundingTest.cs,GetValue_ValueQuarterHourRoundingStyle_NewValue,The following statement contains a magic number: var rounder = new DateTimeRounding(new TimeSpan(0' 0' 15' 0)' roundingStyle);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericAbsoluteToleranceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericAbsoluteToleranceTest.cs,ValueString_Fifty_Correct,The following statement contains a magic number: var tolerance = new NumericAbsoluteTolerance(new decimal(50)' SideTolerance.Both);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericAbsoluteToleranceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericAbsoluteToleranceTest.cs,ValueString_TwentyFivePercentDotSeven_Correct,The following statement contains a magic number: var tolerance = new NumericAbsoluteTolerance(new decimal(25.7)' SideTolerance.Both);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_1DecimalAnd2Double_False,The following statement contains a magic number: var result = comparer.Compare(new decimal(1)' 2.0);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_1DecimalAnd1dot5Double_True,The following statement contains a magic number: var result = comparer.Compare(new decimal(1)' 1.5' 1' SideTolerance.Both);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_1DecimalAnd2dot5Double_False,The following statement contains a magic number: var result = comparer.Compare(new decimal(1)' 2.5' 1' SideTolerance.Both);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithAToleranceOFTenPercent_True,The following statement contains a magic number: var result = comparer.Compare(12' 11' "10%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithAToleranceOFTenPercent_True,The following statement contains a magic number: var result = comparer.Compare(12' 11' "10%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithAToleranceOFTenPercent_False,The following statement contains a magic number: var result = comparer.Compare(12' 11' "5%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithAToleranceOFTenPercent_False,The following statement contains a magic number: var result = comparer.Compare(12' 11' "5%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_NonValidPercentageForTolerance_ArgumentException,The following statement contains a magic number: Assert.Throws<ArgumentException>(delegate { comparer.Compare(12' 11' "1'1%"); });
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_NonValidPercentageForTolerance_ArgumentException,The following statement contains a magic number: Assert.Throws<ArgumentException>(delegate { comparer.Compare(12' 11' "1'1%"); });
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalTenToFourteen_True,The following statement contains a magic number: var result = comparer.Compare(12' "[10;14]");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalTenToTwelveClosed_True,The following statement contains a magic number: var result = comparer.Compare("[10;12]"' 12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalTenToTwelveClosedWithSpaces_True,The following statement contains a magic number: var result = comparer.Compare(" [-10 ; 12  ] "' 12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalTenToTwelveOpen_False,The following statement contains a magic number: var result = comparer.Compare("[10;12["' 12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalTwelveOpenToFourteen_False,The following statement contains a magic number: var result = comparer.Compare("]12;14]"' 12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalTenHalfToFourteenHalf_True,The following statement contains a magic number: var result = comparer.Compare("]10.5;14.5]"' 12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalTenToInfinity_True,The following statement contains a magic number: var result = comparer.Compare("[10;+INF]"' 12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalNegativeInfinityToFourteen_True,The following statement contains a magic number: var result = comparer.Compare("[-inf;14]"' 12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalPositive_True,The following statement contains a magic number: var result = comparer.Compare("(positive)"' 12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalPositiveSymbol_False,The following statement contains a magic number: var result = comparer.Compare("(0+)"' -12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalNegative_True,The following statement contains a magic number: var result = comparer.Compare("(-)"' -12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalGreaterOrEqualToEighteen_False,The following statement contains a magic number: var result = comparer.Compare("(>=18)"' 12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalGreaterOrEqualToEighteenHalf_False,The following statement contains a magic number: var result = comparer.Compare("(>=18.5)"' 12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToIntervalLessThanEighteen_True,The following statement contains a magic number: var result = comparer.Compare("(<18)"' 12);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusTwelveToMinusElevenWithAToleranceOFFiftyPercent_True,The following statement contains a magic number: var result = comparer.Compare(-12' -11' "50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusTwelveToMinusElevenWithAToleranceOFFiftyPercent_True,The following statement contains a magic number: var result = comparer.Compare(-12' -11' "50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusTwelveToMinusElevenWithAToleranceOfOnePercent_False,The following statement contains a magic number: var result = comparer.Compare(-12' -11' "1%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusTwelveToMinusElevenWithAToleranceOfOnePercent_False,The following statement contains a magic number: var result = comparer.Compare(-12' -11' "1%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithOnePercentAndMinTwo_True,The following statement contains a magic number: var result = comparer.Compare(12' 11' "1% (min 2)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithOnePercentAndMinTwo_True,The following statement contains a magic number: var result = comparer.Compare(12' 11' "1% (min 2)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithOnePercentAndMinDotFive_False,The following statement contains a magic number: var result = comparer.Compare(12' 11' "1% (min 0.5)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithOnePercentAndMinDotFive_False,The following statement contains a magic number: var result = comparer.Compare(12' 11' "1% (min 0.5)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithTenPercentAndMinDotFive_True,The following statement contains a magic number: var result = comparer.Compare(12' 11' "10% (min 0.5)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithTenPercentAndMinDotFive_True,The following statement contains a magic number: var result = comparer.Compare(12' 11' "10% (min 0.5)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusTwelveToMinusElevenWithOnePercentAndMinTwo_True,The following statement contains a magic number: var result = comparer.Compare(-12' -11' "1% (min 2)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusTwelveToMinusElevenWithOnePercentAndMinTwo_True,The following statement contains a magic number: var result = comparer.Compare(-12' -11' "1% (min 2)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusTwelveToMinusElevenWithOnePercentAndMinDotFive_False,The following statement contains a magic number: var result = comparer.Compare(-12' -11' "1% (min 0.5)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusTwelveToMinusElevenWithOnePercentAndMinDotFive_False,The following statement contains a magic number: var result = comparer.Compare(-12' -11' "1% (min 0.5)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusTwelveToMinusElevenWithTenPercentAndMinDotFive_True,The following statement contains a magic number: var result = comparer.Compare(-12' -11' "10% (min 0.5)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusTwelveToMinusElevenWithTenPercentAndMinDotFive_True,The following statement contains a magic number: var result = comparer.Compare(-12' -11' "10% (min 0.5)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithHundredPercentAndMaxTwo_True,The following statement contains a magic number: var result = comparer.Compare(12' 11' "100% (max 2)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithHundredPercentAndMaxTwo_True,The following statement contains a magic number: var result = comparer.Compare(12' 11' "100% (max 2)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithHundredPercentAndMaxDotFive_False,The following statement contains a magic number: var result = comparer.Compare(12' 11' "100% (max 0.5)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithHundredPercentAndMaxDotFive_False,The following statement contains a magic number: var result = comparer.Compare(12' 11' "100% (max 0.5)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithTenPercentAndMaxOne_True,The following statement contains a magic number: var result = comparer.Compare(12' 11' "10% (max 1)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_TwelveToElevenWithTenPercentAndMaxOne_True,The following statement contains a magic number: var result = comparer.Compare(12' 11' "10% (max 1)");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_FiveAndSevenWithMoreThanFiftyPercent_True,The following statement contains a magic number: var result = comparer.Compare(5' 7' "+50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_FiveAndSevenWithMoreThanFiftyPercent_True,The following statement contains a magic number: var result = comparer.Compare(5' 7' "+50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_SevenAndFiveWithMoreThanFiftyPercent_False,The following statement contains a magic number: var result = comparer.Compare(7' 5' "+50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_SevenAndFiveWithMoreThanFiftyPercent_False,The following statement contains a magic number: var result = comparer.Compare(7' 5' "+50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_FiveAndSevenWithLessThanFiftyPercent_False,The following statement contains a magic number: var result = comparer.Compare(5' 7' "-50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_FiveAndSevenWithLessThanFiftyPercent_False,The following statement contains a magic number: var result = comparer.Compare(5' 7' "-50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_SevenAndFiveWithLessThanFiftyPercent_True,The following statement contains a magic number: var result = comparer.Compare(7' 5' "-50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_SevenAndFiveWithLessThanFiftyPercent_True,The following statement contains a magic number: var result = comparer.Compare(7' 5' "-50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusFiveAndSevenWithMoreThanFiftyPercent_False,The following statement contains a magic number: var result = comparer.Compare(-5' -7' "+50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusFiveAndSevenWithMoreThanFiftyPercent_False,The following statement contains a magic number: var result = comparer.Compare(-5' -7' "+50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusSevenAndThreeWithMoreThanFiftyPercent_True,The following statement contains a magic number: var result = comparer.Compare(-5' -3' "+50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusSevenAndThreeWithMoreThanFiftyPercent_True,The following statement contains a magic number: var result = comparer.Compare(-5' -3' "+50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusFiveAndThreeWithLessThanFiftyPercent_False,The following statement contains a magic number: var result = comparer.Compare(-5' -3' "-50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusFiveAndThreeWithLessThanFiftyPercent_False,The following statement contains a magic number: var result = comparer.Compare(-5' -3' "-50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusSevenAndNineWithLessThanFiftyPercent_True,The following statement contains a magic number: var result = comparer.Compare(-7' -9' "-50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusSevenAndNineWithLessThanFiftyPercent_True,The following statement contains a magic number: var result = comparer.Compare(-7' -9' "-50%");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_FiveAndSevenWithMoreThanFifty_True,The following statement contains a magic number: var result = comparer.Compare(5' 7' "+50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_FiveAndSevenWithMoreThanFifty_True,The following statement contains a magic number: var result = comparer.Compare(5' 7' "+50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_SevenAndFiveWithMoreThanFifty_False,The following statement contains a magic number: var result = comparer.Compare(7' 5' "+50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_SevenAndFiveWithMoreThanFifty_False,The following statement contains a magic number: var result = comparer.Compare(7' 5' "+50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_FiveAndSevenWithLessThanFifty_False,The following statement contains a magic number: var result = comparer.Compare(5' 7' "-50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_FiveAndSevenWithLessThanFifty_False,The following statement contains a magic number: var result = comparer.Compare(5' 7' "-50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_SevenAndFiveWithLessThanFifty_True,The following statement contains a magic number: var result = comparer.Compare(7' 5' "-50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_SevenAndFiveWithLessThanFifty_True,The following statement contains a magic number: var result = comparer.Compare(7' 5' "-50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusFiveAndSevenWithMoreThanFifty_False,The following statement contains a magic number: var result = comparer.Compare(-5' -7' "+50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusFiveAndSevenWithMoreThanFifty_False,The following statement contains a magic number: var result = comparer.Compare(-5' -7' "+50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusSevenAndThreeWithMoreThanFifty_True,The following statement contains a magic number: var result = comparer.Compare(-5' -3' "+50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusSevenAndThreeWithMoreThanFifty_True,The following statement contains a magic number: var result = comparer.Compare(-5' -3' "+50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusFiveAndThreeWithLessThanFifty_False,The following statement contains a magic number: var result = comparer.Compare(-5' -3' "-50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusFiveAndThreeWithLessThanFifty_False,The following statement contains a magic number: var result = comparer.Compare(-5' -3' "-50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusSevenAndNineWithLessThanFifty_True,The following statement contains a magic number: var result = comparer.Compare(-7' -9' "-50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_MinusSevenAndNineWithLessThanFifty_True,The following statement contains a magic number: var result = comparer.Compare(-7' -9' "-50");
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_Rounding_True,The following statement contains a magic number: var result = comparer.Compare(7.46' 7.47' new NumericRounding(0.1m' Rounding.RoundingStyle.Round));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_Rounding_True,The following statement contains a magic number: var result = comparer.Compare(7.46' 7.47' new NumericRounding(0.1m' Rounding.RoundingStyle.Round));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericComparerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericComparerTest.cs,Compare_Rounding_True,The following statement contains a magic number: var result = comparer.Compare(7.46' 7.47' new NumericRounding(0.1m' Rounding.RoundingStyle.Round));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericPercentageToleranceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericPercentageToleranceTest.cs,ValueString_FiftyPercent_Correct,The following statement contains a magic number: var tolerance = new NumericPercentageTolerance(new decimal(0.5)' SideTolerance.Both);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericPercentageToleranceTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericPercentageToleranceTest.cs,ValueString_TwentyFivePercent_Correct,The following statement contains a magic number: var tolerance = new NumericPercentageTolerance(new decimal(0.25)' SideTolerance.Both);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericRoundingTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericRoundingTest.cs,GetValue_ValueStepStyle_EquivalentToMathRound,The following statement contains a magic number: var rounder = new NumericRounding(0.1m' Rounding.RoundingStyle.Round);
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericToleranceFactoryTest.cs,Instantiate_Absolute_Value,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(50000));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericToleranceFactoryTest.cs,Instantiate_AbsoluteWithDecimalSeparator_Value,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(50.25));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericToleranceFactoryTest.cs,Instantiate_Percentage_Value,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(0.5));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericToleranceFactoryTest.cs,Instantiate_BoundedPercentage_Value,The following statement contains a magic number: Assert.That(boundedTolerance.Value' Is.EqualTo(0.5));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericToleranceFactoryTest.cs,Instantiate_BoundedPercentage_Value,The following statement contains a magic number: Assert.That(boundedTolerance.Min' Is.EqualTo(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericToleranceFactoryTest.cs,Instantiate_BoundedPercentageWithSpaceAndWithoutBrackets_Value,The following statement contains a magic number: Assert.That(boundedTolerance.Value' Is.EqualTo(0.5));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericToleranceFactoryTest.cs,Instantiate_BoundedPercentageWithSpaceAndWithoutBrackets_Value,The following statement contains a magic number: Assert.That(boundedTolerance.Min' Is.EqualTo(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericToleranceFactoryTest.cs,Instantiate_BoundedPercentageWithEqual_Value,The following statement contains a magic number: Assert.That(boundedTolerance.Value' Is.EqualTo(0.1));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericToleranceFactoryTest.cs,Instantiate_BoundedPercentageWithEqual_Value,The following statement contains a magic number: Assert.That(boundedTolerance.Max' Is.EqualTo(125));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericToleranceFactoryTest.cs,Instantiate_OneSidedMore_Value,The following statement contains a magic number: Assert.That(boundedTolerance.Value' Is.EqualTo(0.5));
Magic Number,NBi.Testing.Core.Scalar.Comparer,NumericToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\NumericToleranceFactoryTest.cs,Instantiate_OneSidedLess_Value,The following statement contains a magic number: Assert.That(boundedTolerance.Value' Is.EqualTo(16.25));
Magic Number,NBi.Testing.Core.Scalar.Comparer,TextToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\TextToleranceFactoryTest.cs,Instantiate_ExactNameDouble_Instantiated,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(0.8).Within(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,TextToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\TextToleranceFactoryTest.cs,Instantiate_ExactNameDouble_Instantiated,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(0.8).Within(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,TextToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\TextToleranceFactoryTest.cs,Instantiate_Decimal_Instantiated,The following statement contains a magic number: Assert.That((tolerance as TextSingleMethodTolerance).Value' Is.EqualTo(0.8).Within(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,TextToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\TextToleranceFactoryTest.cs,Instantiate_Decimal_Instantiated,The following statement contains a magic number: Assert.That((tolerance as TextSingleMethodTolerance).Value' Is.EqualTo(0.8).Within(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,TextToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\TextToleranceFactoryTest.cs,Instantiate_ExactNameWithSpaceDouble_Instantiated,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(0.8).Within(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,TextToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\TextToleranceFactoryTest.cs,Instantiate_ExactNameWithSpaceDouble_Instantiated,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(0.8).Within(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,TextToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\TextToleranceFactoryTest.cs,Instantiate_ExactNameInt32_Instantiated,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(0.8).Within(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,TextToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\TextToleranceFactoryTest.cs,Instantiate_ExactNameInt32_Instantiated,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(0.8).Within(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,TextToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\TextToleranceFactoryTest.cs,Instantiate_StartsWithNameInt32_Instantiated,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(0.8).Within(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,TextToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\TextToleranceFactoryTest.cs,Instantiate_StartsWithNameInt32_Instantiated,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(0.8).Within(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,TextToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\TextToleranceFactoryTest.cs,Instantiate_StartsWithCasingNameInt32_Instantiated,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(0.8).Within(0.001));
Magic Number,NBi.Testing.Core.Scalar.Comparer,TextToleranceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Comparer\TextToleranceFactoryTest.cs,Instantiate_StartsWithCasingNameInt32_Instantiated,The following statement contains a magic number: Assert.That(tolerance.Value' Is.EqualTo(0.8).Within(0.001));
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateConverterTest.cs,Execute_ValidDate_Date,The following statement contains a magic number: var text = (new DateTime(2018' 1' 6)).ToString(cultureInfo.DateTimeFormat).Split(' ')[0];
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateConverterTest.cs,Execute_ValidDate_Date,The following statement contains a magic number: var text = (new DateTime(2018' 1' 6)).ToString(cultureInfo.DateTimeFormat).Split(' ')[0];
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateConverterTest.cs,Execute_ValidDate_Date,The following statement contains a magic number: Assert.That(newValue' Is.EqualTo(new DateTime(2018' 01' 6)));
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateConverterTest.cs,Execute_ValidDate_Date,The following statement contains a magic number: Assert.That(newValue' Is.EqualTo(new DateTime(2018' 01' 6)));
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateTimeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateTimeConverterTest.cs,Execute_ValidDateTime_Date,The following statement contains a magic number: var text = (new DateTime(2018' 1' 6' 5' 12' 25)).ToString(cultureInfo.DateTimeFormat.ShortDatePattern + " " + cultureInfo.DateTimeFormat.LongTimePattern' cultureInfo.DateTimeFormat);
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateTimeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateTimeConverterTest.cs,Execute_ValidDateTime_Date,The following statement contains a magic number: var text = (new DateTime(2018' 1' 6' 5' 12' 25)).ToString(cultureInfo.DateTimeFormat.ShortDatePattern + " " + cultureInfo.DateTimeFormat.LongTimePattern' cultureInfo.DateTimeFormat);
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateTimeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateTimeConverterTest.cs,Execute_ValidDateTime_Date,The following statement contains a magic number: var text = (new DateTime(2018' 1' 6' 5' 12' 25)).ToString(cultureInfo.DateTimeFormat.ShortDatePattern + " " + cultureInfo.DateTimeFormat.LongTimePattern' cultureInfo.DateTimeFormat);
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateTimeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateTimeConverterTest.cs,Execute_ValidDateTime_Date,The following statement contains a magic number: var text = (new DateTime(2018' 1' 6' 5' 12' 25)).ToString(cultureInfo.DateTimeFormat.ShortDatePattern + " " + cultureInfo.DateTimeFormat.LongTimePattern' cultureInfo.DateTimeFormat);
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateTimeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateTimeConverterTest.cs,Execute_ValidDateTime_Date,The following statement contains a magic number: var text = (new DateTime(2018' 1' 6' 5' 12' 25)).ToString(cultureInfo.DateTimeFormat.ShortDatePattern + " " + cultureInfo.DateTimeFormat.LongTimePattern' cultureInfo.DateTimeFormat);
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateTimeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateTimeConverterTest.cs,Execute_ValidDateTime_Date,The following statement contains a magic number: Assert.That(newValue' Is.EqualTo(new DateTime(2018' 01' 6' 5' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateTimeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateTimeConverterTest.cs,Execute_ValidDateTime_Date,The following statement contains a magic number: Assert.That(newValue' Is.EqualTo(new DateTime(2018' 01' 6' 5' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateTimeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateTimeConverterTest.cs,Execute_ValidDateTime_Date,The following statement contains a magic number: Assert.That(newValue' Is.EqualTo(new DateTime(2018' 01' 6' 5' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateTimeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateTimeConverterTest.cs,Execute_ValidDateTime_Date,The following statement contains a magic number: Assert.That(newValue' Is.EqualTo(new DateTime(2018' 01' 6' 5' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToDateTimeConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToDateTimeConverterTest.cs,Execute_ValidDateTime_Date,The following statement contains a magic number: Assert.That(newValue' Is.EqualTo(new DateTime(2018' 01' 6' 5' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToNumericConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToNumericConverterTest.cs,Execute_ValidNumeric_Decimal,The following statement contains a magic number: var text = (100.456).ToString(cultureInfo.NumberFormat);
Magic Number,NBi.Testing.Core.Scalar.Conversion,TextToNumericConverterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Conversion\TextToNumericConverterTest.cs,Execute_ValidNumeric_Decimal,The following statement contains a magic number: Assert.That(newValue' Is.EqualTo(new Decimal(100.456)));
Magic Number,NBi.Testing.Core.Scalar.Format,InvariantFormatterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Format\InvariantFormatterTest.cs,Execute_OneGlobalVariablesFormatted_Processed,The following statement contains a magic number: var globalVariables = new Dictionary<string' ITestVariable>()              {                  { "myVar"' new OverridenVariable("myVar"' new DateTime(2018' 11' 6)) }'              };
Magic Number,NBi.Testing.Core.Scalar.Format,InvariantFormatterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Format\InvariantFormatterTest.cs,Execute_OneGlobalVariablesFormatted_Processed,The following statement contains a magic number: var globalVariables = new Dictionary<string' ITestVariable>()              {                  { "myVar"' new OverridenVariable("myVar"' new DateTime(2018' 11' 6)) }'              };
Magic Number,NBi.Testing.Core.Scalar.Format,InvariantFormatterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Format\InvariantFormatterTest.cs,Execute_OneGlobalVariablesFormatted_Processed,The following statement contains a magic number: var globalVariables = new Dictionary<string' ITestVariable>()              {                  { "myVar"' new OverridenVariable("myVar"' new DateTime(2018' 11' 6)) }'              };
Magic Number,NBi.Testing.Core.Scalar.Format,InvariantFormatterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Format\InvariantFormatterTest.cs,ExecuteWithCulture_OneGlobalVariablesFormatted_ProcessedCultureIndepedant,The following statement contains a magic number: var globalVariables = new Dictionary<string' ITestVariable>()              {                  { "myVar"' new OverridenVariable("myVar"' new DateTime(2018' 8' 6)) }'              };
Magic Number,NBi.Testing.Core.Scalar.Format,InvariantFormatterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Format\InvariantFormatterTest.cs,ExecuteWithCulture_OneGlobalVariablesFormatted_ProcessedCultureIndepedant,The following statement contains a magic number: var globalVariables = new Dictionary<string' ITestVariable>()              {                  { "myVar"' new OverridenVariable("myVar"' new DateTime(2018' 8' 6)) }'              };
Magic Number,NBi.Testing.Core.Scalar.Format,InvariantFormatterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Format\InvariantFormatterTest.cs,ExecuteWithCulture_OneGlobalVariablesFormatted_ProcessedCultureIndepedant,The following statement contains a magic number: var globalVariables = new Dictionary<string' ITestVariable>()              {                  { "myVar"' new OverridenVariable("myVar"' new DateTime(2018' 8' 6)) }'              };
Magic Number,NBi.Testing.Core.Scalar.Format,InvariantFormatterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Format\InvariantFormatterTest.cs,Execute_OneGlobalVariablesAdvancedFormatted_Processed,The following statement contains a magic number: var globalVariables = new Dictionary<string' ITestVariable>()              {                  { "myVar"' new OverridenVariable("myVar"' new DateTime(2018' 8' 6)) }'              };
Magic Number,NBi.Testing.Core.Scalar.Format,InvariantFormatterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Format\InvariantFormatterTest.cs,Execute_OneGlobalVariablesAdvancedFormatted_Processed,The following statement contains a magic number: var globalVariables = new Dictionary<string' ITestVariable>()              {                  { "myVar"' new OverridenVariable("myVar"' new DateTime(2018' 8' 6)) }'              };
Magic Number,NBi.Testing.Core.Scalar.Format,InvariantFormatterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Format\InvariantFormatterTest.cs,Execute_OneGlobalVariablesAdvancedFormatted_Processed,The following statement contains a magic number: var globalVariables = new Dictionary<string' ITestVariable>()              {                  { "myVar"' new OverridenVariable("myVar"' new DateTime(2018' 8' 6)) }'              };
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_ClosedClosed_ReturnBothClosed,The following statement contains a magic number: Assert.That(interval.Left.Value' Is.EqualTo(new DateTime(2010' 10' 12)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_ClosedClosed_ReturnBothClosed,The following statement contains a magic number: Assert.That(interval.Left.Value' Is.EqualTo(new DateTime(2010' 10' 12)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_ClosedClosed_ReturnBothClosed,The following statement contains a magic number: Assert.That(interval.Left.Value' Is.EqualTo(new DateTime(2010' 10' 12)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_ClosedClosed_ReturnBothClosed,The following statement contains a magic number: Assert.That(interval.Right.Value' Is.EqualTo(new DateTime(2012' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_ClosedClosed_ReturnBothClosed,The following statement contains a magic number: Assert.That(interval.Right.Value' Is.EqualTo(new DateTime(2012' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_ClosedClosed_ReturnBothClosed,The following statement contains a magic number: Assert.That(interval.Right.Value' Is.EqualTo(new DateTime(2012' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_OpenOpen_ReturnBothNotClosed,The following statement contains a magic number: Assert.That(interval.Left.Value' Is.EqualTo(new DateTime(2010' 10' 12)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_OpenOpen_ReturnBothNotClosed,The following statement contains a magic number: Assert.That(interval.Left.Value' Is.EqualTo(new DateTime(2010' 10' 12)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_OpenOpen_ReturnBothNotClosed,The following statement contains a magic number: Assert.That(interval.Left.Value' Is.EqualTo(new DateTime(2010' 10' 12)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_OpenOpen_ReturnBothNotClosed,The following statement contains a magic number: Assert.That(interval.Right.Value' Is.EqualTo(new DateTime(2012' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_OpenOpen_ReturnBothNotClosed,The following statement contains a magic number: Assert.That(interval.Right.Value' Is.EqualTo(new DateTime(2012' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_OpenOpen_ReturnBothNotClosed,The following statement contains a magic number: Assert.That(interval.Right.Value' Is.EqualTo(new DateTime(2012' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_OpenClosed_ReturnOpenClosed,The following statement contains a magic number: Assert.That(interval.Left.Value' Is.EqualTo(new DateTime(2010' 10' 12)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_OpenClosed_ReturnOpenClosed,The following statement contains a magic number: Assert.That(interval.Left.Value' Is.EqualTo(new DateTime(2010' 10' 12)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_OpenClosed_ReturnOpenClosed,The following statement contains a magic number: Assert.That(interval.Left.Value' Is.EqualTo(new DateTime(2010' 10' 12)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_OpenClosed_ReturnOpenClosed,The following statement contains a magic number: Assert.That(interval.Right.Value' Is.EqualTo(new DateTime(2012' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_OpenClosed_ReturnOpenClosed,The following statement contains a magic number: Assert.That(interval.Right.Value' Is.EqualTo(new DateTime(2012' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Interval,DateTimeIntervalBuilderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Interval\DateTimeIntervalBuilderTest.cs,Build_OpenClosed_ReturnOpenClosed,The following statement contains a magic number: Assert.That(interval.Right.Value' Is.EqualTo(new DateTime(2012' 12' 25)));
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4)' "2010-07-04");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4)' "2010-07-04");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4)' "2010-07-04");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10)' "2010-07-04 11:30:10");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10)' "2010-07-04 11:30:10");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10)' "2010-07-04 11:30:10");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10)' "2010-07-04 11:30:10");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10)' "2010-07-04 11:30:10");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10)' "2010-07-04 11:30:10");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10' 325)' "2010-07-04 11:30:10.325");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10' 325)' "2010-07-04 11:30:10.325");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10' 325)' "2010-07-04 11:30:10.325");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10' 325)' "2010-07-04 11:30:10.325");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10' 325)' "2010-07-04 11:30:10.325");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10' 325)' "2010-07-04 11:30:10.325");
Magic Number,NBi.Testing.Core.Scalar.Presentation,DateTimePresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\DateTimePresenterTest.cs,DateTimeValues,The following statement contains a magic number: yield return new TestCaseData(new DateTime(2010' 7' 4' 11' 30' 10' 325)' "2010-07-04 11:30:10.325");
Magic Number,NBi.Testing.Core.Scalar.Presentation,NumericPresenterTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Presentation\NumericPresenterTest.cs,Execute_NumericDecimal_CorrectDisplay,The following statement contains a magic number: var text = presenter.Execute(10.400m);
Magic Number,NBi.Testing.Core.Scalar.Resolver,ContextScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\ContextScalarResolverTest.cs,Execute_FirstRowByName_CorrectEvaluation,The following statement contains a magic number: rs.Load(new[] { new object[] { "a"' 1 }' new object[] { "b"' 2 } });
Magic Number,NBi.Testing.Core.Scalar.Resolver,ContextScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\ContextScalarResolverTest.cs,Execute_FirstRowByOrdinal_CorrectEvaluation,The following statement contains a magic number: rs.Load(new[] { new object[] { "a"' 1 }' new object[] { "b"' 2 } });
Magic Number,NBi.Testing.Core.Scalar.Resolver,ContextScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\ContextScalarResolverTest.cs,Execute_SecondRow_CorrectEvaluation,The following statement contains a magic number: rs.Load(new[] { new object[] { "a"' 1 }' new object[] { "b"' 2 } });
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithoutRowValues_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnNames_CorrectComputation,The following statement contains a magic number: row.ItemArray = new object[] { 2' 5' 3 };
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnNames_CorrectComputation,The following statement contains a magic number: row.ItemArray = new object[] { 2' 5' 3 };
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnNames_CorrectComputation,The following statement contains a magic number: row.ItemArray = new object[] { 2' 5' 3 };
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnNames_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2*Math.Max(5'3)-2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnNames_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2*Math.Max(5'3)-2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnNames_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2*Math.Max(5'3)-2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnNames_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2*Math.Max(5'3)-2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnBracketNames_CorrectComputation,The following statement contains a magic number: row.ItemArray = new object[] { 2' 5' 3 };
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnBracketNames_CorrectComputation,The following statement contains a magic number: row.ItemArray = new object[] { 2' 5' 3 };
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnBracketNames_CorrectComputation,The following statement contains a magic number: row.ItemArray = new object[] { 2' 5' 3 };
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnBracketNames_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2 * Math.Max(5' 3) - 2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnBracketNames_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2 * Math.Max(5' 3) - 2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnBracketNames_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2 * Math.Max(5' 3) - 2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnBracketNames_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2 * Math.Max(5' 3) - 2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnOrdinals_CorrectComputation,The following statement contains a magic number: row.ItemArray = new object[] { 2' 5' 3 };
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnOrdinals_CorrectComputation,The following statement contains a magic number: row.ItemArray = new object[] { 2' 5' 3 };
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnOrdinals_CorrectComputation,The following statement contains a magic number: row.ItemArray = new object[] { 2' 5' 3 };
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnOrdinals_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2 * Math.Max(5' 3) - 2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnOrdinals_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2 * Math.Max(5' 3) - 2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnOrdinals_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2 * Math.Max(5' 3) - 2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,NCalcScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\NCalcScalarResolverTest.cs,Instantiate_WithRowValuesBasedOnOrdinals_CorrectComputation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(2 * Math.Max(5' 3) - 2));
Magic Number,NBi.Testing.Core.Scalar.Resolver,FormatScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\FormatScalarResolverTest.cs,Execute_VariableWithNativeTransformation_CorrectEvaluation,The following statement contains a magic number: Assert.That(text' Is.EqualTo($"First of May was a {new DateTime(2019' 5' 1):dddd}"));
Magic Number,NBi.Testing.Core.Scalar.Resolver,FormatScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\FormatScalarResolverTest.cs,Execute_VariableWithNativeTransformation_CorrectEvaluation,The following statement contains a magic number: Assert.That(text' Is.EqualTo($"First of May was a {new DateTime(2019' 5' 1):dddd}"));
Magic Number,NBi.Testing.Core.Scalar.Resolver,FormatScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\FormatScalarResolverTest.cs,Execute_VariableWithTwoNativeTransformations_CorrectEvaluation,The following statement contains a magic number: Assert.That(text' Is.EqualTo($"First day of the month before was a {new DateTime(2019' 5' 1):dddd}"));
Magic Number,NBi.Testing.Core.Scalar.Resolver,FormatScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\FormatScalarResolverTest.cs,Execute_VariableWithTwoNativeTransformations_CorrectEvaluation,The following statement contains a magic number: Assert.That(text' Is.EqualTo($"First day of the month before was a {new DateTime(2019' 5' 1):dddd}"));
Magic Number,NBi.Testing.Core.Scalar.Resolver,FunctionScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\FunctionScalarResolverTest.cs,Execute_ValueAndTwoFunctions_CorrectValue,The following statement contains a magic number: Assert.That(resolver.Execute()' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.Scalar.Resolver,FunctionScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\FunctionScalarResolverTest.cs,Execute_FunctionPrecededByFormat_CorrectValue,The following statement contains a magic number: Assert.That(resolver.Execute()' Is.EqualTo(8));
Magic Number,NBi.Testing.Core.Scalar.Resolver,GlobalVariableScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\GlobalVariableScalarResolverTest.cs,Execute_ExistingVariable_CorrectEvaluation,The following statement contains a magic number: Assert.That(resolver.Execute()' Is.EqualTo(100));
Magic Number,NBi.Testing.Core.Scalar.Resolver,GlobalVariableScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\GlobalVariableScalarResolverTest.cs,Execute_ExistingVariableWrongType_CorrectEvaluation,The following statement contains a magic number: Assert.That(resolver.Execute()' Is.EqualTo(100));
Magic Number,NBi.Testing.Core.Scalar.Resolver,GlobalVariableScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\GlobalVariableScalarResolverTest.cs,Execute_ExistingVariableWrongTypeDateTime_CorrectEvaluation,The following statement contains a magic number: Assert.That(resolver.Execute()' Is.EqualTo(new DateTime(2017'5'12)));
Magic Number,NBi.Testing.Core.Scalar.Resolver,GlobalVariableScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\GlobalVariableScalarResolverTest.cs,Execute_ExistingVariableWrongTypeDateTime_CorrectEvaluation,The following statement contains a magic number: Assert.That(resolver.Execute()' Is.EqualTo(new DateTime(2017'5'12)));
Magic Number,NBi.Testing.Core.Scalar.Resolver,GlobalVariableScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\GlobalVariableScalarResolverTest.cs,Execute_ExistingVariableWrongTypeDateTime_CorrectEvaluation,The following statement contains a magic number: Assert.That(resolver.Execute()' Is.EqualTo(new DateTime(2017'5'12)));
Magic Number,NBi.Testing.Core.Scalar.Resolver,LiteralScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\LiteralScalarResolverTest.cs,Execute_DoubleToDecimal_Itself,The following statement contains a magic number: double obj = 10.0;
Magic Number,NBi.Testing.Core.Scalar.Resolver,LiteralScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\LiteralScalarResolverTest.cs,Execute_DecimalToInt_Itself,The following statement contains a magic number: decimal obj = new decimal(10);
Magic Number,NBi.Testing.Core.Scalar.Resolver,LiteralScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\LiteralScalarResolverTest.cs,Execute_DateTime_Itself,The following statement contains a magic number: var obj = new DateTime(2017' 11' 13' 7' 5' 0);
Magic Number,NBi.Testing.Core.Scalar.Resolver,LiteralScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\LiteralScalarResolverTest.cs,Execute_DateTime_Itself,The following statement contains a magic number: var obj = new DateTime(2017' 11' 13' 7' 5' 0);
Magic Number,NBi.Testing.Core.Scalar.Resolver,LiteralScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\LiteralScalarResolverTest.cs,Execute_DateTime_Itself,The following statement contains a magic number: var obj = new DateTime(2017' 11' 13' 7' 5' 0);
Magic Number,NBi.Testing.Core.Scalar.Resolver,LiteralScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\LiteralScalarResolverTest.cs,Execute_DateTime_Itself,The following statement contains a magic number: var obj = new DateTime(2017' 11' 13' 7' 5' 0);
Magic Number,NBi.Testing.Core.Scalar.Resolver,LiteralScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\LiteralScalarResolverTest.cs,Execute_DateTime_Itself,The following statement contains a magic number: var obj = new DateTime(2017' 11' 13' 7' 5' 0);
Magic Number,NBi.Testing.Core.Scalar.Resolver,LiteralScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\LiteralScalarResolverTest.cs,Execute_StringToPercentage_Double,The following statement contains a magic number: Assert.That(resolver.Execute().Value' Is.EqualTo(0.1));
Magic Number,NBi.Testing.Core.Scalar.Resolver,ProjectionResultSetScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\ProjectionResultSetScalarResolverTest.cs,Execute_RowCount_CorrectResult,The following statement contains a magic number: var rsArgs = new ObjectsResultSetResolverArgs(                  new List<object[]>()                  {                      new object[] { "alpha"' 1 }'                      new object[] { "beta"' 2 }'                      new object[] { "Gamma"' 3 }                  });
Magic Number,NBi.Testing.Core.Scalar.Resolver,ProjectionResultSetScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\ProjectionResultSetScalarResolverTest.cs,Execute_RowCount_CorrectResult,The following statement contains a magic number: var rsArgs = new ObjectsResultSetResolverArgs(                  new List<object[]>()                  {                      new object[] { "alpha"' 1 }'                      new object[] { "beta"' 2 }'                      new object[] { "Gamma"' 3 }                  });
Magic Number,NBi.Testing.Core.Scalar.Resolver,ProjectionResultSetScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\ProjectionResultSetScalarResolverTest.cs,Execute_RowCount_CorrectResult,The following statement contains a magic number: Assert.That(resolver.Execute()' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.Scalar.Resolver,CustomScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\CustomScalarResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The following statement contains a magic number: var args = new CustomScalarResolverArgs              (                  new LiteralScalarResolver<string>(GetType().Assembly.Location)'                  new LiteralScalarResolver<string>($"{typeof(MyCustomClassWithParams).Namespace}.{typeof(MyCustomClassWithParams).Name}")'                  new Dictionary<string' IScalarResolver>() { { "foo"' new LiteralScalarResolver<int>(5) }' { "bar"' new LiteralScalarResolver<DateTime>(new DateTime(2019' 1' 1)) } }              );
Magic Number,NBi.Testing.Core.Scalar.Resolver,CustomScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\CustomScalarResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The following statement contains a magic number: var args = new CustomScalarResolverArgs              (                  new LiteralScalarResolver<string>(GetType().Assembly.Location)'                  new LiteralScalarResolver<string>($"{typeof(MyCustomClassWithParams).Namespace}.{typeof(MyCustomClassWithParams).Name}")'                  new Dictionary<string' IScalarResolver>() { { "foo"' new LiteralScalarResolver<int>(5) }' { "bar"' new LiteralScalarResolver<DateTime>(new DateTime(2019' 1' 1)) } }              );
Magic Number,NBi.Testing.Core.Scalar.Resolver,CustomScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\CustomScalarResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(new DateTime(2019'1'6)));
Magic Number,NBi.Testing.Core.Scalar.Resolver,CustomScalarResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Scalar\Resolver\CustomScalarResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The following statement contains a magic number: Assert.That(output' Is.EqualTo(new DateTime(2019'1'6)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,CustomSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\CustomSequenceResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The following statement contains a magic number: var args = new CustomSequenceResolverArgs              (                  new LiteralScalarResolver<string>(GetType().Assembly.Location)'                  new LiteralScalarResolver<string>($"{typeof(MyCustomClassWithParams).Namespace}.{typeof(MyCustomClassWithParams).Name}")'                  new Dictionary<string' IScalarResolver>() { { "foo"' new LiteralScalarResolver<int>(5) }' { "bar"' new LiteralScalarResolver<DateTime>(new DateTime(2019' 1' 1)) } }              );
Magic Number,NBi.Testing.Core.Sequence.Resolver,CustomSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\CustomSequenceResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The following statement contains a magic number: var args = new CustomSequenceResolverArgs              (                  new LiteralScalarResolver<string>(GetType().Assembly.Location)'                  new LiteralScalarResolver<string>($"{typeof(MyCustomClassWithParams).Namespace}.{typeof(MyCustomClassWithParams).Name}")'                  new Dictionary<string' IScalarResolver>() { { "foo"' new LiteralScalarResolver<int>(5) }' { "bar"' new LiteralScalarResolver<DateTime>(new DateTime(2019' 1' 1)) } }              );
Magic Number,NBi.Testing.Core.Sequence.Resolver,CustomSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\CustomSequenceResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The following statement contains a magic number: Assert.That(output' Has.Member(new DateTime(2019' 1' 6)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,CustomSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\CustomSequenceResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The following statement contains a magic number: Assert.That(output' Has.Member(new DateTime(2019' 1' 6)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,CustomSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\CustomSequenceResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The following statement contains a magic number: Assert.That(output' Has.Member(new DateTime(2018' 12' 27)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,CustomSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\CustomSequenceResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The following statement contains a magic number: Assert.That(output' Has.Member(new DateTime(2018' 12' 27)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,CustomSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\CustomSequenceResolverTest.cs,Execute_TypeWithParam_CorrectEvaluation,The following statement contains a magic number: Assert.That(output' Has.Member(new DateTime(2018' 12' 27)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,FilterSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\FilterSequenceResolverTest.cs,Execute_Numeric_TwoElements,The following statement contains a magic number: var resolvers = new List<IScalarResolver>()              {                  new LiteralScalarResolver<decimal>(10)'                  new LiteralScalarResolver<decimal>(11)'                  new LiteralScalarResolver<decimal>(12)'                  new LiteralScalarResolver<decimal>(13)'              };
Magic Number,NBi.Testing.Core.Sequence.Resolver,FilterSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\FilterSequenceResolverTest.cs,Execute_Numeric_TwoElements,The following statement contains a magic number: var resolvers = new List<IScalarResolver>()              {                  new LiteralScalarResolver<decimal>(10)'                  new LiteralScalarResolver<decimal>(11)'                  new LiteralScalarResolver<decimal>(12)'                  new LiteralScalarResolver<decimal>(13)'              };
Magic Number,NBi.Testing.Core.Sequence.Resolver,FilterSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\FilterSequenceResolverTest.cs,Execute_Numeric_TwoElements,The following statement contains a magic number: var resolvers = new List<IScalarResolver>()              {                  new LiteralScalarResolver<decimal>(10)'                  new LiteralScalarResolver<decimal>(11)'                  new LiteralScalarResolver<decimal>(12)'                  new LiteralScalarResolver<decimal>(13)'              };
Magic Number,NBi.Testing.Core.Sequence.Resolver,FilterSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\FilterSequenceResolverTest.cs,Execute_Numeric_TwoElements,The following statement contains a magic number: var resolvers = new List<IScalarResolver>()              {                  new LiteralScalarResolver<decimal>(10)'                  new LiteralScalarResolver<decimal>(11)'                  new LiteralScalarResolver<decimal>(12)'                  new LiteralScalarResolver<decimal>(13)'              };
Magic Number,NBi.Testing.Core.Sequence.Resolver,FilterSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\FilterSequenceResolverTest.cs,Execute_Numeric_TwoElements,The following statement contains a magic number: var predicate = new NumericModulo(false' 2' new LiteralScalarResolver<decimal>(0));
Magic Number,NBi.Testing.Core.Sequence.Resolver,FilterSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\FilterSequenceResolverTest.cs,Execute_Numeric_TwoElements,The following statement contains a magic number: Assert.That(elements.Count()' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.Sequence.Resolver,FilterSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\FilterSequenceResolverTest.cs,Execute_Numeric_TwoElements,The following statement contains a magic number: Assert.That(elements' Has.Member(10));
Magic Number,NBi.Testing.Core.Sequence.Resolver,FilterSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\FilterSequenceResolverTest.cs,Execute_Numeric_TwoElements,The following statement contains a magic number: Assert.That(elements' Has.Member(12));
Magic Number,NBi.Testing.Core.Sequence.Resolver,FilterSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\FilterSequenceResolverTest.cs,Execute_DateTime_TwoElements,The following statement contains a magic number: Assert.That(elements.Count()' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.Sequence.Resolver,FilterSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\FilterSequenceResolverTest.cs,Execute_DateTime_TwoElements,The following statement contains a magic number: Assert.That(elements' Has.Member(new DateTime(2015' 1' 1)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,FilterSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\FilterSequenceResolverTest.cs,Execute_DateTime_TwoElements,The following statement contains a magic number: Assert.That(elements' Has.Member(new DateTime(2016' 1' 1)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,FilterSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\FilterSequenceResolverTest.cs,Execute_DateTime_TwoElements,The following statement contains a magic number: Assert.That(elements' Has.Member(new DateTime(2017' 1' 1)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,QuerySequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\QuerySequenceResolverTest.cs,Execute_QueryEmbedded_CorrectlyExecuted,The following statement contains a magic number: var queryArgs = new EmbeddedQueryResolverArgs(                      "select * from table"                      ' "server=.;initiatl catalog=db;integrated security=true"                      ' null                      ' null                      ' new TimeSpan(0' 0' 30)              );
Magic Number,NBi.Testing.Core.Sequence.Resolver,QuerySequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\QuerySequenceResolverTest.cs,Execute_QueryEmbedded_CorrectlyExecuted,The following statement contains a magic number: Assert.That(elements.Count()' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.Sequence.Resolver,QuerySequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\QuerySequenceResolverTest.cs,Execute_QueryEmbedded_CorrectCallsToServiceLocatorMethods,The following statement contains a magic number: var queryArgs = new EmbeddedQueryResolverArgs(                      "select * from table"                      ' "server=.;initiatl catalog=db;integrated security=true"                      ' null                      ' null                      ' new TimeSpan(0' 0' 30)              );
Magic Number,NBi.Testing.Core.Sequence.Resolver,ListSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\ListSequenceResolverTest.cs,Execute_TwoArgs_TwoElements,The following statement contains a magic number: Assert.That(elements.Count()' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.Sequence.Resolver,ListSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\ListSequenceResolverTest.cs,Execute_TwoArgs_TwoElements,The following statement contains a magic number: Assert.That(elements' Has.Member(new DateTime(2015' 1' 1)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,ListSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\ListSequenceResolverTest.cs,Execute_TwoArgs_TwoElements,The following statement contains a magic number: Assert.That(elements' Has.Member(new DateTime(2016' 1' 1)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountNumeric_ExactSequence,The following statement contains a magic number: var args = new CountNumericLoopStrategy(5' 1' 1);
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountNumeric_ExactSequence,The following statement contains a magic number: Assert.That(elements.Count()' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountNumeric_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<decimal>() { 1' 2' 3' 4' 5 }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountNumeric_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<decimal>() { 1' 2' 3' 4' 5 }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountNumeric_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<decimal>() { 1' 2' 3' 4' 5 }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountNumeric_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<decimal>() { 1' 2' 3' 4' 5 }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountDateTime_ExactSequence,The following statement contains a magic number: var args = new CountDateTimeLoopStrategy(3' new DateTime(2018' 1' 30)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountDateTime_ExactSequence,The following statement contains a magic number: var args = new CountDateTimeLoopStrategy(3' new DateTime(2018' 1' 30)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountDateTime_ExactSequence,The following statement contains a magic number: var args = new CountDateTimeLoopStrategy(3' new DateTime(2018' 1' 30)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements.Count()' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 30)' new DateTime(2018' 1' 31)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 30)' new DateTime(2018' 1' 31)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 30)' new DateTime(2018' 1' 31)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 30)' new DateTime(2018' 1' 31)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 30)' new DateTime(2018' 1' 31)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_CountDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 30)' new DateTime(2018' 1' 31)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelNumeric_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseNumericLoopStrategy(1' 5' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelNumeric_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseNumericLoopStrategy(1' 5' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelNumeric_ExactSequence,The following statement contains a magic number: Assert.That(elements.Count()' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelNumeric_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<decimal>() { 1' 3' 5 }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelNumeric_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<decimal>() { 1' 3' 5 }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 2)' new FixedDuration(new TimeSpan(2' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 2)' new FixedDuration(new TimeSpan(2' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 2)' new FixedDuration(new TimeSpan(2' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 2)' new FixedDuration(new TimeSpan(2' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 2)' new FixedDuration(new TimeSpan(2' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 2)' new FixedDuration(new TimeSpan(2' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements.Count()' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SeedGreaterThanTerminalSentinelNumeric_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseNumericLoopStrategy(10' 5' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SeedGreaterThanTerminalSentinelNumeric_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseNumericLoopStrategy(10' 5' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SeedGreaterThanTerminalSentinelNumeric_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseNumericLoopStrategy(10' 5' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SeedEqualToTerminalSentinelNumeric_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseNumericLoopStrategy(10' 10' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SeedEqualToTerminalSentinelNumeric_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseNumericLoopStrategy(10' 10' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SeedEqualToTerminalSentinelNumeric_ExactSequence,The following statement contains a magic number: var args = new SentinelCloseNumericLoopStrategy(10' 10' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SeedEqualToTerminalSentinelNumeric_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<decimal>() { 10 }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenNumeric_ExactSequence,The following statement contains a magic number: var args = new SentinelHalfOpenNumericLoopStrategy(1' 7' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenNumeric_ExactSequence,The following statement contains a magic number: var args = new SentinelHalfOpenNumericLoopStrategy(1' 7' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenNumeric_ExactSequence,The following statement contains a magic number: Assert.That(elements.Count()' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenNumeric_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<decimal>() { 1' 3' 5}));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenNumeric_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<decimal>() { 1' 3' 5}));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: var args = new SentinelHalfOpenDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 3)' new FixedDuration(new TimeSpan(2' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: var args = new SentinelHalfOpenDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 3)' new FixedDuration(new TimeSpan(2' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: var args = new SentinelHalfOpenDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 3)' new FixedDuration(new TimeSpan(2' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: var args = new SentinelHalfOpenDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 3)' new FixedDuration(new TimeSpan(2' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: var args = new SentinelHalfOpenDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 3)' new FixedDuration(new TimeSpan(2' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: var args = new SentinelHalfOpenDateTimeLoopStrategy(new DateTime(2018' 1' 28)' new DateTime(2018' 2' 3)' new FixedDuration(new TimeSpan(2' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements.Count()' Is.EqualTo(3));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,LoopSequenceResolverTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\LoopSequenceResolverTest.cs,Execute_SentinelHalfOpenDateTime_ExactSequence,The following statement contains a magic number: Assert.That(elements' Is.EqualTo(new List<DateTime>() { new DateTime(2018' 1' 28)' new DateTime(2018' 1' 30)' new DateTime(2018' 2' 1) }));
Magic Number,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_CountLoopDecimal_LoopSequenceResolver,The following statement contains a magic number: var args = new CountLoopSequenceResolverArgs<decimal' decimal>(5' 10' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_CountLoopDecimal_LoopSequenceResolver,The following statement contains a magic number: var args = new CountLoopSequenceResolverArgs<decimal' decimal>(5' 10' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_CountLoopDecimal_LoopSequenceResolver,The following statement contains a magic number: var args = new CountLoopSequenceResolverArgs<decimal' decimal>(5' 10' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_SentinelLoopDecimal_LoopSequenceResolver,The following statement contains a magic number: var args = new SentinelLoopSequenceResolverArgs<decimal' decimal>(5' 10' 2' IntervalMode.Close);
Magic Number,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_SentinelLoopDecimal_LoopSequenceResolver,The following statement contains a magic number: var args = new SentinelLoopSequenceResolverArgs<decimal' decimal>(5' 10' 2' IntervalMode.Close);
Magic Number,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_SentinelLoopDecimal_LoopSequenceResolver,The following statement contains a magic number: var args = new SentinelLoopSequenceResolverArgs<decimal' decimal>(5' 10' 2' IntervalMode.Close);
Magic Number,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_CountLoopDateTime_LoopSequenceResolver,The following statement contains a magic number: var args = new CountLoopSequenceResolverArgs<DateTime' IDuration>(3' new DateTime(2018'3'1)' new FixedDuration(new TimeSpan(1'0'0'0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_CountLoopDateTime_LoopSequenceResolver,The following statement contains a magic number: var args = new CountLoopSequenceResolverArgs<DateTime' IDuration>(3' new DateTime(2018'3'1)' new FixedDuration(new TimeSpan(1'0'0'0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_CountLoopDateTime_LoopSequenceResolver,The following statement contains a magic number: var args = new CountLoopSequenceResolverArgs<DateTime' IDuration>(3' new DateTime(2018'3'1)' new FixedDuration(new TimeSpan(1'0'0'0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_SentinelLoopDateTime_LoopSequenceResolver,The following statement contains a magic number: var args = new SentinelLoopSequenceResolverArgs<DateTime' IDuration>(new DateTime(2018' 1' 1)' new DateTime(2018' 3' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0))' IntervalMode.Close);
Magic Number,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_SentinelLoopDateTime_LoopSequenceResolver,The following statement contains a magic number: var args = new SentinelLoopSequenceResolverArgs<DateTime' IDuration>(new DateTime(2018' 1' 1)' new DateTime(2018' 3' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0))' IntervalMode.Close);
Magic Number,NBi.Testing.Core.Sequence.Resolver,SequenceResolverFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\SequenceResolverFactoryTest.cs,Instantiate_SentinelLoopDateTime_LoopSequenceResolver,The following statement contains a magic number: var args = new SentinelLoopSequenceResolverArgs<DateTime' IDuration>(new DateTime(2018' 1' 1)' new DateTime(2018' 3' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0))' IntervalMode.Close);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,Run_parameters_CorrectResult,The following statement contains a magic number: var strategy = new CountDateTimeLoopStrategy(count' new DateTime(2018' 1' 1)' new FixedDuration(new TimeSpan(stepDay' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,Run_parameters_CorrectResult,The following statement contains a magic number: var final = new DateTime(2018' 1' 1);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,Run_parameters_CorrectResult,The following statement contains a magic number: Assert.That(final' Is.EqualTo(new DateTime(2018' 1' expected)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,Run_MonthDuration_CorrectResult,The following statement contains a magic number: var strategy = new CountDateTimeLoopStrategy(count' new DateTime(2018' 1' monthDay)' new MonthDuration(stepMonth));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,Run_MonthDuration_CorrectResult,The following statement contains a magic number: var strategy = new CountDateTimeLoopStrategy(count' new DateTime(2018' 1' 1)' new YearDuration(stepYear));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: var strategy = new CountDateTimeLoopStrategy(10' new DateTime(2018' 1' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: var strategy = new CountDateTimeLoopStrategy(10' new DateTime(2018' 1' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: Assert.That(strategy.GetNext()' Is.EqualTo(new DateTime(2018' 1' 1)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,IsOngoing_ZeroTimes_False,The following statement contains a magic number: var strategy = new CountDateTimeLoopStrategy(0' new DateTime(2015' 1' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,IsOngoing_OneTimes_TrueThenFalse,The following statement contains a magic number: var strategy = new CountDateTimeLoopStrategy(1' new DateTime(2015' 1' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,IsOngoing_NTimes_True,The following statement contains a magic number: var strategy = new CountDateTimeLoopStrategy(10' new DateTime(2015' 1' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountDateTimeLoopStrategyTest.cs,IsOngoing_NTimes_True,The following statement contains a magic number: var strategy = new CountDateTimeLoopStrategy(10' new DateTime(2015' 1' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountNumericLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: var strategy = new CountNumericLoopStrategy(10' 4' 1);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountNumericLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: var strategy = new CountNumericLoopStrategy(10' 4' 1);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountNumericLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: Assert.That(strategy.GetNext()' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountNumericLoopStrategyTest.cs,IsOngoing_ZeroTimes_False,The following statement contains a magic number: var strategy = new CountNumericLoopStrategy(0' 3' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountNumericLoopStrategyTest.cs,IsOngoing_ZeroTimes_False,The following statement contains a magic number: var strategy = new CountNumericLoopStrategy(0' 3' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountNumericLoopStrategyTest.cs,IsOngoing_OneTimes_TrueThenFalse,The following statement contains a magic number: var strategy = new CountNumericLoopStrategy(1' 3' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountNumericLoopStrategyTest.cs,IsOngoing_OneTimes_TrueThenFalse,The following statement contains a magic number: var strategy = new CountNumericLoopStrategy(1' 3' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountNumericLoopStrategyTest.cs,IsOngoing_NTimes_True,The following statement contains a magic number: var strategy = new CountNumericLoopStrategy(10' 3' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountNumericLoopStrategyTest.cs,IsOngoing_NTimes_True,The following statement contains a magic number: var strategy = new CountNumericLoopStrategy(10' 3' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,CountNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\CountNumericLoopStrategyTest.cs,IsOngoing_NTimes_True,The following statement contains a magic number: var strategy = new CountNumericLoopStrategy(10' 3' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_day_CorrectResult,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 5)' new FixedDuration(new TimeSpan(stepDay' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_day_CorrectResult,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 5)' new FixedDuration(new TimeSpan(stepDay' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_day_CorrectResult,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 5)' new FixedDuration(new TimeSpan(stepDay' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_day_CorrectResult,The following statement contains a magic number: var final = new DateTime(2018' 1' 1);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_day_CorrectResult,The following statement contains a magic number: Assert.That(final' Is.EqualTo(new DateTime(2018' 1' expected)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_Month_CorrectResult,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 5' 10)' new MonthDuration(stepMonth));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_Month_CorrectResult,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 5' 10)' new MonthDuration(stepMonth));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_Month_CorrectResult,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 5' 10)' new MonthDuration(stepMonth));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_Month_CorrectResult,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 5' 10)' new MonthDuration(stepMonth));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_Month_CorrectResult,The following statement contains a magic number: Assert.That(final' Is.EqualTo(new DateTime(2018' expected' 1)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_Year_CorrectResult,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2019' 4' 10)' new YearDuration(stepMonth));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_Year_CorrectResult,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2019' 4' 10)' new YearDuration(stepMonth));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_Year_CorrectResult,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2019' 4' 10)' new YearDuration(stepMonth));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,Run_Year_CorrectResult,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2019' 4' 10)' new YearDuration(stepMonth));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 2)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 2)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 2)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: Assert.That(strategy.GetNext()' Is.EqualTo(new DateTime(2018' 1' 1)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,IsOngoing_ZeroTimes_False,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 3)' new DateTime(2018' 1' 2)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,IsOngoing_ZeroTimes_False,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 3)' new DateTime(2018' 1' 2)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,IsOngoing_ZeroTimes_False,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 3)' new DateTime(2018' 1' 2)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,IsOngoing_ZeroTimes_False,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 3)' new DateTime(2018' 1' 2)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,IsOngoing_OneTimes_TrueThenFalse,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,IsOngoing_OneTimes_TrueThenFalse,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 1)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,IsOngoing_NTimes_True,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 10)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,IsOngoing_NTimes_True,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 10)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelDateTimeLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelDateTimeLoopStrategyTest.cs,IsOngoing_NTimes_True,The following statement contains a magic number: var strategy = new SentinelCloseDateTimeLoopStrategy(new DateTime(2018' 1' 1)' new DateTime(2018' 1' 10)' new FixedDuration(new TimeSpan(1' 0' 0' 0)));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelNumericLoopStrategyTest.cs,Run_parameters_CorrectResult,The following statement contains a magic number: var strategy = new SentinelCloseNumericLoopStrategy(1' 5' step);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelNumericLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: var strategy = new SentinelCloseNumericLoopStrategy(10' 10' 1);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelNumericLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: var strategy = new SentinelCloseNumericLoopStrategy(10' 10' 1);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelNumericLoopStrategyTest.cs,GetNext_FirstTime_Seed,The following statement contains a magic number: Assert.That(strategy.GetNext()' Is.EqualTo(10));
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelNumericLoopStrategyTest.cs,IsOngoing_ZeroTimes_False,The following statement contains a magic number: var strategy = new SentinelCloseNumericLoopStrategy(10' 3' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelNumericLoopStrategyTest.cs,IsOngoing_ZeroTimes_False,The following statement contains a magic number: var strategy = new SentinelCloseNumericLoopStrategy(10' 3' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelNumericLoopStrategyTest.cs,IsOngoing_ZeroTimes_False,The following statement contains a magic number: var strategy = new SentinelCloseNumericLoopStrategy(10' 3' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelNumericLoopStrategyTest.cs,IsOngoing_OneTimes_TrueThenFalse,The following statement contains a magic number: var strategy = new SentinelCloseNumericLoopStrategy(1' 1' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelNumericLoopStrategyTest.cs,IsOngoing_NTimes_True,The following statement contains a magic number: var strategy = new SentinelCloseNumericLoopStrategy(1' 30' 2);
Magic Number,NBi.Testing.Core.Sequence.Resolver.Loop,SentinelNumericLoopStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Resolver\Loop\SentinelNumericLoopStrategyTest.cs,IsOngoing_NTimes_True,The following statement contains a magic number: var strategy = new SentinelCloseNumericLoopStrategy(1' 30' 2);
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MaxTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MaxTest.cs,Execute_Numeric_CorrectValue,The following statement contains a magic number: var list = new List<object>() { 1' 3m' 5d};
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MaxTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MaxTest.cs,Execute_Numeric_CorrectValue,The following statement contains a magic number: var list = new List<object>() { 1' 3m' 5d};
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MaxTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MaxTest.cs,Execute_Numeric_CorrectValue,The following statement contains a magic number: Assert.That(aggregation.Execute(list)' Is.EqualTo(5));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MaxTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MaxTest.cs,Execute_DateTime_CorrectValue,The following statement contains a magic number: var list = new List<object>() { new DateTime(2010'1'1)' new DateTime(2016'1'1)' new DateTime(2019' 1' 1) };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MaxTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MaxTest.cs,Execute_DateTime_CorrectValue,The following statement contains a magic number: var list = new List<object>() { new DateTime(2010'1'1)' new DateTime(2016'1'1)' new DateTime(2019' 1' 1) };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MaxTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MaxTest.cs,Execute_DateTime_CorrectValue,The following statement contains a magic number: var list = new List<object>() { new DateTime(2010'1'1)' new DateTime(2016'1'1)' new DateTime(2019' 1' 1) };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MaxTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MaxTest.cs,Execute_DateTime_CorrectValue,The following statement contains a magic number: Assert.That(aggregation.Execute(list)' Is.EqualTo(new DateTime(2019' 1' 1)));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MeanTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MeanTest.cs,Execute_Array_CorrectValue,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5};
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MeanTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MeanTest.cs,Execute_Array_CorrectValue,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5};
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MeanTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MeanTest.cs,Execute_Array_CorrectValue,The following statement contains a magic number: Assert.That(aggregation.Execute(list)' Is.EqualTo(3));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MinTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MinTest.cs,Execute_Array_CorrectValue,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5};
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MinTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MinTest.cs,Execute_Array_CorrectValue,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5};
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MinTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MinTest.cs,Execute_DateTime_CorrectValue,The following statement contains a magic number: var list = new List<object>() { new DateTime(2010' 1' 1)' new DateTime(2016' 1' 1)' new DateTime(2019' 1' 1) };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MinTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MinTest.cs,Execute_DateTime_CorrectValue,The following statement contains a magic number: var list = new List<object>() { new DateTime(2010' 1' 1)' new DateTime(2016' 1' 1)' new DateTime(2019' 1' 1) };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MinTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MinTest.cs,Execute_DateTime_CorrectValue,The following statement contains a magic number: var list = new List<object>() { new DateTime(2010' 1' 1)' new DateTime(2016' 1' 1)' new DateTime(2019' 1' 1) };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,MinTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\MinTest.cs,Execute_DateTime_CorrectValue,The following statement contains a magic number: Assert.That(aggregation.Execute(list)' Is.EqualTo(new DateTime(2010' 1' 1)));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,SumTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\SumTest.cs,Execute_Array_CorrectValue,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,SumTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\SumTest.cs,Execute_Array_CorrectValue,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Aggregation.Numeric,SumTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Aggregation\Numeric\SumTest.cs,Execute_Array_CorrectValue,The following statement contains a magic number: Assert.That(aggregation.Execute(list)' Is.EqualTo(9));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_NothingToDrop_NothingDropped,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_NothingToDrop_NothingDropped,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_NothingToDrop_NothingDropped,The following statement contains a magic number: Assert.That(strategy.Execute(list).Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_NothingToDrop_SameValues,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_NothingToDrop_SameValues,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_NothingToDrop_SameValues,The following statement contains a magic number: Assert.That(strategy.Execute(list)' Has.Member(3));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_NothingToDrop_SameValues,The following statement contains a magic number: Assert.That(strategy.Execute(list)' Has.Member(5));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_Blank_BlankDropped,The following statement contains a magic number: var list = new List<object>() { 1' "(blank)"' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_Blank_BlankDropped,The following statement contains a magic number: var list = new List<object>() { 1' "(blank)"' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_Blank_BlankDropped,The following statement contains a magic number: Assert.That(strategy.Execute(list).Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_Blank_BlankDropped,The following statement contains a magic number: Assert.That(strategy.Execute(list)' Has.Member(3));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_Blank_BlankDropped,The following statement contains a magic number: Assert.That(strategy.Execute(list)' Has.Member(5));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_Null_NullDropped,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5' null };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_Null_NullDropped,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5' null };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_Null_NullDropped,The following statement contains a magic number: Assert.That(strategy.Execute(list).Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_Null_NullDropped,The following statement contains a magic number: Assert.That(strategy.Execute(list)' Has.Member(3));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,DropStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\DropStrategyTest.cs,Execute_Null_NullDropped,The following statement contains a magic number: Assert.That(strategy.Execute(list)' Has.Member(5));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,FailureMissingValueStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\FailureMissingValueStrategyTest.cs,Execute_NoSpecialValue_NoException,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,FailureMissingValueStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\FailureMissingValueStrategyTest.cs,Execute_NoSpecialValue_NoException,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,FailureMissingValueStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\FailureMissingValueStrategyTest.cs,Execute_NoSpecialValue_SameValues,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,FailureMissingValueStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\FailureMissingValueStrategyTest.cs,Execute_NoSpecialValue_SameValues,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,FailureMissingValueStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\FailureMissingValueStrategyTest.cs,Execute_NoSpecialValue_SameValues,The following statement contains a magic number: Assert.That(result' Has.Member(3));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,FailureMissingValueStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\FailureMissingValueStrategyTest.cs,Execute_NoSpecialValue_SameValues,The following statement contains a magic number: Assert.That(result' Has.Member(5));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,FailureMissingValueStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\FailureMissingValueStrategyTest.cs,Execute_Blank_BlankDropped,The following statement contains a magic number: var list = new List<object>() { 1' "(blank)"' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,FailureMissingValueStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\FailureMissingValueStrategyTest.cs,Execute_Blank_BlankDropped,The following statement contains a magic number: var list = new List<object>() { 1' "(blank)"' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,FailureMissingValueStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\FailureMissingValueStrategyTest.cs,Execute_Null_NullDropped,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5' null };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,FailureMissingValueStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\FailureMissingValueStrategyTest.cs,Execute_Null_NullDropped,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5' null };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_NothingToReplace_NothingDropped,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_NothingToReplace_NothingDropped,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_NothingToReplace_NothingDropped,The following statement contains a magic number: Assert.That(strategy.Execute(list).Count' Is.EqualTo(3));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_NothingToReplace_SameValues,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_NothingToReplace_SameValues,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_NothingToReplace_SameValues,The following statement contains a magic number: Assert.That(strategy.Execute(list)' Has.Member(3));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_NothingToReplace_SameValues,The following statement contains a magic number: Assert.That(strategy.Execute(list)' Has.Member(5));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_Blank_BlankReplaced,The following statement contains a magic number: var list = new List<object>() { 1' "(blank)"' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_Blank_BlankReplaced,The following statement contains a magic number: var list = new List<object>() { 1' "(blank)"' 3' 5 };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_Blank_BlankReplaced,The following statement contains a magic number: Assert.That(strategy.Execute(list).Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_Blank_BlankReplaced,The following statement contains a magic number: Assert.That(strategy.Execute(list)' Has.Member(3));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_Blank_BlankReplaced,The following statement contains a magic number: Assert.That(strategy.Execute(list)' Has.Member(5));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_Null_NullReplaced,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5' null };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_Null_NullReplaced,The following statement contains a magic number: var list = new List<object>() { 1' 3' 5' null };
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_Null_NullReplaced,The following statement contains a magic number: Assert.That(strategy.Execute(list).Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_Null_NullReplaced,The following statement contains a magic number: Assert.That(strategy.Execute(list)' Has.Member(3));
Magic Number,NBi.Testing.Unit.Core.Sequence.Transformation.Strategy,ReplaceByDefaultStrategyTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Sequence\Transformation\Strategy\ReplaceByDefaultStrategyTest.cs,Execute_Null_NullReplaced,The following statement contains a magic number: Assert.That(strategy.Execute(list)' Has.Member(5));
Magic Number,NBi.Testing.Core.Transformation,TransformationProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\TransformationProviderTest.cs,Transform_SimpleTranformation_CorrectHandlingOfColumnNames,The following statement contains a magic number: Assert.That(resultSet.Columns.Count' Is.EqualTo(2));
Magic Number,NBi.Testing.Core.Transformation,TransformationProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\TransformationProviderTest.cs,Transform_NativeTranformationFirstCharWithContext_Correct,The following statement contains a magic number: resultSet.Load(new[] { new object[] { "123456789"' 6 }' new object[] { "abcdefgh"' 2 } });
Magic Number,NBi.Testing.Core.Transformation,TransformationProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\TransformationProviderTest.cs,Transform_NativeTranformationFirstCharWithContext_Correct,The following statement contains a magic number: resultSet.Load(new[] { new object[] { "123456789"' 6 }' new object[] { "abcdefgh"' 2 } });
Magic Number,NBi.Testing.Core.Transformation,TransformationProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\TransformationProviderTest.cs,Transform_TypeSwitch_Correct,The following statement contains a magic number: var obj = new object[] { new DateTime(2016'10'1) };
Magic Number,NBi.Testing.Core.Transformation,TransformationProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\TransformationProviderTest.cs,Transform_TypeSwitch_Correct,The following statement contains a magic number: var obj = new object[] { new DateTime(2016'10'1) };
Magic Number,NBi.Testing.Core.Transformation,TransformationProviderTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\TransformationProviderTest.cs,Transform_TypeSwitch_Correct,The following statement contains a magic number: Assert.That(resultSet.Rows[0][0]' Is.EqualTo(202));
Magic Number,NBi.Testing.Core.Transformation.Transformer,CSharpTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\CSharpTransformerTest.cs,Execute_Numeric_Multiplied,The following statement contains a magic number: var result = provider.Execute(new Decimal(100));
Magic Number,NBi.Testing.Core.Transformation.Transformer,CSharpTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\CSharpTransformerTest.cs,Execute_Numeric_Multiplied,The following statement contains a magic number: Assert.That(result' Is.EqualTo(121));
Magic Number,NBi.Testing.Core.Transformation.Transformer,CSharpTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\CSharpTransformerTest.cs,Execute_DateTime_Formated,The following statement contains a magic number: var result = provider.Execute(new DateTime(2016' 5' 17));
Magic Number,NBi.Testing.Core.Transformation.Transformer,CSharpTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\CSharpTransformerTest.cs,Execute_DateTime_Formated,The following statement contains a magic number: var result = provider.Execute(new DateTime(2016' 5' 17));
Magic Number,NBi.Testing.Core.Transformation.Transformer,CSharpTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\CSharpTransformerTest.cs,Execute_DateTime_Formated,The following statement contains a magic number: var result = provider.Execute(new DateTime(2016' 5' 17));
Magic Number,NBi.Testing.Core.Transformation.Transformer,CSharpTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\CSharpTransformerTest.cs,Execute_DateTime_Calculated,The following statement contains a magic number: var result = provider.Execute(new decimal(3283));
Magic Number,NBi.Testing.Core.Transformation.Transformer,CSharpTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\CSharpTransformerTest.cs,Execute_DateTime_Calculated,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new DateTime(1978'12'28)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,CSharpTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\CSharpTransformerTest.cs,Execute_DateTime_Calculated,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new DateTime(1978'12'28)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,CSharpTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\CSharpTransformerTest.cs,Execute_DateTime_Calculated,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new DateTime(1978'12'28)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,FormatTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\FormatTransformerTest.cs,Execute_Numeric_Format,The following statement contains a magic number: var result = provider.Execute(12.1);
Magic Number,NBi.Testing.Core.Transformation.Transformer,FormatTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\FormatTransformerTest.cs,Execute_DateTime_Format,The following statement contains a magic number: var result = provider.Execute(new DateTime(2016'5'12));
Magic Number,NBi.Testing.Core.Transformation.Transformer,FormatTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\FormatTransformerTest.cs,Execute_DateTime_Format,The following statement contains a magic number: var result = provider.Execute(new DateTime(2016'5'12));
Magic Number,NBi.Testing.Core.Transformation.Transformer,FormatTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\FormatTransformerTest.cs,Execute_DateTime_Format,The following statement contains a magic number: var result = provider.Execute(new DateTime(2016'5'12));
Magic Number,NBi.Testing.Core.Transformation.Transformer,FormatTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\FormatTransformerTest.cs,Execute_DateTime_Format,The following statement contains a magic number: result = provider.Execute(new DateTime(2016' 10' 12));
Magic Number,NBi.Testing.Core.Transformation.Transformer,FormatTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\FormatTransformerTest.cs,Execute_DateTime_Format,The following statement contains a magic number: result = provider.Execute(new DateTime(2016' 10' 12));
Magic Number,NBi.Testing.Core.Transformation.Transformer,FormatTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\FormatTransformerTest.cs,Execute_DateTime_Format,The following statement contains a magic number: result = provider.Execute(new DateTime(2016' 10' 12));
Magic Number,NBi.Testing.Core.Transformation.Transformer,FormatTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\FormatTransformerTest.cs,Execute_NotInitialized_InvalidOperation,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(delegate { provider.Execute(200); });
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformationFactoryTest.cs,Instantiate_ExistingWithParameter2_CorrectType,The following statement contains a magic number: Assert.That((result as TextToPadRight).Length.Execute()' Is.EqualTo(6));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformationFactoryTest.cs,Instantiate_ExistingWithParameters_CorrectType,The following statement contains a magic number: Assert.That((result as NumericToClip).Min.Execute()' Is.EqualTo(10));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformationFactoryTest.cs,Instantiate_ExistingWithParameters_CorrectType,The following statement contains a magic number: Assert.That((result as NumericToClip).Max.Execute()' Is.EqualTo(2000));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformationFactoryTest.cs,Instantiate_ExistingWithParametersAndWhitespaces_CorrectType,The following statement contains a magic number: Assert.That((result as NumericToClip).Min.Execute()' Is.EqualTo(10));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformationFactoryTest.cs,Instantiate_ExistingWithParametersAndWhitespaces_CorrectType,The following statement contains a magic number: Assert.That((result as NumericToClip).Max.Execute()' Is.EqualTo(2000));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformationFactoryTest.cs,Instantiate_ExistingWithParametersAndSpaces_CorrectType,The following statement contains a magic number: Assert.That((result as NumericToClip).Min.Execute()' Is.EqualTo(10));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformationFactoryTest.cs,Instantiate_ExistingWithParametersAndSpaces_CorrectType,The following statement contains a magic number: Assert.That((result as NumericToClip).Max.Execute()' Is.EqualTo(2000));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformationFactoryTest.cs,Instantiate_ExistingWithParametersAndVariables_CorrectType,The following statement contains a magic number: var variables = new Dictionary<string' ITestVariable>()              {                  { "avg"' new GlobalVariable(new LiteralScalarResolver<decimal>(50)) }'                  { "min"' new GlobalVariable(new LiteralScalarResolver<decimal>(10)) }'                  { "max"' new GlobalVariable(new LiteralScalarResolver<decimal>(2000)) }'              };
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformationFactoryTest.cs,Instantiate_ExistingWithParametersAndVariables_CorrectType,The following statement contains a magic number: var variables = new Dictionary<string' ITestVariable>()              {                  { "avg"' new GlobalVariable(new LiteralScalarResolver<decimal>(50)) }'                  { "min"' new GlobalVariable(new LiteralScalarResolver<decimal>(10)) }'                  { "max"' new GlobalVariable(new LiteralScalarResolver<decimal>(2000)) }'              };
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformationFactoryTest.cs,Instantiate_ExistingWithParametersAndVariables_CorrectType,The following statement contains a magic number: var variables = new Dictionary<string' ITestVariable>()              {                  { "avg"' new GlobalVariable(new LiteralScalarResolver<decimal>(50)) }'                  { "min"' new GlobalVariable(new LiteralScalarResolver<decimal>(10)) }'                  { "max"' new GlobalVariable(new LiteralScalarResolver<decimal>(2000)) }'              };
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformationFactoryTest.cs,Instantiate_ExistingWithParametersAndVariables_CorrectType,The following statement contains a magic number: Assert.That((result as NumericToClip).Min.Execute()' Is.EqualTo(10));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformationFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformationFactoryTest.cs,Instantiate_ExistingWithParametersAndVariables_CorrectType,The following statement contains a magic number: Assert.That((result as NumericToClip).Max.Execute()' Is.EqualTo(2000));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_TextToLastCharsWithVariable_Valid,The following statement contains a magic number: var variables = new Dictionary<string' ITestVariable>() { { "length"' new GlobalVariable(new LiteralScalarResolver<int>(6)) } };
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_NotInitialized_InvalidOperation,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(delegate { provider.Execute(200); });
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_DateTimeToAddTimeSpan_Valid,The following statement contains a magic number: var result = provider.Execute(new DateTime(2017' 12' 31' 21' 0' 0));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_DateTimeToAddTimeSpan_Valid,The following statement contains a magic number: var result = provider.Execute(new DateTime(2017' 12' 31' 21' 0' 0));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_DateTimeToAddTimeSpan_Valid,The following statement contains a magic number: var result = provider.Execute(new DateTime(2017' 12' 31' 21' 0' 0));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_DateTimeToAddTimeSpan_Valid,The following statement contains a magic number: var result = provider.Execute(new DateTime(2017' 12' 31' 21' 0' 0));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_DateTimeToAddTimeSpan_Valid,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new DateTime(2018' 01' 01' 13' 0' 0)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_DateTimeToAddTimeSpan_Valid,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new DateTime(2018' 01' 01' 13' 0' 0)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_DateTimeToAddTimeSpanWithoutTimes_Valid,The following statement contains a magic number: var result = provider.Execute(new DateTime(2017' 12' 31' 21' 0' 0));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_DateTimeToAddTimeSpanWithoutTimes_Valid,The following statement contains a magic number: var result = provider.Execute(new DateTime(2017' 12' 31' 21' 0' 0));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_DateTimeToAddTimeSpanWithoutTimes_Valid,The following statement contains a magic number: var result = provider.Execute(new DateTime(2017' 12' 31' 21' 0' 0));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_DateTimeToAddTimeSpanWithoutTimes_Valid,The following statement contains a magic number: var result = provider.Execute(new DateTime(2017' 12' 31' 21' 0' 0));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_DateTimeToAddTimeSpanWithoutTimes_Valid,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new DateTime(2018' 01' 01' 01' 0' 0)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_MultipleChains_Valid,The following statement contains a magic number: Assert.That(result1' Is.EqualTo(new DateTime(2019' 10' 01' 12' 15' 42)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_MultipleChains_Valid,The following statement contains a magic number: Assert.That(result1' Is.EqualTo(new DateTime(2019' 10' 01' 12' 15' 42)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_MultipleChains_Valid,The following statement contains a magic number: Assert.That(result1' Is.EqualTo(new DateTime(2019' 10' 01' 12' 15' 42)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_MultipleChains_Valid,The following statement contains a magic number: Assert.That(result1' Is.EqualTo(new DateTime(2019' 10' 01' 12' 15' 42)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_MultipleChains_Valid,The following statement contains a magic number: Assert.That(result1' Is.EqualTo(new DateTime(2019' 10' 01' 12' 15' 42)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_MultipleChains_Valid,The following statement contains a magic number: Assert.That(result2' Is.EqualTo(new DateTime(2019' 10' 01' 11' 45' 00)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_MultipleChains_Valid,The following statement contains a magic number: Assert.That(result2' Is.EqualTo(new DateTime(2019' 10' 01' 11' 45' 00)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_MultipleChains_Valid,The following statement contains a magic number: Assert.That(result2' Is.EqualTo(new DateTime(2019' 10' 01' 11' 45' 00)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NativeTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NativeTransformerTest.cs,Execute_MultipleChains_Valid,The following statement contains a magic number: Assert.That(result2' Is.EqualTo(new DateTime(2019' 10' 01' 11' 45' 00)));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_Numeric_Multiplied,The following statement contains a magic number: var result = provider.Execute(100);
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_Numeric_Multiplied,The following statement contains a magic number: Assert.That(result' Is.EqualTo(12.1));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_NumericDouble_Multiplied,The following statement contains a magic number: var result = provider.Execute(10);
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_NumericDouble_Multiplied,The following statement contains a magic number: Assert.That(result' Is.EqualTo(12.1));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_NumericDecimal_Multiplied,The following statement contains a magic number: var result = provider.Execute(10m);
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_NumericDecimal_Multiplied,The following statement contains a magic number: Assert.That(result' Is.EqualTo(12.1));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_MultipleString_Permuted,The following statement contains a magic number: Assert.That(provider.Execute(10)' Is.EqualTo(12.1));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_MultipleString_Permuted,The following statement contains a magic number: Assert.That(provider.Execute(10)' Is.EqualTo(12.1));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_MultipleString_Permuted,The following statement contains a magic number: Assert.That(provider.Execute(100)' Is.EqualTo(121));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_MultipleString_Permuted,The following statement contains a magic number: Assert.That(provider.Execute(100)' Is.EqualTo(121));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_MultipleString_Permuted,The following statement contains a magic number: Assert.That(provider.Execute(20)' Is.EqualTo(24.2));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_MultipleString_Permuted,The following statement contains a magic number: Assert.That(provider.Execute(20)' Is.EqualTo(24.2));
Magic Number,NBi.Testing.Core.Transformation.Transformer,NCalcTransformerTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\NCalcTransformerTest.cs,Execute_NotInitialized_InvalidOperation,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(delegate { provider.Execute(200); });
Magic Number,NBi.Testing.Core.Transformation.Transformer.Native,DateToPointInTimeTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\Native\DateToPointInTimeTest.cs,Execute_DateToAge_Min38,The following statement contains a magic number: var result = function.Evaluate(new DateTime(1978' month' day));
Magic Number,NBi.Testing.Core.Transformation.Transformer.Native,DateToPointInTimeTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\Native\DateToPointInTimeTest.cs,Execute_DateTimeToDate_Valid,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new DateTime(2018' 2' 1)));
Magic Number,NBi.Testing.Core.Transformation.Transformer.Native,DateToPointInTimeTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\Native\DateToPointInTimeTest.cs,Execute_DateTimeToDate_Valid,The following statement contains a magic number: Assert.That(result' Is.EqualTo(new DateTime(2018' 2' 1)));
Magic Number,NBi.Testing.Core.Transformation.Transformer.Native,DateToPointInTimeTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\Native\DateToPointInTimeTest.cs,Execute_NullToDate_Valid,The following statement contains a magic number: var function = new NullToDate(new LiteralScalarResolver<DateTime>(new DateTime(2001' 1' 1)));
Magic Number,NBi.Testing.Core.Transformation.Transformer.Native,TextTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\Native\TextTest.cs,Execute_Length_5,The following statement contains a magic number: Assert.That(result' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.Transformation.Transformer.Native,TextTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Transformation\Transformer\Native\TextTest.cs,Execute_TextToLastCharsWithVariable_Valid,The following statement contains a magic number: var args = new GlobalVariableScalarResolverArgs("length"' new Dictionary<string' ITestVariable>() { { "length"' new GlobalVariable(new LiteralScalarResolver<int>(6) )} });
Magic Number,NBi.Testing.Core.Variable,InstanceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Variable\InstanceFactoryTest.cs,Instantiate_DerivedFromMain_Success,The following statement contains a magic number: Assert.That(instances.Count' Is.EqualTo(5));
Magic Number,NBi.Testing.Core.Variable,InstanceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Variable\InstanceFactoryTest.cs,Instantiate_DerivedFromMain_Success,The following statement contains a magic number: Assert.That(instances.ElementAt(0).Variables.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.Variable,InstanceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Variable\InstanceFactoryTest.cs,Instantiate_DerivedFromMain_Success,The following statement contains a magic number: Assert.That(instances.ElementAt(0).Variables["second"].GetValue()' Is.EqualTo(new DateTime(2019' 1' 1)));
Magic Number,NBi.Testing.Core.Variable,InstanceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Variable\InstanceFactoryTest.cs,Instantiate_DerivedFromMain_Success,The following statement contains a magic number: Assert.That(instances.ElementAt(0).Variables["third"].GetValue()' Is.EqualTo(new DateTime(2019' 1' 8)));
Magic Number,NBi.Testing.Core.Variable,InstanceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Variable\InstanceFactoryTest.cs,Instantiate_DerivedFromMain_Success,The following statement contains a magic number: Assert.That(instances.ElementAt(0).Variables["third"].GetValue()' Is.EqualTo(new DateTime(2019' 1' 8)));
Magic Number,NBi.Testing.Core.Variable,InstanceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Variable\InstanceFactoryTest.cs,Instantiate_DerivedFromMain_Success,The following statement contains a magic number: Assert.That(instances.ElementAt(1).Variables.Count' Is.EqualTo(4));
Magic Number,NBi.Testing.Core.Variable,InstanceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Variable\InstanceFactoryTest.cs,Instantiate_DerivedFromMain_Success,The following statement contains a magic number: Assert.That(instances.ElementAt(1).Variables["second"].GetValue()' Is.EqualTo(new DateTime(2019' 1' 2)));
Magic Number,NBi.Testing.Core.Variable,InstanceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Variable\InstanceFactoryTest.cs,Instantiate_DerivedFromMain_Success,The following statement contains a magic number: Assert.That(instances.ElementAt(1).Variables["second"].GetValue()' Is.EqualTo(new DateTime(2019' 1' 2)));
Magic Number,NBi.Testing.Core.Variable,InstanceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Variable\InstanceFactoryTest.cs,Instantiate_DerivedFromMain_Success,The following statement contains a magic number: Assert.That(instances.ElementAt(1).Variables["third"].GetValue()' Is.EqualTo(new DateTime(2019' 1' 9)));
Magic Number,NBi.Testing.Core.Variable,InstanceFactoryTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Variable\InstanceFactoryTest.cs,Instantiate_DerivedFromMain_Success,The following statement contains a magic number: Assert.That(instances.ElementAt(1).Variables["third"].GetValue()' Is.EqualTo(new DateTime(2019' 1' 9)));
Magic Number,NBi.Testing.Core.Hierarchical.Xml,XPathStreamEngineTest,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Testing.Core\Hierarchical\Xml\XPathEngineTest.cs,Execute_Example_ColumnCount,The following statement contains a magic number: Assert.That((result.ElementAt(0) as IEnumerable<object>).Count' Is.EqualTo(3));
