Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NBi.Xml.Settings,SettingsXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Settings\SettingsXml.cs,GetDefault,Cyclomatic complexity of the method is 8
Complex Method,NBi.Xml.Settings,SettingsXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Settings\SettingsXml.cs,GetValuesFromConfig,Cyclomatic complexity of the method is 9
Long Statement,NBi.Xml.Decoration.Command,EtlRunXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Decoration\Command\EtlRunXml.cs,AssignReferences,The length of the statement  "            var properties = typeof(EtlBaseXml).GetProperties(BindingFlags.SetProperty | BindingFlags.Public | BindingFlags.Instance).Where(p => p.PropertyType == typeof(string)); " is 167.
Long Statement,NBi.Xml.Decoration.Command,EtlRunXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Decoration\Command\EtlRunXml.cs,AssignDefaultOrReference,The length of the statement  "                        throw new NullReferenceException(string.Format("A reference named '{0}' has been found' but no element 'etl' has been defined"' refName)); " is 138.
Long Statement,NBi.Xml,TestSuiteBuilder,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\TestSuiteBuilder.cs,BuildQueriesBased,The length of the statement  "                    test.Categories.AddRange(Path.GetFileNameWithoutExtension(query).Split(new string[] { " - " }' StringSplitOptions.RemoveEmptyEntries)); " is 135.
Long Statement,NBi.Xml,TestSuiteBuilder,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\TestSuiteBuilder.cs,BuildResultSetsBased,The length of the statement  "                    test.Categories.AddRange(Path.GetFileNameWithoutExtension(query).Split(new string[] { " - " }' StringSplitOptions.RemoveEmptyEntries)); " is 135.
Long Statement,NBi.Xml,TestXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\TestXml.cs,GetName,The length of the statement  "                    Console.WriteLine(string.Format("Unknown tag '{0}' in test name has stopped the replacement of tag in test name"' key)); " is 120.
Long Statement,NBi.Xml,XmlManager,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\XmlManager.cs,Read,The length of the statement  "                        xmlSchemaException = new XmlSchemaException("DTD is prohibited. To activate it' set the flag allow-dtd-processing to true in the config file associated to this test-suite"); " is 173.
Long Statement,NBi.Xml,XmlManager,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\XmlManager.cs,LoadSettings,The length of the statement  "                throw new ArgumentException(string.Format("The file '{0}' has been referenced for settings by the configuration file but this file hasn't been not found!"' settingsFilename)); " is 175.
Long Statement,NBi.Xml.Items,SharedDatasetXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Items\SharedDatasetXml.cs,InitializeFromReferences,The length of the statement  "                throw new NullReferenceException(string.Format("A reference named '{0}' has been found' but no element 'report' has been defined"' refName)); " is 141.
Long Statement,NBi.Xml.Items,EtlXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Items\EtlXml.cs,AssignReferences,The length of the statement  "            var properties = typeof(EtlBaseXml).GetProperties(BindingFlags.SetProperty | BindingFlags.Public | BindingFlags.Instance).Where(p => p.PropertyType == typeof(string)); " is 167.
Long Statement,NBi.Xml.Items,EtlXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Items\EtlXml.cs,AssignDefaultOrReference,The length of the statement  "                        throw new NullReferenceException(string.Format("A reference named '{0}' has been found' but no element 'etl' has been defined"' refName)); " is 138.
Long Statement,NBi.Xml.Items,ReportXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Items\ReportXml.cs,InitializeFromReferences,The length of the statement  "                throw new NullReferenceException(string.Format("A reference named '{0}' has been found' but no element 'report' has been defined"' refName)); " is 141.
Long Statement,NBi.Xml.Items.Format,CurrencyFormatXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Items\Format\CurrencyFormatXml.cs,InitializeFromReferences,The length of the statement  "                throw new NullReferenceException(string.Format("A reference named '{0}' has been defined' but it's currency-format is not defined"' value)); " is 140.
Long Statement,NBi.Xml.Items.Format,NumericFormatXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Items\Format\NumericFormatXml.cs,InitializeFromReferences,The length of the statement  "                throw new NullReferenceException(string.Format("A reference named '{0}' has been found' but no element 'numeric-format' has been defined"' value)); " is 147.
Long Statement,NBi.Xml.SerializationOption,ReadWriteAttributes,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\SerializationOption\ReadWriteAttributes.cs,AddToArrayAttributes,The length of the statement  "            var arrayItemAttrs = parent.GetCustomAttributes(typeof(XmlArrayItemAttribute)' false).Cast<XmlArrayItemAttribute>().ToList(); " is 125.
Long Statement,NBi.Xml.Settings,SettingsXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Settings\SettingsXml.cs,GetReference,The length of the statement  "                    throw new ArgumentOutOfRangeException(string.Format("No reference named '{0}' existing in test suite's settings."' name)); " is 122.
Long Statement,NBi.Xml.Settings,SettingsXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Settings\SettingsXml.cs,GetReference,The length of the statement  "                throw new InvalidOperationException(string.Format("All references'name must be unique in settings. The name '{0}' exists more than once."' name)); " is 146.
Long Statement,NBi.Xml.Settings,SettingsXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Settings\SettingsXml.cs,GetValuesFromConfig,The length of the statement  "                        throw new ArgumentOutOfRangeException(string.Format("No connectionString is provided through the config file. The default connection string stipulated in nbits file is trying to reference a connection string named '{0}'"' def.ConnectionString)); " is 245.
Long Statement,NBi.Xml.Settings,SettingsXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Settings\SettingsXml.cs,GetValuesFromConfig,The length of the statement  "                    var key = connectionStrings.AllKeys.SingleOrDefault(k => k == def.ConnectionString.Inline.Substring(1) || k == def.ConnectionString.Inline); " is 140.
Long Statement,NBi.Xml.Settings,SettingsXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Settings\SettingsXml.cs,GetValuesFromConfig,The length of the statement  "                        throw new ArgumentOutOfRangeException(string.Format("Some connectionStrings are provided through the config file but the default connection string is trying to reference a connection string named '{0}' which has not been found."' def.ConnectionString)); " is 253.
Long Statement,NBi.Xml.Settings,SettingsXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Settings\SettingsXml.cs,GetValuesFromConfig,The length of the statement  "                        throw new ArgumentOutOfRangeException(string.Format("No connectionString is provided through the config file. The connection string named '{0}' has not been found and cannot be created as a reference."' reference.ConnectionString)); " is 232.
Long Statement,NBi.Xml.Settings,SettingsXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Settings\SettingsXml.cs,GetValuesFromConfig,The length of the statement  "                    var key = connectionStrings.AllKeys.SingleOrDefault(k => k == reference.ConnectionString.Inline.Substring(1) || k == reference.ConnectionString.Inline); " is 152.
Long Statement,NBi.Xml.Settings,SettingsXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Settings\SettingsXml.cs,GetValuesFromConfig,The length of the statement  "                        throw new ArgumentOutOfRangeException(string.Format("Some connectionStrings are provided through the config file but a reference connection string is trying to reference a connection string named '{0}' which has not been found."' reference.ConnectionString)); " is 259.
Magic Number,NBi.Xml.SerializationOption,ReadOnlyAttributes,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\SerializationOption\ReadOnlyAttributes.cs,AdditionalBuild,The following statement contains a magic number: AddAsElement((NoRowsXml c) => c.InternalAliasesOld' "variable"' 2);
Missing Default,NBi.Xml.Settings,CsvProfileXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Settings\CsvProfileXml.cs,GetXmlSerialization,The following switch statement is missing a default case: switch (propertySelector.Body.NodeType)              {                  case ExpressionType.MemberAccess:                      // This is the default case where the                       // expression is simply member access.                      memberExpression                          = propertySelector.Body as MemberExpression;                      break;                    case ExpressionType.Convert:                      // This case deals with conversions that                       // may have occured due to typing.                      UnaryExpression unaryExpression                          = propertySelector.Body as UnaryExpression;                        if (unaryExpression != null)                      {                          memberExpression                              = unaryExpression.Operand as MemberExpression;                      }                      break;              }
Missing Default,NBi.Xml.Settings,SettingsXml,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.Xml\Settings\SettingsXml.cs,GetDefaultValue,The following switch statement is missing a default case: switch (propertySelector.Body.NodeType)              {                  case ExpressionType.MemberAccess:                      // This is the default case where the                       // expression is simply member access.                      memberExpression                          = propertySelector.Body as MemberExpression;                      break;                    case ExpressionType.Convert:                      // This case deals with conversions that                       // may have occured due to typing.                        if (propertySelector.Body is UnaryExpression unaryExpression)                      {                          memberExpression                              = unaryExpression.Operand as MemberExpression;                      }                      break;              }
