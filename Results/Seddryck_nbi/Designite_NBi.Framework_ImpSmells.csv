Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NBi.Framework.FailureMessage.Json,DataRowsMessageJson,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Json\DataRowsMessageJson.cs,BuildComparaison,The length of the statement  "            compareResult = compareResult ?? ResultResultSet.Build(new List<DataRow>()' new List<DataRow>()' new List<DataRow>()' new List<DataRow>()' new List<DataRow>()); " is 160.
Long Statement,NBi.Framework.FailureMessage.Json,DataRowsMessageJson,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Json\DataRowsMessageJson.cs,BuildComparaison,The length of the statement  "                    new Tuple<string' IEnumerable<DataRow>' TableHelperJson>("unexpected"' compareResult.Unexpected' new TableHelperJson())' " is 120.
Long Statement,NBi.Framework.FailureMessage.Json,DataRowsMessageJson,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Json\DataRowsMessageJson.cs,BuildComparaison,The length of the statement  "                    new Tuple<string' IEnumerable<DataRow>' TableHelperJson>("duplicated"' compareResult.Duplicated' new TableHelperJson())' " is 120.
Long Statement,NBi.Framework.FailureMessage.Json,DataRowsMessageJson,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Json\DataRowsMessageJson.cs,BuildComparaison,The length of the statement  "                    new Tuple<string' IEnumerable<DataRow>' TableHelperJson>("non-matching"' compareResult.NonMatchingValue.Rows' new CompareTableHelperJson())' " is 140.
Long Statement,NBi.Framework.FailureMessage.Json,TableHelperJson,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Json\TableHelperJson.cs,Execute,The length of the statement  "                    formatters.Add(new CellFormatterFactory().GetObject((ColumnType)(column.ExtendedProperties["NBi::Type"] ?? ColumnType.Text))); " is 126.
Long Statement,NBi.Framework.Markdown.MarkdownLogExtension,MarkdownBuilder,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Markdown\MarkdownLogExtension\TableExtended.cs,BuildCellMarkdownCode,The length of the statement  "                var cellText = cell.BuildCodeFormattedString(new TableCellRenderSpecificationExtended(columnSpec.Alignment' maximumWidth)); " is 123.
Long Statement,NBi.Framework.Markdown.MarkdownLogExtension,MarkdownBuilder,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Markdown\MarkdownLogExtension\TableExtended.cs,BuildCellMarkdownCode,The length of the statement  "                var truncatedCellText = cellText.Length > maximumWidth ? cellText.Substring(0' maximumWidth) : cellText.PadRight(maximumWidth); " is 127.
Long Statement,NBi.Framework.FailureMessage.Markdown,DataRowsMessageMarkdown,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Markdown\DataRowsMessageMarkdown.cs,BuildComparaison,The length of the statement  "            compareResult = compareResult ?? ResultResultSet.Build(new List<DataRow>()' new List<DataRow>()' new List<DataRow>()' new List<DataRow>()' new List<DataRow>()); " is 160.
Long Statement,NBi.Framework.FailureMessage.Markdown,DataRowsMessageMarkdown,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Markdown\DataRowsMessageMarkdown.cs,BuildComparaison,The length of the statement  "            analysis.Append(BuildNonEmptyTable(style' compareResult.Missing ?? new List<DataRow>()' "Missing"' samplers["analysis"])); " is 122.
Long Statement,NBi.Framework.FailureMessage.Markdown,DataRowsMessageMarkdown,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Markdown\DataRowsMessageMarkdown.cs,BuildComparaison,The length of the statement  "            analysis.Append(BuildNonEmptyTable(style' compareResult.Duplicated ?? new List<DataRow>()' "Duplicated"' samplers["analysis"])); " is 128.
Long Statement,NBi.Framework.FailureMessage.Markdown,DataRowsMessageMarkdown,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Markdown\DataRowsMessageMarkdown.cs,BuildComparaison,The length of the statement  "            analysis.Append(BuildCompareTable(style' compareResult.NonMatchingValue.Rows ?? new List<DataRow>()' "Non matching value"' samplers["analysis"])); " is 146.
Long Statement,NBi.Framework.FailureMessage.Markdown,DataRowsMessageMarkdown,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Markdown\DataRowsMessageMarkdown.cs,BuildTable,The length of the statement  "                var rowsSkipped = string.Format($"{sampler.GetExcludedRowCount()} (of {rows.Count()}) rows have been skipped for display purpose."); " is 132.
Long Statement,NBi.Framework.FailureMessage.Markdown.Helper,ColumnPropertiesFormatter,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Common\ColumnPropertiesFormatter.cs,GetText,The length of the statement  "            var value = string.Format("{0} ({1}){2}{3}{4}"' roleText' typeText' (toleranceText + roundingText).Length > 0 ? " " : ""' toleranceText' roundingText); " is 151.
Long Statement,NBi.Framework.FailureMessage.Markdown.Helper,ColumnPropertiesFormatter,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Common\ColumnPropertiesFormatter.cs,GetToleranceText,The length of the statement  "            if (tolerance != null && tolerance!=TextSingleMethodTolerance.None && tolerance!=DateTimeTolerance.None && tolerance!=NumericAbsoluteTolerance.None) " is 148.
Complex Conditional,NBi.Framework.FailureMessage.Markdown.Helper,ColumnPropertiesFormatter,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Common\ColumnPropertiesFormatter.cs,GetToleranceText,The conditional expression  "tolerance != null && tolerance!=TextSingleMethodTolerance.None && tolerance!=DateTimeTolerance.None && tolerance!=NumericAbsoluteTolerance.None"  is complex.
Magic Number,NBi.Framework,FailureReportProfile,C:\repos\Seddryck_nbi\NBi.Framework\FailureReportProfile.cs,GetHashCode,The following statement contains a magic number: return ExpectedSet.GetHashCode() ^ 139                           * ActualSet.GetHashCode() ^ 79                           * AnalysisSet.GetHashCode() ^ 59                           * MaxSampleItem.GetHashCode() ^ 17                           * ThresholdSampleItem.GetHashCode() ^ 11                          * Format.GetHashCode() ^ 7                          * Mode.GetHashCode() ^ 3;
Magic Number,NBi.Framework,FailureReportProfile,C:\repos\Seddryck_nbi\NBi.Framework\FailureReportProfile.cs,GetHashCode,The following statement contains a magic number: return ExpectedSet.GetHashCode() ^ 139                           * ActualSet.GetHashCode() ^ 79                           * AnalysisSet.GetHashCode() ^ 59                           * MaxSampleItem.GetHashCode() ^ 17                           * ThresholdSampleItem.GetHashCode() ^ 11                          * Format.GetHashCode() ^ 7                          * Mode.GetHashCode() ^ 3;
Magic Number,NBi.Framework,FailureReportProfile,C:\repos\Seddryck_nbi\NBi.Framework\FailureReportProfile.cs,GetHashCode,The following statement contains a magic number: return ExpectedSet.GetHashCode() ^ 139                           * ActualSet.GetHashCode() ^ 79                           * AnalysisSet.GetHashCode() ^ 59                           * MaxSampleItem.GetHashCode() ^ 17                           * ThresholdSampleItem.GetHashCode() ^ 11                          * Format.GetHashCode() ^ 7                          * Mode.GetHashCode() ^ 3;
Magic Number,NBi.Framework,FailureReportProfile,C:\repos\Seddryck_nbi\NBi.Framework\FailureReportProfile.cs,GetHashCode,The following statement contains a magic number: return ExpectedSet.GetHashCode() ^ 139                           * ActualSet.GetHashCode() ^ 79                           * AnalysisSet.GetHashCode() ^ 59                           * MaxSampleItem.GetHashCode() ^ 17                           * ThresholdSampleItem.GetHashCode() ^ 11                          * Format.GetHashCode() ^ 7                          * Mode.GetHashCode() ^ 3;
Magic Number,NBi.Framework,FailureReportProfile,C:\repos\Seddryck_nbi\NBi.Framework\FailureReportProfile.cs,GetHashCode,The following statement contains a magic number: return ExpectedSet.GetHashCode() ^ 139                           * ActualSet.GetHashCode() ^ 79                           * AnalysisSet.GetHashCode() ^ 59                           * MaxSampleItem.GetHashCode() ^ 17                           * ThresholdSampleItem.GetHashCode() ^ 11                          * Format.GetHashCode() ^ 7                          * Mode.GetHashCode() ^ 3;
Magic Number,NBi.Framework,FailureReportProfile,C:\repos\Seddryck_nbi\NBi.Framework\FailureReportProfile.cs,GetHashCode,The following statement contains a magic number: return ExpectedSet.GetHashCode() ^ 139                           * ActualSet.GetHashCode() ^ 79                           * AnalysisSet.GetHashCode() ^ 59                           * MaxSampleItem.GetHashCode() ^ 17                           * ThresholdSampleItem.GetHashCode() ^ 11                          * Format.GetHashCode() ^ 7                          * Mode.GetHashCode() ^ 3;
Magic Number,NBi.Framework,FailureReportProfile,C:\repos\Seddryck_nbi\NBi.Framework\FailureReportProfile.cs,GetHashCode,The following statement contains a magic number: return ExpectedSet.GetHashCode() ^ 139                           * ActualSet.GetHashCode() ^ 79                           * AnalysisSet.GetHashCode() ^ 59                           * MaxSampleItem.GetHashCode() ^ 17                           * ThresholdSampleItem.GetHashCode() ^ 11                          * Format.GetHashCode() ^ 7                          * Mode.GetHashCode() ^ 3;
Missing Default,NBi.Framework.FailureMessage.Markdown.Helper,ColumnPropertiesFormatter,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Common\ColumnPropertiesFormatter.cs,GetTypeText,The following switch statement is missing a default case: switch (type)              {                  case ColumnType.Numeric:                      return "Numeric";                  case ColumnType.Text:                      return "Text";                  case ColumnType.DateTime:                      return "DateTime";                  case ColumnType.Boolean:                      return "Boolean";              }
Missing Default,NBi.Framework.FailureMessage.Markdown.Helper,ColumnPropertiesFormatter,C:\repos\Seddryck_nbi\NBi.Framework\FailureMessage\Common\ColumnPropertiesFormatter.cs,GetRoundingStyleText,The following switch statement is missing a default case: switch (rounding.Style)              {                  case Rounding.RoundingStyle.None:                      return string.Empty;                  case Rounding.RoundingStyle.Floor:                      return "floor";                  case Rounding.RoundingStyle.Round:                      return "round";                  case Rounding.RoundingStyle.Ceiling:                      return "ceiling";              }
