Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NBi.Core.SqlServer.IntegrationService,PackageEvents,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\PackageEvents.cs,OnError,The method has 7 parameters. Parameters: source' errorCode' subComponent' description' helpFile' helpContext' idofInterfaceWithError
Long Statement,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,Run,The length of the statement  "            var connection = new SqlConnection(string.Format(@"Data Source={0};Initial Catalog=master;Integrated Security=SSPI;"' Etl.Server)); " is 131.
Long Statement,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,GetEnvironmentReference,The length of the statement  "                throw new ArgumentOutOfRangeException("Environment"' $"The environment named '{environmentName}' hasn't been found on the folder '{folder.Name}'. List of existing catalogs: {names}."); " is 184.
Long Statement,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,GetEnvironmentReference,The length of the statement  "                    throw new ArgumentOutOfRangeException("Environment"' $"The environment named '{environmentName}' from the project folder exists but is not referenced in the project '{project.Name}'. List of existing references: {names}."); " is 223.
Long Statement,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,GetEnvironmentReference,The length of the statement  "                    throw new ArgumentOutOfRangeException("Environment"' $"The environment named '{environmentName}' from the folder '{environmentFolder}' exists but is not referenced in the project '{project.Name}'. List of existing references: {names}."); " is 237.
Long Statement,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,GetPackage,The length of the statement  "                throw new ArgumentOutOfRangeException("Catalog"' String.Format("The catalog named '{0}' hasn't been found on the server '{1}'. List of existing catalogs: {2}."' Etl.Catalog' Etl.Server' names)); " is 194.
Long Statement,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,GetPackage,The length of the statement  "                throw new ArgumentOutOfRangeException("Folder"' String.Format("The folder named '{0}' hasn't been found on the catalog '{1}'. List of existing folders: {2}."' Etl.Folder' Etl.Catalog' names)); " is 192.
Long Statement,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,GetPackage,The length of the statement  "                throw new ArgumentOutOfRangeException("Project"' String.Format("The project named '{0}' hasn't been found on the catalog '{1}'. List of existing projects: {2}."' Etl.Project' Etl.Folder' names)); " is 195.
Long Statement,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,GetPackage,The length of the statement  "                throw new ArgumentOutOfRangeException("Name"' String.Format("The package named '{0}' hasn't been found on the project '{1}'. List of existing packages: {2}."' Etl.Name' Etl.Project' names)); " is 190.
Long Statement,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,Parameterize,The length of the statement  "                    var existingParameterList = String.Join("'' '"' existingParameters.Select(n => string.Format("{0} ({1})"' n.Name' n.ObjectType))); " is 130.
Long Statement,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,Parameterize,The length of the statement  "                    throw new ArgumentOutOfRangeException("overridenParameters"' string.Format("No parameter named '{0}' found in the package {1}' can't override its value for execution. List of existing parameters '{2}'"' param.Name' packageName' existingParameterList)); " is 252.
Long Statement,NBi.Core.SqlServer.IntegrationService,EtlDtsRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlDtsRunner.cs,Parameterize,The length of the statement  "                        throw new ArgumentOutOfRangeException(param.Name' $"No parameter or variable named '{param.Name}' found in the package {package.Name} or its parent' can't override its value for execution."); " is 191.
Long Statement,NBi.Core.SqlServer.Smo,SmoBatchRunnerFactory,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\Smo\SmoBatchRunnerFactory.cs,Get,The length of the statement  "                        String.Format("To execute a SQL Batch on a SQL Server' you must provide a connection-string that is associated to a '{0}'. The connection-string '{1}' is associated to a '{2}'" " is 176.
Magic Number,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,Run,The following statement contains a magic number: setValueParameters.Add(new PackageInfo.ExecutionValueParameterSet              {                  ObjectType = 50'                  ParameterName = "SYNCHRONIZED"'                  ParameterValue = 1              });
Magic Number,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,Run,The following statement contains a magic number: var result = etlRunResultFactory.Instantiate(                  execution.Status                  ' execution.Messages.Where(m => m.MessageType == 120 || m.MessageType == 110).Select(m => m.Message)                  ' execution.StartTime                  ' execution.EndTime);
Magic Number,NBi.Core.SqlServer.IntegrationService,EtlCatalogRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlCatalogRunner.cs,Run,The following statement contains a magic number: var result = etlRunResultFactory.Instantiate(                  execution.Status                  ' execution.Messages.Where(m => m.MessageType == 120 || m.MessageType == 110).Select(m => m.Message)                  ' execution.StartTime                  ' execution.EndTime);
Missing Default,NBi.Core.SqlServer.IntegrationService,EtlRunner,C:\repos\Seddryck_nbi\NBi.Core.SqlServer\IntegrationService\EtlRunner.cs,DefineValue,The following switch statement is missing a default case: switch (typeCode)              {                  case TypeCode.Boolean:                      return Boolean.Parse(value);                  case TypeCode.Byte:                      return Byte.Parse(value);                  case TypeCode.Char:                      return Char.Parse(value);                  case TypeCode.DBNull:                      return null;                  case TypeCode.DateTime:                      return DateTime.Parse(value);                  case TypeCode.Decimal:                      return Decimal.Parse(value);                  case TypeCode.Double:                      return Double.Parse(value);                  case TypeCode.Empty:                      return string.Empty;                  case TypeCode.Int16:                      return Int16.Parse(value);                  case TypeCode.Int32:                      return Int32.Parse(value);                  case TypeCode.Int64:                      return Int64.Parse(value);                  case TypeCode.Object:                      return value;                  case TypeCode.SByte:                      return SByte.Parse(value);                  case TypeCode.Single:                      return Single.Parse(value);                  case TypeCode.String:                      return value;                  case TypeCode.UInt16:                      return UInt16.Parse(value);                  case TypeCode.UInt32:                      return UInt32.Parse(value);                  case TypeCode.UInt64:                      return UInt64.Parse(value);              }
