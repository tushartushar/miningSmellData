Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NBi.GenbiL.Action.Case,GroupCaseAction,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Action\Case\GroupCaseAction.cs,Execute,Cyclomatic complexity of the method is 14
Complex Method,NBi.GenbiL.Action.Case,SeparateCaseAction,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Action\Case\SeparateCaseAction.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,NBi.GenbiL.Action.Suite,GenerateSuiteAction<T>,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Action\Suite\GenerateSuiteAction.cs,GetCases,Cyclomatic complexity of the method is 9
Long Parameter List,NBi.GenbiL.Action.Case,ReplaceCaseAction,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Action\Case\ReplaceCaseAction.cs,ReplaceCaseAction,The method has 5 parameters. Parameters: column' newValue' operator' values' negation
Long Parameter List,NBi.GenbiL.Action.Case,ReplaceCaseAction,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Action\Case\ReplaceCaseAction.cs,Replace,The method has 6 parameters. Parameters: testCases' columnName' newValue' operator' negation' values
Long Parameter List,NBi.GenbiL.Action.Suite,GenerateSuiteAction<T>,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Action\Suite\GenerateSuiteAction.cs,Build,The method has 5 parameters. Parameters: template' variables' dataTable' useGrouping' globalVariables
Long Parameter List,NBi.GenbiL.Action.Suite,GenerateSuiteAction<T>,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Action\Suite\GenerateSuiteAction.cs,Build,The method has 5 parameters. Parameters: templates' variables' dataTable' useGrouping' globalVariables
Long Statement,NBi.GenbiL.Action.Case,CopyCaseAction,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Action\Case\CopyCaseAction.cs,Execute,The length of the statement  "                throw new ArgumentException($"The set of test-cases named '{To}' already exists. The copy command cannot be performed on an existing test cases set"' nameof(To)); " is 162.
Long Statement,NBi.GenbiL.Action.Setting,DefaultAction,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Action\Setting\DefaultAction.cs,Execute,The length of the statement  "                throw new ArgumentException("Currently you must define the variable as ConnectionString. Other options are not supported!"); " is 124.
Long Statement,NBi.GenbiL.Action.Setting,ReferenceAction,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Action\Setting\ReferenceAction.cs,Execute,The length of the statement  "                throw new ArgumentException("Currently you must define the variable as ConnectionString. Other options are not supported!"); " is 124.
Long Statement,NBi.GenbiL.Action.Suite,GenerateSuiteAction<T>,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Action\Suite\GenerateSuiteAction.cs,Build,The length of the statement  "                throw new ArgumentException("No template was specified. You must at least define a template before generating a test suite."); " is 126.
Long Statement,NBi.GenbiL.Action.Consumable,AutoConsumableAction,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Action\Consumable\AutoConsumableAction.cs,Execute,The length of the statement  "                (new SetConsumableAction("now"' String.Format($"{Now.Year}-{Now.Month:00}-{Now.Day:00}T{Now.Hour:00}:{Now.Minute:00}:{Now.Second:00}"))).Execute(state); " is 152.
Long Statement,NBi.GenbiL.Templating,StringTemplateEngine,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Templating\StringTemplateEngine.cs,RenderTemplate,The length of the statement  "                if (!(values[i].Count() == 0 || (values[i].Count == 1 && (values[i][0].ToString() == "(none)" || values[i][0].ToString() == string.Empty)))) " is 140.
Complex Conditional,NBi.GenbiL.Templating,StringTemplateEngine,D:\research\architectureSmells\repos1\Seddryck_nbi\NBi.genbiL\Templating\StringTemplateEngine.cs,RenderTemplate,The conditional expression  "!(values[i].Count() == 0 || (values[i].Count == 1 && (values[i][0].ToString() == "(none)" || values[i][0].ToString() == string.Empty)))"  is complex.
