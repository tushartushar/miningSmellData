Implementation smell,Namespace,Class,File,Method,Description
Long Statement,QuandlCS.Helpers,TypeConverter,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Helpers\TypeConverter.cs,FrequencyFromString,The length of the statement  "		throw new ArgumentException (string.Format ("The frequency supplied \"{0}\" is not a valid QuandlCS frequency"' frequency)' "frequency"); " is 137.
Long Statement,QuandlCS.Helpers,TypeConverter,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Helpers\TypeConverter.cs,TransformationsFromString,The length of the statement  "		throw new ArgumentException (string.Format ("The transformation supplied \"{0}\" is not a valid QuandlCS transformation"' transformation)' "transformation"); " is 157.
Long Statement,QuandlCS.Helpers,TypeConverter,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Helpers\TypeConverter.cs,FileFormatFromString,The length of the statement  "		throw new ArgumentException (string.Format ("The format supplied \"{0}\" is not a valid QuandlCS format"' format)' "format"); " is 125.
Long Statement,QuandlCS.Requests,QuandlDownloadRequest,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Requests\QuandlDownloadRequest.cs,ToRequestString,The length of the statement  "		throw new InvalidOperationException ("Creating the request string is not possible whilst the request is in the current state"' ex); " is 131.
Long Statement,QuandlCS.Requests,QuandlDownloadRequest,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Requests\QuandlDownloadRequest.cs,CreateRequestString,The length of the statement  "	sb.Append (Constants.APIDatasetsAddress).Append ('/').Append (Datacode.ToDatacodeString ('/')).Append (TypeConverter.FileFormatToString (Format)).Append ('?'); " is 159.
Long Statement,QuandlCS.Requests,QuandlDownloadRequest,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Requests\QuandlDownloadRequest.cs,CreateRequestString,The length of the statement  "	sb.Append (Constants.APIFrequency).Append (TypeConverter.FrequencyToString (Frequency)).Append ('&').Append (Constants.APITransformation).Append (TypeConverter.TransformationsToString (Transformation)).Append ('&').Append (Constants.APISortOrder).Append (TypeConverter.SortOrdersToString (Sort)); " is 296.
Long Statement,QuandlCS.Requests,QuandlFavouritesRequest,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Requests\QuandlFavouritesRequest.cs,CreateRequestString,The length of the statement  "	sb.Append (Constants.APIFavouritesAddress).Append (TypeConverter.FileFormatToString (_format)).Append ('?').Append (Constants.APIAuthorization).Append (APIKey); " is 160.
Long Statement,QuandlCS.Requests,QuandlMetadataRequest,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Requests\QuandlMetadataRequest.cs,CreateRequestString,The length of the statement  "	sb.Append (Constants.APIDatasetsAddress).Append ('/').Append (_datacode.ToDatacodeString ('/')).Append (TypeConverter.FileFormatToString (_format)).Append ('?'); " is 161.
Long Statement,QuandlCS.Requests,QuandlMultisetRequest,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Requests\QuandlMultisetRequest.cs,CreateRequestString,The length of the statement  "	sb.Append (Constants.APIMultisetsAddress).Append (TypeConverter.FileFormatToString (_format)).Append ('?').Append (Constants.APIColumns).Append (_datacolumns.ToString ()).Append ('?'); " is 184.
Long Statement,QuandlCS.Requests,QuandlMultisetRequest,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Requests\QuandlMultisetRequest.cs,CreateRequestString,The length of the statement  "	sb.Append (Constants.APIFrequency).Append (TypeConverter.FrequencyToString (Frequency)).Append ('&').Append (Constants.APITransformation).Append (TypeConverter.TransformationsToString (Transformation)).Append ('&').Append (Constants.APISortOrder).Append (TypeConverter.SortOrdersToString (Sort)); " is 296.
Long Statement,QuandlCS.Types,Datacode,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Types\Datacode.cs,CheckValid,The length of the statement  "		if (((char.IsLetter (character) && char.IsUpper (character)) || (char.IsDigit (character)) || char.IsPunctuation (character)) == false) { " is 137.
Complex Conditional,QuandlCS.Types,Datacode,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Types\Datacode.cs,CheckValid,The conditional expression  "((char.IsLetter (character) && char.IsUpper (character)) || (char.IsDigit (character)) || char.IsPunctuation (character)) == false"  is complex.
Magic Number,QuandlCS.Types,Datacode,F:\newReposMay17\HubertJ_QuandlCS\QuandlCS\Types\Datacode.cs,Datacode,The following statement contains a magic number: if (datacodeParts.Length != 2) {  	throw new ArgumentException ("The datacode is not formated correctly and cannot be split"' "datacode");  }  
