Implementation smell,Namespace,Class,File,Method,Description
Complex Method,wScreenshot.Dialog,FolderBrowserDialog,C:\repos\benneeh_wScreenshot\wScreenshot\Dialog\OpenFolderDialog.cs,BrowseCallbackProc,Cyclomatic complexity of the method is 8
Complex Method,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,Cyclomatic complexity of the method is 28
Complex Method,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\TaskbarIcon.cs,OnMouseEvent,Cyclomatic complexity of the method is 34
Complex Method,Hardcodet.Wpf.TaskbarNotification,Util,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\Util.cs,IsMatch,Cyclomatic complexity of the method is 9
Complex Method,Hardcodet.Wpf.TaskbarNotification.Interop,WindowMessageSink,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\Interop\WindowMessageSink.cs,ProcessWindowMessage,Cyclomatic complexity of the method is 50
Long Parameter List,wScreenshot.Controls.AutoUpdate,UpdateEventArgs,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\UpdateEventArgs.cs,UpdateEventArgs,The method has 5 parameters.
Long Parameter List,wScreenshot.Hooks,MouseHookEventArgs,C:\repos\benneeh_wScreenshot\wScreenshot\Hooks\MouseHookEventArgs.cs,MouseHookEventArgs,The method has 6 parameters.
Long Parameter List,wScreenshot.Interop,IKnownFolderManager,C:\repos\benneeh_wScreenshot\wScreenshot\Interop\ShellComInterfaces.cs,Redirect,The method has 7 parameters.
Long Parameter List,wScreenshot.Native,Kernel32,C:\repos\benneeh_wScreenshot\wScreenshot\Native\Kernel32.cs,FormatMessage,The method has 7 parameters.
Long Parameter List,wScreenshot.Controls.Converter,ColorToDegreeConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\CoolColorPicker\Converter\ColorToDegreeConverter.cs,GetColorAtPoint,The method has 8 parameters.
Long Parameter List,Hardcodet.Wpf.TaskbarNotification.Interop,WinApi,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\Interop\WinApi.cs,CreateWindowEx,The method has 12 parameters.
Long Parameter List,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,Window_Loaded,The method has 8 parameters.
Long Statement,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,StartBuiltInUpdate,The length of the statement  "					cp.CompilerOptions = string.Format ("/target:winexe /lib:\"{0}\""' Path.Combine (Environment.GetFolderPath (Environment.SpecialFolder.ProgramFiles)' @"Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0")); " is 214.
Long Statement,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,StartBuiltInUpdate,The length of the statement  "					Process.Start (Results.PathToAssembly' "\"" + fi.FullName + "\" \"" + Assembly.GetExecutingAssembly ().Location + "\""); " is 120.
Long Statement,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,Updatethread,The length of the statement  "			e = new UpdateEventArgs (serverOrt' false' false' "Updateprogress failed. Don't know if an update is available."' serverVers); " is 126.
Long Statement,wScreenshot.Controls,ColorPicker,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorPicker.cs,OnSliderValueChanged,The length of the statement  "	if (e.OriginalSource == m_redColorSlider || e.OriginalSource == m_greenColorSlider || e.OriginalSource == m_blueColorSlider || e.OriginalSource == m_alphaColorSlider) { " is 168.
Long Statement,wScreenshot.Controls,ColorPicker,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorPicker.cs,UpdateColorSlidersBackground,The length of the statement  "		SetColorSliderBackground (m_alphaColorSlider' Color.FromArgb (0' red' green' blue)' Color.FromArgb (255' red' green' blue)); " is 124.
Long Statement,wScreenshot.Controls,ColorPicker,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorPicker.cs,GetRgbColor,The length of the statement  "	return Color.FromArgb ((byte)m_alphaColorSlider.Value' (byte)m_redColorSlider.Value' (byte)m_greenColorSlider.Value' (byte)m_blueColorSlider.Value); " is 148.
Long Statement,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,BuildColor,The length of the statement  "	return Color.FromArgb (255' (byte)((red + m) * 255 + 0.5)' (byte)((green + m) * 255 + 0.5)' (byte)((blue + m) * 255 + 0.5)); " is 124.
Long Statement,wScreenshot.Converter,BorderGapMaskConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\BorderGapMaskConverter.cs,Convert,The length of the statement  "	if (parameter == null || values == null || values.Length != 3 || values [0] == null || values [1] == null || values [2] == null || !doubleType.IsAssignableFrom (values [0].GetType ()) || !doubleType.IsAssignableFrom (values [1].GetType ()) || !doubleType.IsAssignableFrom (values [2].GetType ())) { " is 298.
Long Statement,wScreenshot.Dialog,FolderBrowserDialog,C:\repos\benneeh_wScreenshot\wScreenshot\Dialog\OpenFolderDialog.cs,BrowseCallbackProc,The length of the statement  "			User32.SendMessage (hwnd' Enum.FolderBrowserDialogMessage.EnableOk' IntPtr.Zero' validPath ? new IntPtr (1) : IntPtr.Zero); " is 123.
Long Statement,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,The length of the statement  "			//Canvas.SetTop(this.designerItem' Canvas.GetTop(this.designerItem) + (this.transformOrigin.Y * deltaVertical * (1 - Math.Cos(-this.angle)))); " is 142.
Long Statement,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,The length of the statement  "			//Canvas.SetLeft(this.designerItem' Canvas.GetLeft(this.designerItem) - deltaVertical * this.transformOrigin.Y * Math.Sin(-this.angle)); " is 136.
Long Statement,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,The length of the statement  "			annoyingRectangle.Y += deltaVertical * Math.Cos (-this.angle) + (this.transformOrigin.Y * deltaVertical * (1 - Math.Cos (-this.angle))); " is 136.
Long Statement,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,The length of the statement  "			annoyingRectangle.X += deltaVertical * Math.Sin (-this.angle) - (this.transformOrigin.Y * deltaVertical * Math.Sin (-this.angle)); " is 130.
Long Statement,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,The length of the statement  "			//Canvas.SetTop(this.designerItem' Canvas.GetTop(this.designerItem) + deltaVertical * Math.Cos(-this.angle) + (this.transformOrigin.Y * deltaVertical * (1 - Math.Cos(-this.angle)))); " is 182.
Long Statement,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,The length of the statement  "			//Canvas.SetLeft(this.designerItem' Canvas.GetLeft(this.designerItem) + deltaVertical * Math.Sin(-this.angle) - (this.transformOrigin.Y * deltaVertical * Math.Sin(-this.angle))); " is 178.
Long Statement,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,The length of the statement  "			annoyingRectangle.Y += deltaHorizontal * Math.Sin (this.angle) - this.transformOrigin.X * deltaHorizontal * Math.Sin (this.angle); " is 130.
Long Statement,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,The length of the statement  "			annoyingRectangle.X += deltaHorizontal * Math.Cos (this.angle) + (this.transformOrigin.X * deltaHorizontal * (1 - Math.Cos (this.angle))); " is 138.
Long Statement,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,The length of the statement  "			//Canvas.SetTop(this.designerItem' Canvas.GetTop(this.designerItem) + deltaHorizontal * Math.Sin(this.angle) - this.transformOrigin.X * deltaHorizontal * Math.Sin(this.angle)); " is 176.
Long Statement,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,The length of the statement  "			//Canvas.SetLeft(this.designerItem' Canvas.GetLeft(this.designerItem) + deltaHorizontal * Math.Cos(this.angle) + (this.transformOrigin.X * deltaHorizontal * (1 - Math.Cos(this.angle)))); " is 186.
Long Statement,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,The length of the statement  "			//Canvas.SetTop(this.designerItem' Canvas.GetTop(this.designerItem) - this.transformOrigin.X * deltaHorizontal * Math.Sin(this.angle)); " is 135.
Long Statement,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragDelta,The length of the statement  "			//Canvas.SetLeft(this.designerItem' Canvas.GetLeft(this.designerItem) + (deltaHorizontal * this.transformOrigin.X * (1 - Math.Cos(this.angle)))); " is 145.
Long Statement,wScreenshot.Helper.CanvasResizeTool,RotateThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\RotateThumb.cs,RotateThumb_DragStarted,The length of the statement  "			_centerPoint = _designerItem.TranslatePoint (new Point ((double)annoyingRectangle.Width * _designerItem.RenderTransformOrigin.X' (double)annoyingRectangle.Height * _designerItem.RenderTransformOrigin.Y)' _canvas); " is 213.
Long Statement,wScreenshot.Hooks,KeyboardHook,C:\repos\benneeh_wScreenshot\wScreenshot\Hooks\KeyboardHook.cs,HookProc,The length of the statement  "			if ((wParam == (int)Win32.WindowsMessages.WM_KEYDOWN || wParam == (int)Win32.WindowsMessages.WM_SYSKEYDOWN) && (KeyDown != null)) { " is 131.
Long Statement,wScreenshot.Hooks,KeyboardHook,C:\repos\benneeh_wScreenshot\wScreenshot\Hooks\KeyboardHook.cs,HookProc,The length of the statement  "			else if ((wParam == (int)Win32.WindowsMessages.WM_KEYUP || wParam == (int)Win32.WindowsMessages.WM_SYSKEYUP) && (KeyUp != null)) { " is 130.
Long Statement,wScreenshot.Hooks,MouseHook,C:\repos\benneeh_wScreenshot\wScreenshot\Hooks\MouseHook.cs,HookProc,The length of the statement  "		if (MouseDown != null && (wParam == (int)Win32.MouseMessages.WM_LBUTTONDOWN || wParam == (int)Win32.MouseMessages.WM_MBUTTONDOWN || wParam == (int)Win32.MouseMessages.WM_RBUTTONDOWN)) { " is 185.
Long Statement,wScreenshot.Hooks,MouseHook,C:\repos\benneeh_wScreenshot\wScreenshot\Hooks\MouseHook.cs,HookProc,The length of the statement  "		else if (MouseUp != null && (wParam == (int)Win32.MouseMessages.WM_LBUTTONUP || wParam == (int)Win32.MouseMessages.WM_MBUTTONUP || wParam == (int)Win32.MouseMessages.WM_RBUTTONUP)) { " is 182.
Long Statement,wScreenshot.Hooks,MouseHook,C:\repos\benneeh_wScreenshot\wScreenshot\Hooks\MouseHook.cs,HookProc,The length of the statement  "		else if (MouseWheel != null && (wParam == (int)Win32.MouseMessages.WM_MOUSEWHEEL || wParam == (int)Win32.MouseMessages.WM_MOUSEHWHEEL)) { " is 137.
Long Statement,wScreenshot.Interop,Win32Resources,C:\repos\benneeh_wScreenshot\wScreenshot\Interop\Win32Resources.cs,FormatString,The length of the statement  "	Enum.FormatMessageFlags flags = Enum.FormatMessageFlags.FORMAT_MESSAGE_ALLOCATE_BUFFER | Enum.FormatMessageFlags.FORMAT_MESSAGE_ARGUMENT_ARRAY | Enum.FormatMessageFlags.FORMAT_MESSAGE_FROM_STRING; " is 196.
Long Statement,wScreenshot.Controls.Converter,ColorToDegreeConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\CoolColorPicker\Converter\ColorToDegreeConverter.cs,dist,The length of the statement  "	if (((px.Y < po.Y) && (pf.Y > po.Y)) || ((px.Y > po.Y) && (pf.Y < po.Y)) || ((px.Y == po.Y) && (px.X < po.X) && (pf.X > po.X)) || ((px.Y == po.Y) && (px.X > po.X) && (pf.X < po.X))) { " is 183.
Long Statement,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\TaskbarIcon.cs,OnMouseEvent,The length of the statement  "		delayedTimerAction = () => LeftClickCommand.ExecuteIfEnabled (LeftClickCommandParameter' LeftClickCommandTarget ?? this); " is 121.
Long Statement,wScreenshot.ScreenshotModule,WindowSelectorTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\WindowSelectorTool.xaml.cs,m_MouseDown,The length of the statement  "		currentBorder.Background = new LinearGradientBrush (Color.FromArgb (20' 255' 0' 0)' Color.FromArgb (20' 255' 0' 0)' 90.0); " is 122.
Long Statement,wScreenshot.ScreenshotModule,WindowSelectorTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\WindowSelectorTool.xaml.cs,m_MouseUp,The length of the statement  "		borderCollectionSource.ToList ().ForEach (x => r.Union (new Rect ((double)x.X' (double)x.Y' (double)x.Width' (double)x.Height))); " is 129.
Long Statement,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseDown,The length of the statement  "	_currentBorder.Background = new LinearGradientBrush (Color.FromArgb (80' 255' 0' 0)' Color.FromArgb (80' 255' 0' 0)' 90.0); " is 123.
Long Statement,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseUp,The length of the statement  "	_currentBorder.Background = new LinearGradientBrush (Color.FromArgb (110' 255' 0' 0)' Color.FromArgb (110' 255' 0' 0)' 90.0); " is 125.
Long Statement,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseMove,The length of the statement  "		SetBounds (Math.Min (e.X' (int)Down.X)' Math.Min (e.Y' (int)Down.Y)' Math.Abs (e.X - (int)Down.X)' Math.Abs (e.Y - (int)Down.Y)); " is 129.
Long Statement,wScreenshot.View,MainWindow,C:\repos\benneeh_wScreenshot\wScreenshot\View\MainWindow.xaml.cs,PrivateTest,The length of the statement  "			if (t == typeof(byte) || t == typeof(sbyte) || t == typeof(ushort) || t == typeof(short) || t == typeof(uint) || t == typeof(int) || t == typeof(float) || t == typeof(double)) { " is 177.
Complex Conditional,wScreenshot.Controls,ColorPicker,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorPicker.cs,OnSliderValueChanged,The conditional expression  "e.OriginalSource == m_redColorSlider || e.OriginalSource == m_greenColorSlider || e.OriginalSource == m_blueColorSlider || e.OriginalSource == m_alphaColorSlider"  is complex.
Complex Conditional,wScreenshot.Converter,BorderGapMaskConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\BorderGapMaskConverter.cs,Convert,The conditional expression  "parameter == null || values == null || values.Length != 3 || values [0] == null || values [1] == null || values [2] == null || !doubleType.IsAssignableFrom (values [0].GetType ()) || !doubleType.IsAssignableFrom (values [1].GetType ()) || !doubleType.IsAssignableFrom (values [2].GetType ())"  is complex.
Complex Conditional,wScreenshot.Hooks,MouseHook,C:\repos\benneeh_wScreenshot\wScreenshot\Hooks\MouseHook.cs,HookProc,The conditional expression  "MouseDown != null && (wParam == (int)Win32.MouseMessages.WM_LBUTTONDOWN || wParam == (int)Win32.MouseMessages.WM_MBUTTONDOWN || wParam == (int)Win32.MouseMessages.WM_RBUTTONDOWN)"  is complex.
Complex Conditional,wScreenshot.Hooks,MouseHook,C:\repos\benneeh_wScreenshot\wScreenshot\Hooks\MouseHook.cs,HookProc,The conditional expression  "MouseUp != null && (wParam == (int)Win32.MouseMessages.WM_LBUTTONUP || wParam == (int)Win32.MouseMessages.WM_MBUTTONUP || wParam == (int)Win32.MouseMessages.WM_RBUTTONUP)"  is complex.
Complex Conditional,wScreenshot.Controls.Converter,ColorToDegreeConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\CoolColorPicker\Converter\ColorToDegreeConverter.cs,dist,The conditional expression  "((px.Y < po.Y) && (pf.Y > po.Y)) || ((px.Y > po.Y) && (pf.Y < po.Y)) || ((px.Y == po.Y) && (px.X < po.X) && (pf.X > po.X)) || ((px.Y == po.Y) && (px.X > po.X) && (pf.X < po.X))"  is complex.
Complex Conditional,wScreenshot.View,MainWindow,C:\repos\benneeh_wScreenshot\wScreenshot\View\MainWindow.xaml.cs,PrivateTest,The conditional expression  "t == typeof(byte) || t == typeof(sbyte) || t == typeof(ushort) || t == typeof(short) || t == typeof(uint) || t == typeof(int) || t == typeof(float) || t == typeof(double)"  is complex.
Empty Catch Block,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,AutoUpdate,The method has an empty catch block.
Empty Catch Block,wScreenshot.Converter,StringToColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\StringToColorConverter.cs,ConvertBack,The method has an empty catch block.
Magic Number,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,AutoUpdate,The following statement contains a magic number: for (int i = 0; File.Exists ("bRenamer.exe"); i++) {  	try {  		File.Delete ("bRenamer.exe");  		Thread.Sleep (50);  		if (i == 20) {  			if (MessageBox.Show ("Couldn't remove bRenamer.exe' retry?"' "Error:"' MessageBoxButton.YesNo' MessageBoxImage.Asterisk' MessageBoxResult.OK) == MessageBoxResult.OK) {  				i = 0;  			}  			else {  				break;  			}  		}  	}  	catch (Exception) {  	}  }  
Magic Number,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,AutoUpdate,The following statement contains a magic number: for (int i = 0; File.Exists ("bRenamer.exe"); i++) {  	try {  		File.Delete ("bRenamer.exe");  		Thread.Sleep (50);  		if (i == 20) {  			if (MessageBox.Show ("Couldn't remove bRenamer.exe' retry?"' "Error:"' MessageBoxButton.YesNo' MessageBoxImage.Asterisk' MessageBoxResult.OK) == MessageBoxResult.OK) {  				i = 0;  			}  			else {  				break;  			}  		}  	}  	catch (Exception) {  	}  }  
Magic Number,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,AutoUpdate,The following statement contains a magic number: try {  	File.Delete ("bRenamer.exe");  	Thread.Sleep (50);  	if (i == 20) {  		if (MessageBox.Show ("Couldn't remove bRenamer.exe' retry?"' "Error:"' MessageBoxButton.YesNo' MessageBoxImage.Asterisk' MessageBoxResult.OK) == MessageBoxResult.OK) {  			i = 0;  		}  		else {  			break;  		}  	}  }  catch (Exception) {  }  
Magic Number,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,AutoUpdate,The following statement contains a magic number: try {  	File.Delete ("bRenamer.exe");  	Thread.Sleep (50);  	if (i == 20) {  		if (MessageBox.Show ("Couldn't remove bRenamer.exe' retry?"' "Error:"' MessageBoxButton.YesNo' MessageBoxImage.Asterisk' MessageBoxResult.OK) == MessageBoxResult.OK) {  			i = 0;  		}  		else {  			break;  		}  	}  }  catch (Exception) {  }  
Magic Number,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,AutoUpdate,The following statement contains a magic number: Thread.Sleep (50);  
Magic Number,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,AutoUpdate,The following statement contains a magic number: if (i == 20) {  	if (MessageBox.Show ("Couldn't remove bRenamer.exe' retry?"' "Error:"' MessageBoxButton.YesNo' MessageBoxImage.Asterisk' MessageBoxResult.OK) == MessageBoxResult.OK) {  		i = 0;  	}  	else {  		break;  	}  }  
Magic Number,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,Updatethread,The following statement contains a magic number: try {  	var updater = new Socket (AddressFamily.InterNetwork' SocketType.Stream' ProtocolType.Tcp);  	updater.Connect (host' port);  	var ns = new NetworkStream (updater);  	//hier der stream für das socket  	var bw = new BinaryWriter (ns);  	//klasse zum binären schreiben in einen stream  	var br = new BinaryReader (ns);  	//   "    "     "    lesen     aus einem  "  	var e = new UpdateEventArgs (null' false' false' null' null);  	if (updater.Connected) {  		bw.Write (3 + UserObjects.Count);  		//anzahl an zusatzinformationen + 3 die man sowieso hat  		bw.Write ("ProgrammName");  		// name der 1. info  		bw.Write (ProgramName);  		//daten der 1. info  		bw.Write ("Version");  		// name der 2. info .....  		bw.Write (Version);  		bw.Write ("ComputerName");  		bw.Write (ComputerName);  		bw.Flush ();  		foreach (string k in UserObjects.Keys) {  			bw.Write (k);  			bw.Write (UserObjects [k]);  			bw.Flush ();  		}  		serverVers = br.ReadString ();  		//version lesen  		serverOrt = br.ReadString ();  		//url zum downloaden lesen  		bw.Close ();  		updater.Close ();  		//schließen  		if (serverVers != Version)//...  		 {  			e = new UpdateEventArgs (serverOrt' true' true' "Update available."' serverVers);  		}  		else {  			e = new UpdateEventArgs (serverOrt' true' false' "No update available."' serverVers);  		}  	}  	else {  		e = new UpdateEventArgs (serverOrt' false' false' "Updateprogress failed. Don't know if an update is available."' serverVers);  	}  	if (UpdateAvialable != null) {  		UpdateAvialable (this' e);  	}  	else {  		StartBuiltInUpdate (e);  	}  }  catch (Exception e) {  	if (UpdateAvialable != null) {  		UpdateAvialable (this' new UpdateEventArgs (serverOrt' false' false' e.ToString ()' serverVers));  	}  	else {  		StartBuiltInUpdate (new UpdateEventArgs (serverOrt' false' false' e.ToString ()' serverVers));  	}  }  
Magic Number,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,Updatethread,The following statement contains a magic number: if (updater.Connected) {  	bw.Write (3 + UserObjects.Count);  	//anzahl an zusatzinformationen + 3 die man sowieso hat  	bw.Write ("ProgrammName");  	// name der 1. info  	bw.Write (ProgramName);  	//daten der 1. info  	bw.Write ("Version");  	// name der 2. info .....  	bw.Write (Version);  	bw.Write ("ComputerName");  	bw.Write (ComputerName);  	bw.Flush ();  	foreach (string k in UserObjects.Keys) {  		bw.Write (k);  		bw.Write (UserObjects [k]);  		bw.Flush ();  	}  	serverVers = br.ReadString ();  	//version lesen  	serverOrt = br.ReadString ();  	//url zum downloaden lesen  	bw.Close ();  	updater.Close ();  	//schließen  	if (serverVers != Version)//...  	 {  		e = new UpdateEventArgs (serverOrt' true' true' "Update available."' serverVers);  	}  	else {  		e = new UpdateEventArgs (serverOrt' true' false' "No update available."' serverVers);  	}  }  else {  	e = new UpdateEventArgs (serverOrt' false' false' "Updateprogress failed. Don't know if an update is available."' serverVers);  }  
Magic Number,wScreenshot.Controls.AutoUpdate,AutoUpdate,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\AutoUpdate\AutoUpdate.xaml.cs,Updatethread,The following statement contains a magic number: bw.Write (3 + UserObjects.Count);  
Magic Number,wScreenshot.Controls,ColorPicker,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorPicker.cs,UpdateColorSlidersBackground,The following statement contains a magic number: if (FixedSliderColor) {  	SetColorSliderBackground (m_redColorSlider' Colors.Red' Colors.Red);  	SetColorSliderBackground (m_greenColorSlider' Colors.Green' Colors.Green);  	SetColorSliderBackground (m_blueColorSlider' Colors.Blue' Colors.Blue);  	SetColorSliderBackground (m_alphaColorSlider' Colors.Transparent' Colors.White);  }  else {  	byte red = SelectedColor.R;  	byte green = SelectedColor.G;  	byte blue = SelectedColor.B;  	SetColorSliderBackground (m_redColorSlider' Color.FromRgb (0' green' blue)' Color.FromRgb (255' green' blue));  	SetColorSliderBackground (m_greenColorSlider' Color.FromRgb (red' 0' blue)' Color.FromRgb (red' 255' blue));  	SetColorSliderBackground (m_blueColorSlider' Color.FromRgb (red' green' 0)' Color.FromRgb (red' green' 255));  	SetColorSliderBackground (m_alphaColorSlider' Color.FromArgb (0' red' green' blue)' Color.FromArgb (255' red' green' blue));  }  
Magic Number,wScreenshot.Controls,ColorPicker,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorPicker.cs,UpdateColorSlidersBackground,The following statement contains a magic number: if (FixedSliderColor) {  	SetColorSliderBackground (m_redColorSlider' Colors.Red' Colors.Red);  	SetColorSliderBackground (m_greenColorSlider' Colors.Green' Colors.Green);  	SetColorSliderBackground (m_blueColorSlider' Colors.Blue' Colors.Blue);  	SetColorSliderBackground (m_alphaColorSlider' Colors.Transparent' Colors.White);  }  else {  	byte red = SelectedColor.R;  	byte green = SelectedColor.G;  	byte blue = SelectedColor.B;  	SetColorSliderBackground (m_redColorSlider' Color.FromRgb (0' green' blue)' Color.FromRgb (255' green' blue));  	SetColorSliderBackground (m_greenColorSlider' Color.FromRgb (red' 0' blue)' Color.FromRgb (red' 255' blue));  	SetColorSliderBackground (m_blueColorSlider' Color.FromRgb (red' green' 0)' Color.FromRgb (red' green' 255));  	SetColorSliderBackground (m_alphaColorSlider' Color.FromArgb (0' red' green' blue)' Color.FromArgb (255' red' green' blue));  }  
Magic Number,wScreenshot.Controls,ColorPicker,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorPicker.cs,UpdateColorSlidersBackground,The following statement contains a magic number: if (FixedSliderColor) {  	SetColorSliderBackground (m_redColorSlider' Colors.Red' Colors.Red);  	SetColorSliderBackground (m_greenColorSlider' Colors.Green' Colors.Green);  	SetColorSliderBackground (m_blueColorSlider' Colors.Blue' Colors.Blue);  	SetColorSliderBackground (m_alphaColorSlider' Colors.Transparent' Colors.White);  }  else {  	byte red = SelectedColor.R;  	byte green = SelectedColor.G;  	byte blue = SelectedColor.B;  	SetColorSliderBackground (m_redColorSlider' Color.FromRgb (0' green' blue)' Color.FromRgb (255' green' blue));  	SetColorSliderBackground (m_greenColorSlider' Color.FromRgb (red' 0' blue)' Color.FromRgb (red' 255' blue));  	SetColorSliderBackground (m_blueColorSlider' Color.FromRgb (red' green' 0)' Color.FromRgb (red' green' 255));  	SetColorSliderBackground (m_alphaColorSlider' Color.FromArgb (0' red' green' blue)' Color.FromArgb (255' red' green' blue));  }  
Magic Number,wScreenshot.Controls,ColorPicker,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorPicker.cs,UpdateColorSlidersBackground,The following statement contains a magic number: if (FixedSliderColor) {  	SetColorSliderBackground (m_redColorSlider' Colors.Red' Colors.Red);  	SetColorSliderBackground (m_greenColorSlider' Colors.Green' Colors.Green);  	SetColorSliderBackground (m_blueColorSlider' Colors.Blue' Colors.Blue);  	SetColorSliderBackground (m_alphaColorSlider' Colors.Transparent' Colors.White);  }  else {  	byte red = SelectedColor.R;  	byte green = SelectedColor.G;  	byte blue = SelectedColor.B;  	SetColorSliderBackground (m_redColorSlider' Color.FromRgb (0' green' blue)' Color.FromRgb (255' green' blue));  	SetColorSliderBackground (m_greenColorSlider' Color.FromRgb (red' 0' blue)' Color.FromRgb (red' 255' blue));  	SetColorSliderBackground (m_blueColorSlider' Color.FromRgb (red' green' 0)' Color.FromRgb (red' green' 255));  	SetColorSliderBackground (m_alphaColorSlider' Color.FromArgb (0' red' green' blue)' Color.FromArgb (255' red' green' blue));  }  
Magic Number,wScreenshot.Controls,ColorPicker,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorPicker.cs,UpdateColorSlidersBackground,The following statement contains a magic number: SetColorSliderBackground (m_redColorSlider' Color.FromRgb (0' green' blue)' Color.FromRgb (255' green' blue));  
Magic Number,wScreenshot.Controls,ColorPicker,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorPicker.cs,UpdateColorSlidersBackground,The following statement contains a magic number: SetColorSliderBackground (m_greenColorSlider' Color.FromRgb (red' 0' blue)' Color.FromRgb (red' 255' blue));  
Magic Number,wScreenshot.Controls,ColorPicker,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorPicker.cs,UpdateColorSlidersBackground,The following statement contains a magic number: SetColorSliderBackground (m_blueColorSlider' Color.FromRgb (red' green' 0)' Color.FromRgb (red' green' 255));  
Magic Number,wScreenshot.Controls,ColorPicker,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorPicker.cs,UpdateColorSlidersBackground,The following statement contains a magic number: SetColorSliderBackground (m_alphaColorSlider' Color.FromArgb (0' red' green' blue)' Color.FromArgb (255' red' green' blue));  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,BuildColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)((red + m) * 255 + 0.5)' (byte)((green + m) * 255 + 0.5)' (byte)((blue + m) * 255 + 0.5));  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,BuildColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)((red + m) * 255 + 0.5)' (byte)((green + m) * 255 + 0.5)' (byte)((blue + m) * 255 + 0.5));  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,BuildColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)((red + m) * 255 + 0.5)' (byte)((green + m) * 255 + 0.5)' (byte)((blue + m) * 255 + 0.5));  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,BuildColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)((red + m) * 255 + 0.5)' (byte)((green + m) * 255 + 0.5)' (byte)((blue + m) * 255 + 0.5));  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,BuildColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)((red + m) * 255 + 0.5)' (byte)((green + m) * 255 + 0.5)' (byte)((blue + m) * 255 + 0.5));  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,BuildColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)((red + m) * 255 + 0.5)' (byte)((green + m) * 255 + 0.5)' (byte)((blue + m) * 255 + 0.5));  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,BuildColor,The following statement contains a magic number: return Color.FromArgb (255' (byte)((red + m) * 255 + 0.5)' (byte)((green + m) * 255 + 0.5)' (byte)((blue + m) * 255 + 0.5));  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertRgbToHsv,The following statement contains a magic number: if (saturation == 0)  	hue = 0;  else {  	if (red == max)  		hue = (green - blue) / delta;  	else if (green == max)  		hue = 2 + (blue - red) / delta;  	else  		// blue == max  		hue = 4 + (red - green) / delta;  }  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertRgbToHsv,The following statement contains a magic number: if (saturation == 0)  	hue = 0;  else {  	if (red == max)  		hue = (green - blue) / delta;  	else if (green == max)  		hue = 2 + (blue - red) / delta;  	else  		// blue == max  		hue = 4 + (red - green) / delta;  }  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertRgbToHsv,The following statement contains a magic number: if (red == max)  	hue = (green - blue) / delta;  else if (green == max)  	hue = 2 + (blue - red) / delta;  else  	// blue == max  	hue = 4 + (red - green) / delta;  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertRgbToHsv,The following statement contains a magic number: if (red == max)  	hue = (green - blue) / delta;  else if (green == max)  	hue = 2 + (blue - red) / delta;  else  	// blue == max  	hue = 4 + (red - green) / delta;  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertRgbToHsv,The following statement contains a magic number: if (green == max)  	hue = 2 + (blue - red) / delta;  else  	// blue == max  	hue = 4 + (red - green) / delta;  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertRgbToHsv,The following statement contains a magic number: if (green == max)  	hue = 2 + (blue - red) / delta;  else  	// blue == max  	hue = 4 + (red - green) / delta;  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertRgbToHsv,The following statement contains a magic number: hue = 2 + (blue - red) / delta;  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertRgbToHsv,The following statement contains a magic number: hue = 4 + (red - green) / delta;  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertRgbToHsv,The following statement contains a magic number: hue *= 60;  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertRgbToHsv,The following statement contains a magic number: if (hue < 0)  	hue += 360;  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertRgbToHsv,The following statement contains a magic number: hue += 360;  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertHsvToRgb,The following statement contains a magic number: if (hue == 360)  	hue = 0;  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertHsvToRgb,The following statement contains a magic number: switch ((int)hueTag) {  case 0:  	return BuildColor (chroma' x' 0' m);  case 1:  	return BuildColor (x' chroma' 0' m);  case 2:  	return BuildColor (0' chroma' x' m);  case 3:  	return BuildColor (0' x' chroma' m);  case 4:  	return BuildColor (x' 0' chroma' m);  default:  	return BuildColor (chroma' 0' x' m);  }  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertHsvToRgb,The following statement contains a magic number: switch ((int)hueTag) {  case 0:  	return BuildColor (chroma' x' 0' m);  case 1:  	return BuildColor (x' chroma' 0' m);  case 2:  	return BuildColor (0' chroma' x' m);  case 3:  	return BuildColor (0' x' chroma' m);  case 4:  	return BuildColor (x' 0' chroma' m);  default:  	return BuildColor (chroma' 0' x' m);  }  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,ConvertHsvToRgb,The following statement contains a magic number: switch ((int)hueTag) {  case 0:  	return BuildColor (chroma' x' 0' m);  case 1:  	return BuildColor (x' chroma' 0' m);  case 2:  	return BuildColor (0' chroma' x' m);  case 3:  	return BuildColor (0' x' chroma' m);  case 4:  	return BuildColor (x' 0' chroma' m);  default:  	return BuildColor (chroma' 0' x' m);  }  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,GetSpectrumColors,The following statement contains a magic number: for (int i = 0; i < colorCount; ++i) {  	double hue = (i * 360.0) / colorCount;  	spectrumColors [i] = ConvertHsvToRgb (hue' /*saturation*/1.0' /*value*/1.0);  }  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,TestColorConversion,The following statement contains a magic number: for (int i = 0; i <= 0xFFFFFF; ++i) {  	var Red = (byte)(i & 0xFF);  	var Green = (byte)((i & 0xFF00) >> 8);  	var Blue = (byte)((i & 0xFF0000) >> 16);  	Color originalColor = Color.FromRgb (Red' Green' Blue);  	double hue' saturation' value;  	ConvertRgbToHsv (originalColor' out hue' out saturation' out value);  	Color resultColor = ConvertHsvToRgb (hue' saturation' value);  	if (originalColor != resultColor)  		return false;  }  
Magic Number,wScreenshot.Controls,ColorUtils,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\ColorUtils.cs,TestColorConversion,The following statement contains a magic number: for (int i = 0; i <= 0xFFFFFF; ++i) {  	var Red = (byte)(i & 0xFF);  	var Green = (byte)((i & 0xFF00) >> 8);  	var Blue = (byte)((i & 0xFF0000) >> 16);  	Color originalColor = Color.FromRgb (Red' Green' Blue);  	double hue' saturation' value;  	ConvertRgbToHsv (originalColor' out hue' out saturation' out value);  	Color resultColor = ConvertHsvToRgb (hue' saturation' value);  	if (originalColor != resultColor)  		return false;  }  
Magic Number,wScreenshot.Controls,SpectrumSlider,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\SpectrumSlider.cs,OnValueChanged,The following statement contains a magic number: if (!m_withinChanging && !BindingOperations.IsDataBound (this' HueProperty)) {  	m_withinChanging = true;  	Hue = 360 - newValue;  	m_withinChanging = false;  }  
Magic Number,wScreenshot.Controls,SpectrumSlider,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\SpectrumSlider.cs,OnValueChanged,The following statement contains a magic number: Hue = 360 - newValue;  
Magic Number,wScreenshot.Controls,SpectrumSlider,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\SpectrumSlider.cs,SetBackground,The following statement contains a magic number: backgroundBrush.StartPoint = new Point (0.5' 0);  
Magic Number,wScreenshot.Controls,SpectrumSlider,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\SpectrumSlider.cs,SetBackground,The following statement contains a magic number: backgroundBrush.EndPoint = new Point (0.5' 1);  
Magic Number,wScreenshot.Controls,SpectrumSlider,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\SpectrumSlider.cs,OnHuePropertyChanged,The following statement contains a magic number: if (spectrumSlider != null && !spectrumSlider.m_withinChanging) {  	spectrumSlider.m_withinChanging = true;  	var hue = (double)e.NewValue;  	spectrumSlider.Value = 360 - hue;  	spectrumSlider.m_withinChanging = false;  }  
Magic Number,wScreenshot.Controls,SpectrumSlider,C:\repos\benneeh_wScreenshot\wScreenshot\Controls\ColorPicker\SpectrumSlider.cs,OnHuePropertyChanged,The following statement contains a magic number: spectrumSlider.Value = 360 - hue;  
Magic Number,wScreenshot.Converter,BorderGapMaskConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\BorderGapMaskConverter.cs,Convert,The following statement contains a magic number: if (parameter == null || values == null || values.Length != 3 || values [0] == null || values [1] == null || values [2] == null || !doubleType.IsAssignableFrom (values [0].GetType ()) || !doubleType.IsAssignableFrom (values [1].GetType ()) || !doubleType.IsAssignableFrom (values [2].GetType ())) {  	return DependencyProperty.UnsetValue;  }  
Magic Number,wScreenshot.Converter,BorderGapMaskConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\BorderGapMaskConverter.cs,Convert,The following statement contains a magic number: if (parameter == null || values == null || values.Length != 3 || values [0] == null || values [1] == null || values [2] == null || !doubleType.IsAssignableFrom (values [0].GetType ()) || !doubleType.IsAssignableFrom (values [1].GetType ()) || !doubleType.IsAssignableFrom (values [2].GetType ())) {  	return DependencyProperty.UnsetValue;  }  
Magic Number,wScreenshot.Converter,BorderGapMaskConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\BorderGapMaskConverter.cs,Convert,The following statement contains a magic number: if (parameter == null || values == null || values.Length != 3 || values [0] == null || values [1] == null || values [2] == null || !doubleType.IsAssignableFrom (values [0].GetType ()) || !doubleType.IsAssignableFrom (values [1].GetType ()) || !doubleType.IsAssignableFrom (values [2].GetType ())) {  	return DependencyProperty.UnsetValue;  }  
Magic Number,wScreenshot.Converter,BorderGapMaskConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\BorderGapMaskConverter.cs,Convert,The following statement contains a magic number: rowDef1.Height = new GridLength (borderHeight / 2);  
Magic Number,wScreenshot.Converter,BorderGapMaskConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\BorderGapMaskConverter.cs,Convert,The following statement contains a magic number: Grid.SetRowSpan (rectColumn1' 2);  
Magic Number,wScreenshot.Converter,BorderGapMaskConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\BorderGapMaskConverter.cs,Convert,The following statement contains a magic number: Grid.SetRowSpan (rectColumn3' 2);  
Magic Number,wScreenshot.Converter,BorderGapMaskConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\BorderGapMaskConverter.cs,Convert,The following statement contains a magic number: Grid.SetColumn (rectColumn3' 2);  
Magic Number,wScreenshot.Converter,MultiplyConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\MultiplyConverter.cs,ConvertBack,The following statement contains a magic number: if (value is int) {  	return (decimal)(((int)value) / 100);  }  
Magic Number,wScreenshot.Converter,MultiplyConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\MultiplyConverter.cs,ConvertBack,The following statement contains a magic number: return (decimal)(((int)value) / 100);  
Magic Number,wScreenshot.Converter,StringToColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\StringToColorConverter.cs,ConvertBack,The following statement contains a magic number: try {  	var ret = new List<double> ();  	while (r.Length > 1) {  		string sub = r.Substring (0' 2);  		r = r.Substring (2);  		int tmp = 255;  		int.TryParse (sub' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out tmp);  		ret.Add (tmp);  	}  	while (ret.Count < targetTypes.Length) {  		ret.Add (255);  	}  	return (from object i in ret  	select i).Take (targetTypes.Length).ToArray ();  }  catch (Exception) {  }  
Magic Number,wScreenshot.Converter,StringToColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\StringToColorConverter.cs,ConvertBack,The following statement contains a magic number: try {  	var ret = new List<double> ();  	while (r.Length > 1) {  		string sub = r.Substring (0' 2);  		r = r.Substring (2);  		int tmp = 255;  		int.TryParse (sub' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out tmp);  		ret.Add (tmp);  	}  	while (ret.Count < targetTypes.Length) {  		ret.Add (255);  	}  	return (from object i in ret  	select i).Take (targetTypes.Length).ToArray ();  }  catch (Exception) {  }  
Magic Number,wScreenshot.Converter,StringToColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\StringToColorConverter.cs,ConvertBack,The following statement contains a magic number: try {  	var ret = new List<double> ();  	while (r.Length > 1) {  		string sub = r.Substring (0' 2);  		r = r.Substring (2);  		int tmp = 255;  		int.TryParse (sub' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out tmp);  		ret.Add (tmp);  	}  	while (ret.Count < targetTypes.Length) {  		ret.Add (255);  	}  	return (from object i in ret  	select i).Take (targetTypes.Length).ToArray ();  }  catch (Exception) {  }  
Magic Number,wScreenshot.Converter,StringToColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\StringToColorConverter.cs,ConvertBack,The following statement contains a magic number: try {  	var ret = new List<double> ();  	while (r.Length > 1) {  		string sub = r.Substring (0' 2);  		r = r.Substring (2);  		int tmp = 255;  		int.TryParse (sub' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out tmp);  		ret.Add (tmp);  	}  	while (ret.Count < targetTypes.Length) {  		ret.Add (255);  	}  	return (from object i in ret  	select i).Take (targetTypes.Length).ToArray ();  }  catch (Exception) {  }  
Magic Number,wScreenshot.Converter,StringToColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\StringToColorConverter.cs,ConvertBack,The following statement contains a magic number: while (r.Length > 1) {  	string sub = r.Substring (0' 2);  	r = r.Substring (2);  	int tmp = 255;  	int.TryParse (sub' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out tmp);  	ret.Add (tmp);  }  
Magic Number,wScreenshot.Converter,StringToColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\StringToColorConverter.cs,ConvertBack,The following statement contains a magic number: while (r.Length > 1) {  	string sub = r.Substring (0' 2);  	r = r.Substring (2);  	int tmp = 255;  	int.TryParse (sub' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out tmp);  	ret.Add (tmp);  }  
Magic Number,wScreenshot.Converter,StringToColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\StringToColorConverter.cs,ConvertBack,The following statement contains a magic number: while (r.Length > 1) {  	string sub = r.Substring (0' 2);  	r = r.Substring (2);  	int tmp = 255;  	int.TryParse (sub' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out tmp);  	ret.Add (tmp);  }  
Magic Number,wScreenshot.Converter,StringToColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\StringToColorConverter.cs,ConvertBack,The following statement contains a magic number: r = r.Substring (2);  
Magic Number,wScreenshot.Converter,StringToColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\StringToColorConverter.cs,ConvertBack,The following statement contains a magic number: while (ret.Count < targetTypes.Length) {  	ret.Add (255);  }  
Magic Number,wScreenshot.Converter,StringToColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\StringToColorConverter.cs,ConvertBack,The following statement contains a magic number: ret.Add (255);  
Magic Number,wScreenshot.Converter,InvertColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\InvertColorConverter.cs,Convert,The following statement contains a magic number: return new Color {  	A = c.A'  	R = (byte)(255 - c.R)'  	G = (byte)(255 - c.G)'  	B = (byte)(255 - c.B)  };  
Magic Number,wScreenshot.Converter,InvertColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\InvertColorConverter.cs,Convert,The following statement contains a magic number: return new Color {  	A = c.A'  	R = (byte)(255 - c.R)'  	G = (byte)(255 - c.G)'  	B = (byte)(255 - c.B)  };  
Magic Number,wScreenshot.Converter,InvertColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\InvertColorConverter.cs,Convert,The following statement contains a magic number: return new Color {  	A = c.A'  	R = (byte)(255 - c.R)'  	G = (byte)(255 - c.G)'  	B = (byte)(255 - c.B)  };  
Magic Number,wScreenshot.Converter,InvertColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\InvertColorConverter.cs,ConvertBack,The following statement contains a magic number: return new Color {  	A = c.A'  	R = (byte)(255 - c.R)'  	G = (byte)(255 - c.G)'  	B = (byte)(255 - c.B)  };  
Magic Number,wScreenshot.Converter,InvertColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\InvertColorConverter.cs,ConvertBack,The following statement contains a magic number: return new Color {  	A = c.A'  	R = (byte)(255 - c.R)'  	G = (byte)(255 - c.G)'  	B = (byte)(255 - c.B)  };  
Magic Number,wScreenshot.Converter,InvertColorConverter,C:\repos\benneeh_wScreenshot\wScreenshot\Converter\InvertColorConverter.cs,ConvertBack,The following statement contains a magic number: return new Color {  	A = c.A'  	R = (byte)(255 - c.R)'  	G = (byte)(255 - c.G)'  	B = (byte)(255 - c.B)  };  
Magic Number,wScreenshot.DataObject,AnnoyingRectangle,C:\repos\benneeh_wScreenshot\wScreenshot\DataObject\AnnoyingRectangle.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = _Width.GetHashCode ();  	hashCode = (hashCode * 397) ^ _Height.GetHashCode ();  	hashCode = (hashCode * 397) ^ _X.GetHashCode ();  	hashCode = (hashCode * 397) ^ _Y.GetHashCode ();  	return hashCode;  }  
Magic Number,wScreenshot.DataObject,AnnoyingRectangle,C:\repos\benneeh_wScreenshot\wScreenshot\DataObject\AnnoyingRectangle.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = _Width.GetHashCode ();  	hashCode = (hashCode * 397) ^ _Height.GetHashCode ();  	hashCode = (hashCode * 397) ^ _X.GetHashCode ();  	hashCode = (hashCode * 397) ^ _Y.GetHashCode ();  	return hashCode;  }  
Magic Number,wScreenshot.DataObject,AnnoyingRectangle,C:\repos\benneeh_wScreenshot\wScreenshot\DataObject\AnnoyingRectangle.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int hashCode = _Width.GetHashCode ();  	hashCode = (hashCode * 397) ^ _Height.GetHashCode ();  	hashCode = (hashCode * 397) ^ _X.GetHashCode ();  	hashCode = (hashCode * 397) ^ _Y.GetHashCode ();  	return hashCode;  }  
Magic Number,wScreenshot.DataObject,AnnoyingRectangle,C:\repos\benneeh_wScreenshot\wScreenshot\DataObject\AnnoyingRectangle.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ _Height.GetHashCode ();  
Magic Number,wScreenshot.DataObject,AnnoyingRectangle,C:\repos\benneeh_wScreenshot\wScreenshot\DataObject\AnnoyingRectangle.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ _X.GetHashCode ();  
Magic Number,wScreenshot.DataObject,AnnoyingRectangle,C:\repos\benneeh_wScreenshot\wScreenshot\DataObject\AnnoyingRectangle.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ _Y.GetHashCode ();  
Magic Number,wScreenshot.Dialog,FolderBrowserDialog,C:\repos\benneeh_wScreenshot\wScreenshot\Dialog\OpenFolderDialog.cs,RunDialogDownlevel,The following statement contains a magic number: try {  	var info = new Struct.BROWSEINFO ();  	info.hwndOwner = owner;  	info.lpfn = BrowseCallbackProc;  	info.lpszTitle = Description;  	info.pidlRoot = rootItemIdList;  	info.pszDisplayName = new string ('\0'' 260);  	info.ulFlags = Enum.BrowseInfoFlags.NewDialogStyle | Enum.BrowseInfoFlags.ReturnOnlyFsDirs;  	if (!ShowNewFolderButton)  		info.ulFlags |= Enum.BrowseInfoFlags.NoNewFolderButton;  	resultItemIdList = Shell32.SHBrowseForFolder (ref info);  	if (resultItemIdList != IntPtr.Zero) {  		var path = new StringBuilder (260);  		Shell32.SHGetPathFromIDList (resultItemIdList' path);  		SelectedPath = path.ToString ();  		return true;  	}  	else  		return false;  }  finally {  	if (rootItemIdList != null) {  		IMalloc malloc = Shell32.SHGetMalloc ();  		malloc.Free (rootItemIdList);  		Marshal.ReleaseComObject (malloc);  	}  	if (resultItemIdList != null) {  		Marshal.FreeCoTaskMem (resultItemIdList);  	}  }  
Magic Number,wScreenshot.Dialog,FolderBrowserDialog,C:\repos\benneeh_wScreenshot\wScreenshot\Dialog\OpenFolderDialog.cs,RunDialogDownlevel,The following statement contains a magic number: try {  	var info = new Struct.BROWSEINFO ();  	info.hwndOwner = owner;  	info.lpfn = BrowseCallbackProc;  	info.lpszTitle = Description;  	info.pidlRoot = rootItemIdList;  	info.pszDisplayName = new string ('\0'' 260);  	info.ulFlags = Enum.BrowseInfoFlags.NewDialogStyle | Enum.BrowseInfoFlags.ReturnOnlyFsDirs;  	if (!ShowNewFolderButton)  		info.ulFlags |= Enum.BrowseInfoFlags.NoNewFolderButton;  	resultItemIdList = Shell32.SHBrowseForFolder (ref info);  	if (resultItemIdList != IntPtr.Zero) {  		var path = new StringBuilder (260);  		Shell32.SHGetPathFromIDList (resultItemIdList' path);  		SelectedPath = path.ToString ();  		return true;  	}  	else  		return false;  }  finally {  	if (rootItemIdList != null) {  		IMalloc malloc = Shell32.SHGetMalloc ();  		malloc.Free (rootItemIdList);  		Marshal.ReleaseComObject (malloc);  	}  	if (resultItemIdList != null) {  		Marshal.FreeCoTaskMem (resultItemIdList);  	}  }  
Magic Number,wScreenshot.Dialog,FolderBrowserDialog,C:\repos\benneeh_wScreenshot\wScreenshot\Dialog\OpenFolderDialog.cs,RunDialogDownlevel,The following statement contains a magic number: info.pszDisplayName = new string ('\0'' 260);  
Magic Number,wScreenshot.Dialog,FolderBrowserDialog,C:\repos\benneeh_wScreenshot\wScreenshot\Dialog\OpenFolderDialog.cs,RunDialogDownlevel,The following statement contains a magic number: if (resultItemIdList != IntPtr.Zero) {  	var path = new StringBuilder (260);  	Shell32.SHGetPathFromIDList (resultItemIdList' path);  	SelectedPath = path.ToString ();  	return true;  }  else  	return false;  
Magic Number,wScreenshot.Dialog,FolderBrowserDialog,C:\repos\benneeh_wScreenshot\wScreenshot\Dialog\OpenFolderDialog.cs,BrowseCallbackProc,The following statement contains a magic number: switch (msg) {  case Enum.FolderBrowserDialogMessage.Initialized:  	if (SelectedPath.Length != 0)  		User32.SendMessage (hwnd' Enum.FolderBrowserDialogMessage.SetSelection' new IntPtr (1)' SelectedPath);  	break;  case Enum.FolderBrowserDialogMessage.SelChanged:  	if (lParam != IntPtr.Zero) {  		var path = new StringBuilder (260);  		bool validPath = Shell32.SHGetPathFromIDList (lParam' path);  		User32.SendMessage (hwnd' Enum.FolderBrowserDialogMessage.EnableOk' IntPtr.Zero' validPath ? new IntPtr (1) : IntPtr.Zero);  	}  	break;  }  
Magic Number,wScreenshot.Dialog,FolderBrowserDialog,C:\repos\benneeh_wScreenshot\wScreenshot\Dialog\OpenFolderDialog.cs,BrowseCallbackProc,The following statement contains a magic number: if (lParam != IntPtr.Zero) {  	var path = new StringBuilder (260);  	bool validPath = Shell32.SHGetPathFromIDList (lParam' path);  	User32.SendMessage (hwnd' Enum.FolderBrowserDialogMessage.EnableOk' IntPtr.Zero' validPath ? new IntPtr (1) : IntPtr.Zero);  }  
Magic Number,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragStarted,The following statement contains a magic number: if (designerItem != null) {  	canvas = designerItem.FindParentControl<Canvas> ();  	if (canvas != null) {  		this.transformOrigin = this.designerItem.RenderTransformOrigin;  		rotateTransform = this.designerItem.RenderTransform as RotateTransform;  		if (rotateTransform != null) {  			angle = this.rotateTransform.Angle * Math.PI / 180.0;  		}  		else {  			angle = 0.0d;  		}  		AdornerLayer adornerLayer = AdornerLayer.GetAdornerLayer (this.canvas);  		if (adornerLayer != null) {  			adorner = new SizeAdorner (this.designerItem);  			adornerLayer.Add (this.adorner);  		}  	}  }  
Magic Number,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragStarted,The following statement contains a magic number: if (canvas != null) {  	this.transformOrigin = this.designerItem.RenderTransformOrigin;  	rotateTransform = this.designerItem.RenderTransform as RotateTransform;  	if (rotateTransform != null) {  		angle = this.rotateTransform.Angle * Math.PI / 180.0;  	}  	else {  		angle = 0.0d;  	}  	AdornerLayer adornerLayer = AdornerLayer.GetAdornerLayer (this.canvas);  	if (adornerLayer != null) {  		adorner = new SizeAdorner (this.designerItem);  		adornerLayer.Add (this.adorner);  	}  }  
Magic Number,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragStarted,The following statement contains a magic number: if (rotateTransform != null) {  	angle = this.rotateTransform.Angle * Math.PI / 180.0;  }  else {  	angle = 0.0d;  }  
Magic Number,wScreenshot.Helper.CanvasResizeTool,ResizeThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\ResizeThumb.cs,ResizeThumb_DragStarted,The following statement contains a magic number: angle = this.rotateTransform.Angle * Math.PI / 180.0;  
Magic Number,wScreenshot.Helper.CanvasResizeTool,RotateThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\RotateThumb.cs,GetSnapp0rs,The following statement contains a magic number: if (!snapCache.ContainsKey (Subs)) {  	List<double> ret = new List<double> ();  	double start = 0;  	for (double i = 0; i < Subs; i++) {  		ret.Add ((i * 360.0 / (double)Subs) - 180.0);  	}  	snapCache.Add (Subs' ret);  }  
Magic Number,wScreenshot.Helper.CanvasResizeTool,RotateThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\RotateThumb.cs,GetSnapp0rs,The following statement contains a magic number: if (!snapCache.ContainsKey (Subs)) {  	List<double> ret = new List<double> ();  	double start = 0;  	for (double i = 0; i < Subs; i++) {  		ret.Add ((i * 360.0 / (double)Subs) - 180.0);  	}  	snapCache.Add (Subs' ret);  }  
Magic Number,wScreenshot.Helper.CanvasResizeTool,RotateThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\RotateThumb.cs,GetSnapp0rs,The following statement contains a magic number: for (double i = 0; i < Subs; i++) {  	ret.Add ((i * 360.0 / (double)Subs) - 180.0);  }  
Magic Number,wScreenshot.Helper.CanvasResizeTool,RotateThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\RotateThumb.cs,GetSnapp0rs,The following statement contains a magic number: for (double i = 0; i < Subs; i++) {  	ret.Add ((i * 360.0 / (double)Subs) - 180.0);  }  
Magic Number,wScreenshot.Helper.CanvasResizeTool,RotateThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\RotateThumb.cs,GetSnapp0rs,The following statement contains a magic number: ret.Add ((i * 360.0 / (double)Subs) - 180.0);  
Magic Number,wScreenshot.Helper.CanvasResizeTool,RotateThumb,C:\repos\benneeh_wScreenshot\wScreenshot\Helper\CanvasResizeTool\RotateThumb.cs,GetSnapp0rs,The following statement contains a magic number: ret.Add ((i * 360.0 / (double)Subs) - 180.0);  
Magic Number,Hardcodet.Wpf.TaskbarNotification,TaskbarIcon,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\TaskbarIcon.cs,ShowCustomBalloon,The following statement contains a magic number: if (timeout.HasValue && timeout < 500) {  	string msg = "Invalid timeout of {0} milliseconds. Timeout must be at least 500 ms";  	msg = string.Format (msg' timeout);  	throw new ArgumentOutOfRangeException ("timeout"' msg);  }  
Magic Number,Hardcodet.Wpf.TaskbarNotification.Interop,NotifyIconData,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\Interop\NotifyIconData.cs,CreateDefault,The following statement contains a magic number: if (Environment.OSVersion.Version.Major >= 6) {  	//use the current size  	data.cbSize = (uint)Marshal.SizeOf (data);  }  else {  	//we need to set another size on xp/2003- otherwise certain  	//features (e.g. balloon tooltips) don't work.  	data.cbSize = 504;  	//set to fixed timeout  	data.VersionOrTimeout = 10;  }  
Magic Number,Hardcodet.Wpf.TaskbarNotification.Interop,NotifyIconData,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\Interop\NotifyIconData.cs,CreateDefault,The following statement contains a magic number: if (Environment.OSVersion.Version.Major >= 6) {  	//use the current size  	data.cbSize = (uint)Marshal.SizeOf (data);  }  else {  	//we need to set another size on xp/2003- otherwise certain  	//features (e.g. balloon tooltips) don't work.  	data.cbSize = 504;  	//set to fixed timeout  	data.VersionOrTimeout = 10;  }  
Magic Number,Hardcodet.Wpf.TaskbarNotification.Interop,NotifyIconData,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\Interop\NotifyIconData.cs,CreateDefault,The following statement contains a magic number: if (Environment.OSVersion.Version.Major >= 6) {  	//use the current size  	data.cbSize = (uint)Marshal.SizeOf (data);  }  else {  	//we need to set another size on xp/2003- otherwise certain  	//features (e.g. balloon tooltips) don't work.  	data.cbSize = 504;  	//set to fixed timeout  	data.VersionOrTimeout = 10;  }  
Magic Number,Hardcodet.Wpf.TaskbarNotification.Interop,NotifyIconData,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\Interop\NotifyIconData.cs,CreateDefault,The following statement contains a magic number: data.cbSize = 504;  
Magic Number,Hardcodet.Wpf.TaskbarNotification.Interop,NotifyIconData,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\Interop\NotifyIconData.cs,CreateDefault,The following statement contains a magic number: data.VersionOrTimeout = 10;  
Magic Number,Hardcodet.Wpf.TaskbarNotification.Interop,TrayInfo,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\Interop\TrayInfo.cs,GetTrayLocation,The following statement contains a magic number: if (info.Edge == AppBarInfo.ScreenEdge.Left) {  	x = rcWorkArea.Left + 2;  	y = rcWorkArea.Bottom;  }  else if (info.Edge == AppBarInfo.ScreenEdge.Bottom) {  	x = rcWorkArea.Right;  	y = rcWorkArea.Bottom;  }  else if (info.Edge == AppBarInfo.ScreenEdge.Top) {  	x = rcWorkArea.Right;  	y = rcWorkArea.Top;  }  else if (info.Edge == AppBarInfo.ScreenEdge.Right) {  	x = rcWorkArea.Right;  	y = rcWorkArea.Bottom;  }  
Magic Number,Hardcodet.Wpf.TaskbarNotification.Interop,TrayInfo,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\Interop\TrayInfo.cs,GetTrayLocation,The following statement contains a magic number: x = rcWorkArea.Left + 2;  
Magic Number,Hardcodet.Wpf.TaskbarNotification.Interop,WindowMessageSink,C:\repos\benneeh_wScreenshot\wScreenshot\NotifyIconWpf\Interop\WindowMessageSink.cs,ProcessWindowMessage,The following statement contains a magic number: switch (lParam) {  case 0x200:  	MouseEventReceived (MouseEvent.MouseMove);  	break;  case 0x201:  	MouseEventReceived (MouseEvent.IconLeftMouseDown);  	break;  case 0x202:  	if (!isDoubleClick) {  		MouseEventReceived (MouseEvent.IconLeftMouseUp);  	}  	isDoubleClick = false;  	break;  case 0x203:  	isDoubleClick = true;  	MouseEventReceived (MouseEvent.IconDoubleClick);  	break;  case 0x204:  	MouseEventReceived (MouseEvent.IconRightMouseDown);  	break;  case 0x205:  	MouseEventReceived (MouseEvent.IconRightMouseUp);  	break;  case 0x206:  	//double click with right mouse button - do not trigger event  	break;  case 0x207:  	MouseEventReceived (MouseEvent.IconMiddleMouseDown);  	break;  case 520:  	MouseEventReceived (MouseEvent.IconMiddleMouseUp);  	break;  case 0x209:  	//double click with middle mouse button - do not trigger event  	break;  case 0x402:  	BallonToolTipChanged (true);  	break;  case 0x403:  case 0x404:  	BallonToolTipChanged (false);  	break;  case 0x405:  	MouseEventReceived (MouseEvent.BalloonToolTipClicked);  	break;  case 0x406:  	ChangeToolTipStateRequest (true);  	break;  case 0x407:  	ChangeToolTipStateRequest (false);  	break;  default:  	Debug.WriteLine ("Unhandled NotifyIcon message ID: " + lParam);  	break;  }  
Magic Number,wScreenshot.ScreenshotModule,WindowSelectorTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\WindowSelectorTool.xaml.cs,m_MouseDown,The following statement contains a magic number: if (Keyboard.IsKeyDown (Key.LeftCtrl) || Keyboard.IsKeyDown (Key.RightCtrl)) {  	currentBorder.Background = new LinearGradientBrush (Color.FromArgb (20' 255' 0' 0)' Color.FromArgb (20' 255' 0' 0)' 90.0);  	currentBorder = new AnnoyingRectangle ();  	borderCollectionSource.Add (currentBorder);  	e.Handled = lastMouseDownHandled = true;  }  
Magic Number,wScreenshot.ScreenshotModule,WindowSelectorTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\WindowSelectorTool.xaml.cs,m_MouseDown,The following statement contains a magic number: if (Keyboard.IsKeyDown (Key.LeftCtrl) || Keyboard.IsKeyDown (Key.RightCtrl)) {  	currentBorder.Background = new LinearGradientBrush (Color.FromArgb (20' 255' 0' 0)' Color.FromArgb (20' 255' 0' 0)' 90.0);  	currentBorder = new AnnoyingRectangle ();  	borderCollectionSource.Add (currentBorder);  	e.Handled = lastMouseDownHandled = true;  }  
Magic Number,wScreenshot.ScreenshotModule,WindowSelectorTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\WindowSelectorTool.xaml.cs,m_MouseDown,The following statement contains a magic number: if (Keyboard.IsKeyDown (Key.LeftCtrl) || Keyboard.IsKeyDown (Key.RightCtrl)) {  	currentBorder.Background = new LinearGradientBrush (Color.FromArgb (20' 255' 0' 0)' Color.FromArgb (20' 255' 0' 0)' 90.0);  	currentBorder = new AnnoyingRectangle ();  	borderCollectionSource.Add (currentBorder);  	e.Handled = lastMouseDownHandled = true;  }  
Magic Number,wScreenshot.ScreenshotModule,WindowSelectorTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\WindowSelectorTool.xaml.cs,m_MouseDown,The following statement contains a magic number: if (Keyboard.IsKeyDown (Key.LeftCtrl) || Keyboard.IsKeyDown (Key.RightCtrl)) {  	currentBorder.Background = new LinearGradientBrush (Color.FromArgb (20' 255' 0' 0)' Color.FromArgb (20' 255' 0' 0)' 90.0);  	currentBorder = new AnnoyingRectangle ();  	borderCollectionSource.Add (currentBorder);  	e.Handled = lastMouseDownHandled = true;  }  
Magic Number,wScreenshot.ScreenshotModule,WindowSelectorTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\WindowSelectorTool.xaml.cs,m_MouseDown,The following statement contains a magic number: if (Keyboard.IsKeyDown (Key.LeftCtrl) || Keyboard.IsKeyDown (Key.RightCtrl)) {  	currentBorder.Background = new LinearGradientBrush (Color.FromArgb (20' 255' 0' 0)' Color.FromArgb (20' 255' 0' 0)' 90.0);  	currentBorder = new AnnoyingRectangle ();  	borderCollectionSource.Add (currentBorder);  	e.Handled = lastMouseDownHandled = true;  }  
Magic Number,wScreenshot.ScreenshotModule,WindowSelectorTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\WindowSelectorTool.xaml.cs,m_MouseDown,The following statement contains a magic number: currentBorder.Background = new LinearGradientBrush (Color.FromArgb (20' 255' 0' 0)' Color.FromArgb (20' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,WindowSelectorTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\WindowSelectorTool.xaml.cs,m_MouseDown,The following statement contains a magic number: currentBorder.Background = new LinearGradientBrush (Color.FromArgb (20' 255' 0' 0)' Color.FromArgb (20' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,WindowSelectorTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\WindowSelectorTool.xaml.cs,m_MouseDown,The following statement contains a magic number: currentBorder.Background = new LinearGradientBrush (Color.FromArgb (20' 255' 0' 0)' Color.FromArgb (20' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,WindowSelectorTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\WindowSelectorTool.xaml.cs,m_MouseDown,The following statement contains a magic number: currentBorder.Background = new LinearGradientBrush (Color.FromArgb (20' 255' 0' 0)' Color.FromArgb (20' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,WindowSelectorTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\WindowSelectorTool.xaml.cs,m_MouseDown,The following statement contains a magic number: currentBorder.Background = new LinearGradientBrush (Color.FromArgb (20' 255' 0' 0)' Color.FromArgb (20' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseDown,The following statement contains a magic number: _currentBorder.Background = new LinearGradientBrush (Color.FromArgb (80' 255' 0' 0)' Color.FromArgb (80' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseDown,The following statement contains a magic number: _currentBorder.Background = new LinearGradientBrush (Color.FromArgb (80' 255' 0' 0)' Color.FromArgb (80' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseDown,The following statement contains a magic number: _currentBorder.Background = new LinearGradientBrush (Color.FromArgb (80' 255' 0' 0)' Color.FromArgb (80' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseDown,The following statement contains a magic number: _currentBorder.Background = new LinearGradientBrush (Color.FromArgb (80' 255' 0' 0)' Color.FromArgb (80' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseDown,The following statement contains a magic number: _currentBorder.Background = new LinearGradientBrush (Color.FromArgb (80' 255' 0' 0)' Color.FromArgb (80' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseUp,The following statement contains a magic number: _currentBorder.Background = new LinearGradientBrush (Color.FromArgb (110' 255' 0' 0)' Color.FromArgb (110' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseUp,The following statement contains a magic number: _currentBorder.Background = new LinearGradientBrush (Color.FromArgb (110' 255' 0' 0)' Color.FromArgb (110' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseUp,The following statement contains a magic number: _currentBorder.Background = new LinearGradientBrush (Color.FromArgb (110' 255' 0' 0)' Color.FromArgb (110' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseUp,The following statement contains a magic number: _currentBorder.Background = new LinearGradientBrush (Color.FromArgb (110' 255' 0' 0)' Color.FromArgb (110' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,m_MouseUp,The following statement contains a magic number: _currentBorder.Background = new LinearGradientBrush (Color.FromArgb (110' 255' 0' 0)' Color.FromArgb (110' 255' 0' 0)' 90.0);  
Magic Number,wScreenshot.ScreenshotModule,RedBoxTool,C:\repos\benneeh_wScreenshot\wScreenshot\ScreenshotModule\RedBoxTool.xaml.cs,DoFinish,The following statement contains a magic number: bw.DoWork += (s' e) => Thread.Sleep (1000);  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: try {  	// Obtain the window handle for WPF application  	IntPtr mainWindowPtr = new WindowInteropHelper (this).Handle;  	HwndSource mainWindowSrc = HwndSource.FromHwnd (mainWindowPtr);  	mainWindowSrc.CompositionTarget.BackgroundColor = Color.FromArgb (0' 0' 0' 0);  	// Get System Dpi  	Graphics desktop = Graphics.FromHwnd (mainWindowPtr);  	float DesktopDpiX = desktop.DpiX;  	float DesktopDpiY = desktop.DpiY;  	// Set Margins  	var margins = new MARGINS ();  	// Extend glass frame into client area  	// Note that the default desktop Dpi is 96dpi. The  margins are  	// adjusted for the system Dpi.  	margins.cxLeftWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cxRightWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cyTopHeight = Convert.ToInt32 ((50 + 5) * (DesktopDpiX / 96));  	margins.cyBottomHeight = Convert.ToInt32 ((bottomMarginIndicator.ActualHeight + 5) * (DesktopDpiX / 96));  	int hr = DwmExtendFrameIntoClientArea (mainWindowSrc.Handle' ref margins);  	//  	if (hr < 0) {  		//DwmExtendFrameIntoClientArea Failed  	}  }  // If not Vista' paint background white.  catch (DllNotFoundException) {  	Application.Current.MainWindow.Background = Brushes.White;  }  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: try {  	// Obtain the window handle for WPF application  	IntPtr mainWindowPtr = new WindowInteropHelper (this).Handle;  	HwndSource mainWindowSrc = HwndSource.FromHwnd (mainWindowPtr);  	mainWindowSrc.CompositionTarget.BackgroundColor = Color.FromArgb (0' 0' 0' 0);  	// Get System Dpi  	Graphics desktop = Graphics.FromHwnd (mainWindowPtr);  	float DesktopDpiX = desktop.DpiX;  	float DesktopDpiY = desktop.DpiY;  	// Set Margins  	var margins = new MARGINS ();  	// Extend glass frame into client area  	// Note that the default desktop Dpi is 96dpi. The  margins are  	// adjusted for the system Dpi.  	margins.cxLeftWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cxRightWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cyTopHeight = Convert.ToInt32 ((50 + 5) * (DesktopDpiX / 96));  	margins.cyBottomHeight = Convert.ToInt32 ((bottomMarginIndicator.ActualHeight + 5) * (DesktopDpiX / 96));  	int hr = DwmExtendFrameIntoClientArea (mainWindowSrc.Handle' ref margins);  	//  	if (hr < 0) {  		//DwmExtendFrameIntoClientArea Failed  	}  }  // If not Vista' paint background white.  catch (DllNotFoundException) {  	Application.Current.MainWindow.Background = Brushes.White;  }  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: try {  	// Obtain the window handle for WPF application  	IntPtr mainWindowPtr = new WindowInteropHelper (this).Handle;  	HwndSource mainWindowSrc = HwndSource.FromHwnd (mainWindowPtr);  	mainWindowSrc.CompositionTarget.BackgroundColor = Color.FromArgb (0' 0' 0' 0);  	// Get System Dpi  	Graphics desktop = Graphics.FromHwnd (mainWindowPtr);  	float DesktopDpiX = desktop.DpiX;  	float DesktopDpiY = desktop.DpiY;  	// Set Margins  	var margins = new MARGINS ();  	// Extend glass frame into client area  	// Note that the default desktop Dpi is 96dpi. The  margins are  	// adjusted for the system Dpi.  	margins.cxLeftWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cxRightWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cyTopHeight = Convert.ToInt32 ((50 + 5) * (DesktopDpiX / 96));  	margins.cyBottomHeight = Convert.ToInt32 ((bottomMarginIndicator.ActualHeight + 5) * (DesktopDpiX / 96));  	int hr = DwmExtendFrameIntoClientArea (mainWindowSrc.Handle' ref margins);  	//  	if (hr < 0) {  		//DwmExtendFrameIntoClientArea Failed  	}  }  // If not Vista' paint background white.  catch (DllNotFoundException) {  	Application.Current.MainWindow.Background = Brushes.White;  }  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: try {  	// Obtain the window handle for WPF application  	IntPtr mainWindowPtr = new WindowInteropHelper (this).Handle;  	HwndSource mainWindowSrc = HwndSource.FromHwnd (mainWindowPtr);  	mainWindowSrc.CompositionTarget.BackgroundColor = Color.FromArgb (0' 0' 0' 0);  	// Get System Dpi  	Graphics desktop = Graphics.FromHwnd (mainWindowPtr);  	float DesktopDpiX = desktop.DpiX;  	float DesktopDpiY = desktop.DpiY;  	// Set Margins  	var margins = new MARGINS ();  	// Extend glass frame into client area  	// Note that the default desktop Dpi is 96dpi. The  margins are  	// adjusted for the system Dpi.  	margins.cxLeftWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cxRightWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cyTopHeight = Convert.ToInt32 ((50 + 5) * (DesktopDpiX / 96));  	margins.cyBottomHeight = Convert.ToInt32 ((bottomMarginIndicator.ActualHeight + 5) * (DesktopDpiX / 96));  	int hr = DwmExtendFrameIntoClientArea (mainWindowSrc.Handle' ref margins);  	//  	if (hr < 0) {  		//DwmExtendFrameIntoClientArea Failed  	}  }  // If not Vista' paint background white.  catch (DllNotFoundException) {  	Application.Current.MainWindow.Background = Brushes.White;  }  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: try {  	// Obtain the window handle for WPF application  	IntPtr mainWindowPtr = new WindowInteropHelper (this).Handle;  	HwndSource mainWindowSrc = HwndSource.FromHwnd (mainWindowPtr);  	mainWindowSrc.CompositionTarget.BackgroundColor = Color.FromArgb (0' 0' 0' 0);  	// Get System Dpi  	Graphics desktop = Graphics.FromHwnd (mainWindowPtr);  	float DesktopDpiX = desktop.DpiX;  	float DesktopDpiY = desktop.DpiY;  	// Set Margins  	var margins = new MARGINS ();  	// Extend glass frame into client area  	// Note that the default desktop Dpi is 96dpi. The  margins are  	// adjusted for the system Dpi.  	margins.cxLeftWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cxRightWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cyTopHeight = Convert.ToInt32 ((50 + 5) * (DesktopDpiX / 96));  	margins.cyBottomHeight = Convert.ToInt32 ((bottomMarginIndicator.ActualHeight + 5) * (DesktopDpiX / 96));  	int hr = DwmExtendFrameIntoClientArea (mainWindowSrc.Handle' ref margins);  	//  	if (hr < 0) {  		//DwmExtendFrameIntoClientArea Failed  	}  }  // If not Vista' paint background white.  catch (DllNotFoundException) {  	Application.Current.MainWindow.Background = Brushes.White;  }  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: try {  	// Obtain the window handle for WPF application  	IntPtr mainWindowPtr = new WindowInteropHelper (this).Handle;  	HwndSource mainWindowSrc = HwndSource.FromHwnd (mainWindowPtr);  	mainWindowSrc.CompositionTarget.BackgroundColor = Color.FromArgb (0' 0' 0' 0);  	// Get System Dpi  	Graphics desktop = Graphics.FromHwnd (mainWindowPtr);  	float DesktopDpiX = desktop.DpiX;  	float DesktopDpiY = desktop.DpiY;  	// Set Margins  	var margins = new MARGINS ();  	// Extend glass frame into client area  	// Note that the default desktop Dpi is 96dpi. The  margins are  	// adjusted for the system Dpi.  	margins.cxLeftWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cxRightWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cyTopHeight = Convert.ToInt32 ((50 + 5) * (DesktopDpiX / 96));  	margins.cyBottomHeight = Convert.ToInt32 ((bottomMarginIndicator.ActualHeight + 5) * (DesktopDpiX / 96));  	int hr = DwmExtendFrameIntoClientArea (mainWindowSrc.Handle' ref margins);  	//  	if (hr < 0) {  		//DwmExtendFrameIntoClientArea Failed  	}  }  // If not Vista' paint background white.  catch (DllNotFoundException) {  	Application.Current.MainWindow.Background = Brushes.White;  }  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: try {  	// Obtain the window handle for WPF application  	IntPtr mainWindowPtr = new WindowInteropHelper (this).Handle;  	HwndSource mainWindowSrc = HwndSource.FromHwnd (mainWindowPtr);  	mainWindowSrc.CompositionTarget.BackgroundColor = Color.FromArgb (0' 0' 0' 0);  	// Get System Dpi  	Graphics desktop = Graphics.FromHwnd (mainWindowPtr);  	float DesktopDpiX = desktop.DpiX;  	float DesktopDpiY = desktop.DpiY;  	// Set Margins  	var margins = new MARGINS ();  	// Extend glass frame into client area  	// Note that the default desktop Dpi is 96dpi. The  margins are  	// adjusted for the system Dpi.  	margins.cxLeftWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cxRightWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cyTopHeight = Convert.ToInt32 ((50 + 5) * (DesktopDpiX / 96));  	margins.cyBottomHeight = Convert.ToInt32 ((bottomMarginIndicator.ActualHeight + 5) * (DesktopDpiX / 96));  	int hr = DwmExtendFrameIntoClientArea (mainWindowSrc.Handle' ref margins);  	//  	if (hr < 0) {  		//DwmExtendFrameIntoClientArea Failed  	}  }  // If not Vista' paint background white.  catch (DllNotFoundException) {  	Application.Current.MainWindow.Background = Brushes.White;  }  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: try {  	// Obtain the window handle for WPF application  	IntPtr mainWindowPtr = new WindowInteropHelper (this).Handle;  	HwndSource mainWindowSrc = HwndSource.FromHwnd (mainWindowPtr);  	mainWindowSrc.CompositionTarget.BackgroundColor = Color.FromArgb (0' 0' 0' 0);  	// Get System Dpi  	Graphics desktop = Graphics.FromHwnd (mainWindowPtr);  	float DesktopDpiX = desktop.DpiX;  	float DesktopDpiY = desktop.DpiY;  	// Set Margins  	var margins = new MARGINS ();  	// Extend glass frame into client area  	// Note that the default desktop Dpi is 96dpi. The  margins are  	// adjusted for the system Dpi.  	margins.cxLeftWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cxRightWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cyTopHeight = Convert.ToInt32 ((50 + 5) * (DesktopDpiX / 96));  	margins.cyBottomHeight = Convert.ToInt32 ((bottomMarginIndicator.ActualHeight + 5) * (DesktopDpiX / 96));  	int hr = DwmExtendFrameIntoClientArea (mainWindowSrc.Handle' ref margins);  	//  	if (hr < 0) {  		//DwmExtendFrameIntoClientArea Failed  	}  }  // If not Vista' paint background white.  catch (DllNotFoundException) {  	Application.Current.MainWindow.Background = Brushes.White;  }  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: try {  	// Obtain the window handle for WPF application  	IntPtr mainWindowPtr = new WindowInteropHelper (this).Handle;  	HwndSource mainWindowSrc = HwndSource.FromHwnd (mainWindowPtr);  	mainWindowSrc.CompositionTarget.BackgroundColor = Color.FromArgb (0' 0' 0' 0);  	// Get System Dpi  	Graphics desktop = Graphics.FromHwnd (mainWindowPtr);  	float DesktopDpiX = desktop.DpiX;  	float DesktopDpiY = desktop.DpiY;  	// Set Margins  	var margins = new MARGINS ();  	// Extend glass frame into client area  	// Note that the default desktop Dpi is 96dpi. The  margins are  	// adjusted for the system Dpi.  	margins.cxLeftWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cxRightWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  	margins.cyTopHeight = Convert.ToInt32 ((50 + 5) * (DesktopDpiX / 96));  	margins.cyBottomHeight = Convert.ToInt32 ((bottomMarginIndicator.ActualHeight + 5) * (DesktopDpiX / 96));  	int hr = DwmExtendFrameIntoClientArea (mainWindowSrc.Handle' ref margins);  	//  	if (hr < 0) {  		//DwmExtendFrameIntoClientArea Failed  	}  }  // If not Vista' paint background white.  catch (DllNotFoundException) {  	Application.Current.MainWindow.Background = Brushes.White;  }  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: margins.cxLeftWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: margins.cxLeftWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: margins.cxRightWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: margins.cxRightWidth = Convert.ToInt32 (5 * (DesktopDpiX / 96));  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: margins.cyTopHeight = Convert.ToInt32 ((50 + 5) * (DesktopDpiX / 96));  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: margins.cyTopHeight = Convert.ToInt32 ((50 + 5) * (DesktopDpiX / 96));  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: margins.cyTopHeight = Convert.ToInt32 ((50 + 5) * (DesktopDpiX / 96));  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: margins.cyBottomHeight = Convert.ToInt32 ((bottomMarginIndicator.ActualHeight + 5) * (DesktopDpiX / 96));  
Magic Number,wScreenshot.View,Options,C:\repos\benneeh_wScreenshot\wScreenshot\View\Options.xaml.cs,Window_Loaded,The following statement contains a magic number: margins.cyBottomHeight = Convert.ToInt32 ((bottomMarginIndicator.ActualHeight + 5) * (DesktopDpiX / 96));  
Magic Number,wScreenshot.View,MainWindow,C:\repos\benneeh_wScreenshot\wScreenshot\View\MainWindow.xaml.cs,PrivateTest,The following statement contains a magic number: tests.Add (delegate {  	int one = 0;  	double d = 0;  	object eha = 42;  	DateTime last = DateTime.Now;  	last = DateTime.Now;  	while (one++ < length) {  		Type t = eha.GetType ();  		if (t == typeof(byte) || t == typeof(sbyte) || t == typeof(ushort) || t == typeof(short) || t == typeof(uint) || t == typeof(int) || t == typeof(float) || t == typeof(double)) {  			d = (int)eha;  		}  	}  });  
Magic Number,wScreenshot.View,MainWindow,C:\repos\benneeh_wScreenshot\wScreenshot\View\MainWindow.xaml.cs,PrivateTest,The following statement contains a magic number: tests.Add (delegate {  	int one = 0;  	double d = 0;  	object eha = 42;  	DateTime last = DateTime.Now;  	last = DateTime.Now;  	var hashes = new List<int> {  		typeof(byte).GetHashCode ()'  		typeof(sbyte).GetHashCode ()'  		typeof(ushort).GetHashCode ()'  		typeof(short).GetHashCode ()'  		typeof(uint).GetHashCode ()'  		typeof(int).GetHashCode ()'  		typeof(float).GetHashCode ()'  		typeof(double).GetHashCode ()'  	};  	while (one++ < length) {  		int h = eha.GetType ().GetHashCode ();  		if (hashes.Contains (h)) {  			d = (int)eha;  		}  	}  });  
Missing Default,wScreenshot.Dialog,FolderBrowserDialog,C:\repos\benneeh_wScreenshot\wScreenshot\Dialog\OpenFolderDialog.cs,BrowseCallbackProc,The following switch statement is missing a default case: switch (msg) {  case Enum.FolderBrowserDialogMessage.Initialized:  	if (SelectedPath.Length != 0)  		User32.SendMessage (hwnd' Enum.FolderBrowserDialogMessage.SetSelection' new IntPtr (1)' SelectedPath);  	break;  case Enum.FolderBrowserDialogMessage.SelChanged:  	if (lParam != IntPtr.Zero) {  		var path = new StringBuilder (260);  		bool validPath = Shell32.SHGetPathFromIDList (lParam' path);  		User32.SendMessage (hwnd' Enum.FolderBrowserDialogMessage.EnableOk' IntPtr.Zero' validPath ? new IntPtr (1) : IntPtr.Zero);  	}  	break;  }  
Missing Default,wScreenshot.Hooks,MouseHook,C:\repos\benneeh_wScreenshot\wScreenshot\Hooks\MouseHook.cs,GetMouseButton,The following switch statement is missing a default case: switch (mouseMessages) {  case Win32.MouseMessages.WM_LBUTTONUP:  case Win32.MouseMessages.WM_LBUTTONDOWN:  	return MouseButton.Left;  case Win32.MouseMessages.WM_MBUTTONUP:  case Win32.MouseMessages.WM_MBUTTONDOWN:  	return MouseButton.Middle;  case Win32.MouseMessages.WM_RBUTTONUP:  case Win32.MouseMessages.WM_RBUTTONDOWN:  	return MouseButton.Right;  }  
