Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DeepEqual.Test.Comparsions,FloatComparisonTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Comparsions\FloatComparisonTests.cs,Compares_floats_within_tolarance,The method has 5 parameters. Parameters: doubleTolerance' singleTolerance' value1' value2' result
Long Parameter List,DeepEqual.Test.Comparsions,ListComparisonTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Comparsions\ListComparisonTests.cs,Can_compare_types,The method has 5 parameters. Parameters: type1' type2' elementType1' elementType2' expected
Long Parameter List,DeepEqual.Test.Comparsions,SetComparisonTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Comparsions\SetComparisonTests.cs,Can_compare_types,The method has 5 parameters. Parameters: type1' type2' elementType1' elementType2' expected
Long Statement,DeepEqual.Test.Comparsions,CompositComparisonTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Comparsions\CompositComparisonTests.cs,When_testing_equality_if_a_comparer_returns_Inconclusive,The length of the statement  "				Inner.Skip(1).VerifyAll(c => c.Compare(It.IsAny<IComparisonContext>()' It.IsAny<object>()' It.IsAny<object>())' Times.Never()) " is 126.
Long Statement,DeepEqual.Test.Comparsions,CompositComparisonTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Comparsions\CompositComparisonTests.cs,When_testing_equality_if_a_comparer_returns_Pass,The length of the statement  "				Inner.Skip(1).VerifyAll(c => c.Compare(It.IsAny<IComparisonContext>()' It.IsAny<object>()' It.IsAny<object>())' Times.Never()) " is 126.
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Setting_floating_point_tolerance,The following statement contains a magic number: "When setting floating point tolerance".x(() =>   				result = SUT.WithFloatingPointTolerance(0.001d' 0.2f)  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Setting_floating_point_tolerance,The following statement contains a magic number: "When setting floating point tolerance".x(() =>   				result = SUT.WithFloatingPointTolerance(0.001d' 0.2f)  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Setting_floating_point_tolerance,The following statement contains a magic number: "Then the tolerance should be set".x(() =>  			{  				SUT.DoubleTolerance.ShouldBe(0.001d);  				SUT.SingleTolerance.ShouldBe(0.2f);  			});
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Setting_floating_point_tolerance,The following statement contains a magic number: "Then the tolerance should be set".x(() =>  			{  				SUT.DoubleTolerance.ShouldBe(0.001d);  				SUT.SingleTolerance.ShouldBe(0.2f);  			});
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Default_floating_point_tolerance,The following statement contains a magic number: "Then the tolerance should be set".x(() =>  			{  				SUT.DoubleTolerance.ShouldBe(1e-15d);  				SUT.SingleTolerance.ShouldBe(1e-6f);  			});
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Default_floating_point_tolerance,The following statement contains a magic number: "Then the tolerance should be set".x(() =>  			{  				SUT.DoubleTolerance.ShouldBe(1e-15d);  				SUT.SingleTolerance.ShouldBe(1e-6f);  			});
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Expoising_internals_of_a_given_type,The following statement contains a magic number: "When exposing the internals of Version".x(() =>  			{  				result = SUT.ExposeInternalsOf<Version>();  				properties = ReflectionCache.GetProperties(new Version(1' 2' 3' 4));  			});
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Expoising_internals_of_a_given_type,The following statement contains a magic number: "When exposing the internals of Version".x(() =>  			{  				result = SUT.ExposeInternalsOf<Version>();  				properties = ReflectionCache.GetProperties(new Version(1' 2' 3' 4));  			});
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Expoising_internals_of_a_given_type,The following statement contains a magic number: "When exposing the internals of Version".x(() =>  			{  				result = SUT.ExposeInternalsOf<Version>();  				properties = ReflectionCache.GetProperties(new Version(1' 2' 3' 4));  			});
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Expoising_internals_of_many_types,The following statement contains a magic number: "When exposing the internals of Version".x(() =>  			{  				result = SUT.ExposeInternalsOf(typeof(Version)' typeof(Uri));  				versionProperties = ReflectionCache.GetProperties(new Version(1' 2' 3' 4));  				uriProperties = ReflectionCache.GetProperties(new Uri("http://google.com"));  			});
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Expoising_internals_of_many_types,The following statement contains a magic number: "When exposing the internals of Version".x(() =>  			{  				result = SUT.ExposeInternalsOf(typeof(Version)' typeof(Uri));  				versionProperties = ReflectionCache.GetProperties(new Version(1' 2' 3' 4));  				uriProperties = ReflectionCache.GetProperties(new Uri("http://google.com"));  			});
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Expoising_internals_of_many_types,The following statement contains a magic number: "When exposing the internals of Version".x(() =>  			{  				result = SUT.ExposeInternalsOf(typeof(Version)' typeof(Uri));  				versionProperties = ReflectionCache.GetProperties(new Version(1' 2' 3' 4));  				uriProperties = ReflectionCache.GetProperties(new Uri("http://google.com"));  			});
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_default_Comparison,The following statement contains a magic number: "And the 3rd comparer is the EnumComparison".x(() =>   				result.Comparisons[2].ShouldBeAssignableTo<EnumComparison>()  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_default_Comparison,The following statement contains a magic number: "And the 4th comparer is the DictionaryComparison".x(() =>   				result.Comparisons[3].ShouldBeAssignableTo<DictionaryComparison>()  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_default_Comparison,The following statement contains a magic number: "... with a DefaultComparison as the key comparer".x(() =>   				((DictionaryComparison)result.Comparisons[3]).KeyComparer.ShouldBeAssignableTo<DefaultComparison>()  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_default_Comparison,The following statement contains a magic number: "... and the value comparer is the result".x(() =>   				((DictionaryComparison)result.Comparisons[3]).ValueComparer.ShouldBeSameAs(result)  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_default_Comparison,The following statement contains a magic number: "And the 5th comparer is the DictionaryComparison".x(() =>   				result.Comparisons[4].ShouldBeAssignableTo<SetComparison>()  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_default_Comparison,The following statement contains a magic number: "... and the inner comparer is the result".x(() =>   				((SetComparison)result.Comparisons[4]).Inner.ShouldBeSameAs(result)  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_default_Comparison,The following statement contains a magic number: "And the 6th comparer is the DictionaryComparison".x(() =>   				result.Comparisons[5].ShouldBeAssignableTo<ListComparison>()  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_default_Comparison,The following statement contains a magic number: "... and the inner comparer is the result".x(() =>   				((ListComparison)result.Comparisons[5]).Inner.ShouldBeSameAs(result)  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_default_Comparison,The following statement contains a magic number: "And the 7th comparer is the ComplexObjectComparison".x(() =>   				result.Comparisons[6].ShouldBeAssignableTo<ComplexObjectComparison>()  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_default_Comparison,The following statement contains a magic number: "... and the inner comparer is the result".x(() =>   				((ComplexObjectComparison)result.Comparisons[6]).Inner.ShouldBeSameAs(result)  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_default_Comparison,The following statement contains a magic number: "... and IgnoreUnmatchedProperties should be false".x(() =>   				((ComplexObjectComparison)result.Comparisons[6]).IgnoreUnmatchedProperties.ShouldBe(false)  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_Comparison_and_ignoring_unmatched_properties,The following statement contains a magic number: "Then the 6th comparer is the ComplexObjectComparison".x(() =>   				result.Comparisons[6].ShouldBeAssignableTo<ComplexObjectComparison>()  			);
Magic Number,DeepEqual.Test,ComparisonBuilderTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ComparisonBuilderTests.cs,Creating_a_Comparison_and_ignoring_unmatched_properties,The following statement contains a magic number: "... and IgnoreUnmatchedProperties should be true".x(() =>   				((ComplexObjectComparison)result.Comparisons[6]).IgnoreUnmatchedProperties.ShouldBe(true)  			);
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object1 = new  				{  					A = 1'  					B = UriKind.Absolute'  					C = new List<int> {1' 2' 3}'  					Float = 1.111_111_8f'  					Double = 1.111_111_111_111_118d'  					Inner = new  						{  							X = 1'  							Y = 2'  							Z = 3  						}'  					Set = new[] {3' 4' 2' 1}'  					Dictionary = new Dictionary<int' int>  						{  							{2' 3}'  							{123' 234}'  							{345' 456}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSink,The following statement contains a magic number: var object2 = new  				{  					A = 1'  					B = "Absolute"'  					C = new[] {1' 2' 3}'  					Float = 1.111_111_9m'  					Double = 1.111_111_111_111_119m'  					Inner = new TestType  						{  							X = 1'  							Y = 3'  							Z = 3  						}'  					Set = new HashSet<int> {1' 2' 3' 4}'  					Dictionary = new Dictionary<int' int>  						{  							{123' 234}'  							{345' 456}'  							{2' 3}  						}  				};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object1 = new  			{  				A = 1'  				B = UriKind.Absolute'  				C = new List<int> { 1' 2' 3 }'  				Float = 1.111_111_6f'  				Double = 1.111_111_111_111_116d'  				String = "a1b2c3"'  				Inner = new  				{  					X = 1'  					Y = 2'  					Z = 3  				}'  				Set = new[] { 3' 4' 2' 1 }'  				Dictionary = new Dictionary<int' int>  				{  					{2' 3}'  					{123' 234}'  					{345' 456}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,DeepComparisonTest,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\DeepComparisonTest.cs,KitchenSinkFailures,The following statement contains a magic number: var object2 = new  			{  				A = 2'  				B = "Not Quite Absolute"'  				C = new[] { 3' 2' 1 }'  				Float = 1.111_111_9m'  				Double = 1.111_111_111_111_119m'  				String = new Regex("^(abc)\\d+$")'  				Inner = new TestType  				{  					X = 1'  					Y = 3'  					Z = 3  				}'  				Set = new HashSet<int> { 1' 2' 3' 5 }'  				Dictionary = new Dictionary<int' int>  				{  					{123' 2345}'  					{34' 456}'  					{2' 3}  				}  			};
Magic Number,DeepEqual.Test,ExceptionMessageTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ExceptionMessageTests.cs,Single_int_difference,The following statement contains a magic number: var context = new ComparisonContext()  				.AddDifference(1' 2);
Magic Number,DeepEqual.Test,ExceptionMessageTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ExceptionMessageTests.cs,List_int_difference,The following statement contains a magic number: var childContext1 = root  				.VisitingIndex(2)  				.AddDifference(1' 2);
Magic Number,DeepEqual.Test,ExceptionMessageTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ExceptionMessageTests.cs,List_int_difference,The following statement contains a magic number: var childContext1 = root  				.VisitingIndex(2)  				.AddDifference(1' 2);
Magic Number,DeepEqual.Test,ExceptionMessageTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ExceptionMessageTests.cs,List_int_difference,The following statement contains a magic number: var childContext2 = root  				.VisitingIndex(4)  				.AddDifference(4' 5);
Magic Number,DeepEqual.Test,ExceptionMessageTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ExceptionMessageTests.cs,List_int_difference,The following statement contains a magic number: var childContext2 = root  				.VisitingIndex(4)  				.AddDifference(4' 5);
Magic Number,DeepEqual.Test,ExceptionMessageTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ExceptionMessageTests.cs,List_int_difference,The following statement contains a magic number: var childContext2 = root  				.VisitingIndex(4)  				.AddDifference(4' 5);
Magic Number,DeepEqual.Test,ExceptionMessageTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ExceptionMessageTests.cs,Set_difference_expected,The following statement contains a magic number: var context = new ComparisonContext()  				.AddDifference(new SetDifference(  					breadcrumb: ".Set"'  					expected: new List<object> { 1' 2' 3 }'  					extra: new List<object>()  				));
Magic Number,DeepEqual.Test,ExceptionMessageTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ExceptionMessageTests.cs,Set_difference_expected,The following statement contains a magic number: var context = new ComparisonContext()  				.AddDifference(new SetDifference(  					breadcrumb: ".Set"'  					expected: new List<object> { 1' 2' 3 }'  					extra: new List<object>()  				));
Magic Number,DeepEqual.Test,ExceptionMessageTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ExceptionMessageTests.cs,Set_difference_actual,The following statement contains a magic number: var context = new ComparisonContext()  				.AddDifference(new SetDifference(  					breadcrumb: ".Set"'  					expected: new List<object>()'  					extra: new List<object> {1' 2' 3}  				));
Magic Number,DeepEqual.Test,ExceptionMessageTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ExceptionMessageTests.cs,Set_difference_actual,The following statement contains a magic number: var context = new ComparisonContext()  				.AddDifference(new SetDifference(  					breadcrumb: ".Set"'  					expected: new List<object>()'  					extra: new List<object> {1' 2' 3}  				));
Magic Number,DeepEqual.Test,ExceptionMessageTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ExceptionMessageTests.cs,Custom_difference_type,The following statement contains a magic number: var context = new ComparisonContext()  				.AddDifference(new CustomDifference(".Custom"' 123));
Magic Number,DeepEqual.Test,ExceptionMessageTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\ExceptionMessageTests.cs,Custom_difference_type_formatter,The following statement contains a magic number: var context = new ComparisonContext()  				.AddDifference(new CustomDifference(".Custom"' 123));
Magic Number,DeepEqual.Test.Comparsions,ComplexObjectComparisonTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Comparsions\ComplexObjectComparisonTests.cs,Comparing_dynamic_object_with_static_object_succeeds,The following statement contains a magic number: "And a dynamic object".x(() =>  			{  				value1 = new ExpandoObject();  				value1.Foo = "abc";  				value1.Bar = 123;  			});
Magic Number,DeepEqual.Test.Comparsions,ComplexObjectComparisonTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Comparsions\ComplexObjectComparisonTests.cs,Comparing_dynamic_object_with_static_object_succeeds,The following statement contains a magic number: "And a static object".x(() =>  			{  				value2 = new  				{  					Foo = "abc"'  					Bar = 123  				};  			});
Magic Number,DeepEqual.Test.Comparsions,DefaultComparisonTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Comparsions\DefaultComparisonTests.cs,Comparing_incompatible_types_returns_Inconclusive,The following statement contains a magic number: "And 2 objects to compare".x(() =>  			{  				object1 = new object();  				object2 = 123;  			});
Magic Number,DeepEqual.Test.Comparsions,FloatComparisonTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Comparsions\FloatComparisonTests.cs,Creating_a_DefaultComparison,The following statement contains a magic number: "When creating a DefaultComparison".x(() =>   				SUT = new FloatComparison(0.1d' 0.1f)  			);
Magic Number,DeepEqual.Test.Comparsions,FloatComparisonTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Comparsions\FloatComparisonTests.cs,Creating_a_DefaultComparison,The following statement contains a magic number: "When creating a DefaultComparison".x(() =>   				SUT = new FloatComparison(0.1d' 0.1f)  			);
Magic Number,DeepEqual.Test.Comparsions,FloatComparisonTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Comparsions\FloatComparisonTests.cs,Can_compare_float_types,The following statement contains a magic number: "Given a DefaultComparison".x(() =>   				SUT = new FloatComparison(0.1d' 0.1f)  			);
Magic Number,DeepEqual.Test.Comparsions,FloatComparisonTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Comparsions\FloatComparisonTests.cs,Can_compare_float_types,The following statement contains a magic number: "Given a DefaultComparison".x(() =>   				SUT = new FloatComparison(0.1d' 0.1f)  			);
Magic Number,DeepEqual.Test.Features,ComparingTypesWithPrivateFields,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Features\ComparingTypesWithPrivateFields.cs,When_exposing_internals_differences_in_internals_count,The following statement contains a magic number: var expected = new ClassWithPrivates(123)  			{  				Id = 234'  				Name = "Joe"'  				Internal = "???"  			};
Magic Number,DeepEqual.Test.Features,ComparingTypesWithPrivateFields,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Features\ComparingTypesWithPrivateFields.cs,When_exposing_internals_differences_in_internals_count,The following statement contains a magic number: var expected = new ClassWithPrivates(123)  			{  				Id = 234'  				Name = "Joe"'  				Internal = "???"  			};
Magic Number,DeepEqual.Test.Features,ComparingTypesWithPrivateFields,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Features\ComparingTypesWithPrivateFields.cs,When_exposing_internals_differences_in_internals_count,The following statement contains a magic number: var actual = new ClassWithPrivates(321)  			{  				Id = 234'  				Name = "Joe"'  				Internal = "!!!"  			};
Magic Number,DeepEqual.Test.Features,ComparingTypesWithPrivateFields,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Features\ComparingTypesWithPrivateFields.cs,When_exposing_internals_differences_in_internals_count,The following statement contains a magic number: var actual = new ClassWithPrivates(321)  			{  				Id = 234'  				Name = "Joe"'  				Internal = "!!!"  			};
Magic Number,DeepEqual.Test.Features,ComparingTypesWithPrivateFields,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Features\ComparingTypesWithPrivateFields.cs,When_exposing_internals_similar_objects_are_considered_the_same,The following statement contains a magic number: var expected = new ClassWithPrivates(123)  			{  				Id = 234'  				Name = "Joe"'  				Internal = "???"  			};
Magic Number,DeepEqual.Test.Features,ComparingTypesWithPrivateFields,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Features\ComparingTypesWithPrivateFields.cs,When_exposing_internals_similar_objects_are_considered_the_same,The following statement contains a magic number: var expected = new ClassWithPrivates(123)  			{  				Id = 234'  				Name = "Joe"'  				Internal = "???"  			};
Magic Number,DeepEqual.Test.Features,ComparingTypesWithPrivateFields,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Features\ComparingTypesWithPrivateFields.cs,When_exposing_internals_similar_objects_are_considered_the_same,The following statement contains a magic number: var actual = new ClassWithPrivates(123)  			{  				Id = 234'  				Name = "Joe"'  				Internal = "???"  			};
Magic Number,DeepEqual.Test.Features,ComparingTypesWithPrivateFields,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Features\ComparingTypesWithPrivateFields.cs,When_exposing_internals_similar_objects_are_considered_the_same,The following statement contains a magic number: var actual = new ClassWithPrivates(123)  			{  				Id = 234'  				Name = "Joe"'  				Internal = "???"  			};
Magic Number,DeepEqual.Test.Features,ComparingTypesWithPublicFields,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Features\ComparingTypesWithPublicFields.cs,Should_consider_public_fields_when_comparing_complex_objects,The following statement contains a magic number: var actual = new Data  				{  					Id = 2'  					Name = "Joe"  				};
Magic Number,DeepEqual.Test.Syntax,CompareSyntaxTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Syntax\CompareSyntaxTests.cs,Delegates_WithFloatingPointTolerance,The following statement contains a magic number: syntax.WithFloatingPointTolerance(1' 2);
Magic Number,DeepEqual.Test.Syntax,CompareSyntaxTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Syntax\CompareSyntaxTests.cs,Delegates_WithFloatingPointTolerance,The following statement contains a magic number: builder.Verify(x => x.WithFloatingPointTolerance(1' 2)' Times.Once());
Magic Number,DeepEqual.Test.Syntax,ResultTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Syntax\ResultTests.cs,ExceptionContainsExpectedInfo,The following statement contains a magic number: var value2 = new { A = 2 };
Magic Number,DeepEqual.Test.Syntax,ResultTests,D:\research\architectureSmells\repos\jamesfoster_DeepEqual\src\DeepEqual.Test\Syntax\ResultTests.cs,ExceptionContainsExpectedInfo,The following statement contains a magic number: difference.Value2.ShouldBe(2);
