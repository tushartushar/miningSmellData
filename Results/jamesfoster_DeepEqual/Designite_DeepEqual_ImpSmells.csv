Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DeepEqual,ComparisonBuilder,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\ComparisonBuilder.cs,Create,The length of the statement  "	Root.AddRange (DefaultComparison' new EnumComparison ()' new DictionaryComparison (new DefaultComparison ()' Root)' new SetComparison (Root)' new ListComparison (Root)' ComplexObjectComparison); " is 194.
Long Statement,DeepEqual,Difference,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Difference.cs,Equals,The length of the statement  "	return string.Equals (Breadcrumb' other.Breadcrumb) && string.Equals (ChildProperty' other.ChildProperty) && Equals (Value1' other.Value1) && Equals (Value2' other.Value2); " is 172.
Long Statement,DeepEqual,DefaultComparison,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\DefaultComparison.cs,CallImplicitOperator,The length of the statement  "	var conversionMethod = type.GetMethods ().Where (x => x.Name == "op_Implicit" || x.Name == "op_Explicit").FirstOrDefault (x => x.ReturnType == destType); " is 153.
Long Statement,DeepEqual,DefaultComparison,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\DefaultComparison.cs,CallImplicitOperator,The length of the statement  "		conversionMethod = destType.GetMethods ().Where (x => x.Name == "op_Implicit" || x.Name == "op_Explicit").FirstOrDefault (x => x.GetParameters ().First ().ParameterType == type); " is 178.
Long Statement,DeepEqual,EnumComparison,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\EnumComparison.cs,CanCompare,The length of the statement  "	return (type1.IsEnum || type1 == typeof(string) || type1 == typeof(int)) && (type2.IsEnum || type2 == typeof(string) || type2 == typeof(int)); " is 142.
Long Statement,DeepEqual.Formatting,MissingEntryDifferenceFormatter,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Formatting\MissingEntryDifferenceFormatter.cs,Format,The length of the statement  "	var format = difference.Side == MissingSide.Expected ? "Expected{0}[{1}] not found (Actual{0}[{1}] = {2})" : "Actual{0}[{1}] not found (Expected{0}[{1}] = {2})"; " is 161.
Empty Catch Block,DeepEqual,ReflectionCache,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\ReflectionCache.cs,GetDynamicProperties,The method has an empty catch block.
Empty Catch Block,DeepEqual,DefaultComparison,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\DefaultComparison.cs,CoerceValues,The method has an empty catch block.
Empty Catch Block,DeepEqual,DefaultComparison,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\DefaultComparison.cs,CoerceValues,The method has an empty catch block.
Magic Number,DeepEqual,Difference,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Difference.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (Breadcrumb != null ? Breadcrumb.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ChildProperty != null ? ChildProperty.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Value1 != null ? Value1.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Value2 != null ? Value2.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,DeepEqual,Difference,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Difference.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (Breadcrumb != null ? Breadcrumb.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ChildProperty != null ? ChildProperty.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Value1 != null ? Value1.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Value2 != null ? Value2.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,DeepEqual,Difference,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Difference.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var hashCode = (Breadcrumb != null ? Breadcrumb.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (ChildProperty != null ? ChildProperty.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Value1 != null ? Value1.GetHashCode () : 0);  	hashCode = (hashCode * 397) ^ (Value2 != null ? Value2.GetHashCode () : 0);  	return hashCode;  }  
Magic Number,DeepEqual,Difference,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Difference.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (ChildProperty != null ? ChildProperty.GetHashCode () : 0);  
Magic Number,DeepEqual,Difference,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Difference.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Value1 != null ? Value1.GetHashCode () : 0);  
Magic Number,DeepEqual,Difference,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Difference.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Value2 != null ? Value2.GetHashCode () : 0);  
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: if (lowerBound >= 3) {  	if (value1.Length > maxLength1) {  		value1 = "..." + value1.Substring (Math.Min (lowerBound' value1.Length - maxLength1));  		maxLength1 += 3;  	}  	if (value2.Length > maxLength2) {  		value2 = "..." + value2.Substring (Math.Min (lowerBound' value2.Length - maxLength2));  		maxLength2 += 3;  	}  }  
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: if (lowerBound >= 3) {  	if (value1.Length > maxLength1) {  		value1 = "..." + value1.Substring (Math.Min (lowerBound' value1.Length - maxLength1));  		maxLength1 += 3;  	}  	if (value2.Length > maxLength2) {  		value2 = "..." + value2.Substring (Math.Min (lowerBound' value2.Length - maxLength2));  		maxLength2 += 3;  	}  }  
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: if (lowerBound >= 3) {  	if (value1.Length > maxLength1) {  		value1 = "..." + value1.Substring (Math.Min (lowerBound' value1.Length - maxLength1));  		maxLength1 += 3;  	}  	if (value2.Length > maxLength2) {  		value2 = "..." + value2.Substring (Math.Min (lowerBound' value2.Length - maxLength2));  		maxLength2 += 3;  	}  }  
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: if (value1.Length > maxLength1) {  	value1 = "..." + value1.Substring (Math.Min (lowerBound' value1.Length - maxLength1));  	maxLength1 += 3;  }  
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: maxLength1 += 3;  
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: if (value2.Length > maxLength2) {  	value2 = "..." + value2.Substring (Math.Min (lowerBound' value2.Length - maxLength2));  	maxLength2 += 3;  }  
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: maxLength2 += 3;  
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: if (value1.Length > maxLength1 + 3)  	value1 = value1.Substring (0' maxLength1) + "...";  
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,F:\newReposMay17\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: if (value2.Length > maxLength2 + 3)  	value2 = value2.Substring (0' maxLength2) + "...";  
