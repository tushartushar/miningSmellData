Implementation smell,Namespace,Class,File,Method,Description
Empty Catch Block,DeepEqual,ReflectionCache,C:\repos\jamesfoster_DeepEqual\src\DeepEqual\ReflectionCache.cs,GetDynamicProperties,The method has an empty catch block.
Empty Catch Block,DeepEqual,DefaultComparison,C:\repos\jamesfoster_DeepEqual\src\DeepEqual\DefaultComparison.cs,CoerceValues,The method has an empty catch block.
Empty Catch Block,DeepEqual,DefaultComparison,C:\repos\jamesfoster_DeepEqual\src\DeepEqual\DefaultComparison.cs,CoerceValues,The method has an empty catch block.
Magic Number,DeepEqual,Difference,C:\repos\jamesfoster_DeepEqual\src\DeepEqual\Difference.cs,GetHashCode,The following statement contains a magic number: unchecked  			{  				var hashCode = (Breadcrumb != null ? Breadcrumb.GetHashCode() : 0);  				hashCode = (hashCode*397) ^ (ChildProperty != null ? ChildProperty.GetHashCode() : 0);  				hashCode = (hashCode*397) ^ (Value1 != null ? Value1.GetHashCode() : 0);  				hashCode = (hashCode*397) ^ (Value2 != null ? Value2.GetHashCode() : 0);  				return hashCode;  			}
Magic Number,DeepEqual,Difference,C:\repos\jamesfoster_DeepEqual\src\DeepEqual\Difference.cs,GetHashCode,The following statement contains a magic number: unchecked  			{  				var hashCode = (Breadcrumb != null ? Breadcrumb.GetHashCode() : 0);  				hashCode = (hashCode*397) ^ (ChildProperty != null ? ChildProperty.GetHashCode() : 0);  				hashCode = (hashCode*397) ^ (Value1 != null ? Value1.GetHashCode() : 0);  				hashCode = (hashCode*397) ^ (Value2 != null ? Value2.GetHashCode() : 0);  				return hashCode;  			}
Magic Number,DeepEqual,Difference,C:\repos\jamesfoster_DeepEqual\src\DeepEqual\Difference.cs,GetHashCode,The following statement contains a magic number: unchecked  			{  				var hashCode = (Breadcrumb != null ? Breadcrumb.GetHashCode() : 0);  				hashCode = (hashCode*397) ^ (ChildProperty != null ? ChildProperty.GetHashCode() : 0);  				hashCode = (hashCode*397) ^ (Value1 != null ? Value1.GetHashCode() : 0);  				hashCode = (hashCode*397) ^ (Value2 != null ? Value2.GetHashCode() : 0);  				return hashCode;  			}
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,C:\repos\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: var lowerBound = Math.Max(0' firstDiffIndex - 10);
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,C:\repos\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: if (lowerBound >= 3)  			{  				if (value1.Length > maxLength1)  				{  					value1 = "..." + value1.Substring(Math.Min(lowerBound' value1.Length - maxLength1));  					maxLength1 += 3;  				}    				if (value2.Length > maxLength2)  				{  					value2 = "..." + value2.Substring(Math.Min(lowerBound' value2.Length - maxLength2));  					maxLength2 += 3;  				}  			}
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,C:\repos\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: if (lowerBound >= 3)  			{  				if (value1.Length > maxLength1)  				{  					value1 = "..." + value1.Substring(Math.Min(lowerBound' value1.Length - maxLength1));  					maxLength1 += 3;  				}    				if (value2.Length > maxLength2)  				{  					value2 = "..." + value2.Substring(Math.Min(lowerBound' value2.Length - maxLength2));  					maxLength2 += 3;  				}  			}
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,C:\repos\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: if (lowerBound >= 3)  			{  				if (value1.Length > maxLength1)  				{  					value1 = "..." + value1.Substring(Math.Min(lowerBound' value1.Length - maxLength1));  					maxLength1 += 3;  				}    				if (value2.Length > maxLength2)  				{  					value2 = "..." + value2.Substring(Math.Min(lowerBound' value2.Length - maxLength2));  					maxLength2 += 3;  				}  			}
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,C:\repos\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: if (value1.Length > maxLength1 + 3) value1 = value1.Substring(0' maxLength1) + "...";
Magic Number,DeepEqual.Formatting,BasicDifferenceFormatter,C:\repos\jamesfoster_DeepEqual\src\DeepEqual\Formatting\BasicDifferenceFormatter.cs,FixLongStringDifference,The following statement contains a magic number: if (value2.Length > maxLength2 + 3) value2 = value2.Substring(0' maxLength2) + "...";
