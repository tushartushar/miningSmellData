Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,Cyclomatic complexity of the method is 12
Long Parameter List,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The method has 6 parameters.
Long Statement,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,BuildMidToTids,The length of the statement  "	var melds = Enumerable.Concat (Pung.GetAllPungs (MS.Concealed).Cast<Meld> ()' Chow.GetAllChows (MS.Concealed).Cast<Meld> ()); " is 125.
Magic Number,NMahjong.Sample,ShantenIntelligence,C:\repos\yuizumi_nmahjong\src\sample\Shanten.cs,OnTurn,The following statement contains a magic number: foreach (var action in actions.OfType<DiscardAction> ()) {  	--vector [action.Tile.BaseTile.GetIndex ()];  	int shanten = ShantenHelper.GetShantensu (vector' 4 - Self.Melds.Count);  	if (shanten <= minShanten) {  		if (shanten < minShanten)  			choices.Clear ();  		minShanten = shanten;  		choices.Add (action);  	}  	++vector [action.Tile.BaseTile.GetIndex ()];  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,GetShantensu,The following statement contains a magic number: return ComputeShantensu (reqMelds' vector' new int[NumTiles]' 0' -1' 99);  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: if (reqMelds == 0) {  	for (int tid = 0; tid < NumTiles; ++tid) {  		if (hand [tid] - goal [tid] >= 2) {  			limit = accum;  			break;  		}  		if (goal [tid] <= 2) {  			int newAccum = accum + Math.Min (goal [tid] + 2 - hand [tid]' 2);  			limit = Math.Min (limit' newAccum);  		}  	}  }  else {  	for (; mid < NumMelds; ++mid) {  		var tids = MidToTids [mid];  		int newAccum = accum;  		bool valid = true;  		foreach (int tid in tids) {  			++goal [tid];  			if (goal [tid] > hand [tid])  				++newAccum;  			if (goal [tid] > 4)  				valid = false;  		}  		if (valid && newAccum < limit) {  			limit = ComputeShantensu (reqMelds - 1' hand' goal' mid' newAccum' limit);  		}  		foreach (int tid in tids)  			--goal [tid];  	}  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: if (reqMelds == 0) {  	for (int tid = 0; tid < NumTiles; ++tid) {  		if (hand [tid] - goal [tid] >= 2) {  			limit = accum;  			break;  		}  		if (goal [tid] <= 2) {  			int newAccum = accum + Math.Min (goal [tid] + 2 - hand [tid]' 2);  			limit = Math.Min (limit' newAccum);  		}  	}  }  else {  	for (; mid < NumMelds; ++mid) {  		var tids = MidToTids [mid];  		int newAccum = accum;  		bool valid = true;  		foreach (int tid in tids) {  			++goal [tid];  			if (goal [tid] > hand [tid])  				++newAccum;  			if (goal [tid] > 4)  				valid = false;  		}  		if (valid && newAccum < limit) {  			limit = ComputeShantensu (reqMelds - 1' hand' goal' mid' newAccum' limit);  		}  		foreach (int tid in tids)  			--goal [tid];  	}  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: if (reqMelds == 0) {  	for (int tid = 0; tid < NumTiles; ++tid) {  		if (hand [tid] - goal [tid] >= 2) {  			limit = accum;  			break;  		}  		if (goal [tid] <= 2) {  			int newAccum = accum + Math.Min (goal [tid] + 2 - hand [tid]' 2);  			limit = Math.Min (limit' newAccum);  		}  	}  }  else {  	for (; mid < NumMelds; ++mid) {  		var tids = MidToTids [mid];  		int newAccum = accum;  		bool valid = true;  		foreach (int tid in tids) {  			++goal [tid];  			if (goal [tid] > hand [tid])  				++newAccum;  			if (goal [tid] > 4)  				valid = false;  		}  		if (valid && newAccum < limit) {  			limit = ComputeShantensu (reqMelds - 1' hand' goal' mid' newAccum' limit);  		}  		foreach (int tid in tids)  			--goal [tid];  	}  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: if (reqMelds == 0) {  	for (int tid = 0; tid < NumTiles; ++tid) {  		if (hand [tid] - goal [tid] >= 2) {  			limit = accum;  			break;  		}  		if (goal [tid] <= 2) {  			int newAccum = accum + Math.Min (goal [tid] + 2 - hand [tid]' 2);  			limit = Math.Min (limit' newAccum);  		}  	}  }  else {  	for (; mid < NumMelds; ++mid) {  		var tids = MidToTids [mid];  		int newAccum = accum;  		bool valid = true;  		foreach (int tid in tids) {  			++goal [tid];  			if (goal [tid] > hand [tid])  				++newAccum;  			if (goal [tid] > 4)  				valid = false;  		}  		if (valid && newAccum < limit) {  			limit = ComputeShantensu (reqMelds - 1' hand' goal' mid' newAccum' limit);  		}  		foreach (int tid in tids)  			--goal [tid];  	}  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: if (reqMelds == 0) {  	for (int tid = 0; tid < NumTiles; ++tid) {  		if (hand [tid] - goal [tid] >= 2) {  			limit = accum;  			break;  		}  		if (goal [tid] <= 2) {  			int newAccum = accum + Math.Min (goal [tid] + 2 - hand [tid]' 2);  			limit = Math.Min (limit' newAccum);  		}  	}  }  else {  	for (; mid < NumMelds; ++mid) {  		var tids = MidToTids [mid];  		int newAccum = accum;  		bool valid = true;  		foreach (int tid in tids) {  			++goal [tid];  			if (goal [tid] > hand [tid])  				++newAccum;  			if (goal [tid] > 4)  				valid = false;  		}  		if (valid && newAccum < limit) {  			limit = ComputeShantensu (reqMelds - 1' hand' goal' mid' newAccum' limit);  		}  		foreach (int tid in tids)  			--goal [tid];  	}  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: for (int tid = 0; tid < NumTiles; ++tid) {  	if (hand [tid] - goal [tid] >= 2) {  		limit = accum;  		break;  	}  	if (goal [tid] <= 2) {  		int newAccum = accum + Math.Min (goal [tid] + 2 - hand [tid]' 2);  		limit = Math.Min (limit' newAccum);  	}  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: for (int tid = 0; tid < NumTiles; ++tid) {  	if (hand [tid] - goal [tid] >= 2) {  		limit = accum;  		break;  	}  	if (goal [tid] <= 2) {  		int newAccum = accum + Math.Min (goal [tid] + 2 - hand [tid]' 2);  		limit = Math.Min (limit' newAccum);  	}  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: for (int tid = 0; tid < NumTiles; ++tid) {  	if (hand [tid] - goal [tid] >= 2) {  		limit = accum;  		break;  	}  	if (goal [tid] <= 2) {  		int newAccum = accum + Math.Min (goal [tid] + 2 - hand [tid]' 2);  		limit = Math.Min (limit' newAccum);  	}  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: for (int tid = 0; tid < NumTiles; ++tid) {  	if (hand [tid] - goal [tid] >= 2) {  		limit = accum;  		break;  	}  	if (goal [tid] <= 2) {  		int newAccum = accum + Math.Min (goal [tid] + 2 - hand [tid]' 2);  		limit = Math.Min (limit' newAccum);  	}  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: if (hand [tid] - goal [tid] >= 2) {  	limit = accum;  	break;  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: if (goal [tid] <= 2) {  	int newAccum = accum + Math.Min (goal [tid] + 2 - hand [tid]' 2);  	limit = Math.Min (limit' newAccum);  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: if (goal [tid] <= 2) {  	int newAccum = accum + Math.Min (goal [tid] + 2 - hand [tid]' 2);  	limit = Math.Min (limit' newAccum);  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: if (goal [tid] <= 2) {  	int newAccum = accum + Math.Min (goal [tid] + 2 - hand [tid]' 2);  	limit = Math.Min (limit' newAccum);  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: for (; mid < NumMelds; ++mid) {  	var tids = MidToTids [mid];  	int newAccum = accum;  	bool valid = true;  	foreach (int tid in tids) {  		++goal [tid];  		if (goal [tid] > hand [tid])  			++newAccum;  		if (goal [tid] > 4)  			valid = false;  	}  	if (valid && newAccum < limit) {  		limit = ComputeShantensu (reqMelds - 1' hand' goal' mid' newAccum' limit);  	}  	foreach (int tid in tids)  		--goal [tid];  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: foreach (int tid in tids) {  	++goal [tid];  	if (goal [tid] > hand [tid])  		++newAccum;  	if (goal [tid] > 4)  		valid = false;  }  
Magic Number,NMahjong.Sample,ShantenHelper,C:\repos\yuizumi_nmahjong\src\sample\ShantenHelper.cs,ComputeShantensu,The following statement contains a magic number: if (goal [tid] > 4)  	valid = false;  
