Implementation smell,Namespace,Class,File,Method,Description
Long Method,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The method has 103 lines of code.
Long Method,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,SelectFunc,The method has 127 lines of code.
Complex Method,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,SelectFunc,Cyclomatic complexity of the method is 32
Complex Method,DryadLinqTests,Validate,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,Check,Cyclomatic complexity of the method is 13
Long Parameter List,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,TestUDT,The method has 5 parameters. Parameters: context' source' testMessage' expectedExceptionType' expectedErrorCode
Long Parameter List,DryadLinqTests,Utils,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,DeleteFile,The method has 5 parameters. Parameters: accountName' accountKey' containerName' fileName' delSubDirs
Long Parameter List,DryadLinqTests,Validate,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,Check,The method has 5 parameters. Parameters: ss' comparer' sort' verbose' sortcomparer
Long Statement,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Run,The length of the statement  "                  {"Bug14449_ContextShouldExposeVersionIDs"' () => Bug14449_ContextShouldExposeVersionIDs(context) }' // not valid anymore " is 120.
Long Statement,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ToStoreThrowsForNonQuery,The length of the statement  "                var q1 = data.AsQueryable().Select(x => 100 + x).ToStore<int>(AzureUtils.ToAzureUri(Config.accountName' Config.storageKey' Config.containerName' " is 144.
Long Statement,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,MaterializeToStoreTerminated,The length of the statement  "                    var q1 = query.ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile_a)' true); //stream name w/o prefixed slash " is 138.
Long Statement,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,MaterializeToStoreTerminated,The length of the statement  "                    var q2 = query.Where(x => true).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile_b)' true);  //stream name w/ prefixed slash " is 155.
Long Statement,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug11638_LongWhere,The length of the statement  "                    IQueryable<int> outPT = q.LongWhere((x' i) => true).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true); " is 140.
Long Statement,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,Run,The length of the statement  "                  {"Bug12078_GroupByReduceWithResultSelectingAggregate"' () => Bug12078_GroupByReduceWithResultSelectingAggregate(context) }' " is 123.
Long Statement,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,Run,The length of the statement  "                  {"GroupByReduceWithCustomDecomposableFunction_NonDistributableCombiner"' () => GroupByReduceWithCustomDecomposableFunction_NonDistributableCombiner(context) }' " is 159.
Long Statement,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,Run,The length of the statement  "                  {"GroupByReduceWithCustomDecomposableFunction_DistributableCombiner"' () => GroupByReduceWithCustomDecomposableFunction_DistributableCombiner(context) }' " is 153.
Long Statement,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,Run,The length of the statement  "                  {"GroupByReduceWithCustomDecomposableFunction_DistributableCombiner_DifferingTypes"' () => GroupByReduceWithCustomDecomposableFunction_DistributableCombiner_DifferingTypes(context) }' " is 183.
Long Statement,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,Run,The length of the statement  "                  {"GroupByReduceWithCustomDecomposableFunction_DistributableCombiner_NoFinalizer"' () => GroupByReduceWithCustomDecomposableFunction_DistributableCombiner_NoFinalizer(context) }' " is 177.
Long Statement,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,Run,The length of the statement  "                  {"GroupByReduce_ResultSelector_ComplexNewExpression"' () => GroupByReduce_ResultSelector_ComplexNewExpression(context) }' " is 121.
Long Statement,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,DecomposableFunc,The length of the statement  "            // hard to test with context system.. TestUtils.Assert(HpcLinq.LocalDebug' "This method should only be called during LocalDebug"); " is 130.
Long Statement,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_ResultSelector_ComplexNewExpression,The length of the statement  "                var aggregates = pt1.GroupBy(x => 0' (key' seq) => new KeyValuePair<int' KeyValuePair<double' double>>(key' new KeyValuePair<double' double>(seq.Average()' seq.Average()))).ToArray(); " is 183.
Long Statement,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_ResultSelector_ComplexNewExpression,The length of the statement  "                var expected = pt2.GroupBy(x => 0' (key' seq) => new KeyValuePair<int' KeyValuePair<double' double>>(key' new KeyValuePair<double' double>(seq.Average()' seq.Average()))).ToArray(); " is 181.
Long Statement,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_SameDecomposableUsedTwice,The length of the statement  "                var results0 = pt1.GroupBy(x => x % 2' (k' g) => MyFunc(k' DecomposableFunc5(g)' DecomposableFunc5(g)' g.Average())).ToArray(); " is 127.
Long Statement,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_SameDecomposableUsedTwice,The length of the statement  "                var results1 = pt2.GroupBy(x => x % 2' (k' g) => MyFunc(k' DecomposableFunc5(g)' DecomposableFunc5(g)' g.Average())).ToArray(); " is 127.
Long Statement,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Run,The length of the statement  "                  {"Bug15570_GetHashCodeAndEqualsForNullableFieldsOfAnonymousTypes"' () => Bug15570_GetHashCodeAndEqualsForNullableFieldsOfAnonymousTypes(context) }' " is 147.
Long Statement,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug12584_HashPartitionOutputCount,The length of the statement  "                    var info = pt1.HashPartition(x => x).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true).Submit(); " is 134.
Long Statement,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13637_LocalDebugProducingZeroRecords,The length of the statement  "                    IQueryable<int> pt2 = pt1.Where(x => false).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true); " is 132.
Long Statement,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14010_AlreadyDisposedContext,The length of the statement  "                IQueryable<int> query = pt1.Select(x => x).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' "abc")' true); " is 129.
Long Statement,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14189_OrderPreservation,The length of the statement  "                    passed &= (output.Count() == output.Select(x => x.Key).Distinct().Count()); // "each group should have a distinct key"); " is 120.
Long Statement,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14189_OrderPreservation,The length of the statement  "                    passed &= (output.Count() == output.Select(x => x.Key).Distinct().Count()); // "each group should have a distinct key"); " is 120.
Long Statement,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14192_MultiApplySubExpressionReuse,The length of the statement  "                    var info = pt1.Apply(new[] { pt1' pt1 }' (sources) => new int[] { 1' 2' 3 }).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true).Submit(); " is 174.
Long Statement,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14192_MultiApplySubExpressionReuse,The length of the statement  "                    //passed &= (nVerticesInPlan == 7); // "Only seven vertices should appear (before bug' there were 10 of which the last three were extraneous."); " is 144.
Long Statement,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug15371_NoDataMembersForSerialization,The length of the statement  "                    var result = context.FromStore<NoDataMembersClass>(AzureUtils.ToAzureUri(Config.accountName' Config.storageKey' Config.containerName' outFile)).ToArray(); " is 154.
Long Statement,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug15371_NoDataMembersForSerialization,The length of the statement  "                           Ex.InnerException != null && ((DryadLinqException)Ex.InnerException).ErrorCode == ReflectionHelper.GetDryadLinqErrorCode("TypeMustHaveDataMembers")); // "exception should have been thrown. " is 188.
Long Statement,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug15570_GetHashCodeAndEqualsForNullableFieldsOfAnonymousTypes,The length of the statement  "                    var output = pt1.Select(x => new { FirstField = (x % 2 == 0) ? new int?(x) : default(int?)' SecondField = x.ToString() }) " is 121.
Long Statement,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug15570_GetHashCodeAndEqualsForNullableFieldsOfAnonymousTypes,The length of the statement  "                                    .GroupBy(x => x.FirstField' y => y.SecondField);     // use of GB ensures we exercise the emitted GetHashCode() overload " is 120.
Long Statement,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,Run,The length of the statement  "                  {"RP_keySelector_rangeKeys_keyComparer_isDescending"' () => RP_keySelector_rangeKeys_keyComparer_isDescending(context) }' " is 121.
Long Statement,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector,The length of the statement  "                    IQueryable<int> pt2 = pt1.RangePartition(x => x).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true); " is 137.
Long Statement,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_pcount,The length of the statement  "                    IQueryable<int> pt2 = pt1.RangePartition(x => x' 2).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true); " is 140.
Long Statement,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_isDescending,The length of the statement  "                    IQueryable<int> pt2 = pt1.RangePartition(x => x' true).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true); " is 143.
Long Statement,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The length of the statement  "                    IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 }).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true); " is 156.
Long Statement,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The length of the statement  "                    IQueryable<int> pt2_2 = pt1_2.RangePartition(x => x' new[] { 8' 5' 2 }).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile2)' true); " is 161.
Long Statement,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_isDescending_pcount,The length of the statement  "                    IQueryable<int> pt2 = pt1.RangePartition(x => x' true' 2).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true); " is 146.
Long Statement,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_keyComparer_isDescending,The length of the statement  "                    IQueryable<int> pt2 = pt1.RangePartition(x => x' Comparer<int>.Default' true).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true); " is 166.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_Undecorated>(context' source' "Basic UDT with no attribute. Should not be autoserialized."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("TypeNotSerializable")) }' " is 216.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_MarkedSerializable>(context' source' "Basic UDT which is marked as serializable."' null' 0)}' " is 124.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_StaticSerializer>(context' source' "Basic UDT with old stype static serializers. Should be rejected."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("TypeNotSerializable")) }' " is 227.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_SelfCustomSerializer>(context' source' "UDT implementing custom serializer for itself."' null' 0)}' " is 130.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_BadCustomSerializerType1>(context' source' "UDT decorated with an invalid custom serializer type."' typeof(DryadLinqException)' 0)}' " is 163.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_BadCustomSerializerType2>(context' source' "UDT decorated with another UDT's custom serializer."' typeof(DryadLinqException)' 0)}' " is 161.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_BaseType>(context' source' "UDT with subtypes. Should be rejected"' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("CannotHandleSubtypes"))}' " is 192.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_DerivedType>(context' source' "UDT with a base type. Should be rejected"' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("CannotHandleDerivedtypes"))}' " is 202.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_FieldOfNonPublicType>(context' source' "UDT with a field of a non-public type. Should be rejected"' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("UDTHasFieldOfNonPublicType"))}' " is 230.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_Nested_OuterSerializableInnerNotSerializable>(context' source' "Nested UDT' outer type Serializable' inner type not Serializable. Should not be autoserialized."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("TypeNotSerializable"))}' " is 285.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_Nested_OuterNotSerializableInnerSerializable>(context' source' "Nested UDT' outer type not Serializable' inner type Serializable. Should not be autoserialized."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("TypeNotSerializable"))}' " is 285.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_Nested_InnerAndOuterSerializable>(context' source' "Nested UDT' both outer and innter types marked Serializable."' null' 0)}' " is 156.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_Nested_InnerEnum_InnerAndOuterSerializable>(context' source' "Nested UDT' inner enum' both outer and innter types marked Serializable."' null' 0)}' " is 178.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_FirstLevelCircular>(context' source' "Circular UDT. Should not be autoserialized."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("CannotHandleCircularTypes"))}' " is 213.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_FirstLevelCircularArrayRef>(context' source' "Circular UDT with array reference to self. Should not be autoserialized."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("CannotHandleCircularTypes"))}' " is 250.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_SecondLevelCircular>(context' source' "Circular UDT with indirect reference to self. Should not be autoserialized."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("CannotHandleCircularTypes"))}' " is 246.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_CircularTypeWithCustomSerializer>(context' source' "Circular UDT with a custom serializer. Should not be rejected."' null' 0)}' " is 158.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_TypeContainingCustomSerializedCircularType>(context' source' "An UDT containing a field of a circular UDT with a custom serializer. Should be autoserialized."' null' 0)}' " is 201.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_ObjectField>(context' source' "UDT with a field of type System.Object. Should not be autoserialized."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("CannotHandleObjectFields"))}' " is 231.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_ObjectArrayField>(context' source' "UDT with a field of type System.Object[]. Should not be autoserialized."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("CannotHandleObjectFields"))}' " is 238.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_ObjectListField>(context' source' "UDT with a field of type List<object>. Should not be autoserialized."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("CannotHandleObjectFields"))}' " is 234.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<object>(context' source' "UDT = System.Object. Should not be autoserialized."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("CannotHandleObjectFields"))}' " is 203.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<object[]>(context' source' "UDT = System.Object[]. Should not be autoserialized."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("CannotHandleObjectFields"))}' " is 207.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<List<object>>(context' source' "UDT = List<object>. Should not be autoserialized."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("CannotHandleObjectFields"))}' " is 208.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_EmptyType>(context' source' "Empty UDT. Should be rejected."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("TypeMustHaveDataMembers"))}' " is 189.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_ObjectFieldAndCustomSerializer>(context' source' "UDT with an Object field' and a custom serializer. Should not be rejected."' null' 0)}' " is 168.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_EmptyTypeWithCustomSerializer>(context' source' "Empty UDT with a custom serializer. Should be rejected."' typeof(DryadLinqException)' ReflectionHelper.GetDryadLinqErrorCode("TypeMustHaveDataMembers"))}' " is 234.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,Run,The length of the statement  "                    SerializationTests.TestUDT<UDT_PrivateFieldOfPublicType>(context' source' "UDT with a private field of a public type. Should be autoserialized."' null' 0)}' " is 156.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,TestUDT,The length of the statement  "                    TestLog.Message(String.Format("...FAILED! Caught {0} while while {1} was expected: {0}"' exp.GetType().Name' expectedExceptionType.Name)); " is 138.
Long Statement,DryadLinqTests,SerializationTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTests.cs,TestUDT,The length of the statement  "                else if (exp is DryadLinqException && expectedErrorCode != 0 && ((DryadLinqException)exp).ErrorCode != expectedErrorCode) " is 121.
Long Statement,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,Run,The length of the statement  "                  {"GroupByWithAnonymousTypes_GenericWithAnonTypeParam"' () => GroupByWithAnonymousTypes_GenericWithAnonTypeParam(context) }' " is 123.
Long Statement,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,BadRecordsNotSerialized,The length of the statement  "                    var output = pt1.Select(x => (x % 2 == 0 ? new ChildClass() : new ParentClass())).Select(x => x is ChildClass ? "child" : "parent").ToArray(); " is 142.
Long Statement,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,BadRecordsNotSerialized,The length of the statement  "                    var output = pt1.Select(x => (x % 2 == 0 ? new ChildClass() : new ParentClass())).Select(x => x is ChildClass ? "child" : "parent").ToArray(); " is 142.
Long Statement,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_Bug15675,The length of the statement  "                passed &= (result1.Where(g => g.Key == 1).SelectMany(g => g).Count() == result2.Where(g => g.Key == 1).SelectMany(g => g).Count()); " is 131.
Long Statement,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_Pipeline,The length of the statement  "                passed &= (result1.Where(g => g.Key == 1).SelectMany(g => g).Count() == result2.Where(g => g.Key == 1).SelectMany(g => g).Count());  " is 131.
Long Statement,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_MultipleAnonymousTypes,The length of the statement  "                passed &= (result1.Where(g => g.Key == 1).SelectMany(g => g).Count() == result2.Where(g => g.Key == 1).SelectMany(g => g).Count()); " is 131.
Long Statement,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_GenericWithAnonTypeParam,The length of the statement  "                    passed &= (result1.Where(g => g.Key == 1).SelectMany(g => g).Count() == result2.Where(g => g.Key == 1).SelectMany(g => g).Count()); " is 131.
Long Statement,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_ArrayOfAnon,The length of the statement  "                passed &= (result1.Where(g => g.Key == 1).SelectMany(g => g).Count() == result2.Where(g => g.Key == 1).SelectMany(g => g).Count()); " is 131.
Long Statement,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_NestedAnonTypes,The length of the statement  "                var result1 = pt1.Select(i => new { Num = new { NumInner = new int?(i % 10) } }) // nullable-fields present particular challenge. " is 129.
Long Statement,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_NestedAnonTypes,The length of the statement  "                var result2 = pt2.Select(i => new { Num = new { NumInner = new int?(i % 10) } }) // nullable-fields present particular challenge. " is 129.
Long Statement,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_NestedAnonTypes,The length of the statement  "                passed &= (result1.Where(g => g.Key == 1).SelectMany(g => g).Count() == result2.Where(g => g.Key == 1).SelectMany(g => g).Count());  " is 131.
Long Statement,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetSimpleFileSets,The length of the statement  "            //IQueryable<LineRecord> input = context.FromStore<LineRecord>(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' " is 126.
Long Statement,DryadLinqTests,Utils,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,DeleteFile,The length of the statement  "                CloudStorageAccount storageAccount = CloudStorageAccount.Parse("DefaultEndpointsProtocol=http;AccountName=" + accountName + ";AccountKey=" + accountKey); " is 153.
Long Statement,DryadLinqTests,Utils,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,FileExists,The length of the statement  "                CloudStorageAccount storageAccount = CloudStorageAccount.Parse("DefaultEndpointsProtocol=http;AccountName=" + accountName + ";AccountKey=" + accountKey); " is 153.
Long Statement,DryadLinqTests,Utils,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,MakeDryadRecordReader,The length of the statement  "            // ??? NativeBlockStream nativeStream = ReflectionHelper.CreateDryadLinqFileStream(readPath' FileMode.Open' FileAccess.Read' DscCompressionScheme.None);  " is 152.
Long Statement,DryadLinqTests,ReflectionHelper,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateDryadLinqFileStream,The length of the statement  "            return Assembly.LoadWithPartialName("Microsoft.Hpc.Linq").GetType("Microsoft.Hpc.Linq.Internal.HpcLinqFileStream") //??? " is 120.
Long Statement,DryadLinqTests,ReflectionHelper,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateDryadLinqFileStream,The length of the statement  "                   .GetConstructor(BindingFlags.NonPublic | BindingFlags.Instance' null' parameters.Select(p => p.GetType()).ToArray()' null) " is 122.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ToStoreThrowsForNonQuery,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ContextConfigIsReadOnly,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ContextConfigIsReadOnly,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ContextConfigIsReadOnly,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ContextConfigIsReadOnly,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ContextConfigIsReadOnly,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_SubmitThrowsForDifferentContexts,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_SubmitThrowsForDifferentContexts,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13108_DisableSequenceEquals,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13534_HashPartitionNegIndexIsError,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13534_HashPartitionNegIndexIsError,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13245_FromDsc_Submit_throws,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13245_FromDsc_Submit_throws,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The method has an empty catch block.
Empty Catch Block,DryadLinqTests,Utils,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,MakeBasicConfig,The method has an empty catch block.
Magic Number,DryadLinqTests,ApplyAndForkTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\ApplyAndForkTests.cs,NonHomomorphicUnaryApply,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,ApplyAndForkTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\ApplyAndForkTests.cs,HomomorphicUnaryApply,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,ApplyAndForkTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\ApplyAndForkTests.cs,NonHomomorphicBinaryApply,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,ApplyAndForkTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\ApplyAndForkTests.cs,LeftHomomorphicBinaryApply,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,ApplyAndForkTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\ApplyAndForkTests.cs,FullHomomorphicBinaryApply_DifferentDataSets,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,ApplyAndForkTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\ApplyAndForkTests.cs,FullHomomorphicBinaryApply_IdenticalDataSets,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,ApplyAndForkTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\ApplyAndForkTests.cs,Aggregate_WithCombiner,The following statement contains a magic number: passed &= (q1.Length == 27);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ToStoreThrowsForNonQuery,The following statement contains a magic number: int[] data = new[] { 1' 2' 3 };
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ToStoreThrowsForNonQuery,The following statement contains a magic number: int[] data = new[] { 1' 2' 3 };
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ToStoreThrowsForNonQuery,The following statement contains a magic number: var q1 = data.AsQueryable().Select(x => 100 + x).ToStore<int>(AzureUtils.ToAzureUri(Config.accountName' Config.storageKey' Config.containerName'                             "dummy")).ToArray();
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ToStoreGetEnumerator,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ToStoreGetEnumerator,The following statement contains a magic number: IQueryable<int> q1 = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ToStoreGetEnumerator,The following statement contains a magic number: IQueryable<int> q1 = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,GetEnumeratorNonToStoreTerminated,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,GetEnumeratorNonToStoreTerminated,The following statement contains a magic number: IQueryable<int> q1 = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,GetEnumeratorNonToStoreTerminated,The following statement contains a magic number: IQueryable<int> q1 = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ToStoreSubmitGetEnumerator,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ToStoreSubmitGetEnumerator,The following statement contains a magic number: var q1 = pt1.Select(x => 100 + x).HashPartition(x => x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ToStoreSubmitGetEnumerator,The following statement contains a magic number: IQueryable<int> q1 = pt1.Select(x => 100 + x).HashPartition(x => x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,SubmitNonToStoreTerminated,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,SubmitNonToStoreTerminated,The following statement contains a magic number: var q1 = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,SubmitNonToStoreTerminated,The following statement contains a magic number: IQueryable<int> q1 = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,MaterializeToStoreTerminated,The following statement contains a magic number: IQueryable<int> query = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,MaterializeToStoreTerminated,The following statement contains a magic number: IEnumerable<int> q1 = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,MaterializeNonToStoreTerminated,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,MaterializeNonToStoreTerminated,The following statement contains a magic number: IQueryable<int> query = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,MaterializeNonToStoreTerminated,The following statement contains a magic number: IQueryable<int> query = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,EnumeratePlainData,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,CopyPlainDataViaToStoreSubmit,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,CopyPlainDataViaToStoreMaterialize,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,PlainEnumerableAsDryadQueryToStoreSubmit,The following statement contains a magic number: int[] plainData = { 5' 6' 7 };
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,PlainEnumerableAsDryadQueryToStoreSubmit,The following statement contains a magic number: int[] plainData = { 5' 6' 7 };
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,PlainEnumerableAsDryadQueryToStoreSubmit,The following statement contains a magic number: int[] plainData = { 5' 6' 7 };
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,QueryOnDataBackedDLQ,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,QueryOnDataBackedDLQ,The following statement contains a magic number: IQueryable<int> q = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,QueryOnDataBackedDLQ,The following statement contains a magic number: IQueryable<int> q = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug11781_CountandFirstOrDefault,The following statement contains a magic number: int y_cluster = 10;
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug11781_CountandFirstOrDefault,The following statement contains a magic number: int y_local =  100;
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug11782_Aggregate,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug11638_LongWhere,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug11638_LongWhere,The following statement contains a magic number: IQueryable<int> q = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug11638_LongWhere,The following statement contains a magic number: IQueryable<int> q = pt1.Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,AssumeRangePartition,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,AssumeRangePartition,The following statement contains a magic number: var q = pt1.AssumeRangePartition(x => x' false)                                 .Select(x => 100 + x).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,AssumeRangePartition,The following statement contains a magic number: IQueryable<int> q = pt1.AssumeRangePartition(x => x' false)                                             .Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug11638_LongMethods,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,ContextConfigIsReadOnly,The following statement contains a magic number: context.JobMinNodes = 120;
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug15068_ConfigResourcesAPI,The following statement contains a magic number: passed &= (context.ResourcesToRemove.Count == 2);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The following statement contains a magic number: int[] data = new[] { 1' 2' 3 };
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The following statement contains a magic number: int[] data = new[] { 1' 2' 3 };
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The following statement contains a magic number: var badQ1 = data.AsQueryable().Select(x => 100 + x);
Magic Number,DryadLinqTests,BasicAPITests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\BasicAPITests.cs,Bug_16341_VariousTestsForSubmit,The following statement contains a magic number: var badQ2 = data.AsQueryable().Select(x => 100 + x);
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,Decomposition_Average,The following statement contains a magic number: IEnumerable<double>[] result = new IEnumerable<double>[2];
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,Decomposition_Average,The following statement contains a magic number: double[] aggregates = pt1.GroupBy(x => x % 2).Select(g => g.Average()).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,Decomposition_Average,The following statement contains a magic number: double[] aggregates = pt1.GroupBy(x => x % 2).Select(g => g.Average()).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,DistributiveResultSelector_1,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,DistributiveResultSelector_1,The following statement contains a magic number: int[] aggregates = pt1.GroupBy(x => x % 2' (key' seq) => seq.Sum()).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,DistributiveResultSelector_1,The following statement contains a magic number: int[] aggregates = pt1.GroupBy(x => x % 2' (key' seq) => seq.Sum()).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,DistributiveSelect_1,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,DistributiveSelect_1,The following statement contains a magic number: int[] aggregates = pt1.GroupBy(x => x % 2).Select(group => group.Sum()).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,DistributiveSelect_1,The following statement contains a magic number: int[] aggregates = pt1.GroupBy(x => x % 2).Select(group => group.Sum()).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,BuiltInCountIsDistributable,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,BuiltInCountIsDistributable,The following statement contains a magic number: int[] aggregates = pt1.GroupBy(x => x % 2' (key' seq) => seq.Count()).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,BuiltInCountIsDistributable,The following statement contains a magic number: int[] aggregates = pt1.GroupBy(x => x % 2' (key' seq) => seq.Count()).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,Bug12078_GroupByReduceWithResultSelectingAggregate,The following statement contains a magic number: IEnumerable<double>[]result = new IEnumerable<double>[2];
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,Bug12078_GroupByReduceWithResultSelectingAggregate,The following statement contains a magic number: double[] aggregates = pt1.Select(x => (double)x)                                              .GroupBy(x => 0' (key' seq) => seq.Aggregate((double)0' (acc' item) => acc + item' val => val / 100)).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,Bug12078_GroupByReduceWithResultSelectingAggregate,The following statement contains a magic number: double[] aggregates = pt1.Select(x => (double)x)                                              .GroupBy(x => 0' (key' seq) => seq.Aggregate((double)0' (acc' item) => acc + item' val => val / 100)).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,DecomposableFunc,The following statement contains a magic number: return seq.Aggregate((double)0' (acc' item) => acc + item' val => val / 100);
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduceWithCustomDecomposableFunction_DistributableCombiner,The following statement contains a magic number: IEnumerable<double>[] result = new IEnumerable<double>[2];
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduceWithCustomDecomposableFunction_DistributableCombiner_DifferingTypes,The following statement contains a magic number: IEnumerable<string>[] result = new IEnumerable<string>[2];
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduceWithCustomDecomposableFunction_DistributableCombiner_NoFinalizer,The following statement contains a magic number: IEnumerable<string>[] result = new IEnumerable<string>[2];
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,DecomposableFunc4,The following statement contains a magic number: return seq.Aggregate(0.0' (acc' item) => acc + item' acc => acc / 100);
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduceWithCustomDecomposableFunction_NonDistributableCombiner,The following statement contains a magic number: IEnumerable<double>[] result = new IEnumerable<double>[2];
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_BuiltIn_First,The following statement contains a magic number: passed &= aggregates.SequenceEqual(new[] { 1 }) || aggregates.SequenceEqual(new[] { 101 });
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_ResultSelector_ComplexNewExpression,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_SameDecomposableUsedTwice,The following statement contains a magic number: var results0 = pt1.GroupBy(x => x % 2' (k' g) => MyFunc(k' DecomposableFunc5(g)' DecomposableFunc5(g)' g.Average())).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_SameDecomposableUsedTwice,The following statement contains a magic number: var results1 = pt2.GroupBy(x => x % 2' (k' g) => MyFunc(k' DecomposableFunc5(g)' DecomposableFunc5(g)' g.Average())).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_ListInitializerReducer,The following statement contains a magic number: var results0 = pt1.GroupBy(x => x % 2' (k' g) => new List<int>() { k' g.Count()' g.Sum() }).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_ListInitializerReducer,The following statement contains a magic number: var results1 = pt2.GroupBy(x => x % 2' (k' g) => new List<int>() { k' g.Count()' g.Sum() }).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_ListInitializerReducer,The following statement contains a magic number: passed &= (resultsSorted0[0][2] == resultsSorted1[0][2]);
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_ListInitializerReducer,The following statement contains a magic number: passed &= (resultsSorted0[0][2] == resultsSorted1[0][2]);
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_ListInitializerReducer,The following statement contains a magic number: passed &= (resultsSorted0[1][2] == resultsSorted1[1][2]);
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_ListInitializerReducer,The following statement contains a magic number: passed &= (resultsSorted0[1][2] == resultsSorted1[1][2]);
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_CustomListInitializerReducer,The following statement contains a magic number: var results0 = pt1.GroupBy(x => x % 2' (k' g) => new MultiParamInitializerClass() {                                                                                       {k' g.Count()' g.Sum()} '  // one item' comprising three components                                                                                      }).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_CustomListInitializerReducer,The following statement contains a magic number: var results1 = pt2.GroupBy(x => x % 2' (k' g) => new MultiParamInitializerClass() {                                                                                       {k' g.Count()' g.Sum()} '  // one item' comprising three components                                                                                      }).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_BitwiseNegationOperator,The following statement contains a magic number: var results0 = pt1.GroupBy(x => x % 2' (k' g) => new KeyValuePair<int' int>(k' ~g.Sum())).ToArray();
Magic Number,DryadLinqTests,GroupByReduceTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,GroupByReduce_BitwiseNegationOperator,The following statement contains a magic number: var results1 = pt2.GroupBy(x => x % 2' (k' g) => new KeyValuePair<int' int>(k' ~g.Sum())).ToArray();
Magic Number,DryadLinqTests,Decomposer_1,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,FinalReduce,The following statement contains a magic number: return a / 100;
Magic Number,DryadLinqTests,Decomposer_4,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\GroupByReduceTests.cs,FinalReduce,The following statement contains a magic number: return a / 100;
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug11447_GroupByWithComparer,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug12584_HashPartitionOutputCount,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13529_and_Bug13593_IndexedOperatorCompilation,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13130_ReverseOperator,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13736_IndexedTakeWhile,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13736_IndexedTakeWhile,The following statement contains a magic number: var pt2 = pt1.TakeWhile((x' i) => i < 6).ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13736_IndexedTakeWhile,The following statement contains a magic number: result[0] = pt1.AsEnumerable().TakeWhile((x' i) => i < 6).ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13736_IndexedTakeWhile,The following statement contains a magic number: var pt2 = pt1.TakeWhile((x' i) => i < 6).ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13736_IndexedTakeWhile,The following statement contains a magic number: result[1] = pt1.AsEnumerable().TakeWhile((x' i) => i < 6).ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13736_IndexedTakeWhile,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13736_IndexedTakeWhile,The following statement contains a magic number: var pt2 = pt1.TakeWhile((x' i) => i < 125).ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13736_IndexedTakeWhile,The following statement contains a magic number: result[0] = pt1.AsEnumerable().TakeWhile((x' i) => i < 125).ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13736_IndexedTakeWhile,The following statement contains a magic number: var pt2 = pt1.TakeWhile((x' i) => i < 125).ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13736_IndexedTakeWhile,The following statement contains a magic number: result[0] = pt1.AsEnumerable().TakeWhile((x' i) => i < 125).ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13534_HashPartitionNegIndexIsError,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13534_HashPartitionNegIndexIsError,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13637_LocalDebugProducingZeroRecords,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13245_FromDsc_Submit_throws,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug13245_QueryUsingNonHpcLinqOperator,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14256_LeaseOnTempDscFileset,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14189_OrderPreservation,The following statement contains a magic number: var output = pt1.OrderBy(x => x % 4)                                  .Select(x => x).Select(x => x).Where(x => true)  // this pipeline was not preserving order correctly.                                   .GroupBy(x => x % 4)                                  .ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14189_OrderPreservation,The following statement contains a magic number: var output = pt1.OrderBy(x => x % 4)                                  .Select(x => x).Select(x => x).Where(x => true)  // this pipeline was not preserving order correctly.                                   .GroupBy(x => x % 4)                                  .ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14189_OrderPreservation,The following statement contains a magic number: var output = pt1.OrderBy(x => x % 4)                                  .Select(x => x).Select(x => x).Where(x => true)  // this pipeline was not preserving order correctly.                                   .GroupBy(x => x % 4)                                  .ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14189_OrderPreservation,The following statement contains a magic number: var output = pt1.OrderBy(x => x % 4)                                  .Select(x => x).Select(x => x).Where(x => true)  // this pipeline was not preserving order correctly.                                   .GroupBy(x => x % 4)                                  .ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14189_OrderPreservation,The following statement contains a magic number: i < 4
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14190_MergeJoin_DecreasingOrder,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14192_MultiApplySubExpressionReuse,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14192_MultiApplySubExpressionReuse,The following statement contains a magic number: var info = pt1.Apply(new[] { pt1' pt1 }' (sources) => new int[] { 1' 2' 3 }).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true).Submit();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14192_MultiApplySubExpressionReuse,The following statement contains a magic number: var info = pt1.Apply(new[] { pt1' pt1 }' (sources) => new int[] { 1' 2' 3 }).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true).Submit();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: int[][] data = new[] {                           new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' new int[] { }' new int[] { } };
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: int[][] data = new[] {                           new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' new int[] { }' new int[] { } };
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: int[][] data = new[] {                           new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' new int[] { }' new int[] { } };
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: int[][] data = new[] {                           new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' new int[] { }' new int[] { } };
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: int[][] data = new[] {                           new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' new int[] { }' new int[] { } };
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: int[][] data = new[] {                           new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' new int[] { }' new int[] { } };
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: int[][] data = new[] {                           new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' new int[] { }' new int[] { } };
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: int[][] data = new[] {                           new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' new int[] { }' new int[] { } };
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: int[][] data = new[] {                           new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' new int[] { }' new int[] { } };
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: int[][] data = new[] {                           new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' new int[] { }' new int[] { } };
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: int[][] data = new[] {                           new[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' new int[] { }' new int[] { } };
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: var output = pt1.LongTakeWhile((x' i) => i < 8).ToArray();
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug14870_LongIndexTakeWhile,The following statement contains a magic number: passed &= (output.Length == 8);
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug15159_NotOperatorForNullableBool,The following statement contains a magic number: IEnumerable<bool?>[] result = new IEnumerable<bool?>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug15570_GetHashCodeAndEqualsForNullableFieldsOfAnonymousTypes,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,MiscBugFixTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\MiscBugFixTests.cs,Bug15570_GetHashCodeAndEqualsForNullableFieldsOfAnonymousTypes,The following statement contains a magic number: var output = pt1.Select(x => new { FirstField = (x % 2 == 0) ? new int?(x) : default(int?)' SecondField = x.ToString() })                                      .GroupBy(x => x.FirstField' y => y.SecondField);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector,The following statement contains a magic number: passed &= TestRangePartitioned(pt2' 3' false);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_pcount,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_pcount,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' 2).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_pcount,The following statement contains a magic number: passed &= TestRangePartitioned(pt2' 2' false);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_pcount,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' 2);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_isDescending,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_isDescending,The following statement contains a magic number: passed &= TestRangePartitioned(pt2' 3' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IEnumerable<int>[] result2 = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 }).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 }).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 }).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: passed &= TestRangePartitioned(pt2' 4' false);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IQueryable<int> pt2_2 = pt1_2.RangePartition(x => x' new[] { 8' 5' 2 }).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile2)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IQueryable<int> pt2_2 = pt1_2.RangePartition(x => x' new[] { 8' 5' 2 }).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile2)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IQueryable<int> pt2_2 = pt1_2.RangePartition(x => x' new[] { 8' 5' 2 }).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile2)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: passed &= TestRangePartitioned(pt2_2' 4' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 });
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 });
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 });
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IQueryable<int> pt2_2 = pt1_2.RangePartition(x => x' new[] { 8' 5' 2 });
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IQueryable<int> pt2_2 = pt1_2.RangePartition(x => x' new[] { 8' 5' 2 });
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys,The following statement contains a magic number: IQueryable<int> pt2_2 = pt1_2.RangePartition(x => x' new[] { 8' 5' 2 });
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_isDescending_pcount,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_isDescending_pcount,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' true' 2).ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_isDescending_pcount,The following statement contains a magic number: passed &= TestRangePartitioned(pt2' 2' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_isDescending_pcount,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' true' 2);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_keyComparer_isDescending,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_keyComparer_isDescending,The following statement contains a magic number: passed &= TestRangePartitioned(pt2' 3' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 }' Comparer<int>.Default)                                       .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 }' Comparer<int>.Default)                                       .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 }' Comparer<int>.Default)                                       .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer,The following statement contains a magic number: passed &= TestRangePartitioned(pt2' 4' false);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 }' Comparer<int>.Default);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 }' Comparer<int>.Default);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 2' 5' 8 }' Comparer<int>.Default);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_keyComparer_isDescending_pcount,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_keyComparer_isDescending_pcount,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' Comparer<int>.Default' true' 2)                                               .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_keyComparer_isDescending_pcount,The following statement contains a magic number: passed &= TestRangePartitioned(pt2' 2' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_keyComparer_isDescending_pcount,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' Comparer<int>.Default' true' 2);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer_isDescending,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer_isDescending,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 8' 5' 2 }' Comparer<int>.Default' true)                                               .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer_isDescending,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 8' 5' 2 }' Comparer<int>.Default' true)                                               .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer_isDescending,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 8' 5' 2 }' Comparer<int>.Default' true)                                               .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer_isDescending,The following statement contains a magic number: passed &= TestRangePartitioned(pt2' 4' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer_isDescending,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 8' 5' 2 }' Comparer<int>.Default' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer_isDescending,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 8' 5' 2 }' Comparer<int>.Default' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_keySelector_rangeKeys_keyComparer_isDescending,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new[] { 8' 5' 2 }' Comparer<int>.Default' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_singlePartition_autoSeparators,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: IEnumerable<int>[] result = new IEnumerable<int>[2];
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: var results = pt1.RangePartition(x => x' new int[] { 1' 2' 3' 4 }' new WeirdIntComparer()' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: var results = pt1.RangePartition(x => x' new int[] { 1' 2' 3' 4 }' new WeirdIntComparer()' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: var results = pt1.RangePartition(x => x' new int[] { 1' 2' 3' 4 }' new WeirdIntComparer()' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: var results = pt1.RangePartition(x => x' new int[] { 4' 3' 2' 1 }' new WeirdIntComparer()' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: var results = pt1.RangePartition(x => x' new int[] { 4' 3' 2' 1 }' new WeirdIntComparer()' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: var results = pt1.RangePartition(x => x' new int[] { 4' 3' 2' 1 }' new WeirdIntComparer()' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new int[] { 6' 6' 3' 1 }' new WeirdIntComparer()' false)                                      .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new int[] { 6' 6' 3' 1 }' new WeirdIntComparer()' false)                                      .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new int[] { 6' 6' 3' 1 }' new WeirdIntComparer()' false)                                      .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: passed &= TestRangePartitioned(pt2' 5' new WeirdIntComparer()' false);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: var results = pt1.RangePartition(x => x' new int[] { 1' 2' 3' 4 }' new WeirdIntComparer()' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: var results = pt1.RangePartition(x => x' new int[] { 1' 2' 3' 4 }' new WeirdIntComparer()' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: var results = pt1.RangePartition(x => x' new int[] { 1' 2' 3' 4 }' new WeirdIntComparer()' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: var results = pt1.RangePartition(x => x' new int[] { 4' 3' 2' 1 }' new WeirdIntComparer()' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: var results = pt1.RangePartition(x => x' new int[] { 4' 3' 2' 1 }' new WeirdIntComparer()' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: var results = pt1.RangePartition(x => x' new int[] { 4' 3' 2' 1 }' new WeirdIntComparer()' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new int[] { 6' 6' 3' 1 }' new WeirdIntComparer()' false)                                      .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new int[] { 6' 6' 3' 1 }' new WeirdIntComparer()' false)                                      .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The following statement contains a magic number: IQueryable<int> pt2 = pt1.RangePartition(x => x' new int[] { 6' 6' 3' 1 }' new WeirdIntComparer()' false)                                      .ToStore(AzureUtils.ToAzureUri(Config.accountName' Config.containerName' outFile)' true);
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_nullCustomComparer,The following statement contains a magic number: var results1 = pt1.RangePartition(x => x' new int[] { 1' 2' 3' 4 }' null' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_nullCustomComparer,The following statement contains a magic number: var results1 = pt1.RangePartition(x => x' new int[] { 1' 2' 3' 4 }' null' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_nullCustomComparer,The following statement contains a magic number: var results1 = pt1.RangePartition(x => x' new int[] { 1' 2' 3' 4 }' null' false).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_nullCustomComparer,The following statement contains a magic number: var results2 = pt1.RangePartition(x => x' new int[] { 1' 2' 3' 4 }' null).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_nullCustomComparer,The following statement contains a magic number: var results2 = pt1.RangePartition(x => x' new int[] { 1' 2' 3' 4 }' null).ToArray();
Magic Number,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_nullCustomComparer,The following statement contains a magic number: var results2 = pt1.RangePartition(x => x' new int[] { 1' 2' 3' 4 }' null).ToArray();
Magic Number,DryadLinqTests,WeirdIntComparer,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,Compare,The following statement contains a magic number: int xx = x % 2;
Magic Number,DryadLinqTests,WeirdIntComparer,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,Compare,The following statement contains a magic number: int yy = y % 2;
Magic Number,DryadLinqTests,UDT_Undecorated,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_Undecorated,The following statement contains a magic number: m_field2 = val + 2;
Magic Number,DryadLinqTests,UDT_MarkedSerializable,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_MarkedSerializable,The following statement contains a magic number: m_field2 = val + 2;
Magic Number,DryadLinqTests,UDT_StaticSerializer,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_StaticSerializer,The following statement contains a magic number: m_field2 = val + 2;
Magic Number,DryadLinqTests,UDT_SelfCustomSerializer,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_SelfCustomSerializer,The following statement contains a magic number: m_field2 = val + 2;
Magic Number,DryadLinqTests,UDT_ExternalCustomSerializer,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_ExternalCustomSerializer,The following statement contains a magic number: m_field2 = val + 2;
Magic Number,DryadLinqTests,UDT_BaseType,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_BaseType,The following statement contains a magic number: m_baseTypeField = val + 42;
Magic Number,DryadLinqTests,UDT_DerivedType,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_DerivedType,The following statement contains a magic number: m_derivedTypeField = val + 84;
Magic Number,DryadLinqTests,UDT_ObjectField,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_ObjectField,The following statement contains a magic number: m_intField = val + 84;
Magic Number,DryadLinqTests,UDT_ObjectArrayField,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_ObjectArrayField,The following statement contains a magic number: m_intField = val + 84;
Magic Number,DryadLinqTests,UDT_ObjectListField,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_ObjectListField,The following statement contains a magic number: m_intField = val + 84;
Magic Number,DryadLinqTests,NestedSerializable,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,NestedSerializable,The following statement contains a magic number: m_field = val / 2.0;
Magic Number,DryadLinqTests,NestedSerializable,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,NestedSerializable,The following statement contains a magic number: m_field = val / 2.0;
Magic Number,DryadLinqTests,UDT_Nested_InnerEnum_InnerAndOuterSerializable,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_Nested_InnerEnum_InnerAndOuterSerializable,The following statement contains a magic number: m_field2 = (NestedEnum)(val % 3);
Magic Number,DryadLinqTests,NestedNotSerializable,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,NestedNotSerializable,The following statement contains a magic number: m_field = val / 2.0;
Magic Number,DryadLinqTests,UDT_FirstLevelCircular,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_FirstLevelCircular,The following statement contains a magic number: m_field2 = val + 2;
Magic Number,DryadLinqTests,UDT_FirstLevelCircularArrayRef,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_FirstLevelCircularArrayRef,The following statement contains a magic number: m_field2 = val + 2;
Magic Number,DryadLinqTests,UDT_FirstLevelCircularArrayRef,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_FirstLevelCircularArrayRef,The following statement contains a magic number: m_circularRefArray = new UDT_FirstLevelCircular[5];
Magic Number,DryadLinqTests,UDT_SecondLevelCircular,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\SerializationTestTypes.cs,UDT_SecondLevelCircular,The following statement contains a magic number: m_field2 = val + 2;
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,NonSealedTypeRecords,The following statement contains a magic number: IEnumerable<NonSealedClass>[] result = new IEnumerable<NonSealedClass>[2];
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,DerivedTypeRecords,The following statement contains a magic number: IEnumerable<ParentClass>[] result1 = new IEnumerable<ParentClass>[2];
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,DerivedTypeRecords,The following statement contains a magic number: IEnumerable<ChildClass>[] result2 = new IEnumerable<ChildClass>[2];
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,ObjectRecords,The following statement contains a magic number: IEnumerable<object>[] result = new IEnumerable<object>[2];
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,BadRecordsNotSerialized,The following statement contains a magic number: IEnumerable<string>[] result = new IEnumerable<string>[2];
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,BadRecordsNotSerialized,The following statement contains a magic number: var output = pt1.Select(x => (x % 2 == 0 ? new ChildClass() : new ParentClass())).Select(x => x is ChildClass ? "child" : "parent").ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,BadRecordsNotSerialized,The following statement contains a magic number: var output = pt1.Select(x => (x % 2 == 0 ? new ChildClass() : new ParentClass())).Select(x => x is ChildClass ? "child" : "parent").ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_Bug15675,The following statement contains a magic number: var result1 = pt1.Select(i => new { Num = i % 10 })                                      .GroupBy(x => x.Num' x => x.Num)                                      .ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_Bug15675,The following statement contains a magic number: var result2 = pt2.Select(i => new { Num = i % 10 })                                      .GroupBy(x => x.Num' x => x.Num)                                      .ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_Pipeline,The following statement contains a magic number: var result1 = pt1.Select(i => new { Num = i % 10 })                                      .Where(x => true)                                      .GroupBy(x => x.Num' x => x.Num)                                      .ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_Pipeline,The following statement contains a magic number: var result2 = pt2.Select(i => new { Num = i % 10 })                                      .Where(x => true)                                      .GroupBy(x => x.Num' x => x.Num)                                      .ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_MultipleAnonymousTypes,The following statement contains a magic number: var result1 = pt1.Select(i => new { Num = i % 10 })                                      .Where(x => true)                                      .Select(i => new { Num2 = i.Num })                                      .GroupBy(x => x.Num2' x => x.Num2)                                      .ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_MultipleAnonymousTypes,The following statement contains a magic number: var result2 = pt2.Select(i => new { Num = i % 10 })                                      .Where(x => true)                                      .Select(i => new { Num2 = i.Num })                                      .GroupBy(x => x.Num2' x => x.Num2)                                      .ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_GenericWithAnonTypeParam,The following statement contains a magic number: var result1 = pt1.Select(i => MakeNewMyGenericType(new { Num = i % 10 }))                                      .GroupBy(x => x.Field.Num' x => x.Field.Num)                                      .ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_GenericWithAnonTypeParam,The following statement contains a magic number: var result2 = pt2.Select(i => MakeNewMyGenericType(new { Num = i % 10 }))                                      .GroupBy(x => x.Field.Num' x => x.Field.Num)                                      .ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_ArrayOfAnon,The following statement contains a magic number: var result1 = pt1.Select(i => new[] { new { Num = i % 10 } })                                      .GroupBy(x => x[0].Num' x => x[0].Num)                                      .ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_ArrayOfAnon,The following statement contains a magic number: var result2 = pt2.Select(i => new[] { new { Num = i % 10 } })                                      .GroupBy(x => x[0].Num' x => x[0].Num)                                      .ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_NestedAnonTypes,The following statement contains a magic number: var result1 = pt1.Select(i => new { Num = new { NumInner = new int?(i % 10) } }) // nullable-fields present particular challenge.                                  .GroupBy(x => x.Num.NumInner' x => x.Num.NumInner)                                  .ToArray();
Magic Number,DryadLinqTests,TypesInQueryTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\TypesInQueryTests.cs,GroupByWithAnonymousTypes_NestedAnonTypes,The following statement contains a magic number: var result2 = pt2.Select(i => new { Num = new { NumInner = new int?(i % 10) } }) // nullable-fields present particular challenge.                                  .GroupBy(x => x.Num.NumInner' x => x.Num.NumInner)                                  .ToArray();
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSetsEx,The following statement contains a magic number: int[] input = { 0' 1' 2 };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSetsEx,The following statement contains a magic number: IEnumerable<int> range = input.Apply(x => Enumerable.Range(0' 3));
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSetsEx,The following statement contains a magic number: IEnumerable<int> partitions = range.HashPartition(x => x' 3);
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSetsEx,The following statement contains a magic number: IEnumerable<int> rangePartition = partitions.SelectMany(x => Enumerable.Range(x * 4' 4));
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSetsEx,The following statement contains a magic number: IEnumerable<int> rangePartition = partitions.SelectMany(x => Enumerable.Range(x * 4' 4));
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSets,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           new[] { 1' 2' 3' 4 }'                           new[] { 5' 6' 7' 8 }'                           new[] { 9' 10' 11' 12 }'                       };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSets,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           new[] { 1' 2' 3' 4 }'                           new[] { 5' 6' 7' 8 }'                           new[] { 9' 10' 11' 12 }'                       };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSets,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           new[] { 1' 2' 3' 4 }'                           new[] { 5' 6' 7' 8 }'                           new[] { 9' 10' 11' 12 }'                       };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSets,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           new[] { 1' 2' 3' 4 }'                           new[] { 5' 6' 7' 8 }'                           new[] { 9' 10' 11' 12 }'                       };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSets,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           new[] { 1' 2' 3' 4 }'                           new[] { 5' 6' 7' 8 }'                           new[] { 9' 10' 11' 12 }'                       };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSets,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           new[] { 1' 2' 3' 4 }'                           new[] { 5' 6' 7' 8 }'                           new[] { 9' 10' 11' 12 }'                       };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSets,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           new[] { 1' 2' 3' 4 }'                           new[] { 5' 6' 7' 8 }'                           new[] { 9' 10' 11' 12 }'                       };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSets,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           new[] { 1' 2' 3' 4 }'                           new[] { 5' 6' 7' 8 }'                           new[] { 9' 10' 11' 12 }'                       };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSets,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           new[] { 1' 2' 3' 4 }'                           new[] { 5' 6' 7' 8 }'                           new[] { 9' 10' 11' 12 }'                       };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSets,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           new[] { 1' 2' 3' 4 }'                           new[] { 5' 6' 7' 8 }'                           new[] { 9' 10' 11' 12 }'                       };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateSimpleFileSets,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           new[] { 1' 2' 3' 4 }'                           new[] { 5' 6' 7' 8 }'                           new[] { 9' 10' 11' 12 }'                       };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateGroupByReduceDataSet,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           Enumerable.Range(1'100).ToArray()'                           Enumerable.Range(101'100).ToArray()'                               };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateGroupByReduceDataSet,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           Enumerable.Range(1'100).ToArray()'                           Enumerable.Range(101'100).ToArray()'                               };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateGroupByReduceDataSet,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           Enumerable.Range(1'100).ToArray()'                           Enumerable.Range(101'100).ToArray()'                               };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateRangePartitionDataSet,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           Enumerable.Range(1'1000).ToArray()'                           Enumerable.Range(20000'2000).ToArray()'                                   Enumerable.Range(40000'5000).ToArray()'                      };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateRangePartitionDataSet,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           Enumerable.Range(1'1000).ToArray()'                           Enumerable.Range(20000'2000).ToArray()'                                   Enumerable.Range(40000'5000).ToArray()'                      };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateRangePartitionDataSet,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           Enumerable.Range(1'1000).ToArray()'                           Enumerable.Range(20000'2000).ToArray()'                                   Enumerable.Range(40000'5000).ToArray()'                      };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateRangePartitionDataSet,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           Enumerable.Range(1'1000).ToArray()'                           Enumerable.Range(20000'2000).ToArray()'                                   Enumerable.Range(40000'5000).ToArray()'                      };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,CreateRangePartitionDataSet,The following statement contains a magic number: IEnumerable<IEnumerable<int>> data = new int[][]                      {                           Enumerable.Range(1'1000).ToArray()'                           Enumerable.Range(20000'2000).ToArray()'                                   Enumerable.Range(40000'5000).ToArray()'                      };
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetSimpleFileSets,The following statement contains a magic number: IQueryable<int> range = input.Apply(x => Enumerable.Range(0' 3));
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetSimpleFileSets,The following statement contains a magic number: IQueryable<int> partitions = range.HashPartition(x => x' 3);
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetSimpleFileSets,The following statement contains a magic number: IQueryable<int> rangePartition = partitions.SelectMany(x => Enumerable.Range(x * 4' 4));
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetSimpleFileSets,The following statement contains a magic number: IQueryable<int> rangePartition = partitions.SelectMany(x => Enumerable.Range(x * 4' 4));
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetGroupByReduceDataSet,The following statement contains a magic number: IQueryable<int> range = input.Apply(x => Enumerable.Range(0' 2));
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetGroupByReduceDataSet,The following statement contains a magic number: IQueryable<int> partitions = range.HashPartition(x => x' 2);
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetGroupByReduceDataSet,The following statement contains a magic number: IQueryable<int> rangePartition = partitions.SelectMany(x => Enumerable.Range(x * 100 + 1' 100));
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetGroupByReduceDataSet,The following statement contains a magic number: IQueryable<int> rangePartition = partitions.SelectMany(x => Enumerable.Range(x * 100 + 1' 100));
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetRangePartitionDataSet,The following statement contains a magic number: IQueryable<int> range = input.Apply(x => Enumerable.Range(0' 3));
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetRangePartitionDataSet,The following statement contains a magic number: IQueryable<int> partitions = range.HashPartition(x => x' 3);
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetRangePartitionDataSet,The following statement contains a magic number: IQueryable<int> rangePartition = partitions.SelectMany(x => Enumerable.Range(x * 20000 + 1' 1000));
Magic Number,DryadLinqTests,DataGenerator,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetRangePartitionDataSet,The following statement contains a magic number: IQueryable<int> rangePartition = partitions.SelectMany(x => Enumerable.Range(x * 20000 + 1' 1000));
Magic Number,DryadLinqTests,ReverseComparer<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetHashCode,The following statement contains a magic number: return unchecked((_originalComparer.GetHashCode() + 123457) * 10007);
Magic Number,DryadLinqTests,ReverseComparer<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,GetHashCode,The following statement contains a magic number: return unchecked((_originalComparer.GetHashCode() + 123457) * 10007);
Magic Number,DryadLinqTests,Utils,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\Utils.cs,MakeBasicConfig,The following statement contains a magic number: context.JobRuntimeLimit = (int)TimeSpan.FromMinutes(30).TotalSeconds;
Duplicate Code,DryadLinqTests,RangePartitionAPICoverageTests,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\DryadLinqTests\RangePartitionAPICoverageTests.cs,RP_rangeSeparators_customComparer,The method contains a code clone-set at the following line numbers (starting from the method definition): ((12' 43)' (50' 81))
