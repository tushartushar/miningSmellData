Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,RunProcess,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,HSVtoRGB,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Research.Tools,CSVFileStreamer,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,ReadLineInternal,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Research.Tools,SimpleStreamReader,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,DetectEncoding,Cyclomatic complexity of the method is 9
Long Parameter List,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawLine,The method has 6 parameters. Parameters: c' left' right' lineWidth' arrow' onscreen
Long Parameter List,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawTextAbsoluteCoordinates,The method has 5 parameters. Parameters: c' font' text' x' y
Long Parameter List,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawRotatedTextAbsoluteCoordinates,The method has 5 parameters. Parameters: c' text' font' x' y
Long Parameter List,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawRotatedRightJustifiedTextAbsoluteCoordinates,The method has 6 parameters. Parameters: text' font' brush' x' y' angleDegrees
Long Parameter List,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawRightJustifiedTextAbsoluteCoordinates,The method has 5 parameters. Parameters: text' font' brush' x' y
Long Parameter List,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawRightJustifiedText,The method has 5 parameters. Parameters: text' font' brush' x' y
Long Parameter List,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawPointAbsoluteCoordinates,The method has 5 parameters. Parameters: brush' x' y' dotSize' onscreen
Long Parameter List,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawPoint,The method has 5 parameters. Parameters: brush' x' y' dotSize' onscreen
Long Parameter List,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,RunProcess,The method has 7 parameters. Parameters: process' workDirectory' quote' wait' useshell' runAsAdmin' arguments
Long Parameter List,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,HSVtoRGB,The method has 6 parameters. Parameters: h' s' v' r' g' b
Long Parameter List,Microsoft.Research.Tools,SimpleStreamReader,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,SimpleStreamReader,The method has 5 parameters. Parameters: stream' keepEndOfLine' encoding' detectEncoding' bufferSize
Long Statement,Microsoft.Research.Tools,Rectangle2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,ExpandToIntegerCoordinates,The length of the statement  "            return new Rectangle2D(Math.Floor(norm.one.X)' Math.Floor(norm.one.Y)' Math.Ceiling(norm.two.X)' Math.Ceiling(norm.two.Y)); " is 123.
Long Statement,Microsoft.Research.Tools,KVPFileStreamer,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,Error,The length of the statement  "            this.statusReporter("KVP file `" + this.filename + "' format error on line " + this.currentLine + ": " + message' StatusKind.Error); " is 132.
Long Statement,Microsoft.Research.Tools,CSVFileStreamer,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,Error,The length of the statement  "            this.statusReporter("CSV file `" + Path.GetFileName(this.filename) + "' format error on line " + this.currentLine + ": " + message' StatusKind.Error); " is 150.
Long Statement,Microsoft.Research.Tools,SimpleStreamReader,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,ReadAndConvert,The length of the statement  "                    int len = stream.Read(this.byteBuffer.Data' this.byteBuffer.CurrentPosition' this.byteBuffer.Size - this.byteBuffer.CurrentPosition); " is 133.
Long Statement,Microsoft.Research.Tools,SimpleStreamReader,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,ReadAndConvert,The length of the statement  "                            this.charBuffer.EndOfData += this.dataDecoder.GetChars(this.byteBuffer.Data' 0' this.byteBuffer.EndOfData' this.charBuffer.Data' this.charBuffer.EndOfData); " is 156.
Long Statement,Microsoft.Research.Tools,SimpleStreamReader,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,ReadAndConvert,The length of the statement  "                this.charBuffer.EndOfData += this.dataDecoder.GetChars(this.byteBuffer.Data' 0' this.byteBuffer.EndOfData' this.charBuffer.Data' this.charBuffer.EndOfData); " is 156.
Complex Conditional,Microsoft.Research.Tools,SimpleStreamReader,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,DetectEncoding,The conditional expression  "len >= 3 && this.byteBuffer[0] == 0xEF && this.byteBuffer[1] == 0xBB && this.byteBuffer[2] == 0xBF"  is complex.
Complex Conditional,Microsoft.Research.Tools,SimpleStreamReader,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,DetectEncoding,The conditional expression  "len >= 4 && this.byteBuffer[0] == 0 && this.byteBuffer[1] == 0 &&                       this.byteBuffer[2] == 0xFE && this.byteBuffer[3] == 0xFF"  is complex.
Virtual Method Call from Constructor,Microsoft.Research.Tools,BaseFileStreamer,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,BaseFileStreamer,The constructor "BaseFileStreamer" calls a virtual method "Reset".
Magic Number,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawRotatedTextAbsoluteCoordinates,The following statement contains a magic number: this.grph.RotateTransform(-90);
Magic Number,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawRotatedRightJustifiedTextAbsoluteCoordinates,The following statement contains a magic number: Rectangle box = new Rectangle(x - textsize.Width' y' textsize.Width + 2' textsize.Height);
Magic Number,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawRightJustifiedTextAbsoluteCoordinates,The following statement contains a magic number: Rectangle box = new Rectangle(x - textsize.Width' y - textsize.Height / 2' textsize.Width + 2' textsize.Height);
Magic Number,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawRightJustifiedTextAbsoluteCoordinates,The following statement contains a magic number: Rectangle box = new Rectangle(x - textsize.Width' y - textsize.Height / 2' textsize.Width + 2' textsize.Height);
Magic Number,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,ChooseFont,The following statement contains a magic number: newSize < 2
Magic Number,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawTextInRectangle,The following statement contains a magic number: font == null || font.Size < 3
Magic Number,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawTextInRectangle,The following statement contains a magic number: int adjustX = (int)(dest.Width - actualSize.Width) / 2;
Magic Number,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawTextInRectangle,The following statement contains a magic number: int adjustY = dest.Height / 2;
Magic Number,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawRightJustifiedText,The following statement contains a magic number: Rectangle box = new Rectangle(xo - textsize.Width' yo' textsize.Width + 2' textsize.Height);
Magic Number,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawPointAbsoluteCoordinates,The following statement contains a magic number: g.FillEllipse(brush' x - dotSize / 2' y - dotSize / 2' dotSize' dotSize);
Magic Number,Microsoft.Research.Tools,DrawingSurface2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\DrawingSurface.cs,DrawPointAbsoluteCoordinates,The following statement contains a magic number: g.FillEllipse(brush' x - dotSize / 2' y - dotSize / 2' dotSize' dotSize);
Magic Number,Microsoft.Research.Tools,GraphNode,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: Font font = new Font("Arial"' 12' FontStyle.Regular);
Magic Number,Microsoft.Research.Tools,GraphNode,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: const double borderFraction = 8;
Magic Number,Microsoft.Research.Tools,GraphNode,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: switch (this.Shape)                  {                      default:                      case NodeShape.Box:                          surface.DrawRectangle(this.Position' pen);                          break;                      case NodeShape.Ellipse:                          surface.DrawEllipse(this.LineColor' this.Position' pen' false);                          break;                      case NodeShape.Invhouse:                          {                              Point2D[] points = new Point2D[5];                              points[0] = new Point2D(this.Position.Corner1.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[1] = new Point2D(this.Position.Corner1.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[2] = new Point2D(this.Position.Corner2.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[3] = new Point2D(this.Position.Corner2.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[4] = new Point2D(this.Position.Corner1.X + this.Position.Width / 2' this.Position.Corner1.Y);                              surface.DrawPolygon(this.LineColor' points' pen' false);                              break;                          }                  }
Magic Number,Microsoft.Research.Tools,GraphNode,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: switch (this.Shape)                  {                      default:                      case NodeShape.Box:                          surface.DrawRectangle(this.Position' pen);                          break;                      case NodeShape.Ellipse:                          surface.DrawEllipse(this.LineColor' this.Position' pen' false);                          break;                      case NodeShape.Invhouse:                          {                              Point2D[] points = new Point2D[5];                              points[0] = new Point2D(this.Position.Corner1.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[1] = new Point2D(this.Position.Corner1.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[2] = new Point2D(this.Position.Corner2.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[3] = new Point2D(this.Position.Corner2.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[4] = new Point2D(this.Position.Corner1.X + this.Position.Width / 2' this.Position.Corner1.Y);                              surface.DrawPolygon(this.LineColor' points' pen' false);                              break;                          }                  }
Magic Number,Microsoft.Research.Tools,GraphNode,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: switch (this.Shape)                  {                      default:                      case NodeShape.Box:                          surface.DrawRectangle(this.Position' pen);                          break;                      case NodeShape.Ellipse:                          surface.DrawEllipse(this.LineColor' this.Position' pen' false);                          break;                      case NodeShape.Invhouse:                          {                              Point2D[] points = new Point2D[5];                              points[0] = new Point2D(this.Position.Corner1.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[1] = new Point2D(this.Position.Corner1.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[2] = new Point2D(this.Position.Corner2.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[3] = new Point2D(this.Position.Corner2.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[4] = new Point2D(this.Position.Corner1.X + this.Position.Width / 2' this.Position.Corner1.Y);                              surface.DrawPolygon(this.LineColor' points' pen' false);                              break;                          }                  }
Magic Number,Microsoft.Research.Tools,GraphNode,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: switch (this.Shape)                  {                      default:                      case NodeShape.Box:                          surface.DrawRectangle(this.Position' pen);                          break;                      case NodeShape.Ellipse:                          surface.DrawEllipse(this.LineColor' this.Position' pen' false);                          break;                      case NodeShape.Invhouse:                          {                              Point2D[] points = new Point2D[5];                              points[0] = new Point2D(this.Position.Corner1.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[1] = new Point2D(this.Position.Corner1.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[2] = new Point2D(this.Position.Corner2.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[3] = new Point2D(this.Position.Corner2.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[4] = new Point2D(this.Position.Corner1.X + this.Position.Width / 2' this.Position.Corner1.Y);                              surface.DrawPolygon(this.LineColor' points' pen' false);                              break;                          }                  }
Magic Number,Microsoft.Research.Tools,GraphNode,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: switch (this.Shape)                  {                      default:                      case NodeShape.Box:                          surface.DrawRectangle(this.Position' pen);                          break;                      case NodeShape.Ellipse:                          surface.DrawEllipse(this.LineColor' this.Position' pen' false);                          break;                      case NodeShape.Invhouse:                          {                              Point2D[] points = new Point2D[5];                              points[0] = new Point2D(this.Position.Corner1.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[1] = new Point2D(this.Position.Corner1.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[2] = new Point2D(this.Position.Corner2.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[3] = new Point2D(this.Position.Corner2.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[4] = new Point2D(this.Position.Corner1.X + this.Position.Width / 2' this.Position.Corner1.Y);                              surface.DrawPolygon(this.LineColor' points' pen' false);                              break;                          }                  }
Magic Number,Microsoft.Research.Tools,GraphNode,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: switch (this.Shape)                  {                      default:                      case NodeShape.Box:                          surface.DrawRectangle(this.Position' pen);                          break;                      case NodeShape.Ellipse:                          surface.DrawEllipse(this.LineColor' this.Position' pen' false);                          break;                      case NodeShape.Invhouse:                          {                              Point2D[] points = new Point2D[5];                              points[0] = new Point2D(this.Position.Corner1.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[1] = new Point2D(this.Position.Corner1.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[2] = new Point2D(this.Position.Corner2.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[3] = new Point2D(this.Position.Corner2.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[4] = new Point2D(this.Position.Corner1.X + this.Position.Width / 2' this.Position.Corner1.Y);                              surface.DrawPolygon(this.LineColor' points' pen' false);                              break;                          }                  }
Magic Number,Microsoft.Research.Tools,GraphNode,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: switch (this.Shape)                  {                      default:                      case NodeShape.Box:                          surface.DrawRectangle(this.Position' pen);                          break;                      case NodeShape.Ellipse:                          surface.DrawEllipse(this.LineColor' this.Position' pen' false);                          break;                      case NodeShape.Invhouse:                          {                              Point2D[] points = new Point2D[5];                              points[0] = new Point2D(this.Position.Corner1.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[1] = new Point2D(this.Position.Corner1.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[2] = new Point2D(this.Position.Corner2.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[3] = new Point2D(this.Position.Corner2.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[4] = new Point2D(this.Position.Corner1.X + this.Position.Width / 2' this.Position.Corner1.Y);                              surface.DrawPolygon(this.LineColor' points' pen' false);                              break;                          }                  }
Magic Number,Microsoft.Research.Tools,GraphNode,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: switch (this.Shape)                  {                      default:                      case NodeShape.Box:                          surface.DrawRectangle(this.Position' pen);                          break;                      case NodeShape.Ellipse:                          surface.DrawEllipse(this.LineColor' this.Position' pen' false);                          break;                      case NodeShape.Invhouse:                          {                              Point2D[] points = new Point2D[5];                              points[0] = new Point2D(this.Position.Corner1.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[1] = new Point2D(this.Position.Corner1.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[2] = new Point2D(this.Position.Corner2.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[3] = new Point2D(this.Position.Corner2.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[4] = new Point2D(this.Position.Corner1.X + this.Position.Width / 2' this.Position.Corner1.Y);                              surface.DrawPolygon(this.LineColor' points' pen' false);                              break;                          }                  }
Magic Number,Microsoft.Research.Tools,GraphNode,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: switch (this.Shape)                  {                      default:                      case NodeShape.Box:                          surface.DrawRectangle(this.Position' pen);                          break;                      case NodeShape.Ellipse:                          surface.DrawEllipse(this.LineColor' this.Position' pen' false);                          break;                      case NodeShape.Invhouse:                          {                              Point2D[] points = new Point2D[5];                              points[0] = new Point2D(this.Position.Corner1.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[1] = new Point2D(this.Position.Corner1.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[2] = new Point2D(this.Position.Corner2.X' this.Position.Corner2.Y - this.Position.Height / 8);                              points[3] = new Point2D(this.Position.Corner2.X' this.Position.Corner1.Y + this.Position.Height / 3);                              points[4] = new Point2D(this.Position.Corner1.X + this.Position.Width / 2' this.Position.Corner1.Y);                              surface.DrawPolygon(this.LineColor' points' pen' false);                              break;                          }                  }
Magic Number,Microsoft.Research.Tools,GraphEdge,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: int width = this.Style == Style.Bold ? 3 : 1;
Magic Number,Microsoft.Research.Tools,GraphEdge,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: const double absoluteArrowSize = 0.15;
Magic Number,Microsoft.Research.Tools,GraphEdge,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: AdjustableArrowCap cap = new AdjustableArrowCap(4' 6);
Magic Number,Microsoft.Research.Tools,GraphEdge,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\graphlayout.cs,Draw,The following statement contains a magic number: AdjustableArrowCap cap = new AdjustableArrowCap(4' 6);
Magic Number,Microsoft.Research.Tools,Partition,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\partitionedTables.cs,Partition,The following statement contains a magic number: parts.Length < 3
Magic Number,Microsoft.Research.Tools,Partition,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\partitionedTables.cs,Partition,The following statement contains a magic number: replicas = new List<UNCPathname>(parts.Length - 2);
Magic Number,Microsoft.Research.Tools,Partition,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\partitionedTables.cs,Partition,The following statement contains a magic number: md.Length == 2
Magic Number,Microsoft.Research.Tools,Partition,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\partitionedTables.cs,Partition,The following statement contains a magic number: md.Length > 2
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,ParseCommaSeparatedKeyValuePair,The following statement contains a magic number: parts.Length != 2
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,EnsureDirectoryExistsForFile,The following statement contains a magic number: !ok && count < 5
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,Jitter,The following statement contains a magic number: double rand = 100 * jitterRandom.NextDouble() - 50;
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,Jitter,The following statement contains a magic number: double rand = 100 * jitterRandom.NextDouble() - 50;
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,Jitter,The following statement contains a magic number: return rand * max / 50;
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,InstantiateExecutableFromRes,The following statement contains a magic number: const int size = 4096;
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,InstantiateExecutableFromRes,The following statement contains a magic number: byte[] bytes = new byte[4096];
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,Convert64time,The following statement contains a magic number: DateTime time = new DateTime(Convert.ToInt64(cosmosTime)' DateTimeKind.Unspecified).AddYears(1600);
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,HSVtoRGB,The following statement contains a magic number: h *= 6;
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,HSVtoRGB,The following statement contains a magic number: switch (i)              {                  case 6: throw new ArgumentOutOfRangeException("h");                  case 0: r = v; g = n; b = m; break;                  case 1: r = n; g = v; b = m; break;                  case 2: r = m; g = v; b = n; break;                  case 3: r = m; g = n; b = v; break;                  case 4: r = n; g = m; b = v; break;                  case 5: r = v; g = m; b = n; break;              }
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,HSVtoRGB,The following statement contains a magic number: switch (i)              {                  case 6: throw new ArgumentOutOfRangeException("h");                  case 0: r = v; g = n; b = m; break;                  case 1: r = n; g = v; b = m; break;                  case 2: r = m; g = v; b = n; break;                  case 3: r = m; g = n; b = v; break;                  case 4: r = n; g = m; b = v; break;                  case 5: r = v; g = m; b = n; break;              }
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,HSVtoRGB,The following statement contains a magic number: switch (i)              {                  case 6: throw new ArgumentOutOfRangeException("h");                  case 0: r = v; g = n; b = m; break;                  case 1: r = n; g = v; b = m; break;                  case 2: r = m; g = v; b = n; break;                  case 3: r = m; g = n; b = v; break;                  case 4: r = n; g = m; b = v; break;                  case 5: r = v; g = m; b = n; break;              }
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,HSVtoRGB,The following statement contains a magic number: switch (i)              {                  case 6: throw new ArgumentOutOfRangeException("h");                  case 0: r = v; g = n; b = m; break;                  case 1: r = n; g = v; b = m; break;                  case 2: r = m; g = v; b = n; break;                  case 3: r = m; g = n; b = v; break;                  case 4: r = n; g = m; b = v; break;                  case 5: r = v; g = m; b = n; break;              }
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,HSVtoRGB,The following statement contains a magic number: switch (i)              {                  case 6: throw new ArgumentOutOfRangeException("h");                  case 0: r = v; g = n; b = m; break;                  case 1: r = n; g = v; b = m; break;                  case 2: r = m; g = v; b = n; break;                  case 3: r = m; g = n; b = v; break;                  case 4: r = n; g = m; b = v; break;                  case 5: r = v; g = m; b = n; break;              }
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,VisibleColor,The following statement contains a magic number: color.GetBrightness() < 0.5
Magic Number,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,CopyFile,The following statement contains a magic number: byte[] buf = new byte[1 << 13];
Magic Number,Microsoft.Research.Tools,Rectangle2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,FixDegeneracy,The following statement contains a magic number: const double epsilon = 0.1;
Magic Number,Microsoft.Research.Tools,Rectangle2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,FixDegeneracy,The following statement contains a magic number: xmin -= xmax * 0.1 + epsilon;
Magic Number,Microsoft.Research.Tools,Rectangle2D,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,FixDegeneracy,The following statement contains a magic number: ymin -= ymax * 0.1 + epsilon;
Magic Number,Microsoft.Research.Tools,UNCPathname,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,UNCPathname,The following statement contains a magic number: int slash = path.IndexOf("/"' 2);
Magic Number,Microsoft.Research.Tools,UNCPathname,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,UNCPathname,The following statement contains a magic number: int bkslash = path.IndexOf("\\"' 2);
Magic Number,Microsoft.Research.Tools,UNCPathname,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,UNCPathname,The following statement contains a magic number: this.Machine = path.Substring(2' slash - 2);
Magic Number,Microsoft.Research.Tools,UNCPathname,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,UNCPathname,The following statement contains a magic number: this.Machine = path.Substring(2' slash - 2);
Magic Number,Microsoft.Research.Tools,ColorMap<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,CS,The following statement contains a magic number: return (int)(c * 255);
Magic Number,Microsoft.Research.Tools,HSVColorMap<T>,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,OneCircleColor,The following statement contains a magic number: const double fractionOfCircle = 0.8;
Magic Number,Microsoft.Research.Tools,SimpleStreamReader,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,ReadAndConvert,The following statement contains a magic number: this.encodingUnknown && this.byteBuffer.EndOfData >= 2
Magic Number,Microsoft.Research.Tools,SimpleStreamReader,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,DetectEncoding,The following statement contains a magic number: len < 2
Magic Number,Microsoft.Research.Tools,SimpleStreamReader,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,DetectEncoding,The following statement contains a magic number: this.byteBuffer.DeletePreamble(2);
Missing Default,Microsoft.Research.Tools,Utilities,D:\research\architectureSmells\repos\MicrosoftResearch_Dryad\JobBrowser\Tools\tools.cs,HSVtoRGB,The following switch statement is missing a default case: switch (i)              {                  case 6: throw new ArgumentOutOfRangeException("h");                  case 0: r = v; g = n; b = m; break;                  case 1: r = n; g = v; b = m; break;                  case 2: r = m; g = v; b = n; break;                  case 3: r = m; g = n; b = v; break;                  case 4: r = n; g = m; b = v; break;                  case 5: r = v; g = m; b = n; break;              }
