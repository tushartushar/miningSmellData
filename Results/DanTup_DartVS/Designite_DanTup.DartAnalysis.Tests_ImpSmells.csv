Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DanTup.DartAnalysis.Tests,CompletionTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\CompletionTests.cs,PerformCompletionTest,The length of the statement  "			var expectedReplacementLength = fileTemplate.Replace("[[["' "").Replace("|||"' "").IndexOf("]]]") - expectedReplacementOffset; " is 126.
Long Statement,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsNavigation,The length of the statement  "					Assert.Equal(Path.Combine(SdkFolder' @"lib\core\print.dart")' notification.Files[secondRegion.Targets.Single()]' StringComparer.OrdinalIgnoreCase); " is 147.
Magic Number,DanTup.DartAnalysis.Tests,FormattingTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\FormattingTests.cs,FormatText,The following statement contains a magic number: results.Edits.Single().Length.Should().Be(36);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,SetAnalysisRoots,The following statement contains a magic number: var expectedError = new AnalysisError  					{  						Location = new Location  						{  							File = @"M:\Coding\Applications\DanTup.DartVS\DanTup.DartAnalysis.Tests.SampleDartProject\single_type_error.dart"'  							Length = 1'  							Offset = 29'  							StartColumn = 15'  							StartLine = 2  						}'  						Severity = AnalysisErrorSeverity.Warning'  						Type = AnalysisErrorType.StaticWarning'  						Message = "The argument type 'int' cannot be assigned to the parameter type 'String'"  					};
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,SetAnalysisRoots,The following statement contains a magic number: var expectedError = new AnalysisError  					{  						Location = new Location  						{  							File = @"M:\Coding\Applications\DanTup.DartVS\DanTup.DartAnalysis.Tests.SampleDartProject\single_type_error.dart"'  							Length = 1'  							Offset = 29'  							StartColumn = 15'  							StartLine = 2  						}'  						Severity = AnalysisErrorSeverity.Warning'  						Type = AnalysisErrorType.StaticWarning'  						Message = "The argument type 'int' cannot be assigned to the parameter type 'String'"  					};
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,SetAnalysisRoots,The following statement contains a magic number: var expectedError = new AnalysisError  					{  						Location = new Location  						{  							File = @"M:\Coding\Applications\DanTup.DartVS\DanTup.DartAnalysis.Tests.SampleDartProject\single_type_error.dart"'  							Length = 1'  							Offset = 29'  							StartColumn = 15'  							StartLine = 2  						}'  						Severity = AnalysisErrorSeverity.Warning'  						Type = AnalysisErrorType.StaticWarning'  						Message = "The argument type 'int' cannot be assigned to the parameter type 'String'"  					};
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,TestAnalysisUpdateContent,The following statement contains a magic number: await Task.Delay(10000);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(4' regions.Count);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(4' regions[0].Length);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(5' regions[1].Offset);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(4' regions[1].Length);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(17' regions[2].Offset);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(17' regions[2].Offset);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(5' regions[2].Length);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(5' regions[2].Length);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(HighlightRegionType.Function' regions[2].Type);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(23' regions[3].Offset);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(23' regions[3].Offset);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(15' regions[3].Length);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(15' regions[3].Length);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsHighlights,The following statement contains a magic number: Assert.Equal(HighlightRegionType.LiteralString' regions[3].Type);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsNavigation,The following statement contains a magic number: Assert.Equal(2' regions.Length);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsNavigation,The following statement contains a magic number: Assert.Equal(5' firstRegion.Offset);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsNavigation,The following statement contains a magic number: Assert.Equal(4' firstRegion.Length);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsNavigation,The following statement contains a magic number: Assert.Equal(5' firstRegion.Offset);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsNavigation,The following statement contains a magic number: Assert.Equal(4' firstRegion.Length);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsNavigation,The following statement contains a magic number: Assert.Equal(17' regions[1].Offset);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsNavigation,The following statement contains a magic number: Assert.Equal(5' regions[1].Length);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsNavigation,The following statement contains a magic number: Assert.Equal(307' notification.Targets[regions[1].Targets.Single()].Offset);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsNavigation,The following statement contains a magic number: Assert.Equal(5' notification.Targets[secondRegion.Targets.Single()].Length);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsNavigation,The following statement contains a magic number: Assert.Equal(8' notification.Targets[secondRegion.Targets.Single()].StartLine);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsNavigation,The following statement contains a magic number: Assert.Equal(6' notification.Targets[secondRegion.Targets.Single()].StartColumn);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsOutline,The following statement contains a magic number: var expectedOutline = new Outline  					{  						Element = new Element  						{  							Kind = ElementKind.CompilationUnit'  							Name = "<unit>"'  							Location = new Location  							{  								File = HelloWorldFile'  								Offset = 0'  								Length = 45'  								StartLine = 1'  								StartColumn = 1'  							}'  							Flags = (int)AnalysisElementFlags.None' // TODO: Change this if/when Flags is properly typed.  						}'  						Offset = 0'  						Length = 45'  						Children = new[] {  							new Outline  							{  								Element = new Element  								{  									Kind = ElementKind.Function'  									Name = "main"'  									Location = new Location  									{  										File = HelloWorldFile'  										Offset = 5'  										Length = 4'  										StartLine = 1'  										StartColumn = 6'  									}'  									Flags = (int)AnalysisElementFlags.Static' // TODO: Change this if/when Flags is properly typed.  									Parameters = "()"'  									ReturnType = "void"  								}'  								Offset = 0'  								Length = 43'  							}  						}  					};
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsOutline,The following statement contains a magic number: var expectedOutline = new Outline  					{  						Element = new Element  						{  							Kind = ElementKind.CompilationUnit'  							Name = "<unit>"'  							Location = new Location  							{  								File = HelloWorldFile'  								Offset = 0'  								Length = 45'  								StartLine = 1'  								StartColumn = 1'  							}'  							Flags = (int)AnalysisElementFlags.None' // TODO: Change this if/when Flags is properly typed.  						}'  						Offset = 0'  						Length = 45'  						Children = new[] {  							new Outline  							{  								Element = new Element  								{  									Kind = ElementKind.Function'  									Name = "main"'  									Location = new Location  									{  										File = HelloWorldFile'  										Offset = 5'  										Length = 4'  										StartLine = 1'  										StartColumn = 6'  									}'  									Flags = (int)AnalysisElementFlags.Static' // TODO: Change this if/when Flags is properly typed.  									Parameters = "()"'  									ReturnType = "void"  								}'  								Offset = 0'  								Length = 43'  							}  						}  					};
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsOutline,The following statement contains a magic number: var expectedOutline = new Outline  					{  						Element = new Element  						{  							Kind = ElementKind.CompilationUnit'  							Name = "<unit>"'  							Location = new Location  							{  								File = HelloWorldFile'  								Offset = 0'  								Length = 45'  								StartLine = 1'  								StartColumn = 1'  							}'  							Flags = (int)AnalysisElementFlags.None' // TODO: Change this if/when Flags is properly typed.  						}'  						Offset = 0'  						Length = 45'  						Children = new[] {  							new Outline  							{  								Element = new Element  								{  									Kind = ElementKind.Function'  									Name = "main"'  									Location = new Location  									{  										File = HelloWorldFile'  										Offset = 5'  										Length = 4'  										StartLine = 1'  										StartColumn = 6'  									}'  									Flags = (int)AnalysisElementFlags.Static' // TODO: Change this if/when Flags is properly typed.  									Parameters = "()"'  									ReturnType = "void"  								}'  								Offset = 0'  								Length = 43'  							}  						}  					};
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsOutline,The following statement contains a magic number: var expectedOutline = new Outline  					{  						Element = new Element  						{  							Kind = ElementKind.CompilationUnit'  							Name = "<unit>"'  							Location = new Location  							{  								File = HelloWorldFile'  								Offset = 0'  								Length = 45'  								StartLine = 1'  								StartColumn = 1'  							}'  							Flags = (int)AnalysisElementFlags.None' // TODO: Change this if/when Flags is properly typed.  						}'  						Offset = 0'  						Length = 45'  						Children = new[] {  							new Outline  							{  								Element = new Element  								{  									Kind = ElementKind.Function'  									Name = "main"'  									Location = new Location  									{  										File = HelloWorldFile'  										Offset = 5'  										Length = 4'  										StartLine = 1'  										StartColumn = 6'  									}'  									Flags = (int)AnalysisElementFlags.Static' // TODO: Change this if/when Flags is properly typed.  									Parameters = "()"'  									ReturnType = "void"  								}'  								Offset = 0'  								Length = 43'  							}  						}  					};
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsOutline,The following statement contains a magic number: var expectedOutline = new Outline  					{  						Element = new Element  						{  							Kind = ElementKind.CompilationUnit'  							Name = "<unit>"'  							Location = new Location  							{  								File = HelloWorldFile'  								Offset = 0'  								Length = 45'  								StartLine = 1'  								StartColumn = 1'  							}'  							Flags = (int)AnalysisElementFlags.None' // TODO: Change this if/when Flags is properly typed.  						}'  						Offset = 0'  						Length = 45'  						Children = new[] {  							new Outline  							{  								Element = new Element  								{  									Kind = ElementKind.Function'  									Name = "main"'  									Location = new Location  									{  										File = HelloWorldFile'  										Offset = 5'  										Length = 4'  										StartLine = 1'  										StartColumn = 6'  									}'  									Flags = (int)AnalysisElementFlags.Static' // TODO: Change this if/when Flags is properly typed.  									Parameters = "()"'  									ReturnType = "void"  								}'  								Offset = 0'  								Length = 43'  							}  						}  					};
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisSetSubscriptionsOutline,The following statement contains a magic number: var expectedOutline = new Outline  					{  						Element = new Element  						{  							Kind = ElementKind.CompilationUnit'  							Name = "<unit>"'  							Location = new Location  							{  								File = HelloWorldFile'  								Offset = 0'  								Length = 45'  								StartLine = 1'  								StartColumn = 1'  							}'  							Flags = (int)AnalysisElementFlags.None' // TODO: Change this if/when Flags is properly typed.  						}'  						Offset = 0'  						Length = 45'  						Children = new[] {  							new Outline  							{  								Element = new Element  								{  									Kind = ElementKind.Function'  									Name = "main"'  									Location = new Location  									{  										File = HelloWorldFile'  										Offset = 5'  										Length = 4'  										StartLine = 1'  										StartColumn = 6'  									}'  									Flags = (int)AnalysisElementFlags.Static' // TODO: Change this if/when Flags is properly typed.  									Parameters = "()"'  									ReturnType = "void"  								}'  								Offset = 0'  								Length = 43'  							}  						}  					};
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisGetHover,The following statement contains a magic number: var hovers = await service.GetHover(HelloWorldFile' 19);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisGetHover,The following statement contains a magic number: Assert.Equal(17' hovers[0].Offset);
Magic Number,DanTup.DartAnalysis.Tests,AnalysisTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\AnalysisTests.cs,AnalysisGetHover,The following statement contains a magic number: Assert.Equal(5' hovers[0].Length);
Magic Number,DanTup.DartAnalysis.Tests,ServerTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\ServerTests.cs,ServerVersion,The following statement contains a magic number: Assert.Equal(new Version(1' 6' 0)' version);
Magic Number,DanTup.DartAnalysis.Tests,ServerTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\ServerTests.cs,ServerShutdown,The following statement contains a magic number: await Task.Delay(5000);
Magic Number,DanTup.DartAnalysis.Tests,ServerTests,D:\research\architectureSmells\repos\DanTup_DartVS\DanTup.DartAnalysis.Tests\ServerTests.cs,BadRequestFails,The following statement contains a magic number: var ex = Assert.Throws<AggregateException>(() => service.SetServerSubscriptions(new[] { (ServerService)1234 }).Wait());
