Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,UpdateChart,Cyclomatic complexity of the method is 11
Long Parameter List,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,DrawCandle,The method has 5 parameters. Parameters: dayIndex' open' close' dayHigh' dayLow
Long Statement,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,MenuAboutClick,The length of the statement  "                "This example was created with the Encog AI Framework.\nFor more information visit: http://www.heatonresearch.com/encog/"' " is 122.
Long Statement,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EncogCandleStickExample;component/mainwindow.xaml"' System.UriKind.Relative); " is 123.
Long Statement,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The length of the statement  "            ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged); " is 129.
Long Statement,EncogCandleStickExample,GatherData,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherData.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/EncogCandleStickExample;component/gatherdata.xaml"' System.UriKind.Relative); " is 123.
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: priceMax = 300;
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: marginBottom = 32;
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,ConvertDay,The following statement contains a magic number: return FirstDayOffset + (DayWidth/2) + (index*DayWidth);
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,DrawCandle,The following statement contains a magic number: r.SetValue(Canvas.LeftProperty' x - (StickWidth/2.0));
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,LoadMarketData,The following statement contains a magic number: try              {                  IMarketLoader loader = new YahooFinanceLoader();                  var ticker = new TickerSymbol(Company.Text);                  IList<MarketDataType> needed = new List<MarketDataType>();                  needed.Add(MarketDataType.AdjustedClose);                  needed.Add(MarketDataType.Close);                  needed.Add(MarketDataType.Open);                  needed.Add(MarketDataType.High);                  needed.Add(MarketDataType.Low);                  DateTime from = starting - TimeSpan.FromDays(365);                  DateTime to = starting + TimeSpan.FromDays(365*2);                  marketData = (List<LoadedMarketData>) loader.Load(ticker' needed' from' to);                  marketData.Sort();                    numberOfDays = (int) ((ActualWidth - FirstDayOffset)/DayWidth);                  numberOfDays = Math.Min(numberOfDays' marketData.Count);                  return true;              }              catch (Exception e)              {                  MessageBox.Show("Ticker symbol likely invalid.\n" + e.Message' "Error Loading Data");                  return false;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,LoadMarketData,The following statement contains a magic number: try              {                  IMarketLoader loader = new YahooFinanceLoader();                  var ticker = new TickerSymbol(Company.Text);                  IList<MarketDataType> needed = new List<MarketDataType>();                  needed.Add(MarketDataType.AdjustedClose);                  needed.Add(MarketDataType.Close);                  needed.Add(MarketDataType.Open);                  needed.Add(MarketDataType.High);                  needed.Add(MarketDataType.Low);                  DateTime from = starting - TimeSpan.FromDays(365);                  DateTime to = starting + TimeSpan.FromDays(365*2);                  marketData = (List<LoadedMarketData>) loader.Load(ticker' needed' from' to);                  marketData.Sort();                    numberOfDays = (int) ((ActualWidth - FirstDayOffset)/DayWidth);                  numberOfDays = Math.Min(numberOfDays' marketData.Count);                  return true;              }              catch (Exception e)              {                  MessageBox.Show("Ticker symbol likely invalid.\n" + e.Message' "Error Loading Data");                  return false;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,LoadMarketData,The following statement contains a magic number: try              {                  IMarketLoader loader = new YahooFinanceLoader();                  var ticker = new TickerSymbol(Company.Text);                  IList<MarketDataType> needed = new List<MarketDataType>();                  needed.Add(MarketDataType.AdjustedClose);                  needed.Add(MarketDataType.Close);                  needed.Add(MarketDataType.Open);                  needed.Add(MarketDataType.High);                  needed.Add(MarketDataType.Low);                  DateTime from = starting - TimeSpan.FromDays(365);                  DateTime to = starting + TimeSpan.FromDays(365*2);                  marketData = (List<LoadedMarketData>) loader.Load(ticker' needed' from' to);                  marketData.Sort();                    numberOfDays = (int) ((ActualWidth - FirstDayOffset)/DayWidth);                  numberOfDays = Math.Min(numberOfDays' marketData.Count);                  return true;              }              catch (Exception e)              {                  MessageBox.Show("Ticker symbol likely invalid.\n" + e.Message' "Error Loading Data");                  return false;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,DrawGuide,The following statement contains a magic number: breakPoint /= 10;
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,DrawGuide,The following statement contains a magic number: for (int i = 0; i < 10; i++)              {                  double price = priceMin + (i*breakPoint);                  var l = new Line                              {                                  X1 = 0'                                  X2 = ChartCanvas.ActualWidth'                                  Y1 = ConvertPrice(price)'                                  Y2 = ConvertPrice(price)'                                  Stroke = Brushes.LightGray                              };                  ChartCanvas.Children.Add(l);                  var label = new Label {Content = "" + (int) price};                  label.SetValue(Canvas.TopProperty' ConvertPrice(price) - 13);                  label.SetValue(Canvas.LeftProperty' 0.0);                  ChartCanvas.Children.Add(label);              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,DrawGuide,The following statement contains a magic number: for (int i = 0; i < 10; i++)              {                  double price = priceMin + (i*breakPoint);                  var l = new Line                              {                                  X1 = 0'                                  X2 = ChartCanvas.ActualWidth'                                  Y1 = ConvertPrice(price)'                                  Y2 = ConvertPrice(price)'                                  Stroke = Brushes.LightGray                              };                  ChartCanvas.Children.Add(l);                  var label = new Label {Content = "" + (int) price};                  label.SetValue(Canvas.TopProperty' ConvertPrice(price) - 13);                  label.SetValue(Canvas.LeftProperty' 0.0);                  ChartCanvas.Children.Add(label);              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,DrawGuide,The following statement contains a magic number: foreach (LoadedMarketData data in marketData.Where(data => data.When.CompareTo(starting) > 0))              {                  if (data.When.Month != lastMonth)                  {                      double x = ConvertDay(count);                      lastMonth = data.When.Month;                      var l = new Line {X1 = x' X2 = x' Y1 = 0' Y2 = ActualHeight' Stroke = Brushes.LightGray};                      ChartCanvas.Children.Add(l);                        var label = new Label {Content = "" + data.When.Month + "/" + data.When.Year};                      label.SetValue(Canvas.TopProperty' ChartCanvas.ActualHeight - marginBottom);                      label.SetValue(Canvas.LeftProperty' x - 25);                      ChartCanvas.Children.Add(label);                  }                    count++;                  if (count > numberOfDays)                      break;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,CalculatePriceRange,The following statement contains a magic number: if (range < 5)              {                  max = min + 2;                  min = min - 2;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,CalculatePriceRange,The following statement contains a magic number: if (range < 5)              {                  max = min + 2;                  min = min - 2;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,CalculatePriceRange,The following statement contains a magic number: if (range < 5)              {                  max = min + 2;                  min = min - 2;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,CalculatePriceRange,The following statement contains a magic number: priceMax = max + (range*0.1);
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,CalculatePriceRange,The following statement contains a magic number: priceMin = min - (range*0.1);
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,UpdateChart,The following statement contains a magic number: if (chartActive)              {                  // obtain date                  string theStart = Start.Text;                    try                  {                      starting = DateTime.Parse(theStart);                  }                  catch (Exception)                  {                      MessageBox.Show("Please enter a valid date.");                      return;                  }                    // plot it                  if (LoadMarketData())                  {                      CalculatePriceRange();                      ChartCanvas.Children.Clear();                      DrawGuide();                        int count = 0;                      int i = 0;                      double lastRatio = 0;                      bool lastRatioDefined = false;                        foreach (LoadedMarketData data in marketData)                      {                          if (data.When.CompareTo(starting) > 0)                          {                              // predict for this day                              if (Network != null)                              {                                  INeuralData input = Util.CreateData(marketData' i);                                  if (input != null)                                  {                                      IMLData output = Network.Compute(input);                                      double d = output[0];                                          if (d < 0.2 || d > 0.8)                                      {                                          var r = new Rectangle();                                            if (d < 0.5)                                          {                                              r.Fill = Brushes.Pink;                                              r.Stroke = Brushes.Pink;                                          }                                          else                                          {                                              r.Fill = Brushes.LightGreen;                                              r.Stroke = Brushes.LightGreen;                                          }                                            r.Width = StickWidth;                                          r.Height = ConvertPrice(priceMin);                                          r.SetValue(Canvas.LeftProperty' ConvertDay(count));                                          r.SetValue(Canvas.TopProperty' 0.0);                                          ChartCanvas.Children.Add(r);                                      }                                  }                              }                                // draw the candle                              DrawCandle(count' data.GetData(MarketDataType.Open)'                                         data.GetData(MarketDataType.Close)'                                         data.GetData(MarketDataType.High)'                                         data.GetData(MarketDataType.Low));                                // was this a stock split?                              double ratio = data.GetData(MarketDataType.Close)/data.GetData(MarketDataType.AdjustedClose);                              if (!lastRatioDefined)                              {                                  lastRatioDefined = true;                                  lastRatio = ratio;                              }                              else                              {                                  if (Math.Abs(ratio - lastRatio) > 0.01)                                  {                                      var line = new Line {X1 = ConvertDay(count)};                                      line.X2 = line.X1;                                      line.Y1 = 0;                                      line.Y2 = ConvertPrice(priceMin);                                      line.Stroke = Brushes.Yellow;                                      ChartCanvas.Children.Add(line);                                  }                                  lastRatio = ratio;                              }                                count++;                                if (count > numberOfDays)                                  break;                          }                          i++;                      }                  }              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,UpdateChart,The following statement contains a magic number: if (chartActive)              {                  // obtain date                  string theStart = Start.Text;                    try                  {                      starting = DateTime.Parse(theStart);                  }                  catch (Exception)                  {                      MessageBox.Show("Please enter a valid date.");                      return;                  }                    // plot it                  if (LoadMarketData())                  {                      CalculatePriceRange();                      ChartCanvas.Children.Clear();                      DrawGuide();                        int count = 0;                      int i = 0;                      double lastRatio = 0;                      bool lastRatioDefined = false;                        foreach (LoadedMarketData data in marketData)                      {                          if (data.When.CompareTo(starting) > 0)                          {                              // predict for this day                              if (Network != null)                              {                                  INeuralData input = Util.CreateData(marketData' i);                                  if (input != null)                                  {                                      IMLData output = Network.Compute(input);                                      double d = output[0];                                          if (d < 0.2 || d > 0.8)                                      {                                          var r = new Rectangle();                                            if (d < 0.5)                                          {                                              r.Fill = Brushes.Pink;                                              r.Stroke = Brushes.Pink;                                          }                                          else                                          {                                              r.Fill = Brushes.LightGreen;                                              r.Stroke = Brushes.LightGreen;                                          }                                            r.Width = StickWidth;                                          r.Height = ConvertPrice(priceMin);                                          r.SetValue(Canvas.LeftProperty' ConvertDay(count));                                          r.SetValue(Canvas.TopProperty' 0.0);                                          ChartCanvas.Children.Add(r);                                      }                                  }                              }                                // draw the candle                              DrawCandle(count' data.GetData(MarketDataType.Open)'                                         data.GetData(MarketDataType.Close)'                                         data.GetData(MarketDataType.High)'                                         data.GetData(MarketDataType.Low));                                // was this a stock split?                              double ratio = data.GetData(MarketDataType.Close)/data.GetData(MarketDataType.AdjustedClose);                              if (!lastRatioDefined)                              {                                  lastRatioDefined = true;                                  lastRatio = ratio;                              }                              else                              {                                  if (Math.Abs(ratio - lastRatio) > 0.01)                                  {                                      var line = new Line {X1 = ConvertDay(count)};                                      line.X2 = line.X1;                                      line.Y1 = 0;                                      line.Y2 = ConvertPrice(priceMin);                                      line.Stroke = Brushes.Yellow;                                      ChartCanvas.Children.Add(line);                                  }                                  lastRatio = ratio;                              }                                count++;                                if (count > numberOfDays)                                  break;                          }                          i++;                      }                  }              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,UpdateChart,The following statement contains a magic number: if (chartActive)              {                  // obtain date                  string theStart = Start.Text;                    try                  {                      starting = DateTime.Parse(theStart);                  }                  catch (Exception)                  {                      MessageBox.Show("Please enter a valid date.");                      return;                  }                    // plot it                  if (LoadMarketData())                  {                      CalculatePriceRange();                      ChartCanvas.Children.Clear();                      DrawGuide();                        int count = 0;                      int i = 0;                      double lastRatio = 0;                      bool lastRatioDefined = false;                        foreach (LoadedMarketData data in marketData)                      {                          if (data.When.CompareTo(starting) > 0)                          {                              // predict for this day                              if (Network != null)                              {                                  INeuralData input = Util.CreateData(marketData' i);                                  if (input != null)                                  {                                      IMLData output = Network.Compute(input);                                      double d = output[0];                                          if (d < 0.2 || d > 0.8)                                      {                                          var r = new Rectangle();                                            if (d < 0.5)                                          {                                              r.Fill = Brushes.Pink;                                              r.Stroke = Brushes.Pink;                                          }                                          else                                          {                                              r.Fill = Brushes.LightGreen;                                              r.Stroke = Brushes.LightGreen;                                          }                                            r.Width = StickWidth;                                          r.Height = ConvertPrice(priceMin);                                          r.SetValue(Canvas.LeftProperty' ConvertDay(count));                                          r.SetValue(Canvas.TopProperty' 0.0);                                          ChartCanvas.Children.Add(r);                                      }                                  }                              }                                // draw the candle                              DrawCandle(count' data.GetData(MarketDataType.Open)'                                         data.GetData(MarketDataType.Close)'                                         data.GetData(MarketDataType.High)'                                         data.GetData(MarketDataType.Low));                                // was this a stock split?                              double ratio = data.GetData(MarketDataType.Close)/data.GetData(MarketDataType.AdjustedClose);                              if (!lastRatioDefined)                              {                                  lastRatioDefined = true;                                  lastRatio = ratio;                              }                              else                              {                                  if (Math.Abs(ratio - lastRatio) > 0.01)                                  {                                      var line = new Line {X1 = ConvertDay(count)};                                      line.X2 = line.X1;                                      line.Y1 = 0;                                      line.Y2 = ConvertPrice(priceMin);                                      line.Stroke = Brushes.Yellow;                                      ChartCanvas.Children.Add(line);                                  }                                  lastRatio = ratio;                              }                                count++;                                if (count > numberOfDays)                                  break;                          }                          i++;                      }                  }              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,UpdateChart,The following statement contains a magic number: if (chartActive)              {                  // obtain date                  string theStart = Start.Text;                    try                  {                      starting = DateTime.Parse(theStart);                  }                  catch (Exception)                  {                      MessageBox.Show("Please enter a valid date.");                      return;                  }                    // plot it                  if (LoadMarketData())                  {                      CalculatePriceRange();                      ChartCanvas.Children.Clear();                      DrawGuide();                        int count = 0;                      int i = 0;                      double lastRatio = 0;                      bool lastRatioDefined = false;                        foreach (LoadedMarketData data in marketData)                      {                          if (data.When.CompareTo(starting) > 0)                          {                              // predict for this day                              if (Network != null)                              {                                  INeuralData input = Util.CreateData(marketData' i);                                  if (input != null)                                  {                                      IMLData output = Network.Compute(input);                                      double d = output[0];                                          if (d < 0.2 || d > 0.8)                                      {                                          var r = new Rectangle();                                            if (d < 0.5)                                          {                                              r.Fill = Brushes.Pink;                                              r.Stroke = Brushes.Pink;                                          }                                          else                                          {                                              r.Fill = Brushes.LightGreen;                                              r.Stroke = Brushes.LightGreen;                                          }                                            r.Width = StickWidth;                                          r.Height = ConvertPrice(priceMin);                                          r.SetValue(Canvas.LeftProperty' ConvertDay(count));                                          r.SetValue(Canvas.TopProperty' 0.0);                                          ChartCanvas.Children.Add(r);                                      }                                  }                              }                                // draw the candle                              DrawCandle(count' data.GetData(MarketDataType.Open)'                                         data.GetData(MarketDataType.Close)'                                         data.GetData(MarketDataType.High)'                                         data.GetData(MarketDataType.Low));                                // was this a stock split?                              double ratio = data.GetData(MarketDataType.Close)/data.GetData(MarketDataType.AdjustedClose);                              if (!lastRatioDefined)                              {                                  lastRatioDefined = true;                                  lastRatio = ratio;                              }                              else                              {                                  if (Math.Abs(ratio - lastRatio) > 0.01)                                  {                                      var line = new Line {X1 = ConvertDay(count)};                                      line.X2 = line.X1;                                      line.Y1 = 0;                                      line.Y2 = ConvertPrice(priceMin);                                      line.Stroke = Brushes.Yellow;                                      ChartCanvas.Children.Add(line);                                  }                                  lastRatio = ratio;                              }                                count++;                                if (count > numberOfDays)                                  break;                          }                          i++;                      }                  }              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,MenuNetTrainClick,The following statement contains a magic number: Network = EncogUtility.SimpleFeedForward(14' 100' 0' 1' false);
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,MenuNetTrainClick,The following statement contains a magic number: Network = EncogUtility.SimpleFeedForward(14' 100' 0' 1' false);
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).Closed += new System.EventHandler(this.WindowClose);                            #line default              #line hidden              return;              case 2:                            #line 14 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileOpenClick);                            #line default              #line hidden              return;              case 3:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileSaveClick);                            #line default              #line hidden              return;              case 4:                            #line 16 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileQuitClick);                            #line default              #line hidden              return;              case 5:                            #line 19 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetObtainClick);                            #line default              #line hidden              return;              case 6:                            #line 20 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetTrainClick);                            #line default              #line hidden              return;              case 7:                            #line 24 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuAboutClick);                            #line default              #line hidden              return;              case 8:              this.Company = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.Start = ((System.Windows.Controls.TextBox)(target));              return;              case 10:              this.Chart = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\MainWindow.xaml"              this.Chart.Click += new System.Windows.RoutedEventHandler(this.ChartClick);                            #line default              #line hidden              return;              case 11:              this.ChartCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 12:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).Closed += new System.EventHandler(this.WindowClose);                            #line default              #line hidden              return;              case 2:                            #line 14 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileOpenClick);                            #line default              #line hidden              return;              case 3:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileSaveClick);                            #line default              #line hidden              return;              case 4:                            #line 16 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileQuitClick);                            #line default              #line hidden              return;              case 5:                            #line 19 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetObtainClick);                            #line default              #line hidden              return;              case 6:                            #line 20 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetTrainClick);                            #line default              #line hidden              return;              case 7:                            #line 24 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuAboutClick);                            #line default              #line hidden              return;              case 8:              this.Company = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.Start = ((System.Windows.Controls.TextBox)(target));              return;              case 10:              this.Chart = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\MainWindow.xaml"              this.Chart.Click += new System.Windows.RoutedEventHandler(this.ChartClick);                            #line default              #line hidden              return;              case 11:              this.ChartCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 12:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).Closed += new System.EventHandler(this.WindowClose);                            #line default              #line hidden              return;              case 2:                            #line 14 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileOpenClick);                            #line default              #line hidden              return;              case 3:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileSaveClick);                            #line default              #line hidden              return;              case 4:                            #line 16 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileQuitClick);                            #line default              #line hidden              return;              case 5:                            #line 19 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetObtainClick);                            #line default              #line hidden              return;              case 6:                            #line 20 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetTrainClick);                            #line default              #line hidden              return;              case 7:                            #line 24 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuAboutClick);                            #line default              #line hidden              return;              case 8:              this.Company = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.Start = ((System.Windows.Controls.TextBox)(target));              return;              case 10:              this.Chart = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\MainWindow.xaml"              this.Chart.Click += new System.Windows.RoutedEventHandler(this.ChartClick);                            #line default              #line hidden              return;              case 11:              this.ChartCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 12:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).Closed += new System.EventHandler(this.WindowClose);                            #line default              #line hidden              return;              case 2:                            #line 14 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileOpenClick);                            #line default              #line hidden              return;              case 3:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileSaveClick);                            #line default              #line hidden              return;              case 4:                            #line 16 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileQuitClick);                            #line default              #line hidden              return;              case 5:                            #line 19 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetObtainClick);                            #line default              #line hidden              return;              case 6:                            #line 20 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetTrainClick);                            #line default              #line hidden              return;              case 7:                            #line 24 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuAboutClick);                            #line default              #line hidden              return;              case 8:              this.Company = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.Start = ((System.Windows.Controls.TextBox)(target));              return;              case 10:              this.Chart = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\MainWindow.xaml"              this.Chart.Click += new System.Windows.RoutedEventHandler(this.ChartClick);                            #line default              #line hidden              return;              case 11:              this.ChartCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 12:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).Closed += new System.EventHandler(this.WindowClose);                            #line default              #line hidden              return;              case 2:                            #line 14 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileOpenClick);                            #line default              #line hidden              return;              case 3:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileSaveClick);                            #line default              #line hidden              return;              case 4:                            #line 16 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileQuitClick);                            #line default              #line hidden              return;              case 5:                            #line 19 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetObtainClick);                            #line default              #line hidden              return;              case 6:                            #line 20 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetTrainClick);                            #line default              #line hidden              return;              case 7:                            #line 24 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuAboutClick);                            #line default              #line hidden              return;              case 8:              this.Company = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.Start = ((System.Windows.Controls.TextBox)(target));              return;              case 10:              this.Chart = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\MainWindow.xaml"              this.Chart.Click += new System.Windows.RoutedEventHandler(this.ChartClick);                            #line default              #line hidden              return;              case 11:              this.ChartCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 12:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).Closed += new System.EventHandler(this.WindowClose);                            #line default              #line hidden              return;              case 2:                            #line 14 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileOpenClick);                            #line default              #line hidden              return;              case 3:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileSaveClick);                            #line default              #line hidden              return;              case 4:                            #line 16 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileQuitClick);                            #line default              #line hidden              return;              case 5:                            #line 19 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetObtainClick);                            #line default              #line hidden              return;              case 6:                            #line 20 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetTrainClick);                            #line default              #line hidden              return;              case 7:                            #line 24 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuAboutClick);                            #line default              #line hidden              return;              case 8:              this.Company = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.Start = ((System.Windows.Controls.TextBox)(target));              return;              case 10:              this.Chart = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\MainWindow.xaml"              this.Chart.Click += new System.Windows.RoutedEventHandler(this.ChartClick);                            #line default              #line hidden              return;              case 11:              this.ChartCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 12:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).Closed += new System.EventHandler(this.WindowClose);                            #line default              #line hidden              return;              case 2:                            #line 14 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileOpenClick);                            #line default              #line hidden              return;              case 3:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileSaveClick);                            #line default              #line hidden              return;              case 4:                            #line 16 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileQuitClick);                            #line default              #line hidden              return;              case 5:                            #line 19 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetObtainClick);                            #line default              #line hidden              return;              case 6:                            #line 20 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetTrainClick);                            #line default              #line hidden              return;              case 7:                            #line 24 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuAboutClick);                            #line default              #line hidden              return;              case 8:              this.Company = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.Start = ((System.Windows.Controls.TextBox)(target));              return;              case 10:              this.Chart = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\MainWindow.xaml"              this.Chart.Click += new System.Windows.RoutedEventHandler(this.ChartClick);                            #line default              #line hidden              return;              case 11:              this.ChartCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 12:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).Closed += new System.EventHandler(this.WindowClose);                            #line default              #line hidden              return;              case 2:                            #line 14 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileOpenClick);                            #line default              #line hidden              return;              case 3:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileSaveClick);                            #line default              #line hidden              return;              case 4:                            #line 16 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileQuitClick);                            #line default              #line hidden              return;              case 5:                            #line 19 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetObtainClick);                            #line default              #line hidden              return;              case 6:                            #line 20 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetTrainClick);                            #line default              #line hidden              return;              case 7:                            #line 24 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuAboutClick);                            #line default              #line hidden              return;              case 8:              this.Company = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.Start = ((System.Windows.Controls.TextBox)(target));              return;              case 10:              this.Chart = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\MainWindow.xaml"              this.Chart.Click += new System.Windows.RoutedEventHandler(this.ChartClick);                            #line default              #line hidden              return;              case 11:              this.ChartCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 12:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).Closed += new System.EventHandler(this.WindowClose);                            #line default              #line hidden              return;              case 2:                            #line 14 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileOpenClick);                            #line default              #line hidden              return;              case 3:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileSaveClick);                            #line default              #line hidden              return;              case 4:                            #line 16 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileQuitClick);                            #line default              #line hidden              return;              case 5:                            #line 19 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetObtainClick);                            #line default              #line hidden              return;              case 6:                            #line 20 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetTrainClick);                            #line default              #line hidden              return;              case 7:                            #line 24 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuAboutClick);                            #line default              #line hidden              return;              case 8:              this.Company = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.Start = ((System.Windows.Controls.TextBox)(target));              return;              case 10:              this.Chart = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\MainWindow.xaml"              this.Chart.Click += new System.Windows.RoutedEventHandler(this.ChartClick);                            #line default              #line hidden              return;              case 11:              this.ChartCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 12:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).Closed += new System.EventHandler(this.WindowClose);                            #line default              #line hidden              return;              case 2:                            #line 14 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileOpenClick);                            #line default              #line hidden              return;              case 3:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileSaveClick);                            #line default              #line hidden              return;              case 4:                            #line 16 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileQuitClick);                            #line default              #line hidden              return;              case 5:                            #line 19 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetObtainClick);                            #line default              #line hidden              return;              case 6:                            #line 20 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetTrainClick);                            #line default              #line hidden              return;              case 7:                            #line 24 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuAboutClick);                            #line default              #line hidden              return;              case 8:              this.Company = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.Start = ((System.Windows.Controls.TextBox)(target));              return;              case 10:              this.Chart = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\MainWindow.xaml"              this.Chart.Click += new System.Windows.RoutedEventHandler(this.ChartClick);                            #line default              #line hidden              return;              case 11:              this.ChartCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 12:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).Closed += new System.EventHandler(this.WindowClose);                            #line default              #line hidden              return;              case 2:                            #line 14 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileOpenClick);                            #line default              #line hidden              return;              case 3:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileSaveClick);                            #line default              #line hidden              return;              case 4:                            #line 16 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileQuitClick);                            #line default              #line hidden              return;              case 5:                            #line 19 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetObtainClick);                            #line default              #line hidden              return;              case 6:                            #line 20 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetTrainClick);                            #line default              #line hidden              return;              case 7:                            #line 24 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuAboutClick);                            #line default              #line hidden              return;              case 8:              this.Company = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.Start = ((System.Windows.Controls.TextBox)(target));              return;              case 10:              this.Chart = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\MainWindow.xaml"              this.Chart.Click += new System.Windows.RoutedEventHandler(this.ChartClick);                            #line default              #line hidden              return;              case 11:              this.ChartCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 12:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,EncogCandleStickExample,GatherData,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherData.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TextSymbol = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.TextFrom = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.TextTo = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.TextPredictWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.TextEvalWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.TextBearPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.TextBullPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 8:                            #line 36 "..\..\GatherData.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonObtainData_Click);                            #line default              #line hidden              return;              }
Magic Number,EncogCandleStickExample,GatherData,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherData.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TextSymbol = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.TextFrom = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.TextTo = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.TextPredictWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.TextEvalWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.TextBearPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.TextBullPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 8:                            #line 36 "..\..\GatherData.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonObtainData_Click);                            #line default              #line hidden              return;              }
Magic Number,EncogCandleStickExample,GatherData,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherData.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TextSymbol = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.TextFrom = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.TextTo = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.TextPredictWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.TextEvalWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.TextBearPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.TextBullPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 8:                            #line 36 "..\..\GatherData.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonObtainData_Click);                            #line default              #line hidden              return;              }
Magic Number,EncogCandleStickExample,GatherData,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherData.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TextSymbol = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.TextFrom = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.TextTo = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.TextPredictWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.TextEvalWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.TextBearPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.TextBullPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 8:                            #line 36 "..\..\GatherData.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonObtainData_Click);                            #line default              #line hidden              return;              }
Magic Number,EncogCandleStickExample,GatherData,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherData.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TextSymbol = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.TextFrom = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.TextTo = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.TextPredictWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.TextEvalWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.TextBearPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.TextBullPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 8:                            #line 36 "..\..\GatherData.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonObtainData_Click);                            #line default              #line hidden              return;              }
Magic Number,EncogCandleStickExample,GatherData,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherData.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TextSymbol = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.TextFrom = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.TextTo = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.TextPredictWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.TextEvalWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.TextBearPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.TextBullPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 8:                            #line 36 "..\..\GatherData.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonObtainData_Click);                            #line default              #line hidden              return;              }
Magic Number,EncogCandleStickExample,GatherData,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherData.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.TextSymbol = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.TextFrom = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.TextTo = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.TextPredictWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.TextEvalWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.TextBearPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.TextBullPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 8:                            #line 36 "..\..\GatherData.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonObtainData_Click);                            #line default              #line hidden              return;              }
Magic Number,EncogCandleStickExample,GatherUtil,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherUtil.cs,CreateData,The following statement contains a magic number: INeuralData neuralData = new BasicNeuralData(14);
Magic Number,EncogCandleStickExample,GatherUtil,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherUtil.cs,CreateData,The following statement contains a magic number: var patternCount = new int[14];
Magic Number,EncogCandleStickExample,GatherUtil,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherUtil.cs,CreateData,The following statement contains a magic number: for (var i = 0; i < 14; i++)              {                  neuralData[i] = patternCount[i] / ((double)totalPatterns);              }
Magic Number,EncogCandleStickExample,GatherUtil,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherUtil.cs,CreateData,The following statement contains a magic number: if (good)                  ideal[0] = 0.9;              else                  ideal[0] = 0.1;
Magic Number,EncogCandleStickExample,GatherUtil,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherUtil.cs,CreateData,The following statement contains a magic number: if (good)                  ideal[0] = 0.9;              else                  ideal[0] = 0.1;
Magic Number,EncogCandleStickExample,IdentifyCandleStick,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\IdentifyCandleStick.cs,HasLongLowerShadow,The following statement contains a magic number: return (LowerShadowLength > (UpperShadowLength * 2));
Magic Number,EncogCandleStickExample,IdentifyCandleStick,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\IdentifyCandleStick.cs,HasLongUpperShadow,The following statement contains a magic number: return (UpperShadowLength > (UpperShadowLength * 2));
Missing Default,EncogCandleStickExample,MainWindow,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).SizeChanged += new System.Windows.SizeChangedEventHandler(this.WindowSizeChanged);                            #line default              #line hidden                            #line 4 "..\..\MainWindow.xaml"              ((EncogCandleStickExample.MainWindow)(target)).Closed += new System.EventHandler(this.WindowClose);                            #line default              #line hidden              return;              case 2:                            #line 14 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileOpenClick);                            #line default              #line hidden              return;              case 3:                            #line 15 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileSaveClick);                            #line default              #line hidden              return;              case 4:                            #line 16 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuFileQuitClick);                            #line default              #line hidden              return;              case 5:                            #line 19 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetObtainClick);                            #line default              #line hidden              return;              case 6:                            #line 20 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuNetTrainClick);                            #line default              #line hidden              return;              case 7:                            #line 24 "..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuAboutClick);                            #line default              #line hidden              return;              case 8:              this.Company = ((System.Windows.Controls.TextBox)(target));              return;              case 9:              this.Start = ((System.Windows.Controls.TextBox)(target));              return;              case 10:              this.Chart = ((System.Windows.Controls.Button)(target));                            #line 38 "..\..\MainWindow.xaml"              this.Chart.Click += new System.Windows.RoutedEventHandler(this.ChartClick);                            #line default              #line hidden              return;              case 11:              this.ChartCanvas = ((System.Windows.Controls.Canvas)(target));              return;              case 12:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Missing Default,EncogCandleStickExample,GatherData,C:\repos\encog_encog-dotnet-more-examples\EncogCandleStickExample\GatherData.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.TextSymbol = ((System.Windows.Controls.TextBox)(target));              return;              case 2:              this.TextFrom = ((System.Windows.Controls.TextBox)(target));              return;              case 3:              this.TextTo = ((System.Windows.Controls.TextBox)(target));              return;              case 4:              this.TextPredictWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 5:              this.TextEvalWindow = ((System.Windows.Controls.TextBox)(target));              return;              case 6:              this.TextBearPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 7:              this.TextBullPercent = ((System.Windows.Controls.TextBox)(target));              return;              case 8:                            #line 36 "..\..\GatherData.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.ButtonObtainData_Click);                            #line default              #line hidden              return;              }
