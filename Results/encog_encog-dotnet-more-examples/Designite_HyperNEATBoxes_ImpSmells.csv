Implementation smell,Namespace,Class,File,Method,Description
Magic Number,HyperNEATBoxes,DisplayBoxes,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\DisplayBoxes.xaml.cs,NewCase_Click,The following statement contains a magic number: this.testCase.InitTestCase(r.Next(3));
Magic Number,HyperNEATBoxes,DisplayBoxes,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\DisplayBoxes.xaml.cs,Render,The following statement contains a magic number: double delta = 2.0 / resolution;
Magic Number,HyperNEATBoxes,DisplayBoxes,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\DisplayBoxes.xaml.cs,Render,The following statement contains a magic number: for (int row = 0; row < resolution; row++)              {                  double y = -1 + (row * delta);                  double boxY = row * boxHeight;                  for (int col = 0; col < resolution; col++)                  {                      double x = -1 + (col * delta);                      double boxX = col * boxWidth;                        Rectangle r = new Rectangle();                      r.SetValue(Canvas.LeftProperty' boxX);                      r.SetValue(Canvas.TopProperty' boxY);                      r.Width = boxWidth;                      r.Height = boxHeight;                        if (this.testCase.GetPixel(x' y) > 0)                      {                          r.Fill = Brushes.Blue;                      }                      else                      {                          double d = trial.Output[index];                          int c = trial.Normalize(d' 255);                          SolidColorBrush b = new SolidColorBrush(Color.FromRgb(255' (byte)c' 255));                          r.Fill = b;                          r.Stroke = Brushes.Black;                      }                        GridCanvas.Children.Add(r);                      index++;                  }              }
Magic Number,HyperNEATBoxes,DisplayBoxes,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\DisplayBoxes.xaml.cs,Render,The following statement contains a magic number: for (int row = 0; row < resolution; row++)              {                  double y = -1 + (row * delta);                  double boxY = row * boxHeight;                  for (int col = 0; col < resolution; col++)                  {                      double x = -1 + (col * delta);                      double boxX = col * boxWidth;                        Rectangle r = new Rectangle();                      r.SetValue(Canvas.LeftProperty' boxX);                      r.SetValue(Canvas.TopProperty' boxY);                      r.Width = boxWidth;                      r.Height = boxHeight;                        if (this.testCase.GetPixel(x' y) > 0)                      {                          r.Fill = Brushes.Blue;                      }                      else                      {                          double d = trial.Output[index];                          int c = trial.Normalize(d' 255);                          SolidColorBrush b = new SolidColorBrush(Color.FromRgb(255' (byte)c' 255));                          r.Fill = b;                          r.Stroke = Brushes.Black;                      }                        GridCanvas.Children.Add(r);                      index++;                  }              }
Magic Number,HyperNEATBoxes,DisplayBoxes,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\DisplayBoxes.xaml.cs,Render,The following statement contains a magic number: for (int row = 0; row < resolution; row++)              {                  double y = -1 + (row * delta);                  double boxY = row * boxHeight;                  for (int col = 0; col < resolution; col++)                  {                      double x = -1 + (col * delta);                      double boxX = col * boxWidth;                        Rectangle r = new Rectangle();                      r.SetValue(Canvas.LeftProperty' boxX);                      r.SetValue(Canvas.TopProperty' boxY);                      r.Width = boxWidth;                      r.Height = boxHeight;                        if (this.testCase.GetPixel(x' y) > 0)                      {                          r.Fill = Brushes.Blue;                      }                      else                      {                          double d = trial.Output[index];                          int c = trial.Normalize(d' 255);                          SolidColorBrush b = new SolidColorBrush(Color.FromRgb(255' (byte)c' 255));                          r.Fill = b;                          r.Stroke = Brushes.Black;                      }                        GridCanvas.Children.Add(r);                      index++;                  }              }
Magic Number,HyperNEATBoxes,DisplayBoxes,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\DisplayBoxes.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\..\DisplayBoxes.xaml"              ((HyperNEATBoxes.DisplayBoxes)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden              return;              case 2:              this.Resolution = ((System.Windows.Controls.ComboBox)(target));              return;              case 3:              this.NewCase = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\..\DisplayBoxes.xaml"              this.NewCase.Click += new System.Windows.RoutedEventHandler(this.NewCase_Click);                            #line default              #line hidden              return;              case 4:              this.GridCanvas = ((System.Windows.Controls.Canvas)(target));              return;              }
Magic Number,HyperNEATBoxes,DisplayBoxes,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\DisplayBoxes.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\..\DisplayBoxes.xaml"              ((HyperNEATBoxes.DisplayBoxes)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden              return;              case 2:              this.Resolution = ((System.Windows.Controls.ComboBox)(target));              return;              case 3:              this.NewCase = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\..\DisplayBoxes.xaml"              this.NewCase.Click += new System.Windows.RoutedEventHandler(this.NewCase_Click);                            #line default              #line hidden              return;              case 4:              this.GridCanvas = ((System.Windows.Controls.Canvas)(target));              return;              }
Magic Number,HyperNEATBoxes,DisplayBoxes,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\DisplayBoxes.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 4 "..\..\..\DisplayBoxes.xaml"              ((HyperNEATBoxes.DisplayBoxes)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden              return;              case 2:              this.Resolution = ((System.Windows.Controls.ComboBox)(target));              return;              case 3:              this.NewCase = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\..\DisplayBoxes.xaml"              this.NewCase.Click += new System.Windows.RoutedEventHandler(this.NewCase_Click);                            #line default              #line hidden              return;              case 4:              this.GridCanvas = ((System.Windows.Controls.Canvas)(target));              return;              }
Magic Number,HyperNEATBoxes,TrialEvaluation,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\TrialEvaluation.cs,CalculateFitness,The following statement contains a magic number: double rmsd = Math.Sqrt(this.AccDistance / 75.0);
Magic Number,HyperNEATBoxes,TrialEvaluation,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\TrialEvaluation.cs,CalculateFitness,The following statement contains a magic number: if (rmsd > threshold)              {                  fitness = 0.0;              }              else              {                  fitness = (((threshold - rmsd) * 100.0) / threshold) + (this.AccRange / 7.5);              }
Magic Number,HyperNEATBoxes,TrialEvaluation,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\TrialEvaluation.cs,CalculateFitness,The following statement contains a magic number: if (rmsd > threshold)              {                  fitness = 0.0;              }              else              {                  fitness = (((threshold - rmsd) * 100.0) / threshold) + (this.AccRange / 7.5);              }
Magic Number,HyperNEATBoxes,TrialEvaluation,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\TrialEvaluation.cs,Query,The following statement contains a magic number: double pixelSize = 2.0 / resolution;
Magic Number,HyperNEATBoxes,TrialEvaluation,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\TrialEvaluation.cs,Query,The following statement contains a magic number: double orig = -1.0 + (pixelSize / 2.0);
Magic Number,HyperNEATBoxes,TrialEvaluation,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\TrialEvaluation.cs,Normalize,The following statement contains a magic number: if (result > 255)              {                  result = 255;              }
Magic Number,HyperNEATBoxes,TrialEvaluation,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\TrialEvaluation.cs,Normalize,The following statement contains a magic number: if (result > 255)              {                  result = 255;              }
Magic Number,HyperNEATBoxes,BoxesScore,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxesScore.cs,CalculateScore,The following statement contains a magic number: for (int i = 0; i < 3; i++)              {                  for (int j = 0; j < 25; j++)                  {                      IntPair targetPos = eval.Test.InitTestCase(i);                      IntPair actualPos = eval.Query(this.resolution);                        eval.Accumulate(                              CalcRealDistanceSquared(targetPos' actualPos)'                              Math.Max(0.0' eval.MaxActivation - eval.MinActivation));                  }              }
Magic Number,HyperNEATBoxes,BoxesScore,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxesScore.cs,CalculateScore,The following statement contains a magic number: for (int i = 0; i < 3; i++)              {                  for (int j = 0; j < 25; j++)                  {                      IntPair targetPos = eval.Test.InitTestCase(i);                      IntPair actualPos = eval.Query(this.resolution);                        eval.Accumulate(                              CalcRealDistanceSquared(targetPos' actualPos)'                              Math.Max(0.0' eval.MaxActivation - eval.MinActivation));                  }              }
Magic Number,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GetPixel,The following statement contains a magic number: int pixelX = (int)(((x + 1.0) * BoxTrialCase.BASE_RESOLUTION) / 2.0);
Magic Number,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GetPixel,The following statement contains a magic number: int pixelY = (int)(((y + 1.0) * BoxTrialCase.BASE_RESOLUTION) / 2.0);
Magic Number,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GetPixel,The following statement contains a magic number: return (deltaX > -1 && deltaX < 3 && deltaY > -1 && deltaY < 3) ? 1.0                      : 0.0;
Magic Number,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GetPixel,The following statement contains a magic number: return (deltaX > -1 && deltaX < 3 && deltaY > -1 && deltaY < 3) ? 1.0                      : 0.0;
Magic Number,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GenerateRandomTestCase,The following statement contains a magic number: switch (largeBoxRelativePos)              {                  case 0:                      largeBoxPos.AddX(5);                      break;                  case 1:                      largeBoxPos.AddY(5);                      break;                  case 2:                      if (rnd.NextDouble() > 0.5)                      {                          largeBoxPos.Add(3' 4);                      }                      else                      {                          largeBoxPos.Add(4' 3);                      }                      break;              }
Magic Number,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GenerateRandomTestCase,The following statement contains a magic number: switch (largeBoxRelativePos)              {                  case 0:                      largeBoxPos.AddX(5);                      break;                  case 1:                      largeBoxPos.AddY(5);                      break;                  case 2:                      if (rnd.NextDouble() > 0.5)                      {                          largeBoxPos.Add(3' 4);                      }                      else                      {                          largeBoxPos.Add(4' 3);                      }                      break;              }
Magic Number,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GenerateRandomTestCase,The following statement contains a magic number: switch (largeBoxRelativePos)              {                  case 0:                      largeBoxPos.AddX(5);                      break;                  case 1:                      largeBoxPos.AddY(5);                      break;                  case 2:                      if (rnd.NextDouble() > 0.5)                      {                          largeBoxPos.Add(3' 4);                      }                      else                      {                          largeBoxPos.Add(4' 3);                      }                      break;              }
Magic Number,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GenerateRandomTestCase,The following statement contains a magic number: switch (largeBoxRelativePos)              {                  case 0:                      largeBoxPos.AddX(5);                      break;                  case 1:                      largeBoxPos.AddY(5);                      break;                  case 2:                      if (rnd.NextDouble() > 0.5)                      {                          largeBoxPos.Add(3' 4);                      }                      else                      {                          largeBoxPos.Add(4' 3);                      }                      break;              }
Magic Number,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GenerateRandomTestCase,The following statement contains a magic number: switch (largeBoxRelativePos)              {                  case 0:                      largeBoxPos.AddX(5);                      break;                  case 1:                      largeBoxPos.AddY(5);                      break;                  case 2:                      if (rnd.NextDouble() > 0.5)                      {                          largeBoxPos.Add(3' 4);                      }                      else                      {                          largeBoxPos.Add(4' 3);                      }                      break;              }
Magic Number,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GenerateRandomTestCase,The following statement contains a magic number: switch (largeBoxRelativePos)              {                  case 0:                      largeBoxPos.AddX(5);                      break;                  case 1:                      largeBoxPos.AddY(5);                      break;                  case 2:                      if (rnd.NextDouble() > 0.5)                      {                          largeBoxPos.Add(3' 4);                      }                      else                      {                          largeBoxPos.Add(4' 3);                      }                      break;              }
Magic Number,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GenerateRandomTestCase,The following statement contains a magic number: switch (largeBoxRelativePos)              {                  case 0:                      largeBoxPos.AddX(5);                      break;                  case 1:                      largeBoxPos.AddY(5);                      break;                  case 2:                      if (rnd.NextDouble() > 0.5)                      {                          largeBoxPos.Add(3' 4);                      }                      else                      {                          largeBoxPos.Add(4' 3);                      }                      break;              }
Magic Number,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GenerateRandomTestCase,The following statement contains a magic number: switch (largeBoxRelativePos)              {                  case 0:                      largeBoxPos.AddX(5);                      break;                  case 1:                      largeBoxPos.AddY(5);                      break;                  case 2:                      if (rnd.NextDouble() > 0.5)                      {                          largeBoxPos.Add(3' 4);                      }                      else                      {                          largeBoxPos.Add(4' 3);                      }                      break;              }
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,UpdateStatus,The following statement contains a magic number: if( this.trainingUnderway ) {                  this.Example.IsEnabled = false;                  this.Training.Content = "Stop Training";                    if (!double.IsNaN(train.Error) && !double.IsInfinity(train.Error))                  {                      this.LabelError.Content = Format.FormatDouble(train.Error' 2);                  }                  this.LabelIterationCount.Content = Format.FormatInteger(this.train.IterationNumber);                  this.LabelSpeciesCount.Content = Format.FormatInteger(this.pop.Species.Count);              } else {                  this.Example.IsEnabled = exampleReady;                  this.Training.Content = "Begin Training";              }
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,ResetTraining,The following statement contains a magic number: Substrate substrate = SubstrateFactory.factorSandwichSubstrate(11' 11);
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,ResetTraining,The following statement contains a magic number: Substrate substrate = SubstrateFactory.factorSandwichSubstrate(11' 11);
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,ResetTraining,The following statement contains a magic number: BoxesScore score = new BoxesScore(11);
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,ResetTraining,The following statement contains a magic number: pop = new NEATPopulation(substrate' 500);
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,ResetTraining,The following statement contains a magic number: pop.ActivationCycles = 4;
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,BackgroundTask,The following statement contains a magic number: while (!this.requestStop && this.train.Error < 110)              {                  this.train.Iteration();                  this.Dispatcher.Invoke(new DelegateUpdateStatus(UpdateStatus)' new object[] { });              }
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_Click);                            #line default              #line hidden              return;              case 2:              this.LabelError = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.LabelIterationCount = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.LabelSpeciesCount = ((System.Windows.Controls.Label)(target));              return;              case 5:              this.Training = ((System.Windows.Controls.Button)(target));                            #line 50 "..\..\..\MainWindow.xaml"              this.Training.Click += new System.Windows.RoutedEventHandler(this.Training_Click);                            #line default              #line hidden              return;              case 6:              this.Example = ((System.Windows.Controls.Button)(target));                            #line 51 "..\..\..\MainWindow.xaml"              this.Example.Click += new System.Windows.RoutedEventHandler(this.Example_Click);                            #line default              #line hidden              return;              case 7:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_Click);                            #line default              #line hidden              return;              case 2:              this.LabelError = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.LabelIterationCount = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.LabelSpeciesCount = ((System.Windows.Controls.Label)(target));              return;              case 5:              this.Training = ((System.Windows.Controls.Button)(target));                            #line 50 "..\..\..\MainWindow.xaml"              this.Training.Click += new System.Windows.RoutedEventHandler(this.Training_Click);                            #line default              #line hidden              return;              case 6:              this.Example = ((System.Windows.Controls.Button)(target));                            #line 51 "..\..\..\MainWindow.xaml"              this.Example.Click += new System.Windows.RoutedEventHandler(this.Example_Click);                            #line default              #line hidden              return;              case 7:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_Click);                            #line default              #line hidden              return;              case 2:              this.LabelError = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.LabelIterationCount = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.LabelSpeciesCount = ((System.Windows.Controls.Label)(target));              return;              case 5:              this.Training = ((System.Windows.Controls.Button)(target));                            #line 50 "..\..\..\MainWindow.xaml"              this.Training.Click += new System.Windows.RoutedEventHandler(this.Training_Click);                            #line default              #line hidden              return;              case 6:              this.Example = ((System.Windows.Controls.Button)(target));                            #line 51 "..\..\..\MainWindow.xaml"              this.Example.Click += new System.Windows.RoutedEventHandler(this.Example_Click);                            #line default              #line hidden              return;              case 7:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_Click);                            #line default              #line hidden              return;              case 2:              this.LabelError = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.LabelIterationCount = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.LabelSpeciesCount = ((System.Windows.Controls.Label)(target));              return;              case 5:              this.Training = ((System.Windows.Controls.Button)(target));                            #line 50 "..\..\..\MainWindow.xaml"              this.Training.Click += new System.Windows.RoutedEventHandler(this.Training_Click);                            #line default              #line hidden              return;              case 6:              this.Example = ((System.Windows.Controls.Button)(target));                            #line 51 "..\..\..\MainWindow.xaml"              this.Example.Click += new System.Windows.RoutedEventHandler(this.Example_Click);                            #line default              #line hidden              return;              case 7:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_Click);                            #line default              #line hidden              return;              case 2:              this.LabelError = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.LabelIterationCount = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.LabelSpeciesCount = ((System.Windows.Controls.Label)(target));              return;              case 5:              this.Training = ((System.Windows.Controls.Button)(target));                            #line 50 "..\..\..\MainWindow.xaml"              this.Training.Click += new System.Windows.RoutedEventHandler(this.Training_Click);                            #line default              #line hidden              return;              case 6:              this.Example = ((System.Windows.Controls.Button)(target));                            #line 51 "..\..\..\MainWindow.xaml"              this.Example.Click += new System.Windows.RoutedEventHandler(this.Example_Click);                            #line default              #line hidden              return;              case 7:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Magic Number,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_Click);                            #line default              #line hidden              return;              case 2:              this.LabelError = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.LabelIterationCount = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.LabelSpeciesCount = ((System.Windows.Controls.Label)(target));              return;              case 5:              this.Training = ((System.Windows.Controls.Button)(target));                            #line 50 "..\..\..\MainWindow.xaml"              this.Training.Click += new System.Windows.RoutedEventHandler(this.Training_Click);                            #line default              #line hidden              return;              case 6:              this.Example = ((System.Windows.Controls.Button)(target));                            #line 51 "..\..\..\MainWindow.xaml"              this.Example.Click += new System.Windows.RoutedEventHandler(this.Example_Click);                            #line default              #line hidden              return;              case 7:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
Missing Default,HyperNEATBoxes,DisplayBoxes,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\DisplayBoxes.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 4 "..\..\..\DisplayBoxes.xaml"              ((HyperNEATBoxes.DisplayBoxes)(target)).Loaded += new System.Windows.RoutedEventHandler(this.Window_Loaded);                            #line default              #line hidden              return;              case 2:              this.Resolution = ((System.Windows.Controls.ComboBox)(target));              return;              case 3:              this.NewCase = ((System.Windows.Controls.Button)(target));                            #line 20 "..\..\..\DisplayBoxes.xaml"              this.NewCase.Click += new System.Windows.RoutedEventHandler(this.NewCase_Click);                            #line default              #line hidden              return;              case 4:              this.GridCanvas = ((System.Windows.Controls.Canvas)(target));              return;              }
Missing Default,HyperNEATBoxes,BoxTrialCase,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\BoxTrialCase.cs,GenerateRandomTestCase,The following switch statement is missing a default case: switch (largeBoxRelativePos)              {                  case 0:                      largeBoxPos.AddX(5);                      break;                  case 1:                      largeBoxPos.AddY(5);                      break;                  case 2:                      if (rnd.NextDouble() > 0.5)                      {                          largeBoxPos.Add(3' 4);                      }                      else                      {                          largeBoxPos.Add(4' 3);                      }                      break;              }
Missing Default,HyperNEATBoxes,MainWindow,C:\repos\encog_encog-dotnet-more-examples\HyperNEATBoxes\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 13 "..\..\..\MainWindow.xaml"              ((System.Windows.Controls.MenuItem)(target)).Click += new System.Windows.RoutedEventHandler(this.MenuItem_Click);                            #line default              #line hidden              return;              case 2:              this.LabelError = ((System.Windows.Controls.Label)(target));              return;              case 3:              this.LabelIterationCount = ((System.Windows.Controls.Label)(target));              return;              case 4:              this.LabelSpeciesCount = ((System.Windows.Controls.Label)(target));              return;              case 5:              this.Training = ((System.Windows.Controls.Button)(target));                            #line 50 "..\..\..\MainWindow.xaml"              this.Training.Click += new System.Windows.RoutedEventHandler(this.Training_Click);                            #line default              #line hidden              return;              case 6:              this.Example = ((System.Windows.Controls.Button)(target));                            #line 51 "..\..\..\MainWindow.xaml"              this.Example.Click += new System.Windows.RoutedEventHandler(this.Example_Click);                            #line default              #line hidden              return;              case 7:              this.Status = ((System.Windows.Controls.Label)(target));              return;              }
