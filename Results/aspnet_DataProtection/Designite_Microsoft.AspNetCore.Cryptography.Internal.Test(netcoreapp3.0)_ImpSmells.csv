Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,RunHashAlgorithmTest_No_HMAC,The method has 5 parameters. Parameters: getter' expectedAlgorithmName' expectedBlockSizeInBytes' expectedDigestSizeInBytes' expectedDigest
Long Parameter List,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,RunHashAlgorithmTest_With_HMAC,The method has 5 parameters. Parameters: getter' expectedAlgorithmName' expectedBlockSizeInBytes' expectedDigestSizeInBytes' expectedDigest
Long Identifier,Microsoft.AspNetCore.Cryptography,WeakReferenceHelpersTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\WeakReferenceHelpersTests.cs,GetSharedInstance_ExistingWeakRefIsNull_AnotherThreadCreatesInstanceWhileOurFactoryRuns_ReturnsExistingInstanceAndDisposesNewInstance,The length of the parameter instanceThatWillBeCreatedFirst is 30.
Long Identifier,Microsoft.AspNetCore.Cryptography,WeakReferenceHelpersTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\WeakReferenceHelpersTests.cs,GetSharedInstance_ExistingWeakRefIsNull_AnotherThreadCreatesInstanceWhileOurFactoryRuns_ReturnsExistingInstanceAndDisposesNewInstance,The length of the parameter instanceThatWillBeCreatedSecond is 31.
Long Statement,Microsoft.AspNetCore.Cryptography.Cng,BCRYPT_KEY_LENGTHS_STRUCT_Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCRYPT_KEY_LENGTHS_STRUCT_Tests.cs,EnsureValidKeyLength_FailureCases,The length of the statement  "                exceptionMessage: Resources.FormatBCRYPT_KEY_LENGTHS_STRUCT_InvalidKeyLength(testValue' minLength' maxLength' increment)); " is 122.
Long Statement,Microsoft.AspNetCore.Cryptography.SafeHandles,SecureLocalAllocHandleTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\SafeHandles\SecureLocalAllocHandleTests.cs,Duplicate_Copies_Data,The length of the statement  "            Assert.Equal(expected' new string((char*)duplicateHandle.DangerousGetHandle()' 0' expected.Length)); // contents the same data " is 126.
Long Statement,Microsoft.AspNetCore.Cryptography.SafeHandles,SecureLocalAllocHandleTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\SafeHandles\SecureLocalAllocHandleTests.cs,Duplicate_Copies_Data,The length of the statement  "            Assert.NotEqual(controlHandle.DangerousGetHandle()' duplicateHandle.DangerousGetHandle()); // shouldn't just point to the same memory location " is 142.
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: byte[] bytes = new byte[sizeof(Guid) + 6];
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: bytes[2] = 0xE4;
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: bytes[sizeof(Guid) + 3] = 0xEA;
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: bytes[sizeof(Guid) + 4] = 0xF2;
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: bytes[sizeof(Guid) + 5] = 0x6A;
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: Assert.Equal(0xE4' bytes[2]);
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: Assert.Equal(0xEA' bytes[sizeof(Guid) + 3]);
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: Assert.Equal(0xF2' bytes[sizeof(Guid) + 4]);
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: Assert.Equal(0x6A' bytes[sizeof(Guid) + 5]);
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: Guid newGuid = new Guid(bytes.Skip(3).Take(sizeof(Guid)).ToArray());
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: bytes[3] != 0x00 && bytes[18] != 0x00
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: bytes[3] != 0x00 && bytes[18] != 0x00
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,BCryptUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\BCryptUtilTests.cs,GenRandom_PopulatesBuffer,The following statement contains a magic number: i < 100
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA1_Cached_Handle_No_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_No_HMAC(                  getter: () => CachedAlgorithmHandles.SHA1'                  expectedAlgorithmName: "SHA1"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 160 / 8'                  expectedDigest: "MbYo3dZmXtgUZcUoWoxkCDKFvkk=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA1_Cached_Handle_No_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_No_HMAC(                  getter: () => CachedAlgorithmHandles.SHA1'                  expectedAlgorithmName: "SHA1"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 160 / 8'                  expectedDigest: "MbYo3dZmXtgUZcUoWoxkCDKFvkk=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA1_Cached_Handle_No_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_No_HMAC(                  getter: () => CachedAlgorithmHandles.SHA1'                  expectedAlgorithmName: "SHA1"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 160 / 8'                  expectedDigest: "MbYo3dZmXtgUZcUoWoxkCDKFvkk=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA1_Cached_Handle_No_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_No_HMAC(                  getter: () => CachedAlgorithmHandles.SHA1'                  expectedAlgorithmName: "SHA1"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 160 / 8'                  expectedDigest: "MbYo3dZmXtgUZcUoWoxkCDKFvkk=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA1_Cached_Handle_With_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_With_HMAC(                  getter: () => CachedAlgorithmHandles.HMAC_SHA1'                  expectedAlgorithmName: "SHA1"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 160 / 8'                  expectedDigest: "PjYTgLTWkt6NeH0NudIR7N47Ipg=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA1_Cached_Handle_With_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_With_HMAC(                  getter: () => CachedAlgorithmHandles.HMAC_SHA1'                  expectedAlgorithmName: "SHA1"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 160 / 8'                  expectedDigest: "PjYTgLTWkt6NeH0NudIR7N47Ipg=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA1_Cached_Handle_With_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_With_HMAC(                  getter: () => CachedAlgorithmHandles.HMAC_SHA1'                  expectedAlgorithmName: "SHA1"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 160 / 8'                  expectedDigest: "PjYTgLTWkt6NeH0NudIR7N47Ipg=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA1_Cached_Handle_With_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_With_HMAC(                  getter: () => CachedAlgorithmHandles.HMAC_SHA1'                  expectedAlgorithmName: "SHA1"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 160 / 8'                  expectedDigest: "PjYTgLTWkt6NeH0NudIR7N47Ipg=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA256_Cached_Handle_No_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_No_HMAC(                  getter: () => CachedAlgorithmHandles.SHA256'                  expectedAlgorithmName: "SHA256"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 256 / 8'                  expectedDigest: "5uRfQadsrnUTa3/TEo5PP6SDZQkb9AcE4wNXDVcM0Fo=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA256_Cached_Handle_No_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_No_HMAC(                  getter: () => CachedAlgorithmHandles.SHA256'                  expectedAlgorithmName: "SHA256"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 256 / 8'                  expectedDigest: "5uRfQadsrnUTa3/TEo5PP6SDZQkb9AcE4wNXDVcM0Fo=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA256_Cached_Handle_No_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_No_HMAC(                  getter: () => CachedAlgorithmHandles.SHA256'                  expectedAlgorithmName: "SHA256"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 256 / 8'                  expectedDigest: "5uRfQadsrnUTa3/TEo5PP6SDZQkb9AcE4wNXDVcM0Fo=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA256_Cached_Handle_No_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_No_HMAC(                  getter: () => CachedAlgorithmHandles.SHA256'                  expectedAlgorithmName: "SHA256"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 256 / 8'                  expectedDigest: "5uRfQadsrnUTa3/TEo5PP6SDZQkb9AcE4wNXDVcM0Fo=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA256_Cached_Handle_With_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_With_HMAC(                  getter: () => CachedAlgorithmHandles.HMAC_SHA256'                  expectedAlgorithmName: "SHA256"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 256 / 8'                  expectedDigest: "KLzo0lVg5gZkpL5D6Ck7QT8w4iuPCe/pGCrMcOXWbKY=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA256_Cached_Handle_With_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_With_HMAC(                  getter: () => CachedAlgorithmHandles.HMAC_SHA256'                  expectedAlgorithmName: "SHA256"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 256 / 8'                  expectedDigest: "KLzo0lVg5gZkpL5D6Ck7QT8w4iuPCe/pGCrMcOXWbKY=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA256_Cached_Handle_With_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_With_HMAC(                  getter: () => CachedAlgorithmHandles.HMAC_SHA256'                  expectedAlgorithmName: "SHA256"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 256 / 8'                  expectedDigest: "KLzo0lVg5gZkpL5D6Ck7QT8w4iuPCe/pGCrMcOXWbKY=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA256_Cached_Handle_With_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_With_HMAC(                  getter: () => CachedAlgorithmHandles.HMAC_SHA256'                  expectedAlgorithmName: "SHA256"'                  expectedBlockSizeInBytes: 512 / 8'                  expectedDigestSizeInBytes: 256 / 8'                  expectedDigest: "KLzo0lVg5gZkpL5D6Ck7QT8w4iuPCe/pGCrMcOXWbKY=");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA512_Cached_Handle_No_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_No_HMAC(                  getter: () => CachedAlgorithmHandles.SHA512'                  expectedAlgorithmName: "SHA512"'                  expectedBlockSizeInBytes: 1024 / 8'                  expectedDigestSizeInBytes: 512 / 8'                  expectedDigest: "jKI7WrcgPP7n2HAYOb8uFRi7xEsNG/BmdGd18dwwkIpqJ4Vmlk2b+8hssLyMQlprTSKVJNObSiYUqW5THS7okw==");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA512_Cached_Handle_No_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_No_HMAC(                  getter: () => CachedAlgorithmHandles.SHA512'                  expectedAlgorithmName: "SHA512"'                  expectedBlockSizeInBytes: 1024 / 8'                  expectedDigestSizeInBytes: 512 / 8'                  expectedDigest: "jKI7WrcgPP7n2HAYOb8uFRi7xEsNG/BmdGd18dwwkIpqJ4Vmlk2b+8hssLyMQlprTSKVJNObSiYUqW5THS7okw==");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA512_Cached_Handle_No_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_No_HMAC(                  getter: () => CachedAlgorithmHandles.SHA512'                  expectedAlgorithmName: "SHA512"'                  expectedBlockSizeInBytes: 1024 / 8'                  expectedDigestSizeInBytes: 512 / 8'                  expectedDigest: "jKI7WrcgPP7n2HAYOb8uFRi7xEsNG/BmdGd18dwwkIpqJ4Vmlk2b+8hssLyMQlprTSKVJNObSiYUqW5THS7okw==");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA512_Cached_Handle_No_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_No_HMAC(                  getter: () => CachedAlgorithmHandles.SHA512'                  expectedAlgorithmName: "SHA512"'                  expectedBlockSizeInBytes: 1024 / 8'                  expectedDigestSizeInBytes: 512 / 8'                  expectedDigest: "jKI7WrcgPP7n2HAYOb8uFRi7xEsNG/BmdGd18dwwkIpqJ4Vmlk2b+8hssLyMQlprTSKVJNObSiYUqW5THS7okw==");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA512_Cached_Handle_With_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_With_HMAC(                  getter: () => CachedAlgorithmHandles.HMAC_SHA512'                  expectedAlgorithmName: "SHA512"'                  expectedBlockSizeInBytes: 1024 / 8'                  expectedDigestSizeInBytes: 512 / 8'                  expectedDigest: "pKTX5vtPtbsn7pX9ISDlOYr1NFklTBIPYAFICy0ZQbFc0QVzGaTUvtqTOi91I0sHa1DIod6uIogux5iLdHjfcA==");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA512_Cached_Handle_With_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_With_HMAC(                  getter: () => CachedAlgorithmHandles.HMAC_SHA512'                  expectedAlgorithmName: "SHA512"'                  expectedBlockSizeInBytes: 1024 / 8'                  expectedDigestSizeInBytes: 512 / 8'                  expectedDigest: "pKTX5vtPtbsn7pX9ISDlOYr1NFklTBIPYAFICy0ZQbFc0QVzGaTUvtqTOi91I0sHa1DIod6uIogux5iLdHjfcA==");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA512_Cached_Handle_With_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_With_HMAC(                  getter: () => CachedAlgorithmHandles.HMAC_SHA512'                  expectedAlgorithmName: "SHA512"'                  expectedBlockSizeInBytes: 1024 / 8'                  expectedDigestSizeInBytes: 512 / 8'                  expectedDigest: "pKTX5vtPtbsn7pX9ISDlOYr1NFklTBIPYAFICy0ZQbFc0QVzGaTUvtqTOi91I0sHa1DIod6uIogux5iLdHjfcA==");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,SHA512_Cached_Handle_With_HMAC,The following statement contains a magic number: RunHashAlgorithmTest_With_HMAC(                  getter: () => CachedAlgorithmHandles.HMAC_SHA512'                  expectedAlgorithmName: "SHA512"'                  expectedBlockSizeInBytes: 1024 / 8'                  expectedDigestSizeInBytes: 512 / 8'                  expectedDigest: "pKTX5vtPtbsn7pX9ISDlOYr1NFklTBIPYAFICy0ZQbFc0QVzGaTUvtqTOi91I0sHa1DIod6uIogux5iLdHjfcA==");
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,RunAesBlockCipherAlgorithmTest,The following statement contains a magic number: Assert.Equal((uint)(128 / 8)' algorithmHandle.GetCipherBlockLength());
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,RunAesBlockCipherAlgorithmTest,The following statement contains a magic number: Assert.Equal((uint)(128 / 8)' algorithmHandle.GetCipherBlockLength());
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,RunAesBlockCipherAlgorithmTest,The following statement contains a magic number: Assert.Equal(128U' supportedKeyLengths.dwMinLength);
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,RunAesBlockCipherAlgorithmTest,The following statement contains a magic number: Assert.Equal(256U' supportedKeyLengths.dwMaxLength);
Magic Number,Microsoft.AspNetCore.Cryptography.Cng,CachedAlgorithmHandlesTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\Cng\CachedAlgorithmHandlesTests.cs,RunAesBlockCipherAlgorithmTest,The following statement contains a magic number: Assert.Equal(64U' supportedKeyLengths.dwIncrement);
Magic Number,Microsoft.AspNetCore.Cryptography,CryptoUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\CryptoUtilTests.cs,TimeConstantBuffersAreEqual_Array_Equal,The following statement contains a magic number: Assert.True(CryptoUtil.TimeConstantBuffersAreEqual(a' 1' 3' b' 2' 3));
Magic Number,Microsoft.AspNetCore.Cryptography,CryptoUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\CryptoUtilTests.cs,TimeConstantBuffersAreEqual_Array_Equal,The following statement contains a magic number: Assert.True(CryptoUtil.TimeConstantBuffersAreEqual(a' 1' 3' b' 2' 3));
Magic Number,Microsoft.AspNetCore.Cryptography,CryptoUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\CryptoUtilTests.cs,TimeConstantBuffersAreEqual_Array_Equal,The following statement contains a magic number: Assert.True(CryptoUtil.TimeConstantBuffersAreEqual(a' 1' 3' b' 2' 3));
Magic Number,Microsoft.AspNetCore.Cryptography,CryptoUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\CryptoUtilTests.cs,TimeConstantBuffersAreEqual_Array_Unequal,The following statement contains a magic number: Assert.False(CryptoUtil.TimeConstantBuffersAreEqual(a' 1' 3' b' 2' 3));
Magic Number,Microsoft.AspNetCore.Cryptography,CryptoUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\CryptoUtilTests.cs,TimeConstantBuffersAreEqual_Array_Unequal,The following statement contains a magic number: Assert.False(CryptoUtil.TimeConstantBuffersAreEqual(a' 1' 3' b' 2' 3));
Magic Number,Microsoft.AspNetCore.Cryptography,CryptoUtilTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.Cryptography.Internal.Test\CryptoUtilTests.cs,TimeConstantBuffersAreEqual_Array_Unequal,The following statement contains a magic number: Assert.False(CryptoUtil.TimeConstantBuffersAreEqual(a' 1' 3' b' 2' 3));
