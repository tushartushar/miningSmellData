Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Microsoft.AspNetCore.DataProtection.AzureKeyVault,AzureKeyVaultXmlEncryptor,C:\repos\aspnet_DataProtection\src\Microsoft.AspNetCore.DataProtection.AzureKeyVault\AzureKeyVaultXmlEncryptor.cs,,The length of the parameter DefaultSymmetricAlgorithmFactory is 32.
Magic Number,Microsoft.AspNetCore.DataProtection.AzureKeyVault,AzureKeyVaultXmlEncryptor,C:\repos\aspnet_DataProtection\src\Microsoft.AspNetCore.DataProtection.AzureKeyVault\AzureKeyVaultXmlEncryptor.cs,EncryptAsync,The following statement contains a magic number: using (var symmetricAlgorithm = DefaultSymmetricAlgorithmFactory())              {                  var symmetricBlockSize = symmetricAlgorithm.BlockSize / 8;                  var symmetricKey = new byte[symmetricBlockSize];                  var symmetricIV = new byte[symmetricBlockSize];                  _randomNumberGenerator.GetBytes(symmetricKey);                  _randomNumberGenerator.GetBytes(symmetricIV);                    byte[] encryptedValue;                  using (var encryptor = symmetricAlgorithm.CreateEncryptor(symmetricKey' symmetricIV))                  {                      encryptedValue = encryptor.TransformFinalBlock(value' 0' value.Length);                  }                    var wrappedKey = await _client.WrapKeyAsync(_keyId' DefaultKeyEncryption' symmetricKey);                    var element = new XElement("encryptedKey"'                      new XComment(" This key is encrypted with Azure KeyVault. ")'                      new XElement("kid"' wrappedKey.Kid)'                      new XElement("key"' Convert.ToBase64String(wrappedKey.Result))'                      new XElement("iv"' Convert.ToBase64String(symmetricIV))'                      new XElement("value"' Convert.ToBase64String(encryptedValue)));                    return new EncryptedXmlInfo(element' typeof(AzureKeyVaultXmlDecryptor));              }
