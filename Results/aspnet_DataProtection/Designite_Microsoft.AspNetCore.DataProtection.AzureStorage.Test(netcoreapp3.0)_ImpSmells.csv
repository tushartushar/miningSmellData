Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Microsoft.AspNetCore.DataProtection.AzureStorage.Test,AzureBlobXmlRepositoryTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.AzureStorage.Test\AzureBlobXmlRepositoryTests.cs,StoreCreatesBlobWhenNotExist,The length of the statement  "                .Returns(async (byte[] buffer' int index' int count' AccessCondition accessCondition' BlobRequestOptions options' OperationContext operationContext) => " is 151.
Long Statement,Microsoft.AspNetCore.DataProtection.AzureStorage.Test,AzureBlobXmlRepositoryTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.AzureStorage.Test\AzureBlobXmlRepositoryTests.cs,StoreUpdatesWhenExistsAndNewerExists,The length of the statement  "                .Returns(async (byte[] buffer' int index' int count' AccessCondition accessCondition' BlobRequestOptions options' OperationContext operationContext) => " is 151.
Magic Number,Microsoft.AspNetCore.DataProtection.AzureStorage.Test,AzureBlobXmlRepositoryTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.AzureStorage.Test\AzureBlobXmlRepositoryTests.cs,StoreUpdatesWhenExistsAndNewerExists,The following statement contains a magic number: mock.Setup(c => c.UploadFromByteArrayAsync(                      It.IsAny<byte[]>()'                      It.IsAny<int>()'                      It.IsAny<int>()'                      It.Is((AccessCondition cond) => cond.IfNoneMatchETag == "*")'                      It.IsAny<BlobRequestOptions>()'                      It.IsAny<OperationContext>()))                  .Throws(new StorageException(new RequestResult { HttpStatusCode = 412 }' null' null))                  .Verifiable();
