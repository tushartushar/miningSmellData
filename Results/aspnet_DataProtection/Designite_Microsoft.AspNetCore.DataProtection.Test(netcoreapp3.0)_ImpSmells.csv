Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_WithEscrowAndEncryption,The method has 113 lines of code.
Long Parameter List,Microsoft.AspNetCore.DataProtection,StringLogger,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\StringLoggerFactory.cs,Log,The method has 5 parameters. Parameters: logLevel' eventId' state' exception' formatter
Long Parameter List,Microsoft.AspNetCore.DataProtection.Cng.Internal,MockableEncryptor,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,EncryptHook,The method has 6 parameters. Parameters: pbPlaintext' cbPlaintext' pbAdditionalAuthenticatedData' cbAdditionalAuthenticatedData' cbPreBuffer' cbPostBuffer
Long Parameter List,Microsoft.AspNetCore.DataProtection.Cng.Internal,MockableEncryptor,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,EncryptImpl,The method has 6 parameters. Parameters: pbPlaintext' cbPlaintext' pbAdditionalAuthenticatedData' cbAdditionalAuthenticatedData' cbPreBuffer' cbPostBuffer
Long Parameter List,Microsoft.AspNetCore.DataProtection.KeyManagement,DefaultKeyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DefaultKeyResolverTests.cs,CreateKey,The method has 5 parameters. Parameters: activationDate' expirationDate' creationDate' isRevoked' createEncryptorThrows
Long Parameter List,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,SetupCreateCacheableKeyRingTestAndCreateKeyManager,The method has 6 parameters. Parameters: callSequence' getCacheExpirationTokenReturnValues' getAllKeysReturnValues' createNewKeyCallbacks' resolveDefaultKeyPolicyReturnValues' keyManagementOptions
Long Parameter List,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,TestCngKeyDerivation,The method has 7 parameters. Parameters: factory' kdk' label' contextHeader' context' numDerivedBytes' expectedDerivedSubkeyAsBase64
Long Parameter List,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,TestManagedKeyDerivation,The method has 6 parameters. Parameters: kdk' label' contextHeader' context' numDerivedBytes' expectedDerivedSubkeyAsBase64
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,GetCurrentKeyRing_NoExistingKeyRing_HoldsAllThreadsUntilKeyRingCreated,The length of the parameter mreBackgroundThreadHasCalledGetCurrentKeyRing is 45.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,GetCurrentKeyRing_NoExistingKeyRing_HoldsAllThreadsUntilKeyRingCreated,The length of the parameter mreForegroundThreadIsCallingGetCurrentKeyRing is 45.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,GetCurrentKeyRing_WithExpiredExistingKeyRing_AllowsOneThreadToUpdate_ReturnsExistingKeyRingToOtherCallersWithoutBlocking,The length of the parameter keyRingReturnedToBackgroundThread is 33.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,SetupCreateCacheableKeyRingTestAndCreateKeyManager,The length of the parameter getCacheExpirationTokenReturnValues is 35.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,SetupCreateCacheableKeyRingTestAndCreateKeyManager,The length of the parameter resolveDefaultKeyPolicyReturnValues is 35.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,SetupCreateCacheableKeyRingTestAndCreateKeyManager,The length of the parameter getCacheExpirationTokenReturnValuesEnumerator is 45.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,SetupCreateCacheableKeyRingTestAndCreateKeyManager,The length of the parameter getAllKeysReturnValuesEnumerator is 32.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,SetupCreateCacheableKeyRingTestAndCreateKeyManager,The length of the parameter createNewKeyCallbacksEnumerator is 31.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,SetupCreateCacheableKeyRingTestAndCreateKeyManager,The length of the parameter resolveDefaultKeyPolicyReturnValuesEnumerator is 45.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,MyKey,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingTests.cs,,The length of the parameter NumTimesCreateEncryptorInstanceCalled is 37.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_NoEscrowOrEncryption,The length of the parameter friendlyNameStoredInRepository is 30.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_NoEscrowOrEncryption,The length of the parameter expectedAuthenticatedEncryptor is 30.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_WithEscrowAndEncryption,The length of the parameter friendlyNameStoredInRepository is 30.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_WithEscrowAndEncryption,The length of the parameter expectedAuthenticatedEncryptor is 30.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,RevokeAllKeys,The length of the parameter friendlyNameStoredInRepository is 30.
Long Identifier,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,RevokeSingleKey_Internal,The length of the parameter friendlyNameStoredInRepository is 30.
Long Statement,Microsoft.AspNetCore.DataProtection,ActivatorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\ActivatorTests.cs,CreateInstance_WithServiceProvider_PrefersParameterfulCtor,The length of the statement  "            var retVal1 = (ClassWithParameterlessCtor)activator.CreateInstance<object>(typeof(ClassWithParameterlessCtor).AssemblyQualifiedName); " is 133.
Long Statement,Microsoft.AspNetCore.DataProtection,ActivatorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\ActivatorTests.cs,CreateInstance_WithServiceProvider_PrefersParameterfulCtor,The length of the statement  "            var retVal2 = (ClassWithServiceProviderCtor)activator.CreateInstance<object>(typeof(ClassWithServiceProviderCtor).AssemblyQualifiedName); " is 137.
Long Statement,Microsoft.AspNetCore.DataProtection,ActivatorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\ActivatorTests.cs,CreateInstance_WithoutServiceProvider_PrefersParameterlessCtor,The length of the statement  "            var retVal1 = (ClassWithParameterlessCtor)activator.CreateInstance<object>(typeof(ClassWithParameterlessCtor).AssemblyQualifiedName); " is 133.
Long Statement,Microsoft.AspNetCore.DataProtection,ActivatorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\ActivatorTests.cs,CreateInstance_WithoutServiceProvider_PrefersParameterlessCtor,The length of the statement  "            var retVal2 = (ClassWithServiceProviderCtor)activator.CreateInstance<object>(typeof(ClassWithServiceProviderCtor).AssemblyQualifiedName); " is 137.
Long Statement,Microsoft.AspNetCore.DataProtection,ActivatorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\ActivatorTests.cs,CreateInstance_TypeDoesNotImplementInterface_ThrowsInvalidCast,The length of the statement  "            Assert.Equal(Resources.FormatTypeExtensions_BadCast(typeof(IDisposable).AssemblyQualifiedName' typeof(ClassWithParameterlessCtor).AssemblyQualifiedName)' ex.Message); " is 166.
Long Statement,Microsoft.AspNetCore.DataProtection,DataProtectionUtilityExtensionsTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\DataProtectionUtilityExtensionsTests.cs,GetApplicationIdentifierFromApplicationDiscriminator,The length of the statement  "            mockEnvironment.SetupGet(o => o.ContentRootPath).Throws(new InvalidOperationException("Hosting environment should not be checked")); " is 132.
Long Statement,Microsoft.AspNetCore.DataProtection,EphemeralDataProtectionProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\EphemeralDataProtectionProviderTests.cs,SingleProvider_SamePurpose_RoundTripsData,The length of the statement  "            var dataProtector2 = dataProtectionProvider.CreateProtector("purpose"); // should be equivalent to the previous instance " is 120.
Long Statement,Microsoft.AspNetCore.DataProtection,RegistryPolicyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\RegistryPolicyResolverTests.cs,ResolvePolicy_KeyEscrowSinks,The length of the statement  "                ["KeyEscrowSinks"] = String.Join(" ;; ; "' new Type[] { typeof(MyKeyEscrowSink1)' typeof(MyKeyEscrowSink2) }.Select(t => t.AssemblyQualifiedName)) " is 146.
Long Statement,Microsoft.AspNetCore.DataProtection,TypeForwardingActivatorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\TypeForwardingActivatorTests.cs,CreateInstance_ForwardsToNewNamespaceIfExists,The length of the statement  "            var name = "Microsoft.AspNet.DataProtection.TypeForwardingActivatorTests+ClassWithParameterlessCtor' Microsoft.AspNet.DataProtection.Test' Version=1.0.0.0"; " is 156.
Long Statement,Microsoft.AspNetCore.DataProtection,TypeForwardingActivatorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\TypeForwardingActivatorTests.cs,CreateInstance_DoesNotForwardIfClassDoesNotExist,The length of the statement  "            var name = "Microsoft.AspNet.DataProtection.TypeForwardingActivatorTests+NonExistentClassWithParameterlessCtor' Microsoft.AspNet.DataProtection.Test"; " is 150.
Long Statement,Microsoft.AspNetCore.DataProtection,TypeForwardingActivatorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\TypeForwardingActivatorTests.cs,CreateInstance_ForwardsAcrossVersionChanges,The length of the statement  "            var wrappedTestClass = (TypeForwardingActivatorTests)domain.CreateInstanceAndUnwrap(GetType().Assembly.FullName' typeof(TypeForwardingActivatorTests).FullName); " is 160.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_Cbc_CreatesAppropriateDescriptor,The length of the statement  "                  <masterKey enc:requiresEncryption='true'>k88VrwGLINfVAqzlAp7U4EAjdlmUG17c756McQGdjHU8Ajkfc/A3YOKdqlMcF6dXaIxATED+g2f62wkRRRRRzA==</masterKey> " is 141.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The length of the statement  "            int keyLengthInBits = Int32.Parse(Regex.Match(encryptionAlgorithm.ToString()' @"^AES_(?<keyLength>\d{3})_CBC$").Groups["keyLength"].Value' CultureInfo.InvariantCulture); " is 169.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The length of the statement  "            string hashAlgorithm = Regex.Match(validationAlgorithm.ToString()' @"^HMAC(?<hashAlgorithm>.*)$").Groups["hashAlgorithm"].Value; " is 128.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The length of the statement  "            var test = CreateEncryptorInstanceFromDescriptor(CreateDescriptor(encryptionAlgorithm' validationAlgorithm' masterKey)); " is 120.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The length of the statement  "            int keyLengthInBits = Int32.Parse(Regex.Match(encryptionAlgorithm.ToString()' @"^AES_(?<keyLength>\d{3})_GCM$").Groups["keyLength"].Value' CultureInfo.InvariantCulture); " is 169.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The length of the statement  "            var test = CreateEncryptorInstanceFromDescriptor(CreateDescriptor(encryptionAlgorithm' ValidationAlgorithm.HMACSHA256 /* unused */' masterKey)); " is 144.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The length of the statement  "            int keyLengthInBits = Int32.Parse(Regex.Match(encryptionAlgorithm.ToString()' @"^AES_(?<keyLength>\d{3})_CBC$").Groups["keyLength"].Value' CultureInfo.InvariantCulture); " is 169.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The length of the statement  "            var test = CreateEncryptorInstanceFromDescriptor(CreateDescriptor(encryptionAlgorithm' validationAlgorithm' masterKey)); " is 120.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The length of the statement  "                  <masterKey enc:requiresEncryption='true'>k88VrwGLINfVAqzlAp7U4EAjdlmUG17c756McQGdjHU8Ajkfc/A3YOKdqlMcF6dXaIxATED+g2f62wkRRRRRzA==</masterKey> " is 141.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The length of the statement  "            var deserializedDescriptor = new CngCbcAuthenticatedEncryptorDescriptorDeserializer().ImportFromXml(XElement.Parse(xml)); " is 121.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The length of the statement  "                  <masterKey enc:requiresEncryption='true'>k88VrwGLINfVAqzlAp7U4EAjdlmUG17c756McQGdjHU8Ajkfc/A3YOKdqlMcF6dXaIxATED+g2f62wkRRRRRzA==</masterKey> " is 141.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The length of the statement  "            var deserializedDescriptor = new CngGcmAuthenticatedEncryptorDescriptorDeserializer().ImportFromXml(XElement.Parse(xml)); " is 121.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor,The length of the statement  "            var deserializedDescriptor = new ManagedAuthenticatedEncryptorDescriptorDeserializer().ImportFromXml(XElement.Parse(xml)); " is 122.
Long Statement,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CustomType_CreatesAppropriateDescriptor,The length of the statement  "            var deserializedDescriptor = new ManagedAuthenticatedEncryptorDescriptorDeserializer().ImportFromXml(XElement.Parse(xml)); " is 122.
Long Statement,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The length of the statement  "                encryptor.Decrypt(new ArraySegment<byte>(validCiphertext)' new ArraySegment<byte>(Encoding.UTF8.GetBytes("different aad"))); " is 124.
Long Statement,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The length of the statement  "            Assert.Equal("AAAAAAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh+36j4yWJOjBgOJxmYDYwhLnYqFxw+9mNh/cudyPrWmJmw4d/dmGaLJLLut2udiAAAAAAAA"' retValAsString); " is 149.
Long Statement,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The length of the statement  "            GcmAuthenticatedEncryptor encryptor = new GcmAuthenticatedEncryptor(kdk' CachedAlgorithmHandles.AES_GCM' symmetricAlgorithmKeySizeInBytes: 256 / 8); " is 148.
Long Statement,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The length of the statement  "            GcmAuthenticatedEncryptor encryptor = new GcmAuthenticatedEncryptor(kdk' CachedAlgorithmHandles.AES_GCM' symmetricAlgorithmKeySizeInBytes: 256 / 8); " is 148.
Long Statement,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The length of the statement  "                encryptor.Decrypt(new ArraySegment<byte>(validCiphertext)' new ArraySegment<byte>(Encoding.UTF8.GetBytes("different aad"))); " is 124.
Long Statement,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The length of the statement  "            GcmAuthenticatedEncryptor encryptor = new GcmAuthenticatedEncryptor(kdk' CachedAlgorithmHandles.AES_GCM' symmetricAlgorithmKeySizeInBytes: 128 / 8' genRandom: new SequentialGenRandom()); " is 186.
Long Statement,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_ForwardsArraySegment,The length of the statement  "                .Returns((IntPtr pbCiphertext' uint cbCiphertext' IntPtr pbAdditionalAuthenticatedData' uint cbAdditionalAuthenticatedData) => " is 126.
Long Statement,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_HandlesEmptyAADPointerFixup,The length of the statement  "                .Returns((IntPtr pbCiphertext' uint cbCiphertext' IntPtr pbAdditionalAuthenticatedData' uint cbAdditionalAuthenticatedData) => " is 126.
Long Statement,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_HandlesEmptyCiphertextPointerFixup,The length of the statement  "                .Returns((IntPtr pbCiphertext' uint cbCiphertext' IntPtr pbAdditionalAuthenticatedData' uint cbAdditionalAuthenticatedData) => " is 126.
Long Statement,Microsoft.AspNetCore.DataProtection.Cng.Internal,MockableEncryptor,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,DecryptImpl,The length of the statement  "                return DecryptHook((IntPtr)pbCiphertext' cbCiphertext' (IntPtr)pbAdditionalAuthenticatedData' cbAdditionalAuthenticatedData); " is 125.
Long Statement,Microsoft.AspNetCore.DataProtection.Cng.Internal,MockableEncryptor,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,EncryptImpl,The length of the statement  "                return EncryptHook((IntPtr)pbPlaintext' cbPlaintext' (IntPtr)pbAdditionalAuthenticatedData' cbAdditionalAuthenticatedData' cbPreBuffer' cbPostBuffer); " is 150.
Long Statement,Microsoft.AspNetCore.DataProtection.Test,HostingTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\HostingTests.cs,LoadsKeyRingBeforeServerStarts,The length of the statement  "                        new FakeServer(onStart: () => tcs.TrySetException(new InvalidOperationException("Server was started before key ring was initialized"))))); " is 138.
Long Statement,Microsoft.AspNetCore.DataProtection.Internal,KeyManagementOptionsSetupTest,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Internal\KeyManagementOptionsSetupTest.cs,Configure_WithRegistryPolicyResolver_SetsValuesFromResolver,The length of the statement  "                ["KeyEscrowSinks"] = String.Join(" ;; ; "' new Type[] { typeof(MyKeyEscrowSink1)' typeof(MyKeyEscrowSink2) }.Select(t => t.AssemblyQualifiedName))' " is 147.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,DefaultKeyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DefaultKeyResolverTests.cs,ResolveDefaultKeyPolicy_IgnoresExpiredOrRevokedFutureKeys,The length of the statement  "            var key1 = CreateKey("2015-03-01 00:00:00Z"' "2014-03-01 00:00:00Z"); // expiration before activation should never occur " is 120.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,DefaultKeyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DefaultKeyResolverTests.cs,ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresRevokedKeys,The length of the statement  "            var key3 = CreateKey("2010-01-01 00:00:00Z"' "2010-01-01 00:00:00Z"' creationDate: "2000-01-03 00:00:00Z"' isRevoked: true); " is 124.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,DefaultKeyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DefaultKeyResolverTests.cs,ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresFailures,The length of the statement  "            var key3 = CreateKey("2010-01-01 00:00:00Z"' "2010-01-01 00:00:00Z"' creationDate: "2000-01-03 00:00:00Z"' createEncryptorThrows: true); " is 136.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,DefaultKeyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DefaultKeyResolverTests.cs,ResolveDefaultKeyPolicy_FallbackKey_NoNonRevokedKeysBeforePriorPropagationWindow_SelectsEarliestNonRevokedKey,The length of the statement  "            var key1 = CreateKey("2010-01-01 00:00:00Z"' "2010-01-01 00:00:00Z"' creationDate: "2000-01-03 00:00:00Z"' isRevoked: true); " is 124.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,DefaultKeyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DefaultKeyResolverTests.cs,CreateKey,The length of the statement  "            mockKey.Setup(o => o.CreationDate).Returns((creationDate != null) ? DateTimeOffset.ParseExact(creationDate' "u"' CultureInfo.InvariantCulture) : DateTimeOffset.MinValue); " is 170.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,DefaultKeyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DefaultKeyResolverTests.cs,CreateKey,The length of the statement  "            mockKey.Setup(o => o.ActivationDate).Returns(DateTimeOffset.ParseExact(activationDate' "u"' CultureInfo.InvariantCulture)); " is 123.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,DefaultKeyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DefaultKeyResolverTests.cs,CreateKey,The length of the statement  "            mockKey.Setup(o => o.ExpirationDate).Returns(DateTimeOffset.ParseExact(expirationDate' "u"' CultureInfo.InvariantCulture)); " is 123.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,DefaultKeyResolverExtensions,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DefaultKeyResolverTests.cs,ResolveDefaultKeyPolicy,The length of the statement  "            return resolver.ResolveDefaultKeyPolicy(DateTimeOffset.ParseExact(now' "u"' CultureInfo.InvariantCulture)' (IEnumerable<IKey>)allKeys); " is 135.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,DeferredKeyTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DeferredKeyTests.cs,Ctor_Properties,The length of the statement  "            var key = new DeferredKey(keyId' creationDate' activationDate' expirationDate' mockInternalKeyManager.Object' XElement.Parse(@"<node />")' new[] { encryptorFactory }); " is 167.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,DeferredKeyTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DeferredKeyTests.cs,SetRevoked_Respected,The length of the statement  "            var key = new DeferredKey(Guid.Empty' now' now' now' new Mock<IInternalXmlKeyManager>().Object' XElement.Parse(@"<node />")' new[] { encryptorFactory }); " is 153.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,DeferredKeyTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DeferredKeyTests.cs,Get_Descriptor_CachesFailures,The length of the statement  "            var key = new DeferredKey(Guid.Empty' now' now' now' mockKeyManager.Object' XElement.Parse(@"<node />")' new[] { encryptorFactory }); " is 133.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyEscrowServiceProviderExtensionsTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyEscrowServiceProviderExtensionsTests.cs,GetKeyEscrowSink_MultipleKeyEscrowRegistration_ReturnsAggregate,The length of the statement  "            Assert.Equal(new[] { "[sink1] 39974d8e-3e53-4d78-b7e9-4ff64a2a5d7b: theElement"' "[sink2] 39974d8e-3e53-4d78-b7e9-4ff64a2a5d7b: theElement" }' output); " is 151.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingBasedDataProtectorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingBasedDataProtectorTests.cs,Unprotect_KeyNotFound_ThrowsKeyNotFound,The length of the statement  "            mockEncryptorFactory.Setup(o => o.CreateEncryptorInstance(It.IsAny<IKey>())).Returns(new Mock<IAuthenticatedEncryptor>().Object); " is 129.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingBasedDataProtectorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingBasedDataProtectorTests.cs,Unprotect_KeyNotFound_ThrowsKeyNotFound,The length of the statement  "            Key key = new Key(Guid.Empty' DateTimeOffset.Now' DateTimeOffset.Now' DateTimeOffset.Now' mockDescriptor.Object' new[] { mockEncryptorFactory.Object }); " is 152.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingBasedDataProtectorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingBasedDataProtectorTests.cs,Unprotect_KeyRevoked_RevocationDisallowed_ThrowsKeyRevoked,The length of the statement  "            mockEncryptorFactory.Setup(o => o.CreateEncryptorInstance(It.IsAny<IKey>())).Returns(new Mock<IAuthenticatedEncryptor>().Object); " is 129.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingBasedDataProtectorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingBasedDataProtectorTests.cs,Unprotect_KeyRevoked_RevocationDisallowed_ThrowsKeyRevoked,The length of the statement  "            Key key = new Key(keyId' DateTimeOffset.Now' DateTimeOffset.Now' DateTimeOffset.Now' mockDescriptor.Object' new[] { mockEncryptorFactory.Object }); " is 147.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingBasedDataProtectorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingBasedDataProtectorTests.cs,Unprotect_KeyRevoked_RevocationAllowed_ReturnsOriginalData_SetsRevokedAndMigrationFlags,The length of the statement  "            Key defaultKey = new Key(defaultKeyId' DateTimeOffset.Now' DateTimeOffset.Now' DateTimeOffset.Now' mockDescriptor.Object' new[] { mockEncryptorFactory.Object }); " is 161.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingBasedDataProtectorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingBasedDataProtectorTests.cs,Unprotect_IsAlsoDefaultKey_Success_NoMigrationRequired,The length of the statement  "            Key defaultKey = new Key(defaultKeyId' DateTimeOffset.Now' DateTimeOffset.Now' DateTimeOffset.Now' mockDescriptor.Object' new[] { mockEncryptorFactory.Object }); " is 161.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingBasedDataProtectorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingBasedDataProtectorTests.cs,Unprotect_IsNotDefaultKey_Success_RequiresMigration,The length of the statement  "            Key defaultKey = new Key(defaultKeyId' DateTimeOffset.Now' DateTimeOffset.Now' DateTimeOffset.Now' new Mock<IAuthenticatedEncryptorDescriptor>().Object' new[] { mockEncryptorFactory.Object }); " is 192.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingBasedDataProtectorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingBasedDataProtectorTests.cs,Unprotect_IsNotDefaultKey_Success_RequiresMigration,The length of the statement  "            Key embeddedKey = new Key(embeddedKeyId' DateTimeOffset.Now' DateTimeOffset.Now' DateTimeOffset.Now' mockDescriptor.Object' new[] { mockEncryptorFactory.Object }); " is 163.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingBasedDataProtectorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingBasedDataProtectorTests.cs,Protect_Unprotect_RoundTripsProperly,The length of the statement  "            Key key = new Key(Guid.NewGuid()' DateTimeOffset.Now' DateTimeOffset.Now' DateTimeOffset.Now' new AuthenticatedEncryptorConfiguration().CreateNewDescriptor()' new[] { encryptorFactory }); " is 187.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingBasedDataProtectorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingBasedDataProtectorTests.cs,BuildAadFromPurposeStrings,The length of the statement  "                var writer = new BinaryWriter(memStream' encoding: new UTF8Encoding(encoderShouldEmitUTF8Identifier: false)' leaveOpen: true); " is 126.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,CreateCacheableKeyRing_GenerationRequired_NoDefaultKey_CreatesNewKeyWithImmediateActivation,The length of the statement  "            Assert.Equal(new[] { "GetCacheExpirationToken"' "GetAllKeys"' "ResolveDefaultKeyPolicy"' "CreateNewKey"' "GetCacheExpirationToken"' "GetAllKeys"' "ResolveDefaultKeyPolicy" }' callSequence); " is 189.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,CreateCacheableKeyRing_GenerationRequired_NoDefaultKey_CreatesNewKeyWithImmediateActivation_StillNoDefaultKey_ReturnsNewlyCreatedKey,The length of the statement  "            Assert.Equal(new[] { "GetCacheExpirationToken"' "GetAllKeys"' "ResolveDefaultKeyPolicy"' "CreateNewKey"' "GetCacheExpirationToken"' "GetAllKeys"' "ResolveDefaultKeyPolicy" }' callSequence); " is 189.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,CreateCacheableKeyRing_GenerationRequired_WithDefaultKey_CreatesNewKeyWithDeferredActivationAndExpirationBasedOnCreationTime,The length of the statement  "            Assert.Equal(new[] { "GetCacheExpirationToken"' "GetAllKeys"' "ResolveDefaultKeyPolicy"' "CreateNewKey"' "GetCacheExpirationToken"' "GetAllKeys"' "ResolveDefaultKeyPolicy" }' callSequence); " is 189.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,GetCurrentKeyRing_WithExpiredExistingKeyRing_UpdateFails_ThrowsButCachesOldKeyRing,The length of the statement  "            mockCacheableKeyRingProvider.Setup(o => o.GetCacheableKeyRing(throwKeyRingTime)).Throws(new Exception("How exceptional.")); " is 123.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,CreateKeyRingProvider,The length of the statement  "            mockEncryptorFactory.Setup(m => m.CreateEncryptorInstance(It.IsAny<IKey>())).Returns(new Mock<IAuthenticatedEncryptor>().Object); " is 129.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,CreateKeyRingProvider,The length of the statement  "            mockEncryptorFactory.Setup(m => m.CreateEncryptorInstance(It.IsAny<IKey>())).Returns(new Mock<IAuthenticatedEncryptor>().Object); " is 129.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,AssertWithinJitterRange,The length of the statement  "            // The jitter can cause the actual value to fall in the range [now + 80% of refresh period' now + 100% of refresh period) " is 121.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,CreateKey,The length of the statement  "            mockKey.Setup(o => o.ActivationDate).Returns(DateTimeOffset.ParseExact(activationDate' "u"' CultureInfo.InvariantCulture)); " is 123.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,CreateKey,The length of the statement  "            mockKey.Setup(o => o.ExpirationDate).Returns(DateTimeOffset.ParseExact(expirationDate' "u"' CultureInfo.InvariantCulture)); " is 123.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyTests.cs,SetRevoked_Respected,The length of the statement  "            var key = new Key(Guid.Empty' now' now' now' new Mock<IAuthenticatedEncryptorDescriptor>().Object' new[] { encryptorFactory }); " is 127.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_NoEscrowOrEncryption,The length of the statement  "            mockDescriptor.Setup(o => o.ExportToXml()).Returns(new XmlSerializedDescriptorInfo(serializedDescriptor' typeof(MyDeserializer))); " is 130.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_WithEscrowAndEncryption,The length of the statement  "            mockDescriptor.Setup(o => o.ExportToXml()).Returns(new XmlSerializedDescriptorInfo(serializedDescriptor' typeof(MyDeserializer))); " is 130.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_CallsInternalManager,The length of the statement  "                .Callback<Guid' DateTimeOffset' DateTimeOffset' DateTimeOffset>((innerKeyId' innerCreationDate' innerActivationDate' innerExpirationDate) => " is 140.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_CallsInternalManager,The length of the statement  "            var keyManager = new XmlKeyManager(options' SimpleActivator.DefaultWithoutServices' NullLoggerFactory.Instance' mockInternalKeyManager.Object); " is 143.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,GetAllKeys_UnderstandsRevocations,The length of the statement  "            mockActivator.ReturnDescriptorGivenDeserializerTypeNameAndInput("theDeserializer"' "<node />"' new Mock<IAuthenticatedEncryptorDescriptor>().Object); " is 149.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,GetAllKeys_PerformsDecryption,The length of the statement  "            mockActivator.ReturnDecryptedElementGivenDecryptorTypeNameAndInput("theDecryptor"' "<node xmlns='private' />"' "<decryptedNode />"); " is 132.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,GetAllKeys_PerformsDecryption,The length of the statement  "            mockActivator.ReturnDescriptorGivenDeserializerTypeNameAndInput("theDeserializer"' "<decryptedNode />"' expectedDescriptor); " is 124.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,GetAllKeys_SwallowsKeyDeserializationErrors,The length of the statement  "            mockActivator.ReturnDescriptorGivenDeserializerTypeNameAndInput("goodDeserializer"' "<node xmlns='private' />"' expectedDescriptor); " is 132.
Long Statement,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,RevokeKey_CallsInternalManager,The length of the statement  "            var keyManager = new XmlKeyManager(options' SimpleActivator.DefaultWithoutServices' NullLoggerFactory.Instance' mockInternalKeyManager.Object); " is 143.
Long Statement,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The length of the statement  "                encryptor.Decrypt(new ArraySegment<byte>(validCiphertext)' new ArraySegment<byte>(Encoding.UTF8.GetBytes("different aad"))); " is 124.
Long Statement,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The length of the statement  "            Assert.Equal("AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh+36j4yWJOjBgOJxmYDYwhLnYqFxw+9mNh/cudyPrWmJmw4d/dmGaLJLLut2udiAAA="' retValAsString); " is 141.
Long Statement,Microsoft.AspNetCore.DataProtection.Repositories,FileSystemXmlRepositoryTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Repositories\FileSystemXmlRepositoryTests.cs,Logs_DockerEphemeralFolders,The length of the statement  "                Assert.Contains(Resources.FormatFileSystem_EphemeralKeysLocationInContainer(dirInfo.FullName)' loggerFactory.ToString()); " is 121.
Long Statement,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,DeriveKeyWithContextHeader_Normal_Win7,The length of the statement  "            TestCngKeyDerivation((pbKdk' cbKdk) => new Win7SP800_108_CTR_HMACSHA512Provider(pbKdk' cbKdk)' kdk' label' contextHeader' context' numDerivedBytes' expectedDerivedSubkeyAsBase64); " is 179.
Long Statement,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,DeriveKeyWithContextHeader_Normal_Win8,The length of the statement  "            TestCngKeyDerivation((pbKdk' cbKdk) => new Win8SP800_108_CTR_HMACSHA512Provider(pbKdk' cbKdk)' kdk' label' contextHeader' context' numDerivedBytes' expectedDerivedSubkeyAsBase64); " is 179.
Long Statement,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,DeriveKeyWithContextHeader_LongKey_Win7,The length of the statement  "            TestCngKeyDerivation((pbKdk' cbKdk) => new Win7SP800_108_CTR_HMACSHA512Provider(pbKdk' cbKdk)' kdk' label' contextHeader' context' numDerivedBytes' expectedDerivedSubkeyAsBase64); " is 179.
Long Statement,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,DeriveKeyWithContextHeader_LongKey_Win8,The length of the statement  "            TestCngKeyDerivation((pbKdk' cbKdk) => new Win8SP800_108_CTR_HMACSHA512Provider(pbKdk' cbKdk)' kdk' label' contextHeader' context' numDerivedBytes' expectedDerivedSubkeyAsBase64); " is 179.
Long Statement,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,TestCngKeyDerivation,The length of the statement  "                provider.DeriveKeyWithContextHeader(pbLabel' (uint)label.Length' contextHeader' pbContext' (uint)context.Length' pbDerivedSubkey' (uint)derivedSubkey.Length); " is 158.
Long Statement,Microsoft.AspNetCore.DataProtection.XmlEncryption,CertificateXmlEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\XmlEncryption\CertificateXmlEncryptionTests.cs,Encrypt_Decrypt_RoundTrips,The length of the statement  "            Assert.DoesNotContain("265ee4ea-ade2-43b1-b706-09b259e58b6b"' encryptedXmlInfo.EncryptedElement.ToString()' StringComparison.OrdinalIgnoreCase); " is 144.
Long Statement,Microsoft.AspNetCore.DataProtection.XmlEncryption,DpapiNGXmlEncryptionTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\XmlEncryption\DpapiNGXmlEncryptionTests.cs,Encrypt_Decrypt_RoundTrips,The length of the statement  "            var encryptor = new DpapiNGXmlEncryptor("LOCAL=user"' DpapiNGProtectionDescriptorFlags.None' NullLoggerFactory.Instance); " is 121.
Long Statement,Microsoft.AspNetCore.DataProtection.XmlEncryption,DpapiNGXmlEncryptionTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\XmlEncryption\DpapiNGXmlEncryptionTests.cs,Encrypt_Decrypt_RoundTrips,The length of the statement  "            Assert.DoesNotContain("265ee4ea-ade2-43b1-b706-09b259e58b6b"' encryptedXmlInfo.EncryptedElement.ToString()' StringComparison.OrdinalIgnoreCase); " is 144.
Long Statement,Microsoft.AspNetCore.DataProtection.XmlEncryption,DpapiXmlEncryptionTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\XmlEncryption\DpapiXmlEncryptionTests.cs,Encrypt_CurrentUserOrLocalMachine_Decrypt_RoundTrips,The length of the statement  "            Assert.DoesNotContain("265ee4ea-ade2-43b1-b706-09b259e58b6b"' encryptedXmlInfo.EncryptedElement.ToString()' StringComparison.OrdinalIgnoreCase); " is 144.
Long Statement,Microsoft.AspNetCore.DataProtection.XmlEncryption,XmlEncryptionExtensionsTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\XmlEncryption\XmlEncryptionExtensionsTests.cs,DecryptElement_MultipleNodesRequireDecryption_AvoidsRecursion_Success,The length of the statement  "                .Returns<XElement>(el => new XElement(el.Name.LocalName + "_decrypted"' new XElement(XmlConstants.EncryptedSecretElementName' "nested"))); " is 138.
Long Statement,Microsoft.AspNetCore.DataProtection.XmlEncryption,XmlEncryptionExtensionsTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\XmlEncryption\XmlEncryptionExtensionsTests.cs,EncryptIfNecessary_RootNodeRequiresEncryption_Success,The length of the statement  "            var original = XElement.Parse(@"<rootNode x:requiresEncryption='true' xmlns:x='http://schemas.asp.net/2015/03/dataProtection' />"); " is 131.
Long Statement,Microsoft.AspNetCore.DataProtection.XmlEncryption,XmlEncryptionExtensionsTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\XmlEncryption\XmlEncryptionExtensionsTests.cs,EncryptIfNecessary_RootNodeRequiresEncryption_Success,The length of the statement  "            mockXmlEncryptor.Setup(o => o.Encrypt(It.IsAny<XElement>())).Returns(new EncryptedXmlInfo(new XElement("theElement")' typeof(MyXmlDecryptor))); " is 143.
Long Statement,Microsoft.AspNetCore.DataProtection.XmlEncryption,XmlEncryptionExtensionsTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\XmlEncryption\XmlEncryptionExtensionsTests.cs,EncryptIfNecessary_RootNodeRequiresEncryption_Success,The length of the statement  "            XmlAssert.Equal(@"<rootNode x:requiresEncryption='true' xmlns:x='http://schemas.asp.net/2015/03/dataProtection' />"' original); // unmutated " is 140.
Long Statement,Microsoft.AspNetCore.DataProtection.XmlEncryption,XmlEncryptionExtensionsTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\XmlEncryption\XmlEncryptionExtensionsTests.cs,EncryptIfNecessary_RootNodeRequiresEncryption_Success,The length of the statement  "            Assert.Equal(typeof(MyXmlDecryptor).AssemblyQualifiedName' (string)retVal.Attribute(XmlConstants.DecryptorTypeAttributeName)); " is 126.
Long Statement,Microsoft.AspNetCore.DataProtection.XmlEncryption,XmlEncryptionExtensionsTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\XmlEncryption\XmlEncryptionExtensionsTests.cs,EncryptIfNecessary_MultipleNodesRequireEncryption_Success,The length of the statement  "                .Returns<XElement>(element => new EncryptedXmlInfo(new XElement(element.Name.LocalName + "_encrypted")' typeof(MyXmlDecryptor))); " is 129.
Long Statement,Microsoft.AspNetCore.DataProtection.Test.XmlEncryption,EncryptedXmlDecryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\XmlEncryption\EncryptedXmlDecryptorTests.cs,ThrowsIfProvidedCertificateDoesHavePrivateKey,The length of the statement  "            var publicKeyOnly = new X509Certificate2(Path.Combine(AppContext.BaseDirectory' "TestFiles"' "TestCert1.PublicKeyOnly.cer")' ""); " is 129.
Magic Number,Microsoft.AspNetCore.DataProtection,RegistryPolicyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\RegistryPolicyResolverTests.cs,ResolvePolicy_KeyEscrowSinks,The following statement contains a magic number: Assert.Equal(2' actualKeyEscrowSinks.Length);
Magic Number,Microsoft.AspNetCore.DataProtection,RegistryPolicyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\RegistryPolicyResolverTests.cs,ResolvePolicy_DefaultKeyLifetime,The following statement contains a magic number: var registryEntries = new Dictionary<string' object>()              {                  ["DefaultKeyLifetime"] = 1024 // days              };
Magic Number,Microsoft.AspNetCore.DataProtection,RegistryPolicyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\RegistryPolicyResolverTests.cs,ResolvePolicy_DefaultKeyLifetime,The following statement contains a magic number: Assert.Equal(1024' context.DefaultKeyLifetime);
Magic Number,Microsoft.AspNetCore.DataProtection,RegistryPolicyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\RegistryPolicyResolverTests.cs,ResolvePolicy_CngCbcEncryption_WithExplicitSettings,The following statement contains a magic number: var registryEntries = new Dictionary<string' object>()              {                  ["EncryptionType"] = "cng-cbc"'                  ["EncryptionAlgorithm"] = "enc-alg"'                  ["EncryptionAlgorithmKeySize"] = 2048'                  ["EncryptionAlgorithmProvider"] = "my-enc-alg-provider"'                  ["HashAlgorithm"] = "hash-alg"'                  ["HashAlgorithmProvider"] = "my-hash-alg-provider"              };
Magic Number,Microsoft.AspNetCore.DataProtection,RegistryPolicyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\RegistryPolicyResolverTests.cs,ResolvePolicy_CngCbcEncryption_WithExplicitSettings,The following statement contains a magic number: var expectedConfiguration = new CngCbcAuthenticatedEncryptorConfiguration()              {                  EncryptionAlgorithm = "enc-alg"'                  EncryptionAlgorithmKeySize = 2048'                  EncryptionAlgorithmProvider = "my-enc-alg-provider"'                  HashAlgorithm = "hash-alg"'                  HashAlgorithmProvider = "my-hash-alg-provider"              };
Magic Number,Microsoft.AspNetCore.DataProtection,RegistryPolicyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\RegistryPolicyResolverTests.cs,ResolvePolicy_CngGcmEncryption_WithExplicitSettings,The following statement contains a magic number: var registryEntries = new Dictionary<string' object>()              {                  ["EncryptionType"] = "cng-gcm"'                  ["EncryptionAlgorithm"] = "enc-alg"'                  ["EncryptionAlgorithmKeySize"] = 2048'                  ["EncryptionAlgorithmProvider"] = "my-enc-alg-provider"              };
Magic Number,Microsoft.AspNetCore.DataProtection,RegistryPolicyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\RegistryPolicyResolverTests.cs,ResolvePolicy_CngGcmEncryption_WithExplicitSettings,The following statement contains a magic number: var expectedConfiguration = new CngGcmAuthenticatedEncryptorConfiguration()              {                  EncryptionAlgorithm = "enc-alg"'                  EncryptionAlgorithmKeySize = 2048'                  EncryptionAlgorithmProvider = "my-enc-alg-provider"              };
Magic Number,Microsoft.AspNetCore.DataProtection,RegistryPolicyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\RegistryPolicyResolverTests.cs,ResolvePolicy_ManagedEncryption_WithExplicitSettings,The following statement contains a magic number: var registryEntries = new Dictionary<string' object>()              {                  ["EncryptionType"] = "managed"'                  ["EncryptionAlgorithmType"] = typeof(TripleDES).AssemblyQualifiedName'                  ["EncryptionAlgorithmKeySize"] = 2048'                  ["ValidationAlgorithmType"] = typeof(HMACSHA1).AssemblyQualifiedName              };
Magic Number,Microsoft.AspNetCore.DataProtection,RegistryPolicyResolverTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\RegistryPolicyResolverTests.cs,ResolvePolicy_ManagedEncryption_WithExplicitSettings,The following statement contains a magic number: var expectedConfiguration = new ManagedAuthenticatedEncryptorConfiguration()              {                  EncryptionAlgorithmType = typeof(TripleDES)'                  EncryptionAlgorithmKeySize = 2048'                  ValidationAlgorithmType = typeof(HMACSHA1)              };
Magic Number,Microsoft.AspNetCore.DataProtection,SecretAssert,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretAssert.cs,LengthIs,The following statement contains a magic number: Assert.Equal(expectedLengthInBits' checked(secret.Length * 8));
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_ArraySegment_Success,The following statement contains a magic number: var input = new ArraySegment<byte>(new byte[] { 0x10' 0x20' 0x30' 0x40' 0x50' 0x60 }' 1' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_ArraySegment_Success,The following statement contains a magic number: input.Array[2] = 0xFF;
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_ArraySegment_Success,The following statement contains a magic number: Assert.Equal(3' secret.Length);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_ArraySegment_Success,The following statement contains a magic number: var outputSegment = new ArraySegment<byte>(new byte[7]' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_ArraySegment_Success,The following statement contains a magic number: var outputSegment = new ArraySegment<byte>(new byte[7]' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_ArraySegment_Success,The following statement contains a magic number: var outputSegment = new ArraySegment<byte>(new byte[7]' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_ArraySegment_Success,The following statement contains a magic number: var outputBuffer = new byte[3];
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_ArraySegment_Success,The following statement contains a magic number: secret.WriteSecretIntoBuffer(pOutputBuffer' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Buffer_Success,The following statement contains a magic number: Assert.Equal(3' secret.Length);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Buffer_Success,The following statement contains a magic number: var outputSegment = new ArraySegment<byte>(new byte[7]' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Buffer_Success,The following statement contains a magic number: var outputSegment = new ArraySegment<byte>(new byte[7]' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Buffer_Success,The following statement contains a magic number: var outputSegment = new ArraySegment<byte>(new byte[7]' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Buffer_Success,The following statement contains a magic number: var outputBuffer = new byte[3];
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Buffer_Success,The following statement contains a magic number: secret.WriteSecretIntoBuffer(pOutputBuffer' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Pointer_Success,The following statement contains a magic number: byte* input = stackalloc byte[3];
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Pointer_Success,The following statement contains a magic number: input[2] = 0x40;
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Pointer_Success,The following statement contains a magic number: var secret = new Secret(input' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Pointer_Success,The following statement contains a magic number: Assert.Equal(3' secret.Length);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Pointer_Success,The following statement contains a magic number: var outputSegment = new ArraySegment<byte>(new byte[7]' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Pointer_Success,The following statement contains a magic number: var outputSegment = new ArraySegment<byte>(new byte[7]' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Pointer_Success,The following statement contains a magic number: var outputSegment = new ArraySegment<byte>(new byte[7]' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Pointer_Success,The following statement contains a magic number: var outputBuffer = new byte[3];
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Ctor_Pointer_Success,The following statement contains a magic number: secret.WriteSecretIntoBuffer(pOutputBuffer' 3);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Random_LengthIsMultipleOf16_Success,The following statement contains a magic number: var secret = Secret.Random(32);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Random_LengthIsMultipleOf16_Success,The following statement contains a magic number: Assert.Equal(32' secret.Length);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Random_LengthIsMultipleOf16_Success,The following statement contains a magic number: Guid* pGuids = stackalloc Guid[2];
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Random_LengthIsMultipleOf16_Success,The following statement contains a magic number: secret.WriteSecretIntoBuffer((byte*)pGuids' 32);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Random_LengthIsNotMultipleOf16_Success,The following statement contains a magic number: var secret = Secret.Random(31);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Random_LengthIsNotMultipleOf16_Success,The following statement contains a magic number: Assert.Equal(31' secret.Length);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Random_LengthIsNotMultipleOf16_Success,The following statement contains a magic number: Guid* pGuids = stackalloc Guid[2];
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Random_LengthIsNotMultipleOf16_Success,The following statement contains a magic number: secret.WriteSecretIntoBuffer((byte*)pGuids' 31);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,Random_LengthIsNotMultipleOf16_Success,The following statement contains a magic number: Assert.Equal(0' ((byte*)pGuids)[31]);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws,The following statement contains a magic number: var secret = Secret.Random(16);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws,The following statement contains a magic number: ExceptionAssert.ThrowsArgument(                  testCode: () => secret.WriteSecretIntoBuffer(new ArraySegment<byte>(new byte[100]))'                  paramName: "buffer"'                  exceptionMessage: Resources.FormatCommon_BufferIncorrectlySized(100' 16));
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws,The following statement contains a magic number: ExceptionAssert.ThrowsArgument(                  testCode: () => secret.WriteSecretIntoBuffer(new ArraySegment<byte>(new byte[100]))'                  paramName: "buffer"'                  exceptionMessage: Resources.FormatCommon_BufferIncorrectlySized(100' 16));
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws,The following statement contains a magic number: ExceptionAssert.ThrowsArgument(                  testCode: () => secret.WriteSecretIntoBuffer(new ArraySegment<byte>(new byte[100]))'                  paramName: "buffer"'                  exceptionMessage: Resources.FormatCommon_BufferIncorrectlySized(100' 16));
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_ArraySegment_Disposed_Throws,The following statement contains a magic number: var secret = Secret.Random(16);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_ArraySegment_Disposed_Throws,The following statement contains a magic number: Assert.Throws<ObjectDisposedException>(                  testCode: () => secret.WriteSecretIntoBuffer(new ArraySegment<byte>(new byte[16])));
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_Pointer_NullBuffer_Throws,The following statement contains a magic number: var secret = Secret.Random(16);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_Pointer_NullBuffer_Throws,The following statement contains a magic number: ExceptionAssert.ThrowsArgumentNull(                  testCode: () => secret.WriteSecretIntoBuffer(null' 100)'                  paramName: "buffer");
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws,The following statement contains a magic number: var secret = Secret.Random(16);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws,The following statement contains a magic number: ExceptionAssert.ThrowsArgument(                  testCode: () =>                  {                      byte* pBuffer = stackalloc byte[100];                      secret.WriteSecretIntoBuffer(pBuffer' 100);                  }'                  paramName: "bufferLength"'                  exceptionMessage: Resources.FormatCommon_BufferIncorrectlySized(100' 16));
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws,The following statement contains a magic number: ExceptionAssert.ThrowsArgument(                  testCode: () =>                  {                      byte* pBuffer = stackalloc byte[100];                      secret.WriteSecretIntoBuffer(pBuffer' 100);                  }'                  paramName: "bufferLength"'                  exceptionMessage: Resources.FormatCommon_BufferIncorrectlySized(100' 16));
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws,The following statement contains a magic number: ExceptionAssert.ThrowsArgument(                  testCode: () =>                  {                      byte* pBuffer = stackalloc byte[100];                      secret.WriteSecretIntoBuffer(pBuffer' 100);                  }'                  paramName: "bufferLength"'                  exceptionMessage: Resources.FormatCommon_BufferIncorrectlySized(100' 16));
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws,The following statement contains a magic number: ExceptionAssert.ThrowsArgument(                  testCode: () =>                  {                      byte* pBuffer = stackalloc byte[100];                      secret.WriteSecretIntoBuffer(pBuffer' 100);                  }'                  paramName: "bufferLength"'                  exceptionMessage: Resources.FormatCommon_BufferIncorrectlySized(100' 16));
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_Pointer_Disposed_Throws,The following statement contains a magic number: var secret = Secret.Random(16);
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_Pointer_Disposed_Throws,The following statement contains a magic number: Assert.Throws<ObjectDisposedException>(                  testCode: () =>                  {                      byte* pBuffer = stackalloc byte[16];                      secret.WriteSecretIntoBuffer(pBuffer' 16);                  });
Magic Number,Microsoft.AspNetCore.DataProtection,SecretTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SecretTests.cs,WriteSecretIntoBuffer_Pointer_Disposed_Throws,The following statement contains a magic number: Assert.Throws<ObjectDisposedException>(                  testCode: () =>                  {                      byte* pBuffer = stackalloc byte[16];                      secret.WriteSecretIntoBuffer(pBuffer' 16);                  });
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_Cbc_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_Cbc_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_Cbc_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_Cbc_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_Cbc_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_Cbc_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_Cbc_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_Cbc_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorDeserializerTests.cs,CreateEncryptorInstanceFromDescriptor,The following statement contains a magic number: var key = new Key(                  Guid.NewGuid()'                  DateTimeOffset.Now'                  DateTimeOffset.Now + TimeSpan.FromHours(1)'                  DateTimeOffset.Now + TimeSpan.FromDays(30)'                  descriptor'                  new[] { encryptorFactory });
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The following statement contains a magic number: var masterKey = Secret.Random(512 / 8);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The following statement contains a magic number: var masterKey = Secret.Random(512 / 8);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The following statement contains a magic number: var control = new CbcAuthenticatedEncryptor(                  keyDerivationKey: masterKey'                  symmetricAlgorithmHandle: CachedAlgorithmHandles.AES_CBC'                  symmetricAlgorithmKeySizeInBytes: (uint)(keyLengthInBits / 8)'                  hmacAlgorithmHandle: BCryptAlgorithmHandle.OpenAlgorithmHandle(hashAlgorithm' hmac: true));
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The following statement contains a magic number: var masterKey = Secret.Random(512 / 8);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The following statement contains a magic number: var masterKey = Secret.Random(512 / 8);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The following statement contains a magic number: var control = new GcmAuthenticatedEncryptor(                  keyDerivationKey: masterKey'                  symmetricAlgorithmHandle: CachedAlgorithmHandles.AES_GCM'                  symmetricAlgorithmKeySizeInBytes: (uint)(keyLengthInBits / 8));
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The following statement contains a magic number: var masterKey = Secret.Random(512 / 8);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The following statement contains a magic number: var masterKey = Secret.Random(512 / 8);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The following statement contains a magic number: var control = new ManagedAuthenticatedEncryptor(                  keyDerivationKey: masterKey'                  symmetricAlgorithmFactory: () => Aes.Create()'                  symmetricAlgorithmKeySizeInBytes: keyLengthInBits / 8'                  validationAlgorithmFactory: validationAlgorithmFactory);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,AuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\AuthenticatedEncryptorDescriptorTests.cs,CreateEncryptorInstanceFromDescriptor,The following statement contains a magic number: var key = new Key(                  Guid.NewGuid()'                  DateTimeOffset.Now'                  DateTimeOffset.Now + TimeSpan.FromHours(1)'                  DateTimeOffset.Now + TimeSpan.FromDays(30)'                  descriptor'                  new[] { encryptorFactory });
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorConfigurationTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorConfigurationTests.cs,CreateNewDescriptor_CreatesUniqueCorrectlySizedMasterKey,The following statement contains a magic number: SecretAssert.LengthIs(512 /* bits */' masterKey1);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorConfigurationTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorConfigurationTests.cs,CreateNewDescriptor_CreatesUniqueCorrectlySizedMasterKey,The following statement contains a magic number: SecretAssert.LengthIs(512 /* bits */' masterKey2);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: var descriptor = new CngCbcAuthenticatedEncryptorDescriptor(                  new CngCbcAuthenticatedEncryptorConfiguration()                  {                      EncryptionAlgorithm = Constants.BCRYPT_AES_ALGORITHM'                      EncryptionAlgorithmKeySize = 192'                      EncryptionAlgorithmProvider = null'                      HashAlgorithm = Constants.BCRYPT_SHA512_ALGORITHM'                      HashAlgorithmProvider = null                  }'                  "k88VrwGLINfVAqzlAp7U4EAjdlmUG17c756McQGdjHU8Ajkfc/A3YOKdqlMcF6dXaIxATED+g2f62wkRRRRRzA==".ToSecret());
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorDeserializerTests.cs,CreateEncryptorInstanceFromDescriptor,The following statement contains a magic number: var key = new Key(                  Guid.NewGuid()'                  DateTimeOffset.Now'                  DateTimeOffset.Now + TimeSpan.FromHours(1)'                  DateTimeOffset.Now + TimeSpan.FromDays(30)'                  descriptor'                  new[] { encryptorFactory });
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorTests.cs,ExportToXml_WithProviders_ProducesCorrectPayload,The following statement contains a magic number: var descriptor = new CngCbcAuthenticatedEncryptorDescriptor(new CngCbcAuthenticatedEncryptorConfiguration()              {                  EncryptionAlgorithm = "enc-alg"'                  EncryptionAlgorithmKeySize = 2048'                  EncryptionAlgorithmProvider = "enc-alg-prov"'                  HashAlgorithm = "hash-alg"'                  HashAlgorithmProvider = "hash-alg-prov"              }' masterKey);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngCbcAuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngCbcAuthenticatedEncryptorDescriptorTests.cs,ExportToXml_WithoutProviders_ProducesCorrectPayload,The following statement contains a magic number: var descriptor = new CngCbcAuthenticatedEncryptorDescriptor(new CngCbcAuthenticatedEncryptorConfiguration()              {                  EncryptionAlgorithm = "enc-alg"'                  EncryptionAlgorithmKeySize = 2048'                  HashAlgorithm = "hash-alg"              }' masterKey);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorConfigurationTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorConfigurationTests.cs,CreateNewDescriptor_CreatesUniqueCorrectlySizedMasterKey,The following statement contains a magic number: SecretAssert.LengthIs(512 /* bits */' masterKey1);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorConfigurationTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorConfigurationTests.cs,CreateNewDescriptor_CreatesUniqueCorrectlySizedMasterKey,The following statement contains a magic number: SecretAssert.LengthIs(512 /* bits */' masterKey2);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: var descriptor = new CngGcmAuthenticatedEncryptorDescriptor(                  new CngGcmAuthenticatedEncryptorConfiguration()                  {                      EncryptionAlgorithm = Constants.BCRYPT_AES_ALGORITHM'                      EncryptionAlgorithmKeySize = 192'                      EncryptionAlgorithmProvider = null                  }'                  "k88VrwGLINfVAqzlAp7U4EAjdlmUG17c756McQGdjHU8Ajkfc/A3YOKdqlMcF6dXaIxATED+g2f62wkRRRRRzA==".ToSecret());
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorDeserializerTests.cs,CreateEncryptorInstanceFromDescriptor,The following statement contains a magic number: var key = new Key(                  keyId: Guid.NewGuid()'                  creationDate: DateTimeOffset.Now'                  activationDate: DateTimeOffset.Now + TimeSpan.FromHours(1)'                  expirationDate: DateTimeOffset.Now + TimeSpan.FromDays(30)'                  descriptor: descriptor'                  encryptorFactories: new[] { encryptorFactory });
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorTests.cs,ExportToXml_WithProviders_ProducesCorrectPayload,The following statement contains a magic number: var descriptor = new CngGcmAuthenticatedEncryptorDescriptor(new CngGcmAuthenticatedEncryptorConfiguration()              {                  EncryptionAlgorithm = "enc-alg"'                  EncryptionAlgorithmKeySize = 2048'                  EncryptionAlgorithmProvider = "enc-alg-prov"              }' masterKey);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,CngGcmAuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\CngGcmAuthenticatedEncryptorDescriptorTests.cs,ExportToXml_WithoutProviders_ProducesCorrectPayload,The following statement contains a magic number: var descriptor = new CngGcmAuthenticatedEncryptorDescriptor(new CngGcmAuthenticatedEncryptorConfiguration()              {                  EncryptionAlgorithm = "enc-alg"'                  EncryptionAlgorithmKeySize = 2048              }' masterKey);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorConfigurationTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorConfigurationTests.cs,CreateNewDescriptor_CreatesUniqueCorrectlySizedMasterKey,The following statement contains a magic number: SecretAssert.LengthIs(512 /* bits */' masterKey1);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorConfigurationTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorConfigurationTests.cs,CreateNewDescriptor_CreatesUniqueCorrectlySizedMasterKey,The following statement contains a magic number: SecretAssert.LengthIs(512 /* bits */' masterKey2);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor,The following statement contains a magic number: var descriptor = new ManagedAuthenticatedEncryptorDescriptor(                  new ManagedAuthenticatedEncryptorConfiguration()                  {                      EncryptionAlgorithmType = encryptionAlgorithmType'                      EncryptionAlgorithmKeySize = 192'                      ValidationAlgorithmType = validationAlgorithmType                  }'                  "k88VrwGLINfVAqzlAp7U4EAjdlmUG17c756McQGdjHU8Ajkfc/A3YOKdqlMcF6dXaIxATED+g2f62wkRRRRRzA==".ToSecret());
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CustomType_CreatesAppropriateDescriptor,The following statement contains a magic number: var descriptor = new ManagedAuthenticatedEncryptorDescriptor(                  new ManagedAuthenticatedEncryptorConfiguration()                  {                      EncryptionAlgorithmType = typeof(Aes)'                      EncryptionAlgorithmKeySize = 192'                      ValidationAlgorithmType = typeof(HMACSHA384)                  }'                  "k88VrwGLINfVAqzlAp7U4EAjdlmUG17c756McQGdjHU8Ajkfc/A3YOKdqlMcF6dXaIxATED+g2f62wkRRRRRzA==".ToSecret());
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CustomType_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CustomType_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CustomType_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CustomType_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] plaintext = new byte[] { 1' 2' 3' 4' 5 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CustomType_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CustomType_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CustomType_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,ImportFromXml_CustomType_CreatesAppropriateDescriptor,The following statement contains a magic number: byte[] aad = new byte[] { 2' 4' 6' 8' 0 };
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorDeserializerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs,CreateEncryptorInstanceFromDescriptor,The following statement contains a magic number: var key = new Key(                  Guid.NewGuid()'                  DateTimeOffset.Now'                  DateTimeOffset.Now + TimeSpan.FromHours(1)'                  DateTimeOffset.Now + TimeSpan.FromDays(30)'                  descriptor'                  new[] { encryptorFactory });
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorTests.cs,ExportToXml_CustomTypes_ProducesCorrectPayload,The following statement contains a magic number: var descriptor = new ManagedAuthenticatedEncryptorDescriptor(new ManagedAuthenticatedEncryptorConfiguration()              {                  EncryptionAlgorithmType = typeof(MySymmetricAlgorithm)'                  EncryptionAlgorithmKeySize = 2048'                  ValidationAlgorithmType = typeof(MyKeyedHashAlgorithm)              }' masterKey);
Magic Number,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel,ManagedAuthenticatedEncryptorDescriptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\AuthenticatedEncryption\ConfigurationModel\ManagedAuthenticatedEncryptorDescriptorTests.cs,ExportToXml_BuiltInTypes_ProducesCorrectPayload,The following statement contains a magic number: var descriptor = new ManagedAuthenticatedEncryptorDescriptor(new ManagedAuthenticatedEncryptorConfiguration()              {                  EncryptionAlgorithmType = encryptionAlgorithmType'                  EncryptionAlgorithmKeySize = 2048'                  ValidationAlgorithmType = validationAlgorithmType              }' masterKey);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The following statement contains a magic number: Secret kdk = new Secret(new byte[512 / 8]);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The following statement contains a magic number: Secret kdk = new Secret(new byte[512 / 8]);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The following statement contains a magic number: CbcAuthenticatedEncryptor encryptor = new CbcAuthenticatedEncryptor(kdk'                  symmetricAlgorithmHandle: CachedAlgorithmHandles.AES_CBC'                  symmetricAlgorithmKeySizeInBytes: 256 / 8'                  hmacAlgorithmHandle: CachedAlgorithmHandles.HMAC_SHA256);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The following statement contains a magic number: CbcAuthenticatedEncryptor encryptor = new CbcAuthenticatedEncryptor(kdk'                  symmetricAlgorithmHandle: CachedAlgorithmHandles.AES_CBC'                  symmetricAlgorithmKeySizeInBytes: 256 / 8'                  hmacAlgorithmHandle: CachedAlgorithmHandles.HMAC_SHA256);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: Secret kdk = new Secret(new byte[512 / 8]);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: Secret kdk = new Secret(new byte[512 / 8]);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: CbcAuthenticatedEncryptor encryptor = new CbcAuthenticatedEncryptor(kdk'                  symmetricAlgorithmHandle: CachedAlgorithmHandles.AES_CBC'                  symmetricAlgorithmKeySizeInBytes: 256 / 8'                  hmacAlgorithmHandle: CachedAlgorithmHandles.HMAC_SHA256);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: CbcAuthenticatedEncryptor encryptor = new CbcAuthenticatedEncryptor(kdk'                  symmetricAlgorithmHandle: CachedAlgorithmHandles.AES_CBC'                  symmetricAlgorithmKeySizeInBytes: 256 / 8'                  hmacAlgorithmHandle: CachedAlgorithmHandles.HMAC_SHA256);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: byte[] invalidCiphertext_tooShort = new byte[10];
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: CbcAuthenticatedEncryptor encryptor = new CbcAuthenticatedEncryptor(kdk'                  symmetricAlgorithmHandle: CachedAlgorithmHandles.AES_CBC'                  symmetricAlgorithmKeySizeInBytes: 256 / 8'                  hmacAlgorithmHandle: CachedAlgorithmHandles.HMAC_SHA256'                  genRandom: new SequentialGenRandom());
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: CbcAuthenticatedEncryptor encryptor = new CbcAuthenticatedEncryptor(kdk'                  symmetricAlgorithmHandle: CachedAlgorithmHandles.AES_CBC'                  symmetricAlgorithmKeySizeInBytes: 256 / 8'                  hmacAlgorithmHandle: CachedAlgorithmHandles.HMAC_SHA256'                  genRandom: new SequentialGenRandom());
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: byte[] retVal = encryptor.Encrypt(                  plaintext: plaintext'                  additionalAuthenticatedData: aad'                  preBufferSize: 3'                  postBufferSize: 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,CbcAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CbcAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: byte[] retVal = encryptor.Encrypt(                  plaintext: plaintext'                  additionalAuthenticatedData: aad'                  preBufferSize: 3'                  postBufferSize: 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The following statement contains a magic number: Secret kdk = new Secret(new byte[512 / 8]);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The following statement contains a magic number: Secret kdk = new Secret(new byte[512 / 8]);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The following statement contains a magic number: GcmAuthenticatedEncryptor encryptor = new GcmAuthenticatedEncryptor(kdk' CachedAlgorithmHandles.AES_GCM' symmetricAlgorithmKeySizeInBytes: 256 / 8);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The following statement contains a magic number: GcmAuthenticatedEncryptor encryptor = new GcmAuthenticatedEncryptor(kdk' CachedAlgorithmHandles.AES_GCM' symmetricAlgorithmKeySizeInBytes: 256 / 8);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: Secret kdk = new Secret(new byte[512 / 8]);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: Secret kdk = new Secret(new byte[512 / 8]);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: GcmAuthenticatedEncryptor encryptor = new GcmAuthenticatedEncryptor(kdk' CachedAlgorithmHandles.AES_GCM' symmetricAlgorithmKeySizeInBytes: 256 / 8);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: GcmAuthenticatedEncryptor encryptor = new GcmAuthenticatedEncryptor(kdk' CachedAlgorithmHandles.AES_GCM' symmetricAlgorithmKeySizeInBytes: 256 / 8);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: byte[] invalidCiphertext_tooShort = new byte[10];
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: GcmAuthenticatedEncryptor encryptor = new GcmAuthenticatedEncryptor(kdk' CachedAlgorithmHandles.AES_GCM' symmetricAlgorithmKeySizeInBytes: 128 / 8' genRandom: new SequentialGenRandom());
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: GcmAuthenticatedEncryptor encryptor = new GcmAuthenticatedEncryptor(kdk' CachedAlgorithmHandles.AES_GCM' symmetricAlgorithmKeySizeInBytes: 128 / 8' genRandom: new SequentialGenRandom());
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: byte[] retVal = encryptor.Encrypt(                  plaintext: plaintext'                  additionalAuthenticatedData: aad'                  preBufferSize: 3'                  postBufferSize: 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng,GcmAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\GcmAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: byte[] retVal = encryptor.Encrypt(                  plaintext: plaintext'                  additionalAuthenticatedData: aad'                  preBufferSize: 3'                  postBufferSize: 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_ForwardsArraySegment,The following statement contains a magic number: var ciphertext = new ArraySegment<byte>(new byte[] { 0x00' 0x01' 0x02' 0x03' 0x04 }' 3' 2);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_ForwardsArraySegment,The following statement contains a magic number: var ciphertext = new ArraySegment<byte>(new byte[] { 0x00' 0x01' 0x02' 0x03' 0x04 }' 3' 2);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_ForwardsArraySegment,The following statement contains a magic number: var aad = new ArraySegment<byte>(new byte[] { 0x10' 0x11' 0x12' 0x13' 0x14 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_ForwardsArraySegment,The following statement contains a magic number: encryptorMock                  .Setup(o => o.DecryptHook(It.IsAny<IntPtr>()' 2' It.IsAny<IntPtr>()' 4))                  .Returns((IntPtr pbCiphertext' uint cbCiphertext' IntPtr pbAdditionalAuthenticatedData' uint cbAdditionalAuthenticatedData) =>                  {                      // ensure that pointers started at the right place                      Assert.Equal((byte)0x03' *(byte*)pbCiphertext);                      Assert.Equal((byte)0x11' *(byte*)pbAdditionalAuthenticatedData);                      return new byte[] { 0x20' 0x21' 0x22 };                  });
Magic Number,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_ForwardsArraySegment,The following statement contains a magic number: encryptorMock                  .Setup(o => o.DecryptHook(It.IsAny<IntPtr>()' 2' It.IsAny<IntPtr>()' 4))                  .Returns((IntPtr pbCiphertext' uint cbCiphertext' IntPtr pbAdditionalAuthenticatedData' uint cbAdditionalAuthenticatedData) =>                  {                      // ensure that pointers started at the right place                      Assert.Equal((byte)0x03' *(byte*)pbCiphertext);                      Assert.Equal((byte)0x11' *(byte*)pbAdditionalAuthenticatedData);                      return new byte[] { 0x20' 0x21' 0x22 };                  });
Magic Number,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_HandlesEmptyAADPointerFixup,The following statement contains a magic number: var ciphertext = new ArraySegment<byte>(new byte[] { 0x00' 0x01' 0x02' 0x03' 0x04 }' 3' 2);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_HandlesEmptyAADPointerFixup,The following statement contains a magic number: var ciphertext = new ArraySegment<byte>(new byte[] { 0x00' 0x01' 0x02' 0x03' 0x04 }' 3' 2);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_HandlesEmptyAADPointerFixup,The following statement contains a magic number: encryptorMock                  .Setup(o => o.DecryptHook(It.IsAny<IntPtr>()' 2' It.IsAny<IntPtr>()' 0))                  .Returns((IntPtr pbCiphertext' uint cbCiphertext' IntPtr pbAdditionalAuthenticatedData' uint cbAdditionalAuthenticatedData) =>                  {                      // ensure that pointers started at the right place                      Assert.Equal((byte)0x03' *(byte*)pbCiphertext);                      Assert.NotEqual(IntPtr.Zero' pbAdditionalAuthenticatedData); // CNG will complain if this pointer is zero                      return new byte[] { 0x20' 0x21' 0x22 };                  });
Magic Number,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_HandlesEmptyCiphertextPointerFixup,The following statement contains a magic number: var aad = new ArraySegment<byte>(new byte[] { 0x10' 0x11' 0x12' 0x13' 0x14 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Cng.Internal,CngAuthenticatedEncryptorBaseTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Cng\CngAuthenticatedEncryptorBaseTests.cs,Decrypt_HandlesEmptyCiphertextPointerFixup,The following statement contains a magic number: encryptorMock                  .Setup(o => o.DecryptHook(It.IsAny<IntPtr>()' 0' It.IsAny<IntPtr>()' 4))                  .Returns((IntPtr pbCiphertext' uint cbCiphertext' IntPtr pbAdditionalAuthenticatedData' uint cbAdditionalAuthenticatedData) =>                  {                      // ensure that pointers started at the right place                      Assert.NotEqual(IntPtr.Zero' pbCiphertext); // CNG will complain if this pointer is zero                      Assert.Equal((byte)0x11' *(byte*)pbAdditionalAuthenticatedData);                      return new byte[] { 0x20' 0x21' 0x22 };                  });
Magic Number,Microsoft.AspNetCore.DataProtection.Test,HostingTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\HostingTests.cs,LoadsKeyRingBeforeServerStarts,The following statement contains a magic number: await tcs.Task.TimeoutAfter(TimeSpan.FromSeconds(10));
Magic Number,Microsoft.AspNetCore.DataProtection.Internal,KeyManagementOptionsSetupTest,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Internal\KeyManagementOptionsSetupTest.cs,Configure_WithRegistryPolicyResolver_SetsValuesFromResolver,The following statement contains a magic number: var registryEntries = new Dictionary<string' object>()              {                  ["KeyEscrowSinks"] = String.Join(" ;; ; "' new Type[] { typeof(MyKeyEscrowSink1)' typeof(MyKeyEscrowSink2) }.Select(t => t.AssemblyQualifiedName))'                  ["EncryptionType"] = "managed"'                  ["DefaultKeyLifetime"] = 1024 // days              };
Magic Number,Microsoft.AspNetCore.DataProtection.Internal,KeyManagementOptionsSetupTest,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Internal\KeyManagementOptionsSetupTest.cs,Configure_WithRegistryPolicyResolver_SetsValuesFromResolver,The following statement contains a magic number: Assert.Equal(TimeSpan.FromDays(1024)' options.NewKeyLifetime);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,DeferredKeyTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DeferredKeyTests.cs,Ctor_Properties,The following statement contains a magic number: var activationDate = creationDate.AddDays(2);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,DeferredKeyTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\DeferredKeyTests.cs,Ctor_Properties,The following statement contains a magic number: var expirationDate = creationDate.AddDays(90);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingBasedDataProtectorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingBasedDataProtectorTests.cs,Unprotect_PayloadHasIncorrectVersionMarker_ThrowsNewerVersion,The following statement contains a magic number: badProtectedPayload[3]++;
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,CreateCacheableKeyRing_GenerationRequired_NoDefaultKey_CreatesNewKeyWithImmediateActivation,The following statement contains a magic number: var keyRingProvider = SetupCreateCacheableKeyRingTestAndCreateKeyManager(                  callSequence: callSequence'                  getCacheExpirationTokenReturnValues: new[] { expirationCts1.Token' expirationCts2.Token }'                  getAllKeysReturnValues: new[] { allKeys1' allKeys2 }'                  createNewKeyCallbacks: new[] {                      Tuple.Create((DateTimeOffset)now' (DateTimeOffset)now + TimeSpan.FromDays(90)' CreateKey())                  }'                  resolveDefaultKeyPolicyReturnValues: new[]                  {                          Tuple.Create((DateTimeOffset)now' (IEnumerable<IKey>)allKeys1' new DefaultKeyResolution()                          {                              DefaultKey = null'                              ShouldGenerateNewKey = true                          })'                          Tuple.Create((DateTimeOffset)now' (IEnumerable<IKey>)allKeys2' new DefaultKeyResolution()                          {                              DefaultKey = key1'                              ShouldGenerateNewKey = false                          })                  });
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,CreateCacheableKeyRing_GenerationRequired_NoDefaultKey_CreatesNewKeyWithImmediateActivation_StillNoDefaultKey_ReturnsNewlyCreatedKey,The following statement contains a magic number: var keyRingProvider = SetupCreateCacheableKeyRingTestAndCreateKeyManager(                  callSequence: callSequence'                  getCacheExpirationTokenReturnValues: new[] { expirationCts1.Token' expirationCts2.Token }'                  getAllKeysReturnValues: new[] { allKeys' allKeys }'                  createNewKeyCallbacks: new[] {                      Tuple.Create((DateTimeOffset)now' (DateTimeOffset)now + TimeSpan.FromDays(90)' newlyCreatedKey)                  }'                  resolveDefaultKeyPolicyReturnValues: new[]                  {                          Tuple.Create((DateTimeOffset)now' (IEnumerable<IKey>)allKeys' new DefaultKeyResolution()                          {                              DefaultKey = null'                              ShouldGenerateNewKey = true                          })'                          Tuple.Create((DateTimeOffset)now' (IEnumerable<IKey>)allKeys' new DefaultKeyResolution()                          {                              DefaultKey = null'                              ShouldGenerateNewKey = true                          })                  });
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,CreateCacheableKeyRing_GenerationRequired_NoDefaultKey_KeyGenerationDisabled_Fails,The following statement contains a magic number: var keyRingProvider = SetupCreateCacheableKeyRingTestAndCreateKeyManager(                  callSequence: callSequence'                  getCacheExpirationTokenReturnValues: new[] { CancellationToken.None }'                  getAllKeysReturnValues: new[] { allKeys }'                  createNewKeyCallbacks: new[] {                      Tuple.Create((DateTimeOffset)now' (DateTimeOffset)now + TimeSpan.FromDays(90)' CreateKey())                  }'                  resolveDefaultKeyPolicyReturnValues: new[]                  {                          Tuple.Create((DateTimeOffset)now' (IEnumerable<IKey>)allKeys' new DefaultKeyResolution()                          {                              DefaultKey = null'                              ShouldGenerateNewKey = true                          })                  }'                  keyManagementOptions: new KeyManagementOptions() { AutoGenerateKeys = false });
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,CreateCacheableKeyRing_GenerationRequired_WithDefaultKey_CreatesNewKeyWithDeferredActivationAndExpirationBasedOnCreationTime,The following statement contains a magic number: var keyRingProvider = SetupCreateCacheableKeyRingTestAndCreateKeyManager(                  callSequence: callSequence'                  getCacheExpirationTokenReturnValues: new[] { expirationCts1.Token' expirationCts2.Token }'                  getAllKeysReturnValues: new[] { allKeys1' allKeys2 }'                  createNewKeyCallbacks: new[] {                      Tuple.Create(key1.ExpirationDate' (DateTimeOffset)now + TimeSpan.FromDays(90)' CreateKey())                  }'                  resolveDefaultKeyPolicyReturnValues: new[]                  {                          Tuple.Create((DateTimeOffset)now' (IEnumerable<IKey>)allKeys1' new DefaultKeyResolution()                          {                              DefaultKey = key1'                              ShouldGenerateNewKey = true                          })'                          Tuple.Create((DateTimeOffset)now' (IEnumerable<IKey>)allKeys2' new DefaultKeyResolution()                          {                              DefaultKey = key2'                              ShouldGenerateNewKey = false                          })                  });
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,GetCurrentKeyRing_KeyRingCached_AfterExpiration_ClearsCache,The following statement contains a magic number: mockCacheableKeyRingProvider.Verify(o => o.GetCacheableKeyRing(It.IsAny<DateTimeOffset>())' Times.Exactly(2));
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,GetCurrentKeyRing_NoExistingKeyRing_HoldsAllThreadsUntilKeyRingCreated,The following statement contains a magic number: TimeSpan testTimeout = TimeSpan.FromSeconds(10);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,GetCurrentKeyRing_WithExpiredExistingKeyRing_AllowsOneThreadToUpdate_ReturnsExistingKeyRingToOtherCallersWithoutBlocking,The following statement contains a magic number: TimeSpan testTimeout = TimeSpan.FromSeconds(10);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,AssertWithinJitterRange,The following statement contains a magic number: Assert.InRange(actual' now + TimeSpan.FromHours(24 * 0.8)' now + TimeSpan.FromHours(24));
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,AssertWithinJitterRange,The following statement contains a magic number: Assert.InRange(actual' now + TimeSpan.FromHours(24 * 0.8)' now + TimeSpan.FromHours(24));
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,AssertWithinJitterRange,The following statement contains a magic number: Assert.InRange(actual' now + TimeSpan.FromHours(24 * 0.8)' now + TimeSpan.FromHours(24));
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyRingProviderTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingProviderTests.cs,CreateKey,The following statement contains a magic number: return CreateKey(                  string.Format(CultureInfo.InvariantCulture' "{0:u}"' now)'                  string.Format(CultureInfo.InvariantCulture' "{0:u}"' now.AddDays(90)));
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,MyKey,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyRingTests.cs,MyKey,The following statement contains a magic number: ExpirationDate = CreationDate + TimeSpan.FromDays(30);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyTests.cs,Ctor_Properties,The following statement contains a magic number: var activationDate = creationDate.AddDays(2);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,KeyTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\KeyTests.cs,Ctor_Properties,The following statement contains a magic number: var expirationDate = creationDate.AddDays(90);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_NoEscrowOrEncryption,The following statement contains a magic number: var creationDate = new DateTimeOffset(2014' 01' 01' 0' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_NoEscrowOrEncryption,The following statement contains a magic number: var activationDate = new DateTimeOffset(2014' 02' 01' 0' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_NoEscrowOrEncryption,The following statement contains a magic number: var activationDate = new DateTimeOffset(2014' 02' 01' 0' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_NoEscrowOrEncryption,The following statement contains a magic number: var expirationDate = new DateTimeOffset(2014' 03' 01' 0' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_NoEscrowOrEncryption,The following statement contains a magic number: var expirationDate = new DateTimeOffset(2014' 03' 01' 0' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_WithEscrowAndEncryption,The following statement contains a magic number: var creationDate = new DateTimeOffset(2014' 01' 01' 0' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_WithEscrowAndEncryption,The following statement contains a magic number: var activationDate = new DateTimeOffset(2014' 02' 01' 0' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_WithEscrowAndEncryption,The following statement contains a magic number: var activationDate = new DateTimeOffset(2014' 02' 01' 0' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_WithEscrowAndEncryption,The following statement contains a magic number: var expirationDate = new DateTimeOffset(2014' 03' 01' 0' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_Internal_WithEscrowAndEncryption,The following statement contains a magic number: var expirationDate = new DateTimeOffset(2014' 03' 01' 0' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,CreateNewKey_CallsInternalManager,The following statement contains a magic number: DateTimeOffset activationDate = minCreationDate + TimeSpan.FromDays(7);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,GetAllKeys_IgnoresUnknownElements,The following statement contains a magic number: Assert.Equal(2' keys.Length);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,GetAllKeys_UnderstandsRevocations,The following statement contains a magic number: Assert.Equal(4' keys.Length);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,GetAllKeys_UnderstandsRevocations,The following statement contains a magic number: Assert.Equal(new Guid("21580ac4-c83a-493c-bde6-29a1cc97ca0f")' keys[2].KeyId);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,GetAllKeys_UnderstandsRevocations,The following statement contains a magic number: Assert.False(keys[2].IsRevoked);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,GetAllKeys_UnderstandsRevocations,The following statement contains a magic number: Assert.Equal(new Guid("6bd14f12-0bb8-4822-91d7-04b360de0497")' keys[3].KeyId);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,GetAllKeys_UnderstandsRevocations,The following statement contains a magic number: Assert.True(keys[3].IsRevoked);
Magic Number,Microsoft.AspNetCore.DataProtection.KeyManagement,XmlKeyManagerTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\KeyManagement\XmlKeyManagerTests.cs,RevokeSingleKey_Internal,The following statement contains a magic number: var revocationDate = new DateTimeOffset(2014' 01' 01' 0' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The following statement contains a magic number: Secret kdk = new Secret(new byte[512 / 8]);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The following statement contains a magic number: Secret kdk = new Secret(new byte[512 / 8]);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The following statement contains a magic number: ManagedAuthenticatedEncryptor encryptor = new ManagedAuthenticatedEncryptor(kdk'                  symmetricAlgorithmFactory: Aes.Create'                  symmetricAlgorithmKeySizeInBytes: 256 / 8'                  validationAlgorithmFactory: () => new HMACSHA256());
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_RoundTrips,The following statement contains a magic number: ManagedAuthenticatedEncryptor encryptor = new ManagedAuthenticatedEncryptor(kdk'                  symmetricAlgorithmFactory: Aes.Create'                  symmetricAlgorithmKeySizeInBytes: 256 / 8'                  validationAlgorithmFactory: () => new HMACSHA256());
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: Secret kdk = new Secret(new byte[512 / 8]);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: Secret kdk = new Secret(new byte[512 / 8]);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: ManagedAuthenticatedEncryptor encryptor = new ManagedAuthenticatedEncryptor(kdk'                  symmetricAlgorithmFactory: Aes.Create'                  symmetricAlgorithmKeySizeInBytes: 256 / 8'                  validationAlgorithmFactory: () => new HMACSHA256());
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: ManagedAuthenticatedEncryptor encryptor = new ManagedAuthenticatedEncryptor(kdk'                  symmetricAlgorithmFactory: Aes.Create'                  symmetricAlgorithmKeySizeInBytes: 256 / 8'                  validationAlgorithmFactory: () => new HMACSHA256());
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_Decrypt_Tampering_Fails,The following statement contains a magic number: byte[] invalidCiphertext_tooShort = new byte[10];
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ManagedAuthenticatedEncryptor encryptor = new ManagedAuthenticatedEncryptor(kdk'                  symmetricAlgorithmFactory: Aes.Create'                  symmetricAlgorithmKeySizeInBytes: 256 / 8'                  validationAlgorithmFactory: () => new HMACSHA256()'                  genRandom: new SequentialGenRandom());
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ManagedAuthenticatedEncryptor encryptor = new ManagedAuthenticatedEncryptor(kdk'                  symmetricAlgorithmFactory: Aes.Create'                  symmetricAlgorithmKeySizeInBytes: 256 / 8'                  validationAlgorithmFactory: () => new HMACSHA256()'                  genRandom: new SequentialGenRandom());
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> plaintext = new ArraySegment<byte>(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7 }' 2' 3);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.Managed,ManagedAuthenticatedEncryptorTests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\Managed\ManagedAuthenticatedEncryptorTests.cs,Encrypt_KnownKey,The following statement contains a magic number: ArraySegment<byte> aad = new ArraySegment<byte>(new byte[] { 7' 6' 5' 4' 3' 2' 1' 0 }' 1' 4);
Magic Number,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,DeriveKeyWithContextHeader_LongKey_Managed,The following statement contains a magic number: byte[] kdk = new byte[50000];
Magic Number,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,DeriveKeyWithContextHeader_LongKey_Win7,The following statement contains a magic number: byte[] kdk = new byte[50000];
Magic Number,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,DeriveKeyWithContextHeader_LongKey_Win8,The following statement contains a magic number: byte[] kdk = new byte[50000];
Magic Number,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,TestManagedKeyDerivation,The following statement contains a magic number: var labelSegment = new ArraySegment<byte>(new byte[label.Length + 10]' 3' label.Length);
Magic Number,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,TestManagedKeyDerivation,The following statement contains a magic number: var labelSegment = new ArraySegment<byte>(new byte[label.Length + 10]' 3' label.Length);
Magic Number,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,TestManagedKeyDerivation,The following statement contains a magic number: var contextSegment = new ArraySegment<byte>(new byte[context.Length + 10]' 5' context.Length);
Magic Number,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,TestManagedKeyDerivation,The following statement contains a magic number: var contextSegment = new ArraySegment<byte>(new byte[context.Length + 10]' 5' context.Length);
Magic Number,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,TestManagedKeyDerivation,The following statement contains a magic number: var derivedSubkeySegment = new ArraySegment<byte>(new byte[numDerivedBytes + 10]' 4' numDerivedBytes);
Magic Number,Microsoft.AspNetCore.DataProtection.SP800_108,SP800_108Tests,D:\research\architectureSmells\repos\aspnet_DataProtection\test\Microsoft.AspNetCore.DataProtection.Test\SP800_108\SP800_108Tests.cs,TestManagedKeyDerivation,The following statement contains a magic number: var derivedSubkeySegment = new ArraySegment<byte>(new byte[numDerivedBytes + 10]' 4' numDerivedBytes);
