Implementation smell,Namespace,Class,File,Method,Description
Long Method,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The method has 308 lines of code.
Complex Method,RegExpose.UI,RegExposeRichTextBox,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\RegExposeRichTextBox.cs,ProcessCmdKey,Cyclomatic complexity of the method is 9
Long Parameter List,RegExpose.UI,CachedStep,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\CachedStep.cs,CachedStep,The method has 6 parameters. Parameters: step' stepIndex' regexIndex' currentIndex' currentLookaroundIndex' savedStatesIndexes
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,OnStepChanged,The length of the statement  "                            txtInput.SetHighlight(step.InitialState.Index' (step.CurrentState.Index - step.InitialState.Index) + 1' Color.PeachPuff); " is 121.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,OnStepChanged,The length of the statement  "                        _lookAroundIndexPosition = txtInput.GetPositionFromCharIndex(cachedStep.StepIndex == 0 ? 0 : cachedStep.CurrentLookaroundIndex); " is 128.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,OnStepChanged,The length of the statement  "                    _savedStatesIndexPositions = cachedStep.SavedStatesIndexes.Select(index => txtInput.GetPositionFromCharIndex(index)).ToArray(); " is 127.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,ParseInput,The length of the statement  "                cachedSteps = LoadSteps(engine.GetParseSteps()).ToList(); // Calling ToList() will force any exception to be thrown right here. " is 127.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MainForm)); " is 128.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The length of the statement  "            this.btnCompile.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 146.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The length of the statement  "            this.btnParse.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 144.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The length of the statement  "            this.txtInput.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 144.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The length of the statement  "            this.txtInput.Font = new System.Drawing.Font("Consolas"' 20.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 147.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The length of the statement  "            this.tvRegex.Font = new System.Drawing.Font("Consolas"' 20.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 146.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The length of the statement  "            this.splitContainer1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 151.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The length of the statement  "            this.lblMessage.Font = new System.Drawing.Font("Consolas"' 20.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 149.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The length of the statement  "            this.txtPattern.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 143.
Long Statement,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The length of the statement  "            this.txtPattern.Font = new System.Drawing.Font("Consolas"' 20.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 149.
Complex Conditional,RegExpose.UI,RegExposeRichTextBox,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\RegExposeRichTextBox.cs,ProcessCmdKey,The conditional expression  "(keyData & Keys.Control) != Keys.Control                  || ((keyData & Keys.V) != Keys.V                      && (keyData & Keys.Z) != Keys.Z                      && (keyData & Keys.Y) != Keys.Y)"  is complex.
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,ControlOnKeyDown,The following statement contains a magic number: if (e.KeyCode == (Keys.LButton | Keys.RButton | Keys.Back | Keys.ShiftKey) || e.KeyCode == (Keys)116)              {                  if (btnCompile.Enabled)                  {                      if (btnParse.Enabled)                      {                          ParseInput();                      }                      else                      {                          CompileRegex();                      }                  }              }              else if (e.KeyCode == (Keys.RButton | Keys.Space))              {                  if (btnCompile.Enabled && btnParse.Enabled)                  {                      if (lvMessages.Items.Count > 0)                      {                          if (lvMessages.SelectedIndices.Count == 0)                          {                              lvMessages.SelectedIndices.Add(0);                          }                          else if (lvMessages.SelectedIndices[0] < lvMessages.Items.Count - 1)                          {                              var currentIndex = lvMessages.SelectedIndices[0];                              lvMessages.SelectedIndices.Clear();                              lvMessages.SelectedIndices.Add(currentIndex + 1);                          }                      }                  }                  else                  {                      splitContainer3.Panel2Collapsed = !splitContainer3.Panel2Collapsed;                  }                    e.SuppressKeyPress = _isPresentation;              }              else if (e.KeyCode == (Keys.LButton | Keys.Space))              {                  if (btnCompile.Enabled && btnParse.Enabled)                  {                      if (lvMessages.Items.Count > 0)                      {                          if (lvMessages.SelectedIndices.Count == 0)                          {                              lvMessages.SelectedIndices.Add(0);                          }                          else if (lvMessages.SelectedIndices[0] > 0)                          {                              var currentIndex = lvMessages.SelectedIndices[0];                              lvMessages.SelectedIndices.Clear();                              lvMessages.SelectedIndices.Add(currentIndex - 1);                          }                      }                  }                  else                  {                      splitContainer3.Panel1Collapsed = !splitContainer3.Panel1Collapsed;                  }                    e.SuppressKeyPress = _isPresentation;              }              else if (e.KeyCode == (Keys.RButton | Keys.MButton | Keys.Back | Keys.ShiftKey | Keys.Space | Keys.F17))              {                  Close();              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_savedStatesIndexPositions.Any())              {                  var savedStateColor = Color.Blue;                  var list = new List<Tuple<Point' Color>>();                  foreach (var indexPosition in _savedStatesIndexPositions)                  {                      list.Add(Tuple.Create(indexPosition' savedStateColor));                      savedStateColor = Color.FromArgb(Math.Max(savedStateColor.A - 25' 0)'                                                       savedStateColor.R'                                                       savedStateColor.G'                                                       savedStateColor.B);                  }                    foreach (var t in list)                  {                      var p = new PointF(t.Item1.X' t.Item1.Y + (size.Height * 0.9f));                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);                  }              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_savedStatesIndexPositions.Any())              {                  var savedStateColor = Color.Blue;                  var list = new List<Tuple<Point' Color>>();                  foreach (var indexPosition in _savedStatesIndexPositions)                  {                      list.Add(Tuple.Create(indexPosition' savedStateColor));                      savedStateColor = Color.FromArgb(Math.Max(savedStateColor.A - 25' 0)'                                                       savedStateColor.R'                                                       savedStateColor.G'                                                       savedStateColor.B);                  }                    foreach (var t in list)                  {                      var p = new PointF(t.Item1.X' t.Item1.Y + (size.Height * 0.9f));                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);                  }              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_savedStatesIndexPositions.Any())              {                  var savedStateColor = Color.Blue;                  var list = new List<Tuple<Point' Color>>();                  foreach (var indexPosition in _savedStatesIndexPositions)                  {                      list.Add(Tuple.Create(indexPosition' savedStateColor));                      savedStateColor = Color.FromArgb(Math.Max(savedStateColor.A - 25' 0)'                                                       savedStateColor.R'                                                       savedStateColor.G'                                                       savedStateColor.B);                  }                    foreach (var t in list)                  {                      var p = new PointF(t.Item1.X' t.Item1.Y + (size.Height * 0.9f));                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);                  }              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_savedStatesIndexPositions.Any())              {                  var savedStateColor = Color.Blue;                  var list = new List<Tuple<Point' Color>>();                  foreach (var indexPosition in _savedStatesIndexPositions)                  {                      list.Add(Tuple.Create(indexPosition' savedStateColor));                      savedStateColor = Color.FromArgb(Math.Max(savedStateColor.A - 25' 0)'                                                       savedStateColor.R'                                                       savedStateColor.G'                                                       savedStateColor.B);                  }                    foreach (var t in list)                  {                      var p = new PointF(t.Item1.X' t.Item1.Y + (size.Height * 0.9f));                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);                  }              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_savedStatesIndexPositions.Any())              {                  var savedStateColor = Color.Blue;                  var list = new List<Tuple<Point' Color>>();                  foreach (var indexPosition in _savedStatesIndexPositions)                  {                      list.Add(Tuple.Create(indexPosition' savedStateColor));                      savedStateColor = Color.FromArgb(Math.Max(savedStateColor.A - 25' 0)'                                                       savedStateColor.R'                                                       savedStateColor.G'                                                       savedStateColor.B);                  }                    foreach (var t in list)                  {                      var p = new PointF(t.Item1.X' t.Item1.Y + (size.Height * 0.9f));                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);                  }              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_savedStatesIndexPositions.Any())              {                  var savedStateColor = Color.Blue;                  var list = new List<Tuple<Point' Color>>();                  foreach (var indexPosition in _savedStatesIndexPositions)                  {                      list.Add(Tuple.Create(indexPosition' savedStateColor));                      savedStateColor = Color.FromArgb(Math.Max(savedStateColor.A - 25' 0)'                                                       savedStateColor.R'                                                       savedStateColor.G'                                                       savedStateColor.B);                  }                    foreach (var t in list)                  {                      var p = new PointF(t.Item1.X' t.Item1.Y + (size.Height * 0.9f));                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);                  }              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_savedStatesIndexPositions.Any())              {                  var savedStateColor = Color.Blue;                  var list = new List<Tuple<Point' Color>>();                  foreach (var indexPosition in _savedStatesIndexPositions)                  {                      list.Add(Tuple.Create(indexPosition' savedStateColor));                      savedStateColor = Color.FromArgb(Math.Max(savedStateColor.A - 25' 0)'                                                       savedStateColor.R'                                                       savedStateColor.G'                                                       savedStateColor.B);                  }                    foreach (var t in list)                  {                      var p = new PointF(t.Item1.X' t.Item1.Y + (size.Height * 0.9f));                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                      e.Graphics.DrawLine(new Pen(t.Item2' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);                  }              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_regexIndexPosition != Point.Empty)              {                  var p = new PointF(_regexIndexPosition.X' _regexIndexPosition.Y + (size.Height * 0.8f));                    e.Graphics.DrawLine(new Pen(Color.Black' 5)' p.X + 2' p.Y - 2' p.X - 10.5f' p.Y + 10.5f);                  e.Graphics.DrawLine(new Pen(Color.Black' 5)' p.X - 2' p.Y - 2' p.X + 10f' p.Y + 10f);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_regexIndexPosition != Point.Empty)              {                  var p = new PointF(_regexIndexPosition.X' _regexIndexPosition.Y + (size.Height * 0.8f));                    e.Graphics.DrawLine(new Pen(Color.Black' 5)' p.X + 2' p.Y - 2' p.X - 10.5f' p.Y + 10.5f);                  e.Graphics.DrawLine(new Pen(Color.Black' 5)' p.X - 2' p.Y - 2' p.X + 10f' p.Y + 10f);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_regexIndexPosition != Point.Empty)              {                  var p = new PointF(_regexIndexPosition.X' _regexIndexPosition.Y + (size.Height * 0.8f));                    e.Graphics.DrawLine(new Pen(Color.Black' 5)' p.X + 2' p.Y - 2' p.X - 10.5f' p.Y + 10.5f);                  e.Graphics.DrawLine(new Pen(Color.Black' 5)' p.X - 2' p.Y - 2' p.X + 10f' p.Y + 10f);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_regexIndexPosition != Point.Empty)              {                  var p = new PointF(_regexIndexPosition.X' _regexIndexPosition.Y + (size.Height * 0.8f));                    e.Graphics.DrawLine(new Pen(Color.Black' 5)' p.X + 2' p.Y - 2' p.X - 10.5f' p.Y + 10.5f);                  e.Graphics.DrawLine(new Pen(Color.Black' 5)' p.X - 2' p.Y - 2' p.X + 10f' p.Y + 10f);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_regexIndexPosition != Point.Empty)              {                  var p = new PointF(_regexIndexPosition.X' _regexIndexPosition.Y + (size.Height * 0.8f));                    e.Graphics.DrawLine(new Pen(Color.Black' 5)' p.X + 2' p.Y - 2' p.X - 10.5f' p.Y + 10.5f);                  e.Graphics.DrawLine(new Pen(Color.Black' 5)' p.X - 2' p.Y - 2' p.X + 10f' p.Y + 10f);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_regexIndexPosition != Point.Empty)              {                  var p = new PointF(_regexIndexPosition.X' _regexIndexPosition.Y + (size.Height * 0.8f));                    e.Graphics.DrawLine(new Pen(Color.Black' 5)' p.X + 2' p.Y - 2' p.X - 10.5f' p.Y + 10.5f);                  e.Graphics.DrawLine(new Pen(Color.Black' 5)' p.X - 2' p.Y - 2' p.X + 10f' p.Y + 10f);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_currentIndexPosition != Point.Empty)              {                  var p = new PointF(_currentIndexPosition.X' _currentIndexPosition.Y + (size.Height * 0.8f));                    e.Graphics.DrawLine(new Pen(Color.Red' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                  e.Graphics.DrawLine(new Pen(Color.Red' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_currentIndexPosition != Point.Empty)              {                  var p = new PointF(_currentIndexPosition.X' _currentIndexPosition.Y + (size.Height * 0.8f));                    e.Graphics.DrawLine(new Pen(Color.Red' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                  e.Graphics.DrawLine(new Pen(Color.Red' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_currentIndexPosition != Point.Empty)              {                  var p = new PointF(_currentIndexPosition.X' _currentIndexPosition.Y + (size.Height * 0.8f));                    e.Graphics.DrawLine(new Pen(Color.Red' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                  e.Graphics.DrawLine(new Pen(Color.Red' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_currentIndexPosition != Point.Empty)              {                  var p = new PointF(_currentIndexPosition.X' _currentIndexPosition.Y + (size.Height * 0.8f));                    e.Graphics.DrawLine(new Pen(Color.Red' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                  e.Graphics.DrawLine(new Pen(Color.Red' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_currentIndexPosition != Point.Empty)              {                  var p = new PointF(_currentIndexPosition.X' _currentIndexPosition.Y + (size.Height * 0.8f));                    e.Graphics.DrawLine(new Pen(Color.Red' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                  e.Graphics.DrawLine(new Pen(Color.Red' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_currentIndexPosition != Point.Empty)              {                  var p = new PointF(_currentIndexPosition.X' _currentIndexPosition.Y + (size.Height * 0.8f));                    e.Graphics.DrawLine(new Pen(Color.Red' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                  e.Graphics.DrawLine(new Pen(Color.Red' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_lookAroundIndexPosition != Point.Empty)              {                  var p = new PointF(_lookAroundIndexPosition.X' _lookAroundIndexPosition.Y + (size.Height * 0.7f));                    e.Graphics.DrawLine(new Pen(Color.MediumPurple' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                  e.Graphics.DrawLine(new Pen(Color.MediumPurple' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_lookAroundIndexPosition != Point.Empty)              {                  var p = new PointF(_lookAroundIndexPosition.X' _lookAroundIndexPosition.Y + (size.Height * 0.7f));                    e.Graphics.DrawLine(new Pen(Color.MediumPurple' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                  e.Graphics.DrawLine(new Pen(Color.MediumPurple' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_lookAroundIndexPosition != Point.Empty)              {                  var p = new PointF(_lookAroundIndexPosition.X' _lookAroundIndexPosition.Y + (size.Height * 0.7f));                    e.Graphics.DrawLine(new Pen(Color.MediumPurple' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                  e.Graphics.DrawLine(new Pen(Color.MediumPurple' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_lookAroundIndexPosition != Point.Empty)              {                  var p = new PointF(_lookAroundIndexPosition.X' _lookAroundIndexPosition.Y + (size.Height * 0.7f));                    e.Graphics.DrawLine(new Pen(Color.MediumPurple' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                  e.Graphics.DrawLine(new Pen(Color.MediumPurple' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_lookAroundIndexPosition != Point.Empty)              {                  var p = new PointF(_lookAroundIndexPosition.X' _lookAroundIndexPosition.Y + (size.Height * 0.7f));                    e.Graphics.DrawLine(new Pen(Color.MediumPurple' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                  e.Graphics.DrawLine(new Pen(Color.MediumPurple' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,TxtInputOnPaint,The following statement contains a magic number: if (_lookAroundIndexPosition != Point.Empty)              {                  var p = new PointF(_lookAroundIndexPosition.X' _lookAroundIndexPosition.Y + (size.Height * 0.7f));                    e.Graphics.DrawLine(new Pen(Color.MediumPurple' 3)' p.X + 1' p.Y - 1' p.X - 10' p.Y + 10);                  e.Graphics.DrawLine(new Pen(Color.MediumPurple' 3)' p.X - 1' p.Y - 1' p.X + 10' p.Y + 10);              }
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.compileMenuStrip.Size = new System.Drawing.Size(137' 70);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.compileMenuStrip.Size = new System.Drawing.Size(137' 70);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ignoreCaseToolStripMenuItem.Size = new System.Drawing.Size(136' 22);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ignoreCaseToolStripMenuItem.Size = new System.Drawing.Size(136' 22);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.singleLineToolStripMenuItem.Size = new System.Drawing.Size(136' 22);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.singleLineToolStripMenuItem.Size = new System.Drawing.Size(136' 22);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.multiLineToolStripMenuItem.Size = new System.Drawing.Size(136' 22);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.multiLineToolStripMenuItem.Size = new System.Drawing.Size(136' 22);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnCompile.Location = new System.Drawing.Point(856' 11);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnCompile.Location = new System.Drawing.Point(856' 11);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnCompile.Margin = new System.Windows.Forms.Padding(2);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnCompile.Size = new System.Drawing.Size(141' 41);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnCompile.Size = new System.Drawing.Size(141' 41);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer2.Margin = new System.Windows.Forms.Padding(2);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer2.Size = new System.Drawing.Size(986' 597);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer2.Size = new System.Drawing.Size(986' 597);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer2.SplitterDistance = 64;
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer2.TabIndex = 6;
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnParse.Location = new System.Drawing.Point(845' 0);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnParse.Margin = new System.Windows.Forms.Padding(2);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnParse.Size = new System.Drawing.Size(141' 41);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnParse.Size = new System.Drawing.Size(141' 41);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.parseMenuStrip.Size = new System.Drawing.Size(61' 4);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.parseMenuStrip.Size = new System.Drawing.Size(61' 4);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.txtInput.Size = new System.Drawing.Size(841' 64);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.txtInput.Size = new System.Drawing.Size(841' 64);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer3.Size = new System.Drawing.Size(986' 529);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer3.Size = new System.Drawing.Size(986' 529);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer3.SplitterDistance = 360;
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.tvRegex.Size = new System.Drawing.Size(360' 529);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.tvRegex.Size = new System.Drawing.Size(360' 529);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.lvMessages.Size = new System.Drawing.Size(622' 529);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.lvMessages.Size = new System.Drawing.Size(622' 529);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeaderIndex.Width = 25;
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeaderType.Width = 25;
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeaderNodeType.Width = 25;
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeaderPattern.Width = 25;
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.columnHeaderMessage.Width = 25;
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Location = new System.Drawing.Point(11' 54);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Location = new System.Drawing.Point(11' 54);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Margin = new System.Windows.Forms.Padding(2);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(986' 665);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.Size = new System.Drawing.Size(986' 665);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.SplitterDistance = 64;
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.splitContainer1.TabIndex = 7;
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.lblMessage.Size = new System.Drawing.Size(986' 64);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.lblMessage.Size = new System.Drawing.Size(986' 64);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.txtPattern.Location = new System.Drawing.Point(11' 11);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.txtPattern.Location = new System.Drawing.Point(11' 11);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.txtPattern.Margin = new System.Windows.Forms.Padding(2);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.txtPattern.Size = new System.Drawing.Size(841' 39);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.txtPattern.Size = new System.Drawing.Size(841' 39);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1008' 730);
Magic Number,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(1008' 730);
Missing Default,RegExpose.UI,MainForm,C:\repos\QuickenLoans_RegExpose\RegExpose.UI\MainForm.cs,LoadSteps,The following switch statement is missing a default case: switch (step.Type)                  {                      case ParseStepType.BeginParse:                          if (step.Node is Regex)                          {                              regexIndex = step.InitialState.Index;                          }                          break;                      case ParseStepType.StateSaved:                          savedStates.Push(step.CurrentState.Index);                          break;                      case ParseStepType.Match:                          savedStates.Clear();                          currentLookaroundIndex = -1;                          break;                      case ParseStepType.ResetIndex:                          currentIndex = step.InitialState.Index;                          currentLookaroundIndex = -1;                          break;                      case ParseStepType.AdvanceIndex:                          currentIndex = step.CurrentState.Index;                          currentLookaroundIndex = -1;                            if (step.Node is Regex)                          {                              regexIndex = step.CurrentState.Index;                          }                          break;                      case ParseStepType.Backtrack:                          currentIndex = savedStates.Pop();                          break;                      case ParseStepType.LookaroundStart:                      case ParseStepType.LookaroundResetIndex:                      case ParseStepType.LookaroundAdvanceIndex:                          currentLookaroundIndex = step.CurrentState.Index;                          break;                      case ParseStepType.LookaroundEnd:                          currentLookaroundIndex = -1;                          break;                  }
