Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ServiceStack.ServiceClient.Web,AsyncServiceClient,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\AsyncServiceClient.cs,SendAsync,The method has 5 parameters. Parameters: httpMethod' absoluteUrl' request' onSuccess' onError
Long Parameter List,ServiceStack.ServiceClient.Web,AsyncServiceClient,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\AsyncServiceClient.cs,SendWebRequest,The method has 5 parameters. Parameters: httpMethod' absoluteUrl' request' onSuccess' onError
Long Statement,ServiceStack.ServiceClient.Web,WebRequestUtils,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\WebRequestUtils.cs,CreateCustomException,The length of the statement  "					string.Format("Invalid remote SSL certificate' overide with: \nServicePointManager.ServerCertificateValidationCallback += ((sender' certificate' chain' sslPolicyErrors) => isValidPolicy);")' " is 190.
Complex Conditional,ServiceStack.Text,QueryStringSerializer,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\ServiceStack.Text\QueryStringSerializer.cs,UrlEncode,The conditional expression  "charCode >= 65 && charCode <= 90		// A-Z  					|| charCode >= 97 && charCode <= 122    // a-z  					|| charCode >= 48 && charCode <= 57		// 0-9  					|| charCode == 45						// -   					|| charCode == 46"  is complex.
Magic Number,ServiceStack.ServiceClient.Web,AsyncServiceClient,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\AsyncServiceClient.cs,AsyncServiceClient,The following statement contains a magic number: this.Timeout = TimeSpan.FromSeconds(60);
Magic Number,ServiceStack.Text,QueryStringSerializer,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\ServiceStack.Text\QueryStringSerializer.cs,SerializeToString,The following statement contains a magic number: var sb = new StringBuilder(4096);
Magic Number,ServiceStack.Text,QueryStringSerializer,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\ServiceStack.Text\QueryStringSerializer.cs,UrlEncode,The following statement contains a magic number: for (var i = 0; i < textLength; i++)  			{  				var c = text.Substring(i' 1);  				int charCode = text[i];    				if (  					charCode >= 65 && charCode <= 90		// A-Z  					|| charCode >= 97 && charCode <= 122    // a-z  					|| charCode >= 48 && charCode <= 57		// 0-9  					|| charCode == 45						// -   					|| charCode == 46						// .  					)  				{  					sb.Append(c);  				}  				else  				{  					sb.Append('%' + charCode.ToString("x"));  				}  			}
Magic Number,ServiceStack.Text,QueryStringSerializer,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\ServiceStack.Text\QueryStringSerializer.cs,UrlEncode,The following statement contains a magic number: for (var i = 0; i < textLength; i++)  			{  				var c = text.Substring(i' 1);  				int charCode = text[i];    				if (  					charCode >= 65 && charCode <= 90		// A-Z  					|| charCode >= 97 && charCode <= 122    // a-z  					|| charCode >= 48 && charCode <= 57		// 0-9  					|| charCode == 45						// -   					|| charCode == 46						// .  					)  				{  					sb.Append(c);  				}  				else  				{  					sb.Append('%' + charCode.ToString("x"));  				}  			}
Magic Number,ServiceStack.Text,QueryStringSerializer,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\ServiceStack.Text\QueryStringSerializer.cs,UrlEncode,The following statement contains a magic number: for (var i = 0; i < textLength; i++)  			{  				var c = text.Substring(i' 1);  				int charCode = text[i];    				if (  					charCode >= 65 && charCode <= 90		// A-Z  					|| charCode >= 97 && charCode <= 122    // a-z  					|| charCode >= 48 && charCode <= 57		// 0-9  					|| charCode == 45						// -   					|| charCode == 46						// .  					)  				{  					sb.Append(c);  				}  				else  				{  					sb.Append('%' + charCode.ToString("x"));  				}  			}
Magic Number,ServiceStack.Text,QueryStringSerializer,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\ServiceStack.Text\QueryStringSerializer.cs,UrlEncode,The following statement contains a magic number: for (var i = 0; i < textLength; i++)  			{  				var c = text.Substring(i' 1);  				int charCode = text[i];    				if (  					charCode >= 65 && charCode <= 90		// A-Z  					|| charCode >= 97 && charCode <= 122    // a-z  					|| charCode >= 48 && charCode <= 57		// 0-9  					|| charCode == 45						// -   					|| charCode == 46						// .  					)  				{  					sb.Append(c);  				}  				else  				{  					sb.Append('%' + charCode.ToString("x"));  				}  			}
Magic Number,ServiceStack.Text,QueryStringSerializer,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\ServiceStack.Text\QueryStringSerializer.cs,UrlEncode,The following statement contains a magic number: for (var i = 0; i < textLength; i++)  			{  				var c = text.Substring(i' 1);  				int charCode = text[i];    				if (  					charCode >= 65 && charCode <= 90		// A-Z  					|| charCode >= 97 && charCode <= 122    // a-z  					|| charCode >= 48 && charCode <= 57		// 0-9  					|| charCode == 45						// -   					|| charCode == 46						// .  					)  				{  					sb.Append(c);  				}  				else  				{  					sb.Append('%' + charCode.ToString("x"));  				}  			}
Magic Number,ServiceStack.Text,QueryStringSerializer,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\ServiceStack.Text\QueryStringSerializer.cs,UrlEncode,The following statement contains a magic number: for (var i = 0; i < textLength; i++)  			{  				var c = text.Substring(i' 1);  				int charCode = text[i];    				if (  					charCode >= 65 && charCode <= 90		// A-Z  					|| charCode >= 97 && charCode <= 122    // a-z  					|| charCode >= 48 && charCode <= 57		// 0-9  					|| charCode == 45						// -   					|| charCode == 46						// .  					)  				{  					sb.Append(c);  				}  				else  				{  					sb.Append('%' + charCode.ToString("x"));  				}  			}
Magic Number,ServiceStack.Text,QueryStringSerializer,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\ServiceStack.Text\QueryStringSerializer.cs,UrlEncode,The following statement contains a magic number: for (var i = 0; i < textLength; i++)  			{  				var c = text.Substring(i' 1);  				int charCode = text[i];    				if (  					charCode >= 65 && charCode <= 90		// A-Z  					|| charCode >= 97 && charCode <= 122    // a-z  					|| charCode >= 48 && charCode <= 57		// 0-9  					|| charCode == 45						// -   					|| charCode == 46						// .  					)  				{  					sb.Append(c);  				}  				else  				{  					sb.Append('%' + charCode.ToString("x"));  				}  			}
Magic Number,ServiceStack.Text,QueryStringSerializer,C:\repos\ServiceStackV3_ServiceStack.Contrib\src\ServiceStack.Client\ServiceStack.Text\QueryStringSerializer.cs,UrlEncode,The following statement contains a magic number: for (var i = 0; i < textLength; i++)  			{  				var c = text.Substring(i' 1);  				int charCode = text[i];    				if (  					charCode >= 65 && charCode <= 90		// A-Z  					|| charCode >= 97 && charCode <= 122    // a-z  					|| charCode >= 48 && charCode <= 57		// 0-9  					|| charCode == 45						// -   					|| charCode == 46						// .  					)  				{  					sb.Append(c);  				}  				else  				{  					sb.Append('%' + charCode.ToString("x"));  				}  			}
