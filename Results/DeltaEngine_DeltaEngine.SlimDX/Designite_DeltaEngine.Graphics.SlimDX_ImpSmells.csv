Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DeltaEngine.Graphics.SlimDX,SlimDXDevice,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXDevice.cs,SetBlendMode,Cyclomatic complexity of the method is 18
Complex Method,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,CreateVertexDeclaration,Cyclomatic complexity of the method is 11
Long Parameter List,DeltaEngine.Graphics.SlimDX,SlimDXCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXCircularBuffer.cs,AddDataNative,The method has 5 parameters.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXGeometry,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXGeometry.cs,Draw,The length of the statement  "	nativeDevice.DrawIndexedPrimitives (PrimitiveType.TriangleList' 0' 0' NumberOfVertices' 0' NumberOfIndices / VerticesPerTriangle); " is 130.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXCircularBuffer.cs,CreateNativeVertexBuffer,The length of the statement  "	nativeVertexBuffer = new VertexBufferD3D9 (nativeDevice' maxNumberOfVertices * vertexSize' Usage.Dynamic' VertexFormatD3D9.None' Pool.Default); " is 143.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXCircularBuffer.cs,CreateNativeIndexBuffer,The length of the statement  "	nativeIndexBuffer = new IndexBufferD3D9 (nativeDevice' maxNumberOfIndices * indexSize' Usage.Dynamic' Pool.Default' true); " is 122.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXCircularBuffer,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXCircularBuffer.cs,DrawChunkWithIndices,The length of the statement  "	nativeDevice.DrawIndexedPrimitives (PrimitiveType.TriangleList' 0' 0' totalVerticesCount' chunk.FirstIndexOffsetInBytes / indexSize' chunk.NumberOfIndices / VerticesPerTriangle); " is 178.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXDevice,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXDevice.cs,InitializeDevice,The length of the statement  "	NativeDevice = new SlimD3D9.Device (d3D' 0' DeviceType.Hardware' window.Handle' CreateFlags.HardwareVertexProcessing' GetPresentParameters ()); " is 143.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXDevice,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXDevice.cs,ClearScreenAndBeginScene,The length of the statement  "	var slimDXColor = new Color4 (window.BackgroundColor.AlphaValue' window.BackgroundColor.RedValue' window.BackgroundColor.GreenValue' window.BackgroundColor.BlueValue); " is 167.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,GetVertexPosition3D,The length of the statement  "	return new VertexElementD3D9 (0' (short)offset' DeclarationType.Float3' DeclarationMethod.Default' DeclarationUsage.Position' 0); " is 129.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,GetVertexNormal,The length of the statement  "	return new VertexElementD3D9 (0' (short)offset' DeclarationType.Float3' DeclarationMethod.Default' DeclarationUsage.Normal' 0); " is 127.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,GetVertexPosition2D,The length of the statement  "	return new VertexElementD3D9 (0' (short)offset' DeclarationType.Float2' DeclarationMethod.Default' DeclarationUsage.Position' 0); " is 129.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,GetVertexColor,The length of the statement  "	return new VertexElementD3D9 (0' (short)offset' DeclarationType.Color' DeclarationMethod.Default' DeclarationUsage.Color' 0); " is 125.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,GetVertexTextureCoordinate,The length of the statement  "	return new VertexElementD3D9 (0' (short)offset' DeclarationType.Float2' DeclarationMethod.Default' DeclarationUsage.TextureCoordinate' 0); " is 138.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,GetVertexLightMapUV,The length of the statement  "	return new VertexElementD3D9 (0' (short)offset' DeclarationType.Float2' DeclarationMethod.Default' DeclarationUsage.TextureCoordinate' 1); " is 138.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,GetVertexSkindIndices,The length of the statement  "	return new VertexElementD3D9 (0' (short)offset' DeclarationType.Float2' DeclarationMethod.Default' DeclarationUsage.BlendIndices' 0); " is 133.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,GetVertexSkindWeights,The length of the statement  "	return new VertexElementD3D9 (0' (short)offset' DeclarationType.Float2' DeclarationMethod.Default' DeclarationUsage.BlendWeight' 0); " is 132.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FillRgbaData,The length of the statement  "		NativeTexture = new Texture (device.NativeDevice' (int)PixelSize.Width' (int)PixelSize.Height' 1' Usage.None' Format.A8R8G8B8' Pool.Managed); " is 141.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,SetTextureAndSamplerState,The length of the statement  "	device.NativeDevice.SetSamplerState (textureNumber' SamplerState.MinFilter' DisableLinearFiltering ? TextureFilter.Point : TextureFilter.Linear); " is 145.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,SetTextureAndSamplerState,The length of the statement  "	device.NativeDevice.SetSamplerState (textureNumber' SamplerState.MagFilter' DisableLinearFiltering ? TextureFilter.Point : TextureFilter.Linear); " is 145.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,SetTextureAndSamplerState,The length of the statement  "	device.NativeDevice.SetSamplerState (textureNumber' SamplerState.AddressU' AllowTiling ? TextureAddress.Wrap : TextureAddress.Clamp); " is 133.
Long Statement,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,SetTextureAndSamplerState,The length of the statement  "	device.NativeDevice.SetSamplerState (textureNumber' SamplerState.AddressV' AllowTiling ? TextureAddress.Wrap : TextureAddress.Clamp); " is 133.
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXDevice,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXDevice.cs,GetDepthBufferFormat,The following statement contains a magic number: switch (settings.DepthBufferBits) {  case 16:  	return Format.D16;  case 32:  	return Format.D32;  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXDevice,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXDevice.cs,GetDepthBufferFormat,The following statement contains a magic number: switch (settings.DepthBufferBits) {  case 16:  	return Format.D16;  case 32:  	return Format.D32;  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXDevice,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXDevice.cs,GetAntiAliasingType,The following statement contains a magic number: switch (settings.AntiAliasingSamples) {  case 2:  	return MultisampleType.TwoSamples;  case 3:  	return MultisampleType.ThreeSamples;  case 4:  	return MultisampleType.FourSamples;  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXDevice,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXDevice.cs,GetAntiAliasingType,The following statement contains a magic number: switch (settings.AntiAliasingSamples) {  case 2:  	return MultisampleType.TwoSamples;  case 3:  	return MultisampleType.ThreeSamples;  case 4:  	return MultisampleType.FourSamples;  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXDevice,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXDevice.cs,GetAntiAliasingType,The following statement contains a magic number: switch (settings.AntiAliasingSamples) {  case 2:  	return MultisampleType.TwoSamples;  case 3:  	return MultisampleType.ThreeSamples;  case 4:  	return MultisampleType.FourSamples;  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,SetVertexShaderConstant,The following statement contains a magic number: IncrementVertexShaderRegister (16);  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,IncrementVertexShaderRegister,The following statement contains a magic number: vertexShaderCurrentRegister += numberOfFloats / 4;  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,SetJointMatrices,The following statement contains a magic number: for (int i = 0; i < 32; i++) {  	Matrix m = i < jointMatrices.Length ? jointMatrices [i] : Matrix.Identity;  	SetVertexShaderConstant (Matrix.Transpose (m));  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,SetVertexShaderConstant,The following statement contains a magic number: IncrementVertexShaderRegister (4);  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,SetPixelShaderConstant,The following statement contains a magic number: IncrementPixelShaderRegister (4);  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,IncrementPixelShaderRegister,The following statement contains a magic number: pixelShaderCurrentRegister += numberOfFloats / 4;  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,SetPixelShaderConstants,The following statement contains a magic number: IncrementPixelShaderRegister (4);  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,ApplyFogSettings,The following statement contains a magic number: IncrementVertexShaderRegister (-4);  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,SetVertexShaderConstant,The following statement contains a magic number: IncrementVertexShaderRegister (4);  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXShader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXShader.cs,SetVertexShaderConstants,The following statement contains a magic number: IncrementVertexShaderRegister (4);  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FillRgbaData,The following statement contains a magic number: if (PixelSize.Width * PixelSize.Height * 4 != rgbaColors.Length)  	throw new InvalidNumberOfBytes (PixelSize);  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FlipRgbaToBgra,The following statement contains a magic number: for (int i = 0; i < rgbaColors.Length / 4; i++) {  	var swap = rgbaColors [i * 4];  	rgbaColors [i * 4] = rgbaColors [i * 4 + 2];  	rgbaColors [i * 4 + 2] = swap;  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FlipRgbaToBgra,The following statement contains a magic number: for (int i = 0; i < rgbaColors.Length / 4; i++) {  	var swap = rgbaColors [i * 4];  	rgbaColors [i * 4] = rgbaColors [i * 4 + 2];  	rgbaColors [i * 4 + 2] = swap;  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FlipRgbaToBgra,The following statement contains a magic number: for (int i = 0; i < rgbaColors.Length / 4; i++) {  	var swap = rgbaColors [i * 4];  	rgbaColors [i * 4] = rgbaColors [i * 4 + 2];  	rgbaColors [i * 4 + 2] = swap;  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FlipRgbaToBgra,The following statement contains a magic number: for (int i = 0; i < rgbaColors.Length / 4; i++) {  	var swap = rgbaColors [i * 4];  	rgbaColors [i * 4] = rgbaColors [i * 4 + 2];  	rgbaColors [i * 4 + 2] = swap;  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FlipRgbaToBgra,The following statement contains a magic number: for (int i = 0; i < rgbaColors.Length / 4; i++) {  	var swap = rgbaColors [i * 4];  	rgbaColors [i * 4] = rgbaColors [i * 4 + 2];  	rgbaColors [i * 4 + 2] = swap;  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FlipRgbaToBgra,The following statement contains a magic number: for (int i = 0; i < rgbaColors.Length / 4; i++) {  	var swap = rgbaColors [i * 4];  	rgbaColors [i * 4] = rgbaColors [i * 4 + 2];  	rgbaColors [i * 4 + 2] = swap;  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FlipRgbaToBgra,The following statement contains a magic number: for (int i = 0; i < rgbaColors.Length / 4; i++) {  	var swap = rgbaColors [i * 4];  	rgbaColors [i * 4] = rgbaColors [i * 4 + 2];  	rgbaColors [i * 4 + 2] = swap;  }  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FlipRgbaToBgra,The following statement contains a magic number: rgbaColors [i * 4] = rgbaColors [i * 4 + 2];  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FlipRgbaToBgra,The following statement contains a magic number: rgbaColors [i * 4] = rgbaColors [i * 4 + 2];  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FlipRgbaToBgra,The following statement contains a magic number: rgbaColors [i * 4] = rgbaColors [i * 4 + 2];  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FlipRgbaToBgra,The following statement contains a magic number: rgbaColors [i * 4 + 2] = swap;  
Magic Number,DeltaEngine.Graphics.SlimDX,SlimDXImage,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXImage.cs,FlipRgbaToBgra,The following statement contains a magic number: rgbaColors [i * 4 + 2] = swap;  
Missing Default,DeltaEngine.Graphics.SlimDX,SlimDXDevice,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXDevice.cs,GetDepthBufferFormat,The following switch statement is missing a default case: switch (settings.DepthBufferBits) {  case 16:  	return Format.D16;  case 32:  	return Format.D32;  }  
Missing Default,DeltaEngine.Graphics.SlimDX,SlimDXDevice,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXDevice.cs,GetAntiAliasingType,The following switch statement is missing a default case: switch (settings.AntiAliasingSamples) {  case 2:  	return MultisampleType.TwoSamples;  case 3:  	return MultisampleType.ThreeSamples;  case 4:  	return MultisampleType.FourSamples;  }  
Missing Default,DeltaEngine.Graphics.SlimDX,SlimDXDevice,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Graphics\SlimDX\SlimDXDevice.cs,SetBlendMode,The following switch statement is missing a default case: switch (blendMode) {  case BlendMode.Opaque:  	SetupBlendRenderStateModeOpaque ();  	break;  case BlendMode.Normal:  	SetupBlendRenderStateModeNormal ();  	break;  case BlendMode.AlphaTest:  	SetupBlendRenderStateModeAlphaTest ();  	break;  case BlendMode.Additive:  	SetupBlendRenderStateModeAdditive ();  	break;  case BlendMode.Subtractive:  	SetupBlendRenderStateModeSubtractive ();  	break;  case BlendMode.LightEffect:  	SetupBlendRenderStateModeLightEffect ();  	break;  }  
