Implementation smell,Namespace,Class,File,Method,Description
Magic Number,DeltaEngine.Multimedia.SlimDX,SlimDXVideo,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Multimedia\SlimDX\SlimDXVideo.cs,LoadData,The following statement contains a magic number: try {  	video = new VideoStreamFactory ().Load (fileData' "Content/" + Name);  	source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat {  		SamplesPerSecond = video.Samplerate'  		BitsPerSample = 16'  		Channels = (short)video.Channels'  		BlockAlignment = (short)(2 * video.Channels)  	});  }  catch (Exception ex) {  	if (Debugger.IsAttached)  		throw new VideoNotFoundOrAccessible (Name' ex);  }  
Magic Number,DeltaEngine.Multimedia.SlimDX,SlimDXVideo,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Multimedia\SlimDX\SlimDXVideo.cs,LoadData,The following statement contains a magic number: try {  	video = new VideoStreamFactory ().Load (fileData' "Content/" + Name);  	source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat {  		SamplesPerSecond = video.Samplerate'  		BitsPerSample = 16'  		Channels = (short)video.Channels'  		BlockAlignment = (short)(2 * video.Channels)  	});  }  catch (Exception ex) {  	if (Debugger.IsAttached)  		throw new VideoNotFoundOrAccessible (Name' ex);  }  
Magic Number,DeltaEngine.Multimedia.SlimDX,SlimDXVideo,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Multimedia\SlimDX\SlimDXVideo.cs,LoadData,The following statement contains a magic number: source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat {  	SamplesPerSecond = video.Samplerate'  	BitsPerSample = 16'  	Channels = (short)video.Channels'  	BlockAlignment = (short)(2 * video.Channels)  });  
Magic Number,DeltaEngine.Multimedia.SlimDX,SlimDXVideo,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Multimedia\SlimDX\SlimDXVideo.cs,LoadData,The following statement contains a magic number: source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat {  	SamplesPerSecond = video.Samplerate'  	BitsPerSample = 16'  	Channels = (short)video.Channels'  	BlockAlignment = (short)(2 * video.Channels)  });  
Magic Number,DeltaEngine.Multimedia.SlimDX,SlimDXVideo,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Multimedia\SlimDX\SlimDXVideo.cs,PutInStreamIfDataAvailable,The following statement contains a magic number: try {  	var bufferData = new byte[4096];  	video.ReadMusicBytes (bufferData' bufferData.Length);  	var bufferStream = new MemoryStream (bufferData);  	currentBuffer.AudioData = bufferStream;  	currentBuffer.AudioBytes = bufferData.Length;  	int blockAlign = video.Channels * 2;  	currentBuffer.PlayLength = bufferData.Length / blockAlign;  }  catch {  	isAbleToStream = false;  	return;  }  
Magic Number,DeltaEngine.Multimedia.SlimDX,SlimDXVideo,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Multimedia\SlimDX\SlimDXVideo.cs,PutInStreamIfDataAvailable,The following statement contains a magic number: try {  	var bufferData = new byte[4096];  	video.ReadMusicBytes (bufferData' bufferData.Length);  	var bufferStream = new MemoryStream (bufferData);  	currentBuffer.AudioData = bufferStream;  	currentBuffer.AudioBytes = bufferData.Length;  	int blockAlign = video.Channels * 2;  	currentBuffer.PlayLength = bufferData.Length / blockAlign;  }  catch {  	isAbleToStream = false;  	return;  }  
Magic Number,DeltaEngine.Multimedia.SlimDX,XAudioMusic,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Multimedia\SlimDX\XAudioMusic.cs,TryLoadData,The following statement contains a magic number: source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat {  	SamplesPerSecond = musicStream.Samplerate'  	BitsPerSample = 16'  	Channels = (short)musicStream.Channels'  	AverageBytesPerSecond = (musicStream.Samplerate / 16) / 8'  	BlockAlignment = (short)(2 * musicStream.Channels)'  	FormatTag = WaveFormatTag.Pcm  });  
Magic Number,DeltaEngine.Multimedia.SlimDX,XAudioMusic,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Multimedia\SlimDX\XAudioMusic.cs,TryLoadData,The following statement contains a magic number: source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat {  	SamplesPerSecond = musicStream.Samplerate'  	BitsPerSample = 16'  	Channels = (short)musicStream.Channels'  	AverageBytesPerSecond = (musicStream.Samplerate / 16) / 8'  	BlockAlignment = (short)(2 * musicStream.Channels)'  	FormatTag = WaveFormatTag.Pcm  });  
Magic Number,DeltaEngine.Multimedia.SlimDX,XAudioMusic,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Multimedia\SlimDX\XAudioMusic.cs,TryLoadData,The following statement contains a magic number: source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat {  	SamplesPerSecond = musicStream.Samplerate'  	BitsPerSample = 16'  	Channels = (short)musicStream.Channels'  	AverageBytesPerSecond = (musicStream.Samplerate / 16) / 8'  	BlockAlignment = (short)(2 * musicStream.Channels)'  	FormatTag = WaveFormatTag.Pcm  });  
Magic Number,DeltaEngine.Multimedia.SlimDX,XAudioMusic,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Multimedia\SlimDX\XAudioMusic.cs,TryLoadData,The following statement contains a magic number: source = new SourceVoice ((device as XAudioDevice).XAudio' new WaveFormat {  	SamplesPerSecond = musicStream.Samplerate'  	BitsPerSample = 16'  	Channels = (short)musicStream.Channels'  	AverageBytesPerSecond = (musicStream.Samplerate / 16) / 8'  	BlockAlignment = (short)(2 * musicStream.Channels)'  	FormatTag = WaveFormatTag.Pcm  });  
Magic Number,DeltaEngine.Multimedia.SlimDX,XAudioSound,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Multimedia\SlimDX\XAudioSound.cs,PlayInstance,The following statement contains a magic number: soundInstance.SetOutputMatrix (1' 2' new[] {  	left'  	right  });  
