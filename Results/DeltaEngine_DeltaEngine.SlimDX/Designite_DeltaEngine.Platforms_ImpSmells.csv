Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DeltaEngine.Platforms,ProductData,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ProductData.cs,ProductData,The method has 5 parameters.
Long Identifier,DeltaEngine.Platforms,Resolver,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\Resolver.cs,GetHintTextForKnownIssues,The length of the parameter DirectX9NotSupportedFromSlimDX is 30.
Long Identifier,DeltaEngine.Platforms,Resolver,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\Resolver.cs,GetHintTextForKnownIssues,The length of the parameter DirectX11NotSupportedFromSharpDX is 32.
Long Statement,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,CheckApprovalImageAfterFirstFrame,The length of the statement  "	firstFrameApprovalImageFilename = "..\\..\\" + approvalTestName + "." + GetType ().Name.Replace ("Resolver"' "") + ".png"; " is 122.
Long Statement,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,CheckApprovalTestResult,The length of the statement  "		throw new FileNotFoundException ("Unable to approve test as no image was generated and saved after the first frame."' firstFrameApprovalImageFilename); " is 151.
Long Statement,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,CompareImages,The length of the statement  "				ImagesAreDifferent ("Approved image size " + approvedBitmap.Width + "x" + approvedBitmap.Height + " is different from the compare image size: " + compareBitmap.Width + "x" + compareBitmap.Height); " is 196.
Long Statement,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,ImagesAreDifferent,The length of the statement  "	errorMessage = "Approval test failed with " + GetType ().Name + "' resulting image is " + "different from the approved one: " + Path.GetFileName (firstFrameApprovalImageFilename) + "\n" + errorMessage; " is 201.
Long Statement,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,LaunchTortoiseIDiffIfAvailable,The length of the statement  "		Process.Start (TortoiseIDiffFilePath' "/left:\"" + approvedImageFileName + "\" /right:\"" + firstFrameApprovalImageFilename + "\" /showinfo"); " is 142.
Long Statement,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,CompareImageContent,The length of the statement  "	float difference = GetImageDifference (approvedBitmap.Width' approvedBitmap.Height' (byte*)approvedData.Scan0.ToPointer ()' (byte*)compareData.Scan0.ToPointer ()); " is 163.
Long Statement,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,ApprovalTestSucceeded,The length of the statement  "		Console.WriteLine ("Warning: Screenshot is almost equal to approval image' but not pixel perfect' check " + "if the image is still okay.\nKeeping " + firstFrameApprovalImageFilename + " around " + "for manual comparison.\nDifference to approved image: " + difference.ToString ("0.00")); " is 286.
Long Statement,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,ApprovalTestSucceeded,The length of the statement  "	Console.WriteLine ("Approval test succeeded' difference to approved image: " + difference.ToString ("0.00") + "%\nDeleting " + Path.GetFileName (firstFrameApprovalImageFilename)); " is 179.
Long Statement,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetBitmapData,The length of the statement  "	return bitmap.LockBits (new Rectangle (0' 0' bitmap.Width' bitmap.Height)' ImageLockMode.ReadOnly' PixelFormat.Format24bppRgb); " is 127.
Long Statement,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,UseFirstFrameImageAsApprovedImage,The length of the statement  "	Console.WriteLine (Path.GetFileName (approvedImageFileName) + " did not exist and was created from this test. Run again to compare the result."); " is 145.
Long Statement,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,OnTimeout,The length of the statement  "		OnConnectionError ("Content Service Connection " + settings.OnlineServiceIp + ":" + settings.OnlineServicePort + " timed out."); " is 128.
Long Statement,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,MakeSureContentManagerIsReady,The length of the statement  "		Window.ShowMessageBox ("No local content available"' "Unable to continue: " + (connectionError ?? "No content found' please put content in the Content folder")' new[] { " is 168.
Long Statement,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,WaitUntilContentReadyReceivedOrServerErrorHappened,The length of the statement  "	while (!onlineServiceReadyReceived && String.IsNullOrEmpty (connectionError) && ContentLoader.Type == typeof(DeveloperOnlineContentLoader) && timeout > 0) { " is 156.
Long Statement,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,CheckIfAppShouldSleepBecauseOfLimitFramerate,The length of the statement  "	if (Time.CheckEvery (2.0f) && Math.Abs (GlobalTime.Current.Fps - settings.LimitFramerate) > settings.LimitFramerate / 20) " is 121.
Long Statement,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,Dispose,The length of the statement  "	if (!onlineServiceReadyReceived && ContentLoader.current != null && ContentLoader.current.StartedToRequestOnlineContent) " is 120.
Long Statement,DeltaEngine.Platforms,AssemblyTypeLoader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AssemblyTypeLoader.cs,RegisterAllTypesFromAllAssemblies,The length of the statement  "		if (AssemblyExtensions.IsPlatformAssembly (name) || !assembly.IsAllowed () || name == "DeltaEngine.Graphics" || name == "DeltaEngine.Input" || //name == "DeltaEngine.Physics2D" || name == "DeltaEngine.Physics3D" || " is 214.
Long Statement,DeltaEngine.Platforms,AssemblyTypeLoader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AssemblyTypeLoader.cs,RegisterAllTypesFromAllAssemblies,The length of the statement  "		name == "DeltaEngine.Logging" || name == "DeltaEngine.Networking" || name.StartsWith ("DeltaEngine.Content") && !name.EndsWith (".Tests") || name.EndsWith (".Mocks")) " is 166.
Long Statement,DeltaEngine.Platforms,AssemblyTypeLoader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AssemblyTypeLoader.cs,TryLoadAllUnloadedAssemblies,The length of the statement  "	if (AssemblyExtensions.IsManagedAssembly (filePath) && new AssemblyName (name).IsAllowed () && !AssemblyExtensions.IsPlatformAssembly (name) && !name.EndsWith (".Mocks") && !name.EndsWith (".Tests") && assemblies.All (a => a.GetName ().Name != name)) " is 250.
Long Statement,DeltaEngine.Platforms,AssemblyTypeLoader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AssemblyTypeLoader.cs,LoadDependentAssemblies,The length of the statement  "		if (!IsConflictingDependency (dependency) && dependency.IsAllowed () && !dependency.Name.EndsWith (".Mocks") && assemblies.All (loaded => dependency.Name != loaded.GetName ().Name)) " is 181.
Long Statement,DeltaEngine.Platforms,AssemblyTypeLoader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AssemblyTypeLoader.cs,IsTypeResolveable,The length of the statement  "	if (type.IsEnum || type.IsAbstract || type.IsInterface || type.IsValueType || typeof(Exception).IsAssignableFrom (type) || type == typeof(Action) || type == typeof(Action<>) || typeof(MulticastDelegate).IsAssignableFrom (type)) " is 227.
Long Statement,DeltaEngine.Platforms,AssemblyTypeLoader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AssemblyTypeLoader.cs,IsTypeResolveable,The length of the statement  "	if (typeName == "Program" || typeName.StartsWith ("<") || typeName.Contains ("`1") || typeName.StartsWith ("#") || typeName.StartsWith ("Mock") || typeName.EndsWith ("Tests")) " is 175.
Long Statement,DeltaEngine.Platforms,ConsoleCommands,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ConsoleCommands.cs,RegisterCommandsFromTypes,The length of the statement  "		var consoleMethods = allMethods.Where (method => method.GetCustomAttributes (typeof(ConsoleCommandAttribute)' true).Any ()).ToList (); " is 134.
Long Statement,DeltaEngine.Platforms,ConsoleCommands,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ConsoleCommands.cs,ExecuteCommand,The length of the statement  "	var method = delegates.FirstOrDefault (d => GetMethodName (d.Method).Equals (commandAndParameters [0]' StringComparison.OrdinalIgnoreCase)); " is 140.
Long Statement,DeltaEngine.Platforms,ConsoleCommands,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ConsoleCommands.cs,ExecuteMethod,The length of the statement  "		return methodParameters.Length == 0 ? InvokeDelegate (method' null) : ExecuteMethodWithParameters (commandParameters' method' methodParameters); " is 144.
Long Statement,DeltaEngine.Platforms,ConsoleCommands,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ConsoleCommands.cs,ExecuteMethod,The length of the statement  "	return "Error: The command has " + methodParameters.Length + " parameter" + plural + "' but you entered " + commandParameters.Count; " is 132.
Long Statement,DeltaEngine.Platforms,Resolver,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\Resolver.cs,RegisterType,The length of the statement  "		return builder.RegisterType (t).AsSelf ().FindConstructorsWith (publicAndNonPublicConstructorFinder).UsingConstructor (contentConstructorSelector); " is 147.
Long Statement,DeltaEngine.Platforms,Resolver,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\Resolver.cs,GetHintTextForKnownIssues,The length of the statement  "		string hintText = "Please verify that your video card supports OpenGL 3.0 or higher and" + " your driver is up to date.\n\n"; " is 125.
Long Statement,DeltaEngine.Platforms,Resolver,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\Resolver.cs,GetHintTextForKnownIssues,The length of the statement  "		string hintText = "Please verify that your video card supports DirectX 9.0c or higher'" + " your driver is up to date and you have installed the latest DirectX runtime.\n\n"; " is 174.
Long Statement,DeltaEngine.Platforms,Resolver,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\Resolver.cs,GetHintTextForKnownIssues,The length of the statement  "		string hintText = "Please verify that your video card supports DirectX 11'" + " your driver is up to date and you have installed the latest DirectX runtime.\n\n"; " is 162.
Complex Conditional,DeltaEngine.Platforms,AssemblyTypeLoader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AssemblyTypeLoader.cs,RegisterAllTypesFromAllAssemblies,The conditional expression  "AssemblyExtensions.IsPlatformAssembly (name) || !assembly.IsAllowed () || name == "DeltaEngine.Graphics" || name == "DeltaEngine.Input" || //name == "DeltaEngine.Physics2D" || name == "DeltaEngine.Physics3D" ||  name == "DeltaEngine.Logging" || name == "DeltaEngine.Networking" || name.StartsWith ("DeltaEngine.Content") && !name.EndsWith (".Tests") || name.EndsWith (".Mocks")"  is complex.
Complex Conditional,DeltaEngine.Platforms,AssemblyTypeLoader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AssemblyTypeLoader.cs,TryLoadAllUnloadedAssemblies,The conditional expression  "AssemblyExtensions.IsManagedAssembly (filePath) && new AssemblyName (name).IsAllowed () && !AssemblyExtensions.IsPlatformAssembly (name) && !name.EndsWith (".Mocks") && !name.EndsWith (".Tests") && assemblies.All (a => a.GetName ().Name != name)"  is complex.
Complex Conditional,DeltaEngine.Platforms,AssemblyTypeLoader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AssemblyTypeLoader.cs,LoadDependentAssemblies,The conditional expression  "!IsConflictingDependency (dependency) && dependency.IsAllowed () && !dependency.Name.EndsWith (".Mocks") && assemblies.All (loaded => dependency.Name != loaded.GetName ().Name)"  is complex.
Complex Conditional,DeltaEngine.Platforms,AssemblyTypeLoader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AssemblyTypeLoader.cs,IsTypeResolveable,The conditional expression  "type.IsEnum || type.IsAbstract || type.IsInterface || type.IsValueType || typeof(Exception).IsAssignableFrom (type) || type == typeof(Action) || type == typeof(Action<>) || typeof(MulticastDelegate).IsAssignableFrom (type)"  is complex.
Complex Conditional,DeltaEngine.Platforms,AssemblyTypeLoader,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AssemblyTypeLoader.cs,IsTypeResolveable,The conditional expression  "typeName == "Program" || typeName.StartsWith ("<") || typeName.Contains ("`1") || typeName.StartsWith ("#") || typeName.StartsWith ("Mock") || typeName.EndsWith ("Tests")"  is complex.
Magic Number,DeltaEngine.Platforms,DownloadContentTooltip,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\DownloadContentTooltip.cs,CreateMessage,The following statement contains a magic number: return new Label {  	AutoSize = true'  	Font = new Font ("Microsoft Sans Serif"' 12f' FontStyle.Regular' GraphicsUnit.Point' 0)'  	Location = new Point (13' 13)'  	Size = new Size (461' 20)'  	TabIndex = 0'  	Text = "No content available. Waiting until OnlineService sends it to us ..."  };  
Magic Number,DeltaEngine.Platforms,DownloadContentTooltip,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\DownloadContentTooltip.cs,CreateMessage,The following statement contains a magic number: return new Label {  	AutoSize = true'  	Font = new Font ("Microsoft Sans Serif"' 12f' FontStyle.Regular' GraphicsUnit.Point' 0)'  	Location = new Point (13' 13)'  	Size = new Size (461' 20)'  	TabIndex = 0'  	Text = "No content available. Waiting until OnlineService sends it to us ..."  };  
Magic Number,DeltaEngine.Platforms,DownloadContentTooltip,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\DownloadContentTooltip.cs,CreateMessage,The following statement contains a magic number: return new Label {  	AutoSize = true'  	Font = new Font ("Microsoft Sans Serif"' 12f' FontStyle.Regular' GraphicsUnit.Point' 0)'  	Location = new Point (13' 13)'  	Size = new Size (461' 20)'  	TabIndex = 0'  	Text = "No content available. Waiting until OnlineService sends it to us ..."  };  
Magic Number,DeltaEngine.Platforms,DownloadContentTooltip,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\DownloadContentTooltip.cs,CreateMessage,The following statement contains a magic number: return new Label {  	AutoSize = true'  	Font = new Font ("Microsoft Sans Serif"' 12f' FontStyle.Regular' GraphicsUnit.Point' 0)'  	Location = new Point (13' 13)'  	Size = new Size (461' 20)'  	TabIndex = 0'  	Text = "No content available. Waiting until OnlineService sends it to us ..."  };  
Magic Number,DeltaEngine.Platforms,DownloadContentTooltip,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\DownloadContentTooltip.cs,CreateWindow,The following statement contains a magic number: ClientSize = new Size (484' 41);  
Magic Number,DeltaEngine.Platforms,DownloadContentTooltip,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\DownloadContentTooltip.cs,CreateWindow,The following statement contains a magic number: ClientSize = new Size (484' 41);  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,ApprovalTestSucceeded,The following statement contains a magic number: if (difference > MaxAllowedImageDifference / 9) {  	Console.WriteLine ("Warning: Screenshot is almost equal to approval image' but not pixel perfect' check " + "if the image is still okay.\nKeeping " + firstFrameApprovalImageFilename + " around " + "for manual comparison.\nDifference to approved image: " + difference.ToString ("0.00"));  	return;  }  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetImageDifference,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		int index = (y * width + x) * 3;  		int blue = compareBytes [index] - approvedBytes [index];  		int green = compareBytes [index + 1] - approvedBytes [index + 1];  		int red = compareBytes [index + 2] - approvedBytes [index + 2];  		int difference = blue * 12 + green * 58 + red * 30;  		if (difference < 0)  			totalDifference -= difference / 255.0f;  		else  			totalDifference += difference / 255.0f;  	}  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetImageDifference,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		int index = (y * width + x) * 3;  		int blue = compareBytes [index] - approvedBytes [index];  		int green = compareBytes [index + 1] - approvedBytes [index + 1];  		int red = compareBytes [index + 2] - approvedBytes [index + 2];  		int difference = blue * 12 + green * 58 + red * 30;  		if (difference < 0)  			totalDifference -= difference / 255.0f;  		else  			totalDifference += difference / 255.0f;  	}  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetImageDifference,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		int index = (y * width + x) * 3;  		int blue = compareBytes [index] - approvedBytes [index];  		int green = compareBytes [index + 1] - approvedBytes [index + 1];  		int red = compareBytes [index + 2] - approvedBytes [index + 2];  		int difference = blue * 12 + green * 58 + red * 30;  		if (difference < 0)  			totalDifference -= difference / 255.0f;  		else  			totalDifference += difference / 255.0f;  	}  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetImageDifference,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		int index = (y * width + x) * 3;  		int blue = compareBytes [index] - approvedBytes [index];  		int green = compareBytes [index + 1] - approvedBytes [index + 1];  		int red = compareBytes [index + 2] - approvedBytes [index + 2];  		int difference = blue * 12 + green * 58 + red * 30;  		if (difference < 0)  			totalDifference -= difference / 255.0f;  		else  			totalDifference += difference / 255.0f;  	}  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetImageDifference,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		int index = (y * width + x) * 3;  		int blue = compareBytes [index] - approvedBytes [index];  		int green = compareBytes [index + 1] - approvedBytes [index + 1];  		int red = compareBytes [index + 2] - approvedBytes [index + 2];  		int difference = blue * 12 + green * 58 + red * 30;  		if (difference < 0)  			totalDifference -= difference / 255.0f;  		else  			totalDifference += difference / 255.0f;  	}  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetImageDifference,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		int index = (y * width + x) * 3;  		int blue = compareBytes [index] - approvedBytes [index];  		int green = compareBytes [index + 1] - approvedBytes [index + 1];  		int red = compareBytes [index + 2] - approvedBytes [index + 2];  		int difference = blue * 12 + green * 58 + red * 30;  		if (difference < 0)  			totalDifference -= difference / 255.0f;  		else  			totalDifference += difference / 255.0f;  	}  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetImageDifference,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	int index = (y * width + x) * 3;  	int blue = compareBytes [index] - approvedBytes [index];  	int green = compareBytes [index + 1] - approvedBytes [index + 1];  	int red = compareBytes [index + 2] - approvedBytes [index + 2];  	int difference = blue * 12 + green * 58 + red * 30;  	if (difference < 0)  		totalDifference -= difference / 255.0f;  	else  		totalDifference += difference / 255.0f;  }  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetImageDifference,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	int index = (y * width + x) * 3;  	int blue = compareBytes [index] - approvedBytes [index];  	int green = compareBytes [index + 1] - approvedBytes [index + 1];  	int red = compareBytes [index + 2] - approvedBytes [index + 2];  	int difference = blue * 12 + green * 58 + red * 30;  	if (difference < 0)  		totalDifference -= difference / 255.0f;  	else  		totalDifference += difference / 255.0f;  }  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetImageDifference,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	int index = (y * width + x) * 3;  	int blue = compareBytes [index] - approvedBytes [index];  	int green = compareBytes [index + 1] - approvedBytes [index + 1];  	int red = compareBytes [index + 2] - approvedBytes [index + 2];  	int difference = blue * 12 + green * 58 + red * 30;  	if (difference < 0)  		totalDifference -= difference / 255.0f;  	else  		totalDifference += difference / 255.0f;  }  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetImageDifference,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	int index = (y * width + x) * 3;  	int blue = compareBytes [index] - approvedBytes [index];  	int green = compareBytes [index + 1] - approvedBytes [index + 1];  	int red = compareBytes [index + 2] - approvedBytes [index + 2];  	int difference = blue * 12 + green * 58 + red * 30;  	if (difference < 0)  		totalDifference -= difference / 255.0f;  	else  		totalDifference += difference / 255.0f;  }  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetImageDifference,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	int index = (y * width + x) * 3;  	int blue = compareBytes [index] - approvedBytes [index];  	int green = compareBytes [index + 1] - approvedBytes [index + 1];  	int red = compareBytes [index + 2] - approvedBytes [index + 2];  	int difference = blue * 12 + green * 58 + red * 30;  	if (difference < 0)  		totalDifference -= difference / 255.0f;  	else  		totalDifference += difference / 255.0f;  }  
Magic Number,DeltaEngine.Platforms,ApproveFirstFrameScreenshot,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\ApproveFirstFrameScreenshot.cs,GetImageDifference,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	int index = (y * width + x) * 3;  	int blue = compareBytes [index] - approvedBytes [index];  	int green = compareBytes [index + 1] - approvedBytes [index + 1];  	int red = compareBytes [index + 2] - approvedBytes [index + 2];  	int difference = blue * 12 + green * 58 + red * 30;  	if (difference < 0)  		totalDifference -= difference / 255.0f;  	else  		totalDifference += difference / 255.0f;  }  
Magic Number,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,WaitUntilContentReadyReceivedOrServerErrorHappened,The following statement contains a magic number: while (!onlineServiceReadyReceived && String.IsNullOrEmpty (connectionError) && ContentLoader.Type == typeof(DeveloperOnlineContentLoader) && timeout > 0) {  	HandleDownloadContentTooltip ();  	Thread.Sleep (10);  	timeout -= 10;  }  
Magic Number,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,WaitUntilContentReadyReceivedOrServerErrorHappened,The following statement contains a magic number: while (!onlineServiceReadyReceived && String.IsNullOrEmpty (connectionError) && ContentLoader.Type == typeof(DeveloperOnlineContentLoader) && timeout > 0) {  	HandleDownloadContentTooltip ();  	Thread.Sleep (10);  	timeout -= 10;  }  
Magic Number,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,WaitUntilContentReadyReceivedOrServerErrorHappened,The following statement contains a magic number: Thread.Sleep (10);  
Magic Number,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,WaitUntilContentReadyReceivedOrServerErrorHappened,The following statement contains a magic number: timeout -= 10;  
Magic Number,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,CheckIfAppShouldSleepBecauseOfLimitFramerate,The following statement contains a magic number: if (settings.LimitFramerate <= 0 || GlobalTime.Current.Milliseconds < 1000)  	return;  
Magic Number,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,CheckIfAppShouldSleepBecauseOfLimitFramerate,The following statement contains a magic number: if (Time.CheckEvery (2.0f) && Math.Abs (GlobalTime.Current.Fps - settings.LimitFramerate) > settings.LimitFramerate / 20)  	sleepDoseEachFrame += (1.0f / settings.LimitFramerate - 1.0f / GlobalTime.Current.Fps) / 2;  
Magic Number,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,CheckIfAppShouldSleepBecauseOfLimitFramerate,The following statement contains a magic number: if (Time.CheckEvery (2.0f) && Math.Abs (GlobalTime.Current.Fps - settings.LimitFramerate) > settings.LimitFramerate / 20)  	sleepDoseEachFrame += (1.0f / settings.LimitFramerate - 1.0f / GlobalTime.Current.Fps) / 2;  
Magic Number,DeltaEngine.Platforms,AppRunner,C:\repos\DeltaEngine_DeltaEngine.SlimDX\Platforms\AppRunner.cs,CheckIfAppShouldSleepBecauseOfLimitFramerate,The following statement contains a magic number: sleepDoseEachFrame += (1.0f / settings.LimitFramerate - 1.0f / GlobalTime.Current.Fps) / 2;  
