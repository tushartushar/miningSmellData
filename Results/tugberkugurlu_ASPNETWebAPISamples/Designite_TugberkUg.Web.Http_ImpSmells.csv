Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,TugberkUg.Web.Http.Formatting,CSVMediaTypeFormatter,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\Formatting\CSVMediaTypeFormatter.cs,OnWriteToStreamAsync,The method has 6 parameters. Parameters: type' value' stream' contentHeaders' formatterContext' transportContext
Long Parameter List,TugberkUg.Web.Http.Formatting,JsonNetFormatter,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\Formatting\JsonNetFormatter.cs,OnWriteToStreamAsync,The method has 6 parameters. Parameters: type' value' stream' contentHeaders' formatterContext' transportContext
Long Parameter List,TugberkUg.Web.Http.Formatting,JsonpMediaTypeFormatter,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\Formatting\JsonpMediaTypeFormatter.cs,OnWriteToStreamAsync,The method has 6 parameters. Parameters: type' value' stream' contentHeaders' formatterContext' transportContext
Long Parameter List,TugberkUg.Web.Http.Formatting,PlainTextFormatter,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\Formatting\PlainTextFormatter.cs,OnWriteToStreamAsync,The method has 6 parameters. Parameters: type' value' stream' contentHeaders' formatterContext' transportContext
Long Identifier,TugberkUg.Web.Http.Internal,FormattingUtilities,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\Internal\FormattingUtilities.cs,,The length of the parameter DelegatingEnumerableGenericType is 31.
Long Identifier,TugberkUg.Web.Http.Internal,FormattingUtilities,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\Internal\FormattingUtilities.cs,,The length of the parameter EnumerableInterfaceGenericType is 30.
Long Statement,TugberkUg.Web.Http,LoggingFormatterSelector,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\LoggingFormatterSelector.cs,SelectReadFormatter,The length of the statement  "            Console.WriteLine("Selecting Read Formatter for type {0} based on formatter context: {1}"' type.Name' descriptFormatterContext); " is 128.
Long Statement,TugberkUg.Web.Http,LoggingFormatterSelector,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\LoggingFormatterSelector.cs,SelectWriteFormatter,The length of the statement  "            Console.WriteLine("Selecting Write Formatter for type {0} based on formatter context: {1}"' type.Name' descriptFormatterContext); " is 129.
Long Statement,TugberkUg.Web.Http,SimpleObjectContent<T>,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\SimpleObjectContent.cs,SerializeToStreamAsync,The length of the statement  "            // FormatterContext is required by XmlMediaTypeFormatter' but is not used by WriteToStreamAsync of XmlMediaTypeFormatter! " is 121.
Long Statement,TugberkUg.Web.Http,SimpleObjectContent<T>,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\SimpleObjectContent.cs,SerializeToStreamAsync,The length of the statement  "            return _formatter.WriteToStreamAsync(typeof(T)' _outboundInstance' stream' this.Headers' new FormatterContext(new MediaTypeHeaderValue("application/bogus")' false)' null); " is 171.
Long Statement,TugberkUg.Web.Http,SimpleObjectContent<T>,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\SimpleObjectContent.cs,ReadAsync,The length of the statement  "                .ContinueWith<object>(streamTask => _formatter.ReadFromStreamAsync(typeof(T)' streamTask.Result' _inboundContent.Headers' new FormatterContext(new MediaTypeHeaderValue("application/bogus")' false))) " is 198.
Long Statement,TugberkUg.Web.Http.Extensions,UriExtensionMappingExtensions,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\Extensions\UriExtensionMappingExtensions.cs,AddMapping,The length of the statement  "            mappings.Add(new UriExtensionMapping { Extension = extension' MediaType = new MediaTypeWithQualityHeaderValue(mediaType) }); " is 124.
Long Statement,TugberkUg.Web.Http.Filters,ApiKeyAuthAttribute,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\Filters\ApiKeyAuthAttribute.cs,skipAuthorization,The length of the statement  "                actionContext.ControllerContext.ControllerDescriptor.GetCustomAttributes<AllowAnonymousAttribute>().Any<AllowAnonymousAttribute>(); " is 131.
Long Statement,TugberkUg.Web.Http.Formatting,JsonNetFormatter,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\Formatting\JsonNetFormatter.cs,OnWriteToStreamAsync,The length of the statement  "                    using (JsonTextWriter jsonTextWriter = new JsonTextWriter(new StreamWriter(stream' Encoding)) { CloseOutput = false }) { " is 120.
Long Statement,TugberkUg.Web.Http.Internal,FormattingUtilities,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\Internal\FormattingUtilities.cs,UnquoteToken,The length of the statement  "            if (token.StartsWith("\""' StringComparison.Ordinal) && token.EndsWith("\""' StringComparison.Ordinal) && token.Length > 1) " is 123.
Magic Number,TugberkUg.Web.Http.Filters,RequireHttpsWebApiAttribute,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\Filters\RequireHttpsWebApiAttribute.cs,OnAuthorization,The following statement contains a magic number: if (request.RequestUri.Scheme != Uri.UriSchemeHttps) {                    HttpResponseMessage response;                    if (request.Method.Equals(HttpMethod.Get)) {                        response = request.CreateResponse(HttpStatusCode.Found);                      UriBuilder uri = new UriBuilder(request.RequestUri);                      uri.Scheme = Uri.UriSchemeHttps;                      uri.Port = 443;                      response.Headers.Location = uri.Uri;                    } else {                        response = request.CreateResponse(HttpStatusCode.InternalServerError);                      response.Content = new StringContent("This request needs to be made via HTTPS.");                  }                    actionContext.Response = response;              }
Magic Number,TugberkUg.Web.Http.Internal,FormattingUtilities,C:\repos\tugberkugurlu_ASPNETWebAPISamples\TugberkUg.Web.Http\src\TugberkUg.Web.Http\Internal\FormattingUtilities.cs,UnquoteToken,The following statement contains a magic number: if (token.StartsWith("\""' StringComparison.Ordinal) && token.EndsWith("\""' StringComparison.Ordinal) && token.Length > 1)              {                  return token.Substring(1' token.Length - 2);              }
