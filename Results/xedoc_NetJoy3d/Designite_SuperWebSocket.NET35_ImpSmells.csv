Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SuperWebSocket.Protocol,WebSocketDataReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketDataReceiveFilter.cs,Filter,Cyclomatic complexity of the method is 12
Complex Method,SuperWebSocket.Protocol,WebSocketHeaderReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketHeaderReceiveFilter.cs,Filter,Cyclomatic complexity of the method is 10
Long Parameter List,SuperWebSocket.Protocol,DraftHybi00Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi00Processor.cs,GetResponseSecurityKey,The method has 5 parameters.
Long Parameter List,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The method has 5 parameters.
Long Parameter List,SuperWebSocket.Protocol,WebSocketDataFrameReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketDataFrameReceiveFilter.cs,AddArraySegment,The method has 5 parameters.
Long Parameter List,SuperWebSocket.Protocol,WebSocketDataFrameReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketDataFrameReceiveFilter.cs,Filter,The method has 5 parameters.
Long Parameter List,SuperWebSocket.Protocol,WebSocketDataReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketDataReceiveFilter.cs,Filter,The method has 5 parameters.
Long Parameter List,SuperWebSocket.Protocol,WebSocketHeaderReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketHeaderReceiveFilter.cs,Filter,The method has 5 parameters.
Long Parameter List,SuperWebSocket.Protocol,WebSocketSecKey3ReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketSecKey3ReceiveFilter.cs,Filter,The method has 5 parameters.
Long Statement,SuperWebSocket,Extensions,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Extensions.cs,IsSimpleType,The length of the statement  "	return type.IsValueType || type.IsPrimitive || m_SimpleTypes.Contains (type) || Convert.GetTypeCode (type) != TypeCode.Object; " is 126.
Long Statement,SuperWebSocket.Protocol,DraftHybi00Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi00Processor.cs,Handshake,The length of the statement  "	if (!session.AppServer.ValidateHandshake (session' session.Items.GetValue<string> (WebSocketConstant.Origin' string.Empty))) " is 124.
Long Statement,SuperWebSocket.Protocol,DraftHybi00Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi00Processor.cs,Handshake,The length of the statement  "	responseBuilder.AppendFormatWithCrCf (WebSocketConstant.ResponseLocationLine' session.UriScheme' session.Host' session.Path); " is 125.
Long Statement,SuperWebSocket.Protocol,DraftHybi00Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi00Processor.cs,Handshake,The length of the statement  "	var subProtocol = session.GetAvailableSubProtocol (session.Items.GetValue<string> (WebSocketConstant.SecWebSocketProtocol' string.Empty)); " is 138.
Long Statement,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,Handshake,The length of the statement  "		secKeyAccept = Convert.ToBase64String (SHA1.Create ().ComputeHash (Encoding.ASCII.GetBytes (secWebSocketKey + m_Magic))); " is 121.
Long Statement,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,Handshake,The length of the statement  "	var subProtocol = session.GetAvailableSubProtocol (session.Items.GetValue<string> (WebSocketConstant.SecWebSocketProtocol' string.Empty)); " is 138.
Long Statement,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendCloseHandshake,The length of the statement  "	byte[] playloadData = new byte[(string.IsNullOrEmpty (closeReason) ? 0 : Encoding.UTF8.GetMaxByteCount (closeReason.Length)) + 2]; " is 130.
Long Statement,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,IsValidCloseCode,The length of the statement  "		if (code == closeCode.NormalClosure || code == closeCode.GoingAway || code == closeCode.ProtocolError || code == closeCode.NotAcceptableData || code == closeCode.TooLargeFrame || code == closeCode.InvalidUTF8) { " is 211.
Long Statement,SuperWebSocket.Protocol,Rfc6455Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\Rfc6455Processor.cs,IsValidCloseCode,The length of the statement  "		if (code == closeCode.NormalClosure || code == closeCode.GoingAway || code == closeCode.ProtocolError || code == closeCode.NotAcceptableData || code == closeCode.TooLargeFrame || code == closeCode.InvalidUTF8 || code == closeCode.ViolatePolicy || code == closeCode.ExtensionNotMatch || code == closeCode.UnexpectedCondition) { " is 326.
Long Statement,SuperWebSocket.Protocol,WebSocketDataReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketDataReceiveFilter.cs,Filter,The length of the statement  "					var commandInfo = new PlainFragment (Encoding.UTF8.GetString (readBuffer' offset + skipByteCount' i - offset - skipByteCount)); " is 127.
Complex Conditional,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,IsValidCloseCode,The conditional expression  "code == closeCode.NormalClosure || code == closeCode.GoingAway || code == closeCode.ProtocolError || code == closeCode.NotAcceptableData || code == closeCode.TooLargeFrame || code == closeCode.InvalidUTF8"  is complex.
Complex Conditional,SuperWebSocket.Protocol,Rfc6455Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\Rfc6455Processor.cs,IsValidCloseCode,The conditional expression  "code == closeCode.NormalClosure || code == closeCode.GoingAway || code == closeCode.ProtocolError || code == closeCode.NotAcceptableData || code == closeCode.TooLargeFrame || code == closeCode.InvalidUTF8 || code == closeCode.ViolatePolicy || code == closeCode.ExtensionNotMatch || code == closeCode.UnexpectedCondition"  is complex.
Magic Number,SuperWebSocket.Command,Close,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Command\Close.cs,ExecuteCommand,The following statement contains a magic number: if (data != null && data.Length > 0) {  	if (data.Length == 1) {  		session.Close (CloseReason.ProtocolError);  		return;  	}  	else {  		var code = data [0] * 256 + data [1];  		if (!session.ProtocolProcessor.IsValidCloseCode (code)) {  			session.Close (CloseReason.ProtocolError);  			return;  		}  		closeStatusCode = code;  		//if (data.Length > 2)  		//{  		//    reasonText = this.Utf8Encoding.GetString(data' 2' data.Length - 2);  		//}  	}  }  
Magic Number,SuperWebSocket.Command,Close,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Command\Close.cs,ExecuteCommand,The following statement contains a magic number: if (data.Length == 1) {  	session.Close (CloseReason.ProtocolError);  	return;  }  else {  	var code = data [0] * 256 + data [1];  	if (!session.ProtocolProcessor.IsValidCloseCode (code)) {  		session.Close (CloseReason.ProtocolError);  		return;  	}  	closeStatusCode = code;  	//if (data.Length > 2)  	//{  	//    reasonText = this.Utf8Encoding.GetString(data' 2' data.Length - 2);  	//}  }  
Magic Number,SuperWebSocket.Command,FragmentCommand,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Command\FragmentCommand.cs,FragmentCommand,The following statement contains a magic number: Utf8Encoding = Encoding.GetEncoding (65001' EncoderFallback.ExceptionFallback' DecoderFallback.ExceptionFallback);  
Magic Number,SuperWebSocket.Command,FragmentCommand,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Command\FragmentCommand.cs,CheckControlFrame,The following statement contains a magic number: if (!frame.FIN || frame.ActualPayloadLength > 125) {  	return false;  }  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeHybi10,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: NormalClosure = 1000;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeHybi10,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: GoingAway = 1001;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeHybi10,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: ProtocolError = 1002;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeHybi10,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: NotAcceptableData = 1003;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeHybi10,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: TooLargeFrame = 1004;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeHybi10,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: InvalidUTF8 = 1007;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeHybi10,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: ViolatePolicy = 1000;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeHybi10,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: ExtensionNotMatch = 1000;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeHybi10,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: UnexpectedCondition = 1000;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeHybi10,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: TLSHandshakeFailure = 1000;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeHybi10,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeHybi10.cs,CloseStatusCodeHybi10,The following statement contains a magic number: NoStatusCode = 1005;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeRfc6455,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: NormalClosure = 1000;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeRfc6455,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: GoingAway = 1001;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeRfc6455,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: ProtocolError = 1002;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeRfc6455,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: NotAcceptableData = 1003;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeRfc6455,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: TooLargeFrame = 1009;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeRfc6455,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: InvalidUTF8 = 1007;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeRfc6455,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: ViolatePolicy = 1008;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeRfc6455,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: ExtensionNotMatch = 1010;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeRfc6455,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: UnexpectedCondition = 1011;  
Magic Number,SuperWebSocket.Protocol,CloseStatusCodeRfc6455,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\CloseStatusCodeRfc6455.cs,CloseStatusCodeRfc6455,The following statement contains a magic number: NoStatusCode = 1005;  
Magic Number,SuperWebSocket.Protocol,DraftHybi00Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi00Processor.cs,SendMessage,The following statement contains a magic number: session.SendRawData (sendBuffer' 0' bytesCount + 2);  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendCloseHandshake,The following statement contains a magic number: if (!string.IsNullOrEmpty (closeReason)) {  	int bytesCount = Encoding.UTF8.GetBytes (closeReason' 0' closeReason.Length' playloadData' 2);  	playloadLength = bytesCount + 2;  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendCloseHandshake,The following statement contains a magic number: if (!string.IsNullOrEmpty (closeReason)) {  	int bytesCount = Encoding.UTF8.GetBytes (closeReason' 0' closeReason.Length' playloadData' 2);  	playloadLength = bytesCount + 2;  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendCloseHandshake,The following statement contains a magic number: playloadLength = bytesCount + 2;  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 126) {  	fragment = new byte[2 + length];  	fragment [1] = (byte)length;  }  else if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: fragment = new byte[2 + length];  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: if (length < 65536) {  	fragment = new byte[4 + length];  	fragment [1] = (byte)126;  	fragment [2] = (byte)(length / 256);  	fragment [3] = (byte)(length % 256);  }  else {  	fragment = new byte[10 + length];  	fragment [1] = (byte)127;  	int left = length;  	int unit = 256;  	for (int i = 9; i > 1; i--) {  		fragment [i] = (byte)(left % unit);  		left = left / unit;  		if (left == 0)  			break;  	}  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: fragment = new byte[4 + length];  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: fragment [1] = (byte)126;  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: fragment [2] = (byte)(length / 256);  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: fragment [2] = (byte)(length / 256);  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: fragment [3] = (byte)(length % 256);  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: fragment [3] = (byte)(length % 256);  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: fragment = new byte[10 + length];  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: fragment [1] = (byte)127;  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,SendPackage,The following statement contains a magic number: for (int i = 9; i > 1; i--) {  	fragment [i] = (byte)(left % unit);  	left = left / unit;  	if (left == 0)  		break;  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,IsValidCloseCode,The following statement contains a magic number: if (code >= 0 && code <= 999)  	return false;  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,IsValidCloseCode,The following statement contains a magic number: if (code >= 1000 && code <= 1999) {  	if (code == closeCode.NormalClosure || code == closeCode.GoingAway || code == closeCode.ProtocolError || code == closeCode.NotAcceptableData || code == closeCode.TooLargeFrame || code == closeCode.InvalidUTF8) {  		return true;  	}  	return false;  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,IsValidCloseCode,The following statement contains a magic number: if (code >= 1000 && code <= 1999) {  	if (code == closeCode.NormalClosure || code == closeCode.GoingAway || code == closeCode.ProtocolError || code == closeCode.NotAcceptableData || code == closeCode.TooLargeFrame || code == closeCode.InvalidUTF8) {  		return true;  	}  	return false;  }  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,IsValidCloseCode,The following statement contains a magic number: if (code >= 2000 && code <= 4999)  	return true;  
Magic Number,SuperWebSocket.Protocol,DraftHybi10Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\DraftHybi10Processor.cs,IsValidCloseCode,The following statement contains a magic number: if (code >= 2000 && code <= 4999)  	return true;  
Magic Number,SuperWebSocket.Protocol,Rfc6455Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\Rfc6455Processor.cs,IsValidCloseCode,The following statement contains a magic number: if (code >= 0 && code <= 999)  	return false;  
Magic Number,SuperWebSocket.Protocol,Rfc6455Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\Rfc6455Processor.cs,IsValidCloseCode,The following statement contains a magic number: if (code >= 1000 && code <= 2999) {  	if (code == closeCode.NormalClosure || code == closeCode.GoingAway || code == closeCode.ProtocolError || code == closeCode.NotAcceptableData || code == closeCode.TooLargeFrame || code == closeCode.InvalidUTF8 || code == closeCode.ViolatePolicy || code == closeCode.ExtensionNotMatch || code == closeCode.UnexpectedCondition) {  		return true;  	}  	return false;  }  
Magic Number,SuperWebSocket.Protocol,Rfc6455Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\Rfc6455Processor.cs,IsValidCloseCode,The following statement contains a magic number: if (code >= 1000 && code <= 2999) {  	if (code == closeCode.NormalClosure || code == closeCode.GoingAway || code == closeCode.ProtocolError || code == closeCode.NotAcceptableData || code == closeCode.TooLargeFrame || code == closeCode.InvalidUTF8 || code == closeCode.ViolatePolicy || code == closeCode.ExtensionNotMatch || code == closeCode.UnexpectedCondition) {  		return true;  	}  	return false;  }  
Magic Number,SuperWebSocket.Protocol,Rfc6455Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\Rfc6455Processor.cs,IsValidCloseCode,The following statement contains a magic number: if (code >= 3000 && code <= 4999)  	return true;  
Magic Number,SuperWebSocket.Protocol,Rfc6455Processor,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\Rfc6455Processor.cs,IsValidCloseCode,The following statement contains a magic number: if (code >= 3000 && code <= 4999)  	return true;  
Magic Number,SuperWebSocket.Protocol,WebSocketDataReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketDataReceiveFilter.cs,Filter,The following statement contains a magic number: if ((m_Type.Value & 0x80) == 0x00) {  	byte lookForByte = 0xFF;  	int i;  	for (i = offset + skipByteCount; i < offset + length; i++) {  		if (readBuffer [i] == lookForByte) {  			rest = length - (i - offset + 1);  			if (BufferSegments.Count <= 0) {  				var commandInfo = new PlainFragment (Encoding.UTF8.GetString (readBuffer' offset + skipByteCount' i - offset - skipByteCount));  				Reset ();  				return commandInfo;  			}  			else {  				AddArraySegment (readBuffer' offset + skipByteCount' i - offset - skipByteCount' false);  				var commandInfo = new PlainFragment (BufferSegments.Decode (Encoding.UTF8));  				Reset ();  				return commandInfo;  			}  		}  	}  	AddArraySegment (readBuffer' offset + skipByteCount' length - skipByteCount' isReusableBuffer);  	return null;  }  else//10000000: Collect protocol data by length   {  	while (!m_Length.HasValue) {  		if (length <= skipByteCount) {  			//No data to read  			return null;  		}  		byte lengthByte = readBuffer [skipByteCount];  		//Closing handshake  		if (lengthByte == 0x00 && m_Type.Value == m_ClosingHandshakeType) {  			Session.Close (CloseReason.ClientClosing);  			return null;  		}  		int thisLength = (int)(lengthByte & 0x7F);  		m_TempLength = m_TempLength * 128 + thisLength;  		skipByteCount++;  		if ((lengthByte & 0x80) != 0x80) {  			m_Length = m_TempLength;  			break;  		}  	}  	int requiredSize = m_Length.Value - BufferSegments.Count;  	int leftSize = length - skipByteCount;  	if (leftSize < requiredSize) {  		AddArraySegment (readBuffer' skipByteCount' length - skipByteCount' isReusableBuffer);  		return null;  	}  	else {  		rest = leftSize - requiredSize;  		if (BufferSegments.Count <= 0) {  			var commandInfo = new PlainFragment (Encoding.UTF8.GetString (readBuffer' offset + skipByteCount' requiredSize));  			Reset ();  			return commandInfo;  		}  		else {  			AddArraySegment (readBuffer' offset + skipByteCount' requiredSize' false);  			var commandInfo = new PlainFragment (BufferSegments.Decode (Encoding.UTF8));  			Reset ();  			return commandInfo;  		}  	}  }  
Magic Number,SuperWebSocket.Protocol,WebSocketDataReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketDataReceiveFilter.cs,Filter,The following statement contains a magic number: while (!m_Length.HasValue) {  	if (length <= skipByteCount) {  		//No data to read  		return null;  	}  	byte lengthByte = readBuffer [skipByteCount];  	//Closing handshake  	if (lengthByte == 0x00 && m_Type.Value == m_ClosingHandshakeType) {  		Session.Close (CloseReason.ClientClosing);  		return null;  	}  	int thisLength = (int)(lengthByte & 0x7F);  	m_TempLength = m_TempLength * 128 + thisLength;  	skipByteCount++;  	if ((lengthByte & 0x80) != 0x80) {  		m_Length = m_TempLength;  		break;  	}  }  
Magic Number,SuperWebSocket.Protocol,WebSocketDataReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketDataReceiveFilter.cs,Filter,The following statement contains a magic number: m_TempLength = m_TempLength * 128 + thisLength;  
Magic Number,SuperWebSocket.Protocol,WebSocketHeaderReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketHeaderReceiveFilter.cs,Filter,The following statement contains a magic number: if (string.IsNullOrEmpty (secWebSocketKey1) && string.IsNullOrEmpty (secWebSocketKey2)) {  	//draft-hixie-thewebsocketprotocol-75  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else if ("6".Equals (secWebSocketVersion))//draft-ietf-hybi-thewebsocketprotocol-06   {  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else {  	//draft-hixie-thewebsocketprotocol-76/draft-ietf-hybi-thewebsocketprotocol-00  	//Read SecWebSocketKey3(8 bytes)  	if (rest == SecKey3Len) {  		webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' rest);  		rest = 0;  		if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  			return HandshakeRequestInfo;  	}  	else if (rest > SecKey3Len) {  		webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' 8);  		rest -= 8;  		if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  			return HandshakeRequestInfo;  	}  	else {  		//rest < 8  		if (rest > 0) {  			AddArraySegment (readBuffer' offset + length - rest' rest' isReusableBuffer);  			rest = 0;  		}  		NextReceiveFilter = new WebSocketSecKey3ReceiveFilter (this);  		return null;  	}  }  
Magic Number,SuperWebSocket.Protocol,WebSocketHeaderReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketHeaderReceiveFilter.cs,Filter,The following statement contains a magic number: if (string.IsNullOrEmpty (secWebSocketKey1) && string.IsNullOrEmpty (secWebSocketKey2)) {  	//draft-hixie-thewebsocketprotocol-75  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else if ("6".Equals (secWebSocketVersion))//draft-ietf-hybi-thewebsocketprotocol-06   {  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else {  	//draft-hixie-thewebsocketprotocol-76/draft-ietf-hybi-thewebsocketprotocol-00  	//Read SecWebSocketKey3(8 bytes)  	if (rest == SecKey3Len) {  		webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' rest);  		rest = 0;  		if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  			return HandshakeRequestInfo;  	}  	else if (rest > SecKey3Len) {  		webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' 8);  		rest -= 8;  		if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  			return HandshakeRequestInfo;  	}  	else {  		//rest < 8  		if (rest > 0) {  			AddArraySegment (readBuffer' offset + length - rest' rest' isReusableBuffer);  			rest = 0;  		}  		NextReceiveFilter = new WebSocketSecKey3ReceiveFilter (this);  		return null;  	}  }  
Magic Number,SuperWebSocket.Protocol,WebSocketHeaderReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketHeaderReceiveFilter.cs,Filter,The following statement contains a magic number: if ("6".Equals (secWebSocketVersion))//draft-ietf-hybi-thewebsocketprotocol-06   {  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else {  	//draft-hixie-thewebsocketprotocol-76/draft-ietf-hybi-thewebsocketprotocol-00  	//Read SecWebSocketKey3(8 bytes)  	if (rest == SecKey3Len) {  		webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' rest);  		rest = 0;  		if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  			return HandshakeRequestInfo;  	}  	else if (rest > SecKey3Len) {  		webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' 8);  		rest -= 8;  		if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  			return HandshakeRequestInfo;  	}  	else {  		//rest < 8  		if (rest > 0) {  			AddArraySegment (readBuffer' offset + length - rest' rest' isReusableBuffer);  			rest = 0;  		}  		NextReceiveFilter = new WebSocketSecKey3ReceiveFilter (this);  		return null;  	}  }  
Magic Number,SuperWebSocket.Protocol,WebSocketHeaderReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketHeaderReceiveFilter.cs,Filter,The following statement contains a magic number: if ("6".Equals (secWebSocketVersion))//draft-ietf-hybi-thewebsocketprotocol-06   {  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else {  	//draft-hixie-thewebsocketprotocol-76/draft-ietf-hybi-thewebsocketprotocol-00  	//Read SecWebSocketKey3(8 bytes)  	if (rest == SecKey3Len) {  		webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' rest);  		rest = 0;  		if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  			return HandshakeRequestInfo;  	}  	else if (rest > SecKey3Len) {  		webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' 8);  		rest -= 8;  		if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  			return HandshakeRequestInfo;  	}  	else {  		//rest < 8  		if (rest > 0) {  			AddArraySegment (readBuffer' offset + length - rest' rest' isReusableBuffer);  			rest = 0;  		}  		NextReceiveFilter = new WebSocketSecKey3ReceiveFilter (this);  		return null;  	}  }  
Magic Number,SuperWebSocket.Protocol,WebSocketHeaderReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketHeaderReceiveFilter.cs,Filter,The following statement contains a magic number: if (rest == SecKey3Len) {  	webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' rest);  	rest = 0;  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else if (rest > SecKey3Len) {  	webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' 8);  	rest -= 8;  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else {  	//rest < 8  	if (rest > 0) {  		AddArraySegment (readBuffer' offset + length - rest' rest' isReusableBuffer);  		rest = 0;  	}  	NextReceiveFilter = new WebSocketSecKey3ReceiveFilter (this);  	return null;  }  
Magic Number,SuperWebSocket.Protocol,WebSocketHeaderReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketHeaderReceiveFilter.cs,Filter,The following statement contains a magic number: if (rest == SecKey3Len) {  	webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' rest);  	rest = 0;  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else if (rest > SecKey3Len) {  	webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' 8);  	rest -= 8;  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else {  	//rest < 8  	if (rest > 0) {  		AddArraySegment (readBuffer' offset + length - rest' rest' isReusableBuffer);  		rest = 0;  	}  	NextReceiveFilter = new WebSocketSecKey3ReceiveFilter (this);  	return null;  }  
Magic Number,SuperWebSocket.Protocol,WebSocketHeaderReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketHeaderReceiveFilter.cs,Filter,The following statement contains a magic number: if (rest > SecKey3Len) {  	webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' 8);  	rest -= 8;  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else {  	//rest < 8  	if (rest > 0) {  		AddArraySegment (readBuffer' offset + length - rest' rest' isReusableBuffer);  		rest = 0;  	}  	NextReceiveFilter = new WebSocketSecKey3ReceiveFilter (this);  	return null;  }  
Magic Number,SuperWebSocket.Protocol,WebSocketHeaderReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketHeaderReceiveFilter.cs,Filter,The following statement contains a magic number: if (rest > SecKey3Len) {  	webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' 8);  	rest -= 8;  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else {  	//rest < 8  	if (rest > 0) {  		AddArraySegment (readBuffer' offset + length - rest' rest' isReusableBuffer);  		rest = 0;  	}  	NextReceiveFilter = new WebSocketSecKey3ReceiveFilter (this);  	return null;  }  
Magic Number,SuperWebSocket.Protocol,WebSocketHeaderReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketHeaderReceiveFilter.cs,Filter,The following statement contains a magic number: webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = readBuffer.CloneRange (offset + length - rest' 8);  
Magic Number,SuperWebSocket.Protocol,WebSocketHeaderReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketHeaderReceiveFilter.cs,Filter,The following statement contains a magic number: rest -= 8;  
Magic Number,SuperWebSocket.Protocol,WebSocketSecKey3ReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketSecKey3ReceiveFilter.cs,Filter,The following statement contains a magic number: if (total == SecKey3Len) {  	byte[] key = new byte[SecKey3Len];  	BufferSegments.CopyTo (key);  	Array.Copy (readBuffer' offset' key' BufferSegments.Count' length);  	webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = key;  	BufferSegments.ClearSegements ();  	rest = 0;  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else if (total > SecKey3Len) {  	byte[] key = new byte[8];  	BufferSegments.CopyTo (key);  	Array.Copy (readBuffer' offset' key' BufferSegments.Count' SecKey3Len - BufferSegments.Count);  	webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = key;  	BufferSegments.ClearSegements ();  	rest = total - SecKey3Len;  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else {  	AddArraySegment (readBuffer' offset' length' isReusableBuffer);  	rest = 0;  	NextReceiveFilter = this;  	return null;  }  
Magic Number,SuperWebSocket.Protocol,WebSocketSecKey3ReceiveFilter,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\WebSocketSecKey3ReceiveFilter.cs,Filter,The following statement contains a magic number: if (total > SecKey3Len) {  	byte[] key = new byte[8];  	BufferSegments.CopyTo (key);  	Array.Copy (readBuffer' offset' key' BufferSegments.Count' SecKey3Len - BufferSegments.Count);  	webSocketSession.Items [WebSocketConstant.SecWebSocketKey3] = key;  	BufferSegments.ClearSegements ();  	rest = total - SecKey3Len;  	if (Handshake (webSocketSession.AppServer.WebSocketProtocolProcessor' webSocketSession))  		return HandshakeRequestInfo;  }  else {  	AddArraySegment (readBuffer' offset' length' isReusableBuffer);  	rest = 0;  	NextReceiveFilter = this;  	return null;  }  
Magic Number,SuperWebSocket.Protocol.FramePartReader,ExtendedLenghtReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\ExtendedLenghtReader.cs,Process,The following statement contains a magic number: if (frame.PayloadLenght == 126)  	required += 2;  else  	required += 8;  
Magic Number,SuperWebSocket.Protocol.FramePartReader,ExtendedLenghtReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\ExtendedLenghtReader.cs,Process,The following statement contains a magic number: if (frame.PayloadLenght == 126)  	required += 2;  else  	required += 8;  
Magic Number,SuperWebSocket.Protocol.FramePartReader,ExtendedLenghtReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\ExtendedLenghtReader.cs,Process,The following statement contains a magic number: if (frame.PayloadLenght == 126)  	required += 2;  else  	required += 8;  
Magic Number,SuperWebSocket.Protocol.FramePartReader,ExtendedLenghtReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\ExtendedLenghtReader.cs,Process,The following statement contains a magic number: required += 2;  
Magic Number,SuperWebSocket.Protocol.FramePartReader,ExtendedLenghtReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\ExtendedLenghtReader.cs,Process,The following statement contains a magic number: required += 8;  
Magic Number,SuperWebSocket.Protocol.FramePartReader,FixPartReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.Length < 2) {  	nextPartReader = this;  	return -1;  }  
Magic Number,SuperWebSocket.Protocol.FramePartReader,FixPartReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.PayloadLenght < 126) {  	if (frame.HasMask)  		nextPartReader = MaskKeyReader;  	else {  		if (frame.ActualPayloadLength == 0) {  			nextPartReader = null;  			return (int)((long)frame.Length - 2);  		}  		nextPartReader = PayloadDataReader;  	}  }  else {  	nextPartReader = ExtendedLenghtReader;  }  
Magic Number,SuperWebSocket.Protocol.FramePartReader,FixPartReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.PayloadLenght < 126) {  	if (frame.HasMask)  		nextPartReader = MaskKeyReader;  	else {  		if (frame.ActualPayloadLength == 0) {  			nextPartReader = null;  			return (int)((long)frame.Length - 2);  		}  		nextPartReader = PayloadDataReader;  	}  }  else {  	nextPartReader = ExtendedLenghtReader;  }  
Magic Number,SuperWebSocket.Protocol.FramePartReader,FixPartReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.HasMask)  	nextPartReader = MaskKeyReader;  else {  	if (frame.ActualPayloadLength == 0) {  		nextPartReader = null;  		return (int)((long)frame.Length - 2);  	}  	nextPartReader = PayloadDataReader;  }  
Magic Number,SuperWebSocket.Protocol.FramePartReader,FixPartReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.ActualPayloadLength == 0) {  	nextPartReader = null;  	return (int)((long)frame.Length - 2);  }  
Magic Number,SuperWebSocket.Protocol.FramePartReader,FixPartReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: return (int)((long)frame.Length - 2);  
Magic Number,SuperWebSocket.Protocol.FramePartReader,FixPartReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.Length > 2)  	return nextPartReader.Process (2' frame' out nextPartReader);  
Magic Number,SuperWebSocket.Protocol.FramePartReader,FixPartReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: if (frame.Length > 2)  	return nextPartReader.Process (2' frame' out nextPartReader);  
Magic Number,SuperWebSocket.Protocol.FramePartReader,FixPartReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\FixPartReader.cs,Process,The following statement contains a magic number: return nextPartReader.Process (2' frame' out nextPartReader);  
Magic Number,SuperWebSocket.Protocol.FramePartReader,MaskKeyReader,C:\repos\xedoc_NetJoy3d\web4net\SuperWebSocket\Protocol\FramePartReader\MaskKeyReader.cs,Process,The following statement contains a magic number: frame.MaskKey = frame.InnerData.ToArrayData (lastLength' 4);  
