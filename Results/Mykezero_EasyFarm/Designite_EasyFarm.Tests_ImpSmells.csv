Implementation smell,Namespace,Class,File,Method,Description
Magic Number,EasyFarm.Tests.Classes,EventsTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\EventsTests.cs,FireMultipleEventsBoundToSameType,The following statement contains a magic number: Assert.Equal(2' _event.EventsFired);
Magic Number,EasyFarm.Tests.Classes,PlayerTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\PlayerTests.cs,SetTargetChangesMobIDAndPlacesCursorOnTarget,The following statement contains a magic number: const int anyUnitId = 100;
Magic Number,EasyFarm.Tests.Classes,UnitFilterTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\UnitFilterTests.cs,FindConfig,The following statement contains a magic number: return new MockConfig()              {                  DetectionDistance = 10              };
Magic Number,EasyFarm.Tests.Classes,UnitFilterTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\UnitFilterTests.cs,Filter_DetectionDistance,The following statement contains a magic number: config.DetectionDistance = 3;
Magic Number,EasyFarm.Tests.Classes,UnitFilterTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\UnitFilterTests.cs,Filter_DetectionDistance,The following statement contains a magic number: mob.Distance = 4;
Magic Number,EasyFarm.Tests.Classes,UnitFilterTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\UnitFilterTests.cs,Filter_WanderDistance,The following statement contains a magic number: config.Route.Waypoints.Add(new Position(){ X = 3' Z = 3 });
Magic Number,EasyFarm.Tests.Classes,UnitFilterTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\UnitFilterTests.cs,Filter_WanderDistance,The following statement contains a magic number: config.Route.Waypoints.Add(new Position(){ X = 3' Z = 3 });
Magic Number,EasyFarm.Tests.Classes,UnitFilterTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\UnitFilterTests.cs,Filter_HeightThreshold,The following statement contains a magic number: mob.YDifference = 10;
Magic Number,EasyFarm.Tests.Classes,UnitFilterTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\UnitFilterTests.cs,Filter_HeightThreshold,The following statement contains a magic number: config.HeightThreshold = 5;
Magic Number,EasyFarm.Tests.Classes,UnitFilterTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\UnitFilterTests.cs,Filter_ClaimID_OurClaim,The following statement contains a magic number: mob.ClaimedId = 5000;
Magic Number,EasyFarm.Tests.Classes,UnitFilterTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\UnitFilterTests.cs,Filter_ClaimID_OurClaim,The following statement contains a magic number: api.Mock.PartyMember[0].ServerID = 10000;
Magic Number,EasyFarm.Tests.Classes,RangeTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\RangeTests.cs,InRangeWhenValueBetweenLowAndHigh,The following statement contains a magic number: var range = new Range(0' 2);
Magic Number,EasyFarm.Tests.Classes,RangeTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\RangeTests.cs,NotInRangeWhenValueNotBetweenLowAndHigh,The following statement contains a magic number: var range = new Range(0' 2);
Magic Number,EasyFarm.Tests.Classes,ActionNotUsable,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\ActionFilterTests.cs,WithMpNotInRange,The following statement contains a magic number: _battleAbility.MPReserveHigh = 25;
Magic Number,EasyFarm.Tests.Classes,ActionNotUsable,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\ActionFilterTests.cs,WithMpNotInRange,The following statement contains a magic number: MockGameAPI.Mock.Player.MPPCurrent = 100;
Magic Number,EasyFarm.Tests.Classes,ActionNotUsable,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\ActionFilterTests.cs,WithTpNotInRange,The following statement contains a magic number: _battleAbility.TPReserveLow = 1000;
Magic Number,EasyFarm.Tests.Classes,ActionNotUsable,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\ActionFilterTests.cs,WithTpNotInRange,The following statement contains a magic number: _battleAbility.TPReserveHigh = 1000;
Magic Number,EasyFarm.Tests.Classes,ActionNotUsable,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\ActionFilterTests.cs,MpReserveWasUseInsteadOfTpReserveWhenCheckingTpReserveValue,The following statement contains a magic number: _battleAbility.TPReserveLow = 1000;
Magic Number,EasyFarm.Tests.Classes,ActionNotUsable,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\ActionFilterTests.cs,MpReserveWasUseInsteadOfTpReserveWhenCheckingTpReserveValue,The following statement contains a magic number: _battleAbility.TPReserveHigh = 1000;
Magic Number,EasyFarm.Tests.Classes,ActionNotUsable,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\ActionFilterTests.cs,ActionNotUsableWhenUsageLimitIsReached,The following statement contains a magic number: _battleAbility.Usages = 2;
Magic Number,EasyFarm.Tests.Classes,ActionNotUsable,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\ActionFilterTests.cs,WithPlayerHealthNotInRange,The following statement contains a magic number: _battleAbility.PlayerLowerHealth = 25;
Magic Number,EasyFarm.Tests.Classes,ActionNotUsable,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\ActionFilterTests.cs,WithPlayerHealthNotInRange,The following statement contains a magic number: _battleAbility.PlayerUpperHealth = 50;
Magic Number,EasyFarm.Tests.Classes,SerializationTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Classes\SerializationTests.cs,SerializationWithUndefinedEnumValueReturnsThatValue,The following statement contains a magic number: var expectedZone = (Zone) 10000;
Magic Number,EasyFarm.Tests.States,SummonTrustsStateTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\SummonTrustsStateTests.cs,DismissesTrustWithLowMpp,The following statement contains a magic number: context.Config.BattleLists["Trusts"].Actions.Add(new BattleAbility()              {                  IsEnabled = true'                   Name = "Trust"'                  ResummonOnLowMP = true'                  ResummonMPLow = 0'                  ResummonMPHigh = 50              });
Magic Number,EasyFarm.Tests.States,SummonTrustsStateTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\SummonTrustsStateTests.cs,DismissesTrustWithLowHpp,The following statement contains a magic number: context.Config.BattleLists["Trusts"].Actions.Add(new BattleAbility()              {                  IsEnabled = true'                   Name = "Trust"'                  ResummonOnLowHP = true'                  ResummonHPLow = 0'                  ResummonHPHigh = 50              });
Magic Number,EasyFarm.Tests.States,TargetPriorityTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\TargetPriorityTests.cs,WillOrderTargetsByPriority,The following statement contains a magic number: IUnit[] units = InitializeUnits(numberUnits: 3);
Magic Number,EasyFarm.Tests.States,TargetPriorityTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\TargetPriorityTests.cs,WillOrderTargetsByPriority,The following statement contains a magic number: units[2] = FindLongDistanceMob("ShortestDistance");
Magic Number,EasyFarm.Tests.States,TargetPriorityTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\TargetPriorityTests.cs,WillOrderTargetsByPriority,The following statement contains a magic number: Assert.Equal("ShortestDistance"' result[2].Name);
Magic Number,EasyFarm.Tests.States,TargetPriorityTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\TargetPriorityTests.cs,ShuffleUnits,The following statement contains a magic number: return units.OrderBy(x => new Random().Next(0' 3)).ToArray();
Magic Number,EasyFarm.Tests.States,TargetPriorityTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\TargetPriorityTests.cs,InitializeUnits,The following statement contains a magic number: return Enumerable.Range(0' 3).Select(x => new MockUnit()).Cast<IUnit>().ToArray();
Magic Number,EasyFarm.Tests.States,TargetPriorityTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\TargetPriorityTests.cs,ValidMob,The following statement contains a magic number: return new MockUnit()              {                  Name = "Mandragora"'                  Status = Status.Standing'                  Distance = 5'                  IsActive = true'                  IsClaimed = false'                  IsRendered = true'                  NpcType = NpcType.Mob'                  PosX = 1'                  PosY = 1'                  PosZ = 1'                  Position = new Position                  {                      X = 1'                      H = 1'                      Y = 1'                      Z = 1                  }              };
Magic Number,EasyFarm.Tests.States,BattleStateTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\BattleStateTests.cs,WhenInjuredShouldntBattle,The following statement contains a magic number: context.Player.HppCurrent = 25;
Magic Number,EasyFarm.Tests.States,BattleStateTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\BattleStateTests.cs,WhenInjuredShouldntBattle,The following statement contains a magic number: context.Config.LowHealth = 50;
Magic Number,EasyFarm.Tests.States,BattleStateTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\BattleStateTests.cs,WhenInjuredShouldntBattle,The following statement contains a magic number: context.Config.HighHealth = 100;
Magic Number,EasyFarm.Tests.States,ZoneStateTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\ZoneStateTests.cs,CheckIsTrueWhenZoneChanges,The following statement contains a magic number: context.Player.Str = 100;
Magic Number,EasyFarm.Tests.States,ZoneStateTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\ZoneStateTests.cs,CheckIsFalseWhenNotZoning,The following statement contains a magic number: context.Player.Str = 100;
Magic Number,EasyFarm.Tests.States,ZoneStateTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\ZoneStateTests.cs,RunOnZoningSetsZoneToNewZone,The following statement contains a magic number: context.Player.Str = 100;
Magic Number,EasyFarm.Tests.States,ZoneStateTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\ZoneStateTests.cs,RunWhileZoningWaits,The following statement contains a magic number: Assert.Equal(100' context.Player.Str);
Magic Number,EasyFarm.Tests.States,ZoneStateTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\States\ZoneStateTests.cs,ForceMoveToNextZone,The following statement contains a magic number: return () => context.Player.Str = 100;
Magic Number,EasyFarm.Tests.Context,TestContext,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Context\TestContext.cs,SetPlayerInjured,The following statement contains a magic number: Config.HighHealth = 50;
Magic Number,EasyFarm.Tests.Context,TestContext,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Context\TestContext.cs,SetPlayerInjured,The following statement contains a magic number: MockAPI.Player.HPPCurrent = 25;
Magic Number,EasyFarm.Tests.Context,TestContext,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Context\TestContext.cs,SetPlayerHealthy,The following statement contains a magic number: Config.HighHealth = 50;
Magic Number,EasyFarm.Tests.Context,TestContext,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Context\TestContext.cs,SetPlayerHealthy,The following statement contains a magic number: MockAPI.Player.HPPCurrent = 75;
Magic Number,EasyFarm.Tests.TestTypes.Mocks,MockEliteAPI,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\TestTypes\Mocks\MockEliteAPI.cs,MockEliteAPI,The following statement contains a magic number: PartyMember = new Dictionary<byte' MockPartyMemberTools>()              {                  {0' new MockPartyMemberTools()}'                  {1' new MockPartyMemberTools()}'                  {2' new MockPartyMemberTools()}'                  {3' new MockPartyMemberTools()}'                  {4' new MockPartyMemberTools()}'                  {5' new MockPartyMemberTools()}              };
Magic Number,EasyFarm.Tests.TestTypes.Mocks,MockEliteAPI,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\TestTypes\Mocks\MockEliteAPI.cs,MockEliteAPI,The following statement contains a magic number: PartyMember = new Dictionary<byte' MockPartyMemberTools>()              {                  {0' new MockPartyMemberTools()}'                  {1' new MockPartyMemberTools()}'                  {2' new MockPartyMemberTools()}'                  {3' new MockPartyMemberTools()}'                  {4' new MockPartyMemberTools()}'                  {5' new MockPartyMemberTools()}              };
Magic Number,EasyFarm.Tests.TestTypes.Mocks,MockEliteAPI,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\TestTypes\Mocks\MockEliteAPI.cs,MockEliteAPI,The following statement contains a magic number: PartyMember = new Dictionary<byte' MockPartyMemberTools>()              {                  {0' new MockPartyMemberTools()}'                  {1' new MockPartyMemberTools()}'                  {2' new MockPartyMemberTools()}'                  {3' new MockPartyMemberTools()}'                  {4' new MockPartyMemberTools()}'                  {5' new MockPartyMemberTools()}              };
Magic Number,EasyFarm.Tests.TestTypes.Mocks,MockEliteAPI,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\TestTypes\Mocks\MockEliteAPI.cs,MockEliteAPI,The following statement contains a magic number: PartyMember = new Dictionary<byte' MockPartyMemberTools>()              {                  {0' new MockPartyMemberTools()}'                  {1' new MockPartyMemberTools()}'                  {2' new MockPartyMemberTools()}'                  {3' new MockPartyMemberTools()}'                  {4' new MockPartyMemberTools()}'                  {5' new MockPartyMemberTools()}              };
Magic Number,EasyFarm.Tests.Parsing,AbilityMapperTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Parsing\AbilityMapperTests.cs,Map_Distance,The following statement contains a magic number: expected.Distance = 21;
Magic Number,EasyFarm.Tests.Parsing,AbilityMapperTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Parsing\AbilityMapperTests.cs,Map_Distance,The following statement contains a magic number: input.Range = (char)21;
Magic Number,EasyFarm.Tests.Parsing,SpellMapperTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Parsing\SpellMapperTests.cs,Map_Distance,The following statement contains a magic number: expected.Distance = 21;
Magic Number,EasyFarm.Tests.Parsing,SpellMapperTests,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\Parsing\SpellMapperTests.cs,Map_Distance,The following statement contains a magic number: input.Range = 21;
Magic Number,EasyFarm.Tests.TestTypes,AbstractTestBase,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\TestTypes\AbstractTestBase.cs,FindUnit,The following statement contains a magic number: var unit = new MockUnit              {                  Name = "Mandragora"'                  ClaimedId = 0'                  Distance = 3.0'                  HasAggroed = false'                  HppCurrent = 100'                  Id = 200'                  IsActive = true'                  IsClaimed = false'                  IsDead = false'                  IsPet = false'                  IsRendered = true'                  MyClaim = false'                  NpcType = NpcType.Mob'                  PartyClaim = false'                  Status = Status.Standing'                  YDifference = 2.0'                  IsValid = true              };
Magic Number,EasyFarm.Tests.TestTypes,AbstractTestBase,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\TestTypes\AbstractTestBase.cs,FindUnit,The following statement contains a magic number: var unit = new MockUnit              {                  Name = "Mandragora"'                  ClaimedId = 0'                  Distance = 3.0'                  HasAggroed = false'                  HppCurrent = 100'                  Id = 200'                  IsActive = true'                  IsClaimed = false'                  IsDead = false'                  IsPet = false'                  IsRendered = true'                  MyClaim = false'                  NpcType = NpcType.Mob'                  PartyClaim = false'                  Status = Status.Standing'                  YDifference = 2.0'                  IsValid = true              };
Magic Number,EasyFarm.Tests.TestTypes,AbstractTestBase,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\TestTypes\AbstractTestBase.cs,FindUnit,The following statement contains a magic number: var unit = new MockUnit              {                  Name = "Mandragora"'                  ClaimedId = 0'                  Distance = 3.0'                  HasAggroed = false'                  HppCurrent = 100'                  Id = 200'                  IsActive = true'                  IsClaimed = false'                  IsDead = false'                  IsPet = false'                  IsRendered = true'                  MyClaim = false'                  NpcType = NpcType.Mob'                  PartyClaim = false'                  Status = Status.Standing'                  YDifference = 2.0'                  IsValid = true              };
Magic Number,EasyFarm.Tests.TestTypes,AbstractTestBase,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm.Tests\TestTypes\AbstractTestBase.cs,FindUnit,The following statement contains a magic number: var unit = new MockUnit              {                  Name = "Mandragora"'                  ClaimedId = 0'                  Distance = 3.0'                  HasAggroed = false'                  HppCurrent = 100'                  Id = 200'                  IsActive = true'                  IsClaimed = false'                  IsDead = false'                  IsPet = false'                  IsRendered = true'                  MyClaim = false'                  NpcType = NpcType.Mob'                  PartyClaim = false'                  Status = Status.Standing'                  YDifference = 2.0'                  IsValid = true              };
