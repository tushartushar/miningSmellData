Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EasyFarm.Classes,ActionFilters,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\ActionFilters.cs,ValidateBuffingAction,Cyclomatic complexity of the method is 26
Complex Method,EasyFarm.Classes,UnitFilters,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\UnitFilters.cs,MobFilter,Cyclomatic complexity of the method is 19
Complex Method,EasyFarm.Infrastructure,CompositeRoot,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Infrastructure\CompositeRoot.cs,CreateInstance,Cyclomatic complexity of the method is 22
Complex Method,EasyFarm.Parsing,AbilityMapper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\AbilityMapper.cs,GetAbilityType,Cyclomatic complexity of the method is 22
Complex Method,EasyFarm.Parsing,SpellMapper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\SpellMapper.cs,GetAbilityType,Cyclomatic complexity of the method is 9
Complex Method,EasyFarm.Parsing,ResourceHelper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\ResourceHelper.cs,ToAbilityType,Cyclomatic complexity of the method is 11
Complex Method,EasyFarm.Parsing,ResourceHelper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\ResourceHelper.cs,ToCategoryType,Cyclomatic complexity of the method is 29
Complex Method,EasyFarm.Parsing,ResourceHelper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\ResourceHelper.cs,ToElementType,Cyclomatic complexity of the method is 14
Complex Method,EasyFarm.Parsing,ResourceHelper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\ResourceHelper.cs,ToSkillType,Cyclomatic complexity of the method is 13
Complex Method,EasyFarm.States,TravelState,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\TravelState.cs,Check,Cyclomatic complexity of the method is 8
Long Parameter List,EasyFarm.States,RestState,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\RestState.cs,ShouldRestForMagic,The method has 5 parameters. Parameters: magic' status' enabled' lowMagic' highMagic
Long Parameter List,EasyFarm.States,RestState,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\RestState.cs,ShouldRestForHealth,The method has 5 parameters. Parameters: health' status' enabled' lowHealth' highHealth
Long Identifier,EasyFarm.States,TravelState,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\TravelState.cs,Run,The length of the parameter shouldKeepRunningToNextWaypoint is 31.
Long Statement,EasyFarm.Classes,ActionFilters,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\ActionFilters.cs,ValidateBuffingAction,The length of the statement  "                if (action.ChatEventPeriod.HasValue && !matches.Any(x => DateTime.Now <= x.Timestamp.Add(action.ChatEventPeriod.Value))) " is 120.
Long Statement,EasyFarm.Persistence,SettingsManager,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Persistence\SettingsManager.cs,TryLoad,The length of the statement  "                Logger.Log(new LogEntry(LoggingEventType.Error' $"{GetType()}.{nameof(TrySave)} : Failure on de-serialize settings"' ex)); " is 122.
Long Statement,EasyFarm.Views,BattlesView,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Views\BattlesView.xaml.cs,Connect,The length of the statement  "            this.Master.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.Master_OnSelectedItemChanged); " is 131.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,EasyFarm.States,SummonTrustsState,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\SummonTrustsState.cs,Check,The conditional expression  "TrustNeedsDismissal(context' trust) ||                      !TrustInParty(context' trust) && PartyHasSpace(context) && !MaxTrustsReached(context' maxTrustPartySize)"  is complex.
Magic Number,EasyFarm.Classes,PlayerMonitor,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\PlayerMonitor.cs,Monitor,The following statement contains a magic number: TimeWaiter.Pause(100);
Magic Number,EasyFarm.Classes,PathRecorder,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\PathRecorder.cs,PathRecorder,The following statement contains a magic number: _recorder = new Timer(1000);
Magic Number,EasyFarm.Classes,Player,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Player.cs,Rest,The following statement contains a magic number: TimeWaiter.Pause(50);
Magic Number,EasyFarm.Classes,Player,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Player.cs,Stand,The following statement contains a magic number: TimeWaiter.Pause(50);
Magic Number,EasyFarm.Classes,Player,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Player.cs,StopRunning,The following statement contains a magic number: TimeWaiter.Pause(100);
Magic Number,EasyFarm.Classes,Player,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Player.cs,SetTargetByTabbing,The following statement contains a magic number: TimeWaiter.Pause(200);
Magic Number,EasyFarm.Classes,LogEntries,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\LogEntries.cs,RecordLogItem,The following statement contains a magic number: LoggedItems.Count > 1000
Magic Number,EasyFarm.Classes,Executor,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Executor.cs,UseTargetedActions,The following statement contains a magic number: TimeWaiter.Pause(100);
Magic Number,EasyFarm.Classes,Executor,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Executor.cs,EnsureCast,The following statement contains a magic number: var interval = startTime.AddSeconds(3);
Magic Number,EasyFarm.Classes,Executor,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Executor.cs,EnsureCast,The following statement contains a magic number: Math.Abs(previous - _fface.Player.CastPercentEx) > .5
Magic Number,EasyFarm.Classes,Executor,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Executor.cs,EnsureCast,The following statement contains a magic number: TimeWaiter.Pause(500);
Magic Number,EasyFarm.Classes,Executor,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Executor.cs,MonitorCast,The following statement contains a magic number: Math.Abs(prior - _fface.Player.CastPercentEx) < .5
Magic Number,EasyFarm.Classes,Executor,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Executor.cs,MonitorCast,The following statement contains a magic number: TimeWaiter.Pause(100);
Magic Number,EasyFarm.Classes,Executor,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Executor.cs,MonitorCast,The following statement contains a magic number: stopwatch.Elapsed.TotalSeconds < 2
Magic Number,EasyFarm.Classes,Executor,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Executor.cs,MonitorCast,The following statement contains a magic number: return Math.Abs(prior - 100) < .5;
Magic Number,EasyFarm.Classes,Executor,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Executor.cs,MonitorCast,The following statement contains a magic number: return Math.Abs(prior - 100) < .5;
Magic Number,EasyFarm.Classes,Executor,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\Executor.cs,CastAbility,The following statement contains a magic number: TimeWaiter.Pause(100);
Magic Number,EasyFarm.Classes,UnitFilters,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\UnitFilters.cs,Distance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(waypoint.X - mob.PosX' 2) + Math.Pow(waypoint.Z - mob.PosZ' 2));
Magic Number,EasyFarm.Classes,UnitFilters,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\UnitFilters.cs,Distance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(waypoint.X - mob.PosX' 2) + Math.Pow(waypoint.Z - mob.PosZ' 2));
Magic Number,EasyFarm.Classes,SystemTray,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Classes\SystemTray.cs,Minimize,The following statement contains a magic number: TrayIcon.ShowBalloonTip(5' title' text' ToolTipIcon.Info);
Magic Number,EasyFarm.Parsing,AbilityMapper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\AbilityMapper.cs,Map,The following statement contains a magic number: return new Ability              {                  English = ability.Name?.FirstOrDefault() ?? ""'                  Distance = ability.Range'                  Index = ability.TimerID'                  Prefix = ability.TimerID == 900 ? "/weaponskill" : "/jobability"'                  TpCost = ability.TimerID == 900 ? 1000 : ability.TP'                  TargetType = (TargetType) ability.ValidTargets'                  AbilityType = GetAbilityType(ability)              };
Magic Number,EasyFarm.Parsing,AbilityMapper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\AbilityMapper.cs,Map,The following statement contains a magic number: return new Ability              {                  English = ability.Name?.FirstOrDefault() ?? ""'                  Distance = ability.Range'                  Index = ability.TimerID'                  Prefix = ability.TimerID == 900 ? "/weaponskill" : "/jobability"'                  TpCost = ability.TimerID == 900 ? 1000 : ability.TP'                  TargetType = (TargetType) ability.ValidTargets'                  AbilityType = GetAbilityType(ability)              };
Magic Number,EasyFarm.Parsing,AbilityMapper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\AbilityMapper.cs,Map,The following statement contains a magic number: return new Ability              {                  English = ability.Name?.FirstOrDefault() ?? ""'                  Distance = ability.Range'                  Index = ability.TimerID'                  Prefix = ability.TimerID == 900 ? "/weaponskill" : "/jobability"'                  TpCost = ability.TimerID == 900 ? 1000 : ability.TP'                  TargetType = (TargetType) ability.ValidTargets'                  AbilityType = GetAbilityType(ability)              };
Magic Number,EasyFarm.Parsing,AbilityService,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\AbilityService.cs,LoadResources,The following statement contains a magic number: i < 100000
Magic Number,EasyFarm.States,PlayerMovementTracker,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\PlayerMovementTracker.cs,RunComponent,The following statement contains a magic number: _positionHistory.Count >= 15
Magic Number,EasyFarm.States,Route,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\Route.cs,GetNextPosition,The following statement contains a magic number: distance > 15
Magic Number,EasyFarm.States,Route,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\Route.cs,Distance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(one.X - other.X' 2) + Math.Pow(one.Z - other.Z' 2));
Magic Number,EasyFarm.States,Route,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\Route.cs,Distance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(one.X - other.X' 2) + Math.Pow(one.Z - other.Z' 2));
Magic Number,EasyFarm.States,Route,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\Route.cs,IsPathUnreachable,The following statement contains a magic number: return Zone == fface.Player.Zone && IsWithinDistance(fface.Player.Position' 20);
Magic Number,EasyFarm.States,SummonTrustsState,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\SummonTrustsState.cs,PartyHasSpace,The following statement contains a magic number: i < 6
Magic Number,EasyFarm.States,SummonTrustsState,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\SummonTrustsState.cs,FindPartyMember,The following statement contains a magic number: i < 6
Magic Number,EasyFarm.States,DeadState,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\DeadState.cs,HomePointOnDeath,The following statement contains a magic number: TimeWaiter.Pause(2000);
Magic Number,EasyFarm.States,DeadState,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\DeadState.cs,HomePointOnDeath,The following statement contains a magic number: TimeWaiter.Pause(1000);
Magic Number,EasyFarm.States,DeadState,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\DeadState.cs,HomePointOnDeath,The following statement contains a magic number: TimeWaiter.Pause(1000);
Magic Number,EasyFarm.States,ApproachState,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\ApproachState.cs,Check,The following statement contains a magic number: return context.Target.Distance < 8;
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new DeadState() {Priority = 7});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new ZoneState() {Priority = 7});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new SetTargetState() {Priority = 7});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new SetFightingState() {Priority = 7});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new FollowState() {Priority = 5});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new RestState() {Priority = 2});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new SummonTrustsState() {Priority = 6});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new BattleState() {Priority = 3});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new WeaponskillState() {Priority = 2});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new PullState() {Priority = 4});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new StartState() {Priority = 5});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new HealingState() {Priority = 2});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,FiniteStateMachine,The following statement contains a magic number: AddState(new EndState() {Priority = 3});
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,StopThreadQuickly,The following statement contains a magic number: return () =>              {                  if (!backgroundThread.Join(500)) backgroundThread.Interrupt();              };
Magic Number,EasyFarm.States,FiniteStateMachine,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\States\FiniteStateMachine.cs,RunStateMachine,The following statement contains a magic number: TimeWaiter.Pause(250);
Magic Number,EasyFarm.Views,BattlesView,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Views\BattlesView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.Master = ((System.Windows.Controls.TreeView)(target));                            #line 77 "..\..\..\..\Views\BattlesView.xaml"              this.Master.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.Master_OnSelectedItemChanged);                            #line default              #line hidden              return;              case 2:              this.Details = ((System.Windows.Controls.ContentControl)(target));              return;              }
Magic Number,EasyFarm.Views,RoutesView,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Views\RoutesView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.StraightRoute = ((System.Windows.Controls.RadioButton)(target));              return;              case 2:              this.CircularRoute = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.BtnRecordWaypoints = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,EasyFarm.Views,RoutesView,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Views\RoutesView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.StraightRoute = ((System.Windows.Controls.RadioButton)(target));              return;              case 2:              this.CircularRoute = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.BtnRecordWaypoints = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,EasyFarm.Views,TargetsView,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Views\TargetsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BtnAddTarget = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BtnDeleteTarget = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.BtnClearTarget = ((System.Windows.Controls.Button)(target));              return;              }
Magic Number,EasyFarm.Views,TargetsView,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Views\TargetsView.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BtnAddTarget = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BtnDeleteTarget = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.BtnClearTarget = ((System.Windows.Controls.Button)(target));              return;              }
Missing Default,EasyFarm.Parsing,AbilityMapper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\AbilityMapper.cs,GetAbilityType,The following switch statement is missing a default case: switch (abilityType)              {                  case EliteMMO.API.AbilityType.Job:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.General:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.BloodPactRage:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Corsair:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.CorsairShot:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.BloodPactWard:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Samba:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Waltz:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Step:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Florish1:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Scholar:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Jig:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Flourish2:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Flourish3:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Pet:                      return AbilityType.Pet;                  case EliteMMO.API.AbilityType.Monster:                      return AbilityType.Monsterskill;                  case EliteMMO.API.AbilityType.Weapon:                      return AbilityType.Weaponskill;                  case EliteMMO.API.AbilityType.Weaponskill:                      return AbilityType.Weaponskill;                  case EliteMMO.API.AbilityType.Trait:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Rune:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Ward:                      return AbilityType.Jobability;                  case EliteMMO.API.AbilityType.Effusion:                      return AbilityType.Jobability;              }
Missing Default,EasyFarm.Parsing,SpellMapper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\SpellMapper.cs,GetAbilityType,The following switch statement is missing a default case: switch (spellType)              {                  case MagicType.None:                      return AbilityType.Unknown;                  case MagicType.WhiteMagic:                      return AbilityType.Magic;                  case MagicType.BlackMagic:                      return AbilityType.Magic;                  case MagicType.Summon:                      return AbilityType.Magic;                  case MagicType.Ninjutsu:                      return AbilityType.Ninjutsu;                  case MagicType.Song:                      return AbilityType.Song;                  case MagicType.BlueMagic:                      return AbilityType.Magic;                  case MagicType.Geomancy:                      return AbilityType.Magic;                  case MagicType.Trust:                      return AbilityType.Trust;              }
Missing Default,EasyFarm.Parsing,ResourceHelper,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Parsing\ResourceHelper.cs,ToPrefix,The following switch statement is missing a default case: switch (resource.ResourceType)              {                  case Parsing.Resources.ResourceType.Items:                      return "/item";                  case Parsing.Resources.ResourceType.MonsterAbilities:                      return "/monsterskill";              }
Missing Default,EasyFarm.Views,MainView,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Views\MainView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.MainTabControl = ((System.Windows.Controls.TabControl)(target));              return;              }
Missing Default,EasyFarm.Views,BattlesView,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Views\BattlesView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.Master = ((System.Windows.Controls.TreeView)(target));                            #line 77 "..\..\..\..\Views\BattlesView.xaml"              this.Master.SelectedItemChanged += new System.Windows.RoutedPropertyChangedEventHandler<object>(this.Master_OnSelectedItemChanged);                            #line default              #line hidden              return;              case 2:              this.Details = ((System.Windows.Controls.ContentControl)(target));              return;              }
Missing Default,EasyFarm.Views,RoutesView,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Views\RoutesView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.StraightRoute = ((System.Windows.Controls.RadioButton)(target));              return;              case 2:              this.CircularRoute = ((System.Windows.Controls.RadioButton)(target));              return;              case 3:              this.BtnRecordWaypoints = ((System.Windows.Controls.Button)(target));              return;              }
Missing Default,EasyFarm.Views,TargetsView,C:\research\architectureSmells\repos\Mykezero_EasyFarm\EasyFarm\Views\TargetsView.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BtnAddTarget = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BtnDeleteTarget = ((System.Windows.Controls.Button)(target));              return;              case 3:              this.BtnClearTarget = ((System.Windows.Controls.Button)(target));              return;              }
