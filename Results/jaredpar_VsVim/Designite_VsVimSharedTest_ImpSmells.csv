Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Vim.VisualStudio.UnitTest.Utils,SimulationCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\Utils\VsSimulation.cs,TryExec,Cyclomatic complexity of the method is 8
Long Parameter List,Vim.VisualStudio.UnitTest,MockAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsKeyProcessorTest.cs,GetScrollInfo,The method has 5 parameters. Parameters: iBar' piMinUnit' piMaxUnit' piVisibleUnits' piFirstVisibleUnit
Long Parameter List,Vim.VisualStudio.UnitTest,MockAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsKeyProcessorTest.cs,GetTextStream,The method has 5 parameters. Parameters: iTopLine' iTopCol' iBottomLine' iBottomCol' pbstrText
Long Parameter List,Vim.VisualStudio.UnitTest,MockAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsKeyProcessorTest.cs,ReplaceTextOnLine,The method has 5 parameters. Parameters: iLine' iStartCol' iCharsToReplace' pszNewText' iNewLen
Long Parameter List,Vim.VisualStudio.UnitTest.Utils,ReSharperCommandTargetSimulation,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\Utils\ReSharperCommandTargetSimulation.cs,Exec,The method has 5 parameters. Parameters: commandGroup' commandId' commandExecOpt' variantIn' variantOut
Long Parameter List,Vim.VisualStudio.UnitTest.Utils,VsSimulation,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\Utils\VsSimulation.cs,VsSimulation,The method has 5 parameters. Parameters: bufferCoordinator' simulateResharper' simulateStandardKeyMappings' editorOperationsFactoryService' keyUtil
Long Parameter List,Vim.VisualStudio.UnitTest.Utils,SimulationCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\Utils\VsSimulation.cs,Exec,The method has 5 parameters. Parameters: commandGroup' cmdId' cmdExecOpt' variantIn' variantOut
Long Identifier,Vim.VisualStudio.UnitTest,HostFactoryTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\HostFactoryTest.cs,,The length of the parameter _vsEditorAdaptersFactoryService is 31.
Long Identifier,Vim.VisualStudio.UnitTest,ReportDesignerUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\ReportDesignerUtilTest.cs,,The length of the parameter _vsEditorAdaptersFactoryService is 31.
Long Identifier,Vim.VisualStudio.UnitTest,VsAdapterTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsAdapterTest.cs,,The length of the parameter _incrementalSearchFactoryService is 32.
Long Identifier,Vim.VisualStudio.UnitTest,VsVimHostTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsVimHostTest.cs,,The length of the parameter _editorOperationsFactoryService is 31.
Long Identifier,Vim.VisualStudio.UnitTest.Utils,VsSimulation,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\Utils\VsSimulation.cs,VsSimulation,The length of the parameter editorOperationsFactoryService is 30.
Long Statement,Vim.VisualStudio.UnitTest,GetAdornmentLayerNoThrowTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\ExtensionsTest.cs,SecondTimeLayerNotPresent,The length of the statement  "                _wpfTextView.Setup(x => x.GetAdornmentLayer(s_layerName)).Callback(() => { calledAgain = true; }).Throws(new Exception()); " is 122.
Long Statement,Vim.VisualStudio.UnitTest,VimBufferDisabledTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\FallbackKeyProcessorTest.cs,ShiftAltCtrlCWorks,The length of the statement  "                _keyProcessor.KeyDown(_keyboardDevice.CreateKeyEventArgs(Key.C' ModifierKeys.Control | ModifierKeys.Shift | ModifierKeys.Alt)); " is 127.
Long Statement,Vim.VisualStudio.UnitTest,HostFactoryTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\HostFactoryTest.cs,InvalidateSynchronizer,The length of the statement  "            _synchronizer.Setup(x => x.StartSynchronizing(It.IsAny<IVimBuffer>()' It.IsAny<SettingSyncSource>())).Throws(new Exception()); " is 126.
Long Statement,Vim.VisualStudio.UnitTest,MemoryLeakTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\MemoryLeakTest.cs,SearchCacheDoesntHoldTheBuffer,The length of the statement  "            var vimBuffer = CreateVimBuffer(new[] { PredefinedTextViewRoles.Editable' PredefinedTextViewRoles.Document' PredefinedTextViewRoles.PrimaryDocument }); " is 151.
Long Statement,Vim.VisualStudio.UnitTest,VsEditorAdaptersFactoryService,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\MemoryLeakTest.cs,GetBufferAdapter,The length of the statement  "                    .Setup(x => x.EnumMarkers(It.IsAny<int>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<uint>()' out markers)) " is 142.
Long Statement,Vim.VisualStudio.UnitTest,OleCommandUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\OleCommandUtilTest.cs,ConvertTypeChar,The length of the statement  "                Assert.True(OleCommandUtil.TryConvert(VSConstants.VSStd2K' (uint)VSConstants.VSStd2KCmdID.TYPECHAR' ptr.IntPtr' VimKeyModifiers.None' out EditCommand command)); " is 160.
Long Statement,Vim.VisualStudio.UnitTest,OleCommandUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\OleCommandUtilTest.cs,VerifyConvert,The length of the statement  "            Assert.True(OleCommandUtil.TryConvert(VSConstants.VSStd2K' (uint)cmd' IntPtr.Zero' modifiers' out EditCommand command)); " is 120.
Long Statement,Vim.VisualStudio.UnitTest,OleCommandUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\OleCommandUtilTest.cs,VerifyConvert,The length of the statement  "            Assert.True(OleCommandUtil.TryConvert(VSConstants.GUID_VSStandardCommandSet97' (uint)cmd' IntPtr.Zero' VimKeyModifiers.None' out EditCommand command)); " is 151.
Long Statement,Vim.VisualStudio.UnitTest,OleCommandUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\OleCommandUtilTest.cs,TypeChar_WithModifiers,The length of the statement  "                    Assert.True(OleCommandUtil.TryConvert(VSConstants.VSStd2K' (uint)VSConstants.VSStd2KCmdID.TYPECHAR' ptr.IntPtr' modifiers' out EditCommand command)); " is 149.
Long Statement,Vim.VisualStudio.UnitTest,OleCommandUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\OleCommandUtilTest.cs,ArrowKey_WithModifiers,The length of the statement  "            Assert.True(OleCommandUtil.TryConvert(VSConstants.VSStd2K' (uint)VSConstants.VSStd2KCmdID.LEFT' IntPtr.Zero' modifiers' out EditCommand command)); " is 146.
Long Statement,Vim.VisualStudio.UnitTest,OleCommandUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\OleCommandUtilTest.cs,BackTab,The length of the statement  "            VerifyConvert(VSConstants.VSStd2KCmdID.BACKTAB' KeyInputUtil.ApplyKeyModifiers(KeyInputUtil.TabKey' VimKeyModifiers.Shift)' EditCommandKind.UserInput); " is 151.
Long Statement,Vim.VisualStudio.UnitTest,VsIntegrationTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,CreateCore,The length of the statement  "                    TextEditorFactoryService.CreateTextViewRoleSet(PredefinedTextViewRoles.Document' PredefinedTextViewRoles.Editable' VsVimConstants.TextViewRoleEmbeddedPeekTextView)); " is 165.
Long Statement,Vim.VisualStudio.UnitTest,VsVimHostTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsVimHostTest.cs,Create,The length of the statement  "            vsMonitorSelection.Setup(x => x.AdviseSelectionEvents(It.IsAny<IVsSelectionEvents>()' out selectionCookie)).Returns(VSConstants.S_OK); " is 134.
Long Statement,Vim.VisualStudio.UnitTest,VsVimHostTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsVimHostTest.cs,Create,The length of the statement  "            vsRunningDocumentTable.Setup(x => x.AdviseRunningDocTableEvents(It.IsAny<IVsRunningDocTableEvents3>()' out runningDocumentTableCookie)).Returns(VSConstants.S_OK); " is 162.
Long Statement,Vim.VisualStudio.UnitTest,SholudCreateVimBufferTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsVimHostTest.cs,StandardDocument,The length of the statement  "                var textView = CreateWithRoles(PredefinedTextViewRoles.Editable' PredefinedTextViewRoles.Document' PredefinedTextViewRoles.Structured' PredefinedTextViewRoles.Zoomable' PredefinedTextViewRoles.Debuggable); " is 205.
Long Statement,Vim.VisualStudio.UnitTest,SholudCreateVimBufferTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsVimHostTest.cs,StandardPrimaryDocument,The length of the statement  "                var textView = CreateWithRoles(PredefinedTextViewRoles.Editable' PredefinedTextViewRoles.PrimaryDocument' PredefinedTextViewRoles.Structured' PredefinedTextViewRoles.Zoomable' PredefinedTextViewRoles.Debuggable); " is 212.
Long Statement,Vim.VisualStudio.UnitTest.Utils,ReSharperCommandTargetSimulation,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\Utils\ReSharperCommandTargetSimulation.cs,Exec,The length of the statement  "            if (!OleCommandUtil.TryConvert(commandGroup' commandId' variantIn' out KeyInput keyInput' out EditCommandKind editCommandKind) || " is 129.
Long Statement,Vim.VisualStudio.UnitTest.Utils,SimulationCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\Utils\VsSimulation.cs,QueryStatus,The length of the statement  "                if (1 != commandCount || !OleCommandUtil.TryConvert(commandGroup' commands[0].cmdID' commandText' VimKeyModifiers.None' out EditCommand editCommand)) " is 149.
Magic Number,Vim.VisualStudio.UnitTest,EqualityTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CommandIdTest.cs,Ids,The following statement contains a magic number: var unit = EqualityUnit                      .Create(new CommandId(guid' 42))                      .WithEqualValues(new CommandId(guid' 42))                      .WithNotEqualValues(new CommandId(guid' 13));
Magic Number,Vim.VisualStudio.UnitTest,EqualityTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CommandIdTest.cs,Ids,The following statement contains a magic number: var unit = EqualityUnit                      .Create(new CommandId(guid' 42))                      .WithEqualValues(new CommandId(guid' 42))                      .WithNotEqualValues(new CommandId(guid' 13));
Magic Number,Vim.VisualStudio.UnitTest,EqualityTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CommandIdTest.cs,Ids,The following statement contains a magic number: var unit = EqualityUnit                      .Create(new CommandId(guid' 42))                      .WithEqualValues(new CommandId(guid' 42))                      .WithNotEqualValues(new CommandId(guid' 13));
Magic Number,Vim.VisualStudio.UnitTest,EqualityTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CommandIdTest.cs,Guids,The following statement contains a magic number: var unit = EqualityUnit                      .Create(new CommandId(guid' 42))                      .WithEqualValues(new CommandId(guid' 42))                      .WithNotEqualValues(new CommandId(Guid.NewGuid()' 42));
Magic Number,Vim.VisualStudio.UnitTest,EqualityTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CommandIdTest.cs,Guids,The following statement contains a magic number: var unit = EqualityUnit                      .Create(new CommandId(guid' 42))                      .WithEqualValues(new CommandId(guid' 42))                      .WithNotEqualValues(new CommandId(Guid.NewGuid()' 42));
Magic Number,Vim.VisualStudio.UnitTest,EqualityTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CommandIdTest.cs,Guids,The following statement contains a magic number: var unit = EqualityUnit                      .Create(new CommandId(guid' 42))                      .WithEqualValues(new CommandId(guid' 42))                      .WithNotEqualValues(new CommandId(Guid.NewGuid()' 42));
Magic Number,Vim.VisualStudio.UnitTest,EqualityTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CommandIdTest.cs,CommandId,The following statement contains a magic number: var id1 = new CommandId(Guid.NewGuid()' 42);
Magic Number,Vim.VisualStudio.UnitTest,EqualityTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CommandIdTest.cs,CommandId,The following statement contains a magic number: var id2 = new CommandId(id1.Group' 13);
Magic Number,Vim.VisualStudio.UnitTest,EqualityTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CommandIdTest.cs,CommandId,The following statement contains a magic number: var id3 = new CommandId(Guid.NewGuid()' 42);
Magic Number,Vim.VisualStudio.UnitTest,EqualityTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CommandIdTest.cs,Name,The following statement contains a magic number: var id = new CommandId(Guid.NewGuid()' 42);
Magic Number,Vim.VisualStudio.UnitTest,EqualityTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CommandIdTest.cs,KeyBindings,The following statement contains a magic number: var id = new CommandId(Guid.NewGuid()' 42);
Magic Number,Vim.VisualStudio.UnitTest,IsInsertModePreferredTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CSharpAdapterTest.cs,EventPattern_Is,The following statement contains a magic number: var all = new[]                  {                      new { Text = "foo += new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "foo += new EventHandler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo += new Event.Handler(bar)"' NameLength = 3 }'                      new { Text = "foo += new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo+=new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "+= new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "+= Form1_Click;"' NameLength = 11 }'                  };
Magic Number,Vim.VisualStudio.UnitTest,IsInsertModePreferredTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CSharpAdapterTest.cs,EventPattern_Is,The following statement contains a magic number: var all = new[]                  {                      new { Text = "foo += new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "foo += new EventHandler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo += new Event.Handler(bar)"' NameLength = 3 }'                      new { Text = "foo += new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo+=new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "+= new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "+= Form1_Click;"' NameLength = 11 }'                  };
Magic Number,Vim.VisualStudio.UnitTest,IsInsertModePreferredTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CSharpAdapterTest.cs,EventPattern_Is,The following statement contains a magic number: var all = new[]                  {                      new { Text = "foo += new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "foo += new EventHandler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo += new Event.Handler(bar)"' NameLength = 3 }'                      new { Text = "foo += new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo+=new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "+= new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "+= Form1_Click;"' NameLength = 11 }'                  };
Magic Number,Vim.VisualStudio.UnitTest,IsInsertModePreferredTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CSharpAdapterTest.cs,EventPattern_Is,The following statement contains a magic number: var all = new[]                  {                      new { Text = "foo += new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "foo += new EventHandler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo += new Event.Handler(bar)"' NameLength = 3 }'                      new { Text = "foo += new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo+=new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "+= new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "+= Form1_Click;"' NameLength = 11 }'                  };
Magic Number,Vim.VisualStudio.UnitTest,IsInsertModePreferredTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CSharpAdapterTest.cs,EventPattern_Is,The following statement contains a magic number: var all = new[]                  {                      new { Text = "foo += new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "foo += new EventHandler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo += new Event.Handler(bar)"' NameLength = 3 }'                      new { Text = "foo += new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo+=new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "+= new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "+= Form1_Click;"' NameLength = 11 }'                  };
Magic Number,Vim.VisualStudio.UnitTest,IsInsertModePreferredTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CSharpAdapterTest.cs,EventPattern_Is,The following statement contains a magic number: var all = new[]                  {                      new { Text = "foo += new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "foo += new EventHandler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo += new Event.Handler(bar)"' NameLength = 3 }'                      new { Text = "foo += new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo+=new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "+= new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "+= Form1_Click;"' NameLength = 11 }'                  };
Magic Number,Vim.VisualStudio.UnitTest,IsInsertModePreferredTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CSharpAdapterTest.cs,EventPattern_Is,The following statement contains a magic number: var all = new[]                  {                      new { Text = "foo += new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "foo += new EventHandler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo += new Event.Handler(bar)"' NameLength = 3 }'                      new { Text = "foo += new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "foo+=new Event.Handler(bar_foo)"' NameLength = 7 }'                      new { Text = "+= new EventHandler(bar)"' NameLength = 3 }'                      new { Text = "+= Form1_Click;"' NameLength = 11 }'                  };
Magic Number,Vim.VisualStudio.UnitTest,IsInsertModePreferredTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CSharpAdapterTest.cs,EventPattern_Not,The following statement contains a magic number: var all = new[]                  {                      new { Text = "new EventHandler(foo"' NameLength = 3 }'                      new { Text = "+= EventHandler(foo"' NameLength = 3 }'                      new { Text = "+= someExpr"' NameLength = 8 }                  };
Magic Number,Vim.VisualStudio.UnitTest,IsInsertModePreferredTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CSharpAdapterTest.cs,EventPattern_Not,The following statement contains a magic number: var all = new[]                  {                      new { Text = "new EventHandler(foo"' NameLength = 3 }'                      new { Text = "+= EventHandler(foo"' NameLength = 3 }'                      new { Text = "+= someExpr"' NameLength = 8 }                  };
Magic Number,Vim.VisualStudio.UnitTest,IsInsertModePreferredTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CSharpAdapterTest.cs,EventPattern_Not,The following statement contains a magic number: var all = new[]                  {                      new { Text = "new EventHandler(foo"' NameLength = 3 }'                      new { Text = "+= EventHandler(foo"' NameLength = 3 }'                      new { Text = "+= someExpr"' NameLength = 8 }                  };
Magic Number,Vim.VisualStudio.UnitTest,IsInsertModePreferredTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CSharpAdapterTest.cs,VisualStudio2012EventPattern,The following statement contains a magic number: var span = textView.TextBuffer.GetSpan(5' 11);
Magic Number,Vim.VisualStudio.UnitTest,IsInsertModePreferredTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\CSharpAdapterTest.cs,VisualStudio2012EventPattern,The following statement contains a magic number: var span = textView.TextBuffer.GetSpan(5' 11);
Magic Number,Vim.VisualStudio.UnitTest,KeyBindingTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\ExtensionsTest.cs,GetKeyBindings2,The following statement contains a magic number: Assert.Equal(2' list.Count);
Magic Number,Vim.VisualStudio.UnitTest,KeyBindingTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\ExtensionsTest.cs,ParseMultiple1,The following statement contains a magic number: Assert.Equal(2' b.KeyStrokes.Count());
Magic Number,Vim.VisualStudio.UnitTest,KeyBindingTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\ExtensionsTest.cs,ParseMultiple2,The following statement contains a magic number: Assert.Equal(2' b.KeyStrokes.Count());
Magic Number,Vim.VisualStudio.UnitTest,MiscTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\KeyBindingServiceTest.cs,FindConflictingCommands6,The following statement contains a magic number: Assert.Equal(2' list.Count);
Magic Number,Vim.VisualStudio.UnitTest,MiscTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\KeyBindingServiceTest.cs,MiscTest,The following statement contains a magic number: var commandId = new CommandId(Guid.NewGuid()' 42);
Magic Number,Vim.VisualStudio.UnitTest,MiscTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\KeyBindingServiceTest.cs,TwoViews_NoScroll,The following statement contains a magic number: Create(Enumerable.Range(0' 26).Select(x => ((char)('a' + x)).ToString()).ToArray());
Magic Number,Vim.VisualStudio.UnitTest,MiscTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\KeyBindingServiceTest.cs,TwoViews_NoScroll,The following statement contains a magic number: var visualSpan = VimUtil.CreateVisualSpanCharacter(_textBuffer.GetLineSpan(13' 1));
Magic Number,Vim.VisualStudio.UnitTest,MemoryLeakTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\MemoryLeakTest.cs,RunGarbageCollector,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,Vim.VisualStudio.UnitTest,MemoryLeakTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\MemoryLeakTest.cs,RunGarbageCollector,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,Vim.VisualStudio.UnitTest,MemoryLeakTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\MemoryLeakTest.cs,RunGarbageCollector,The following statement contains a magic number: i < 15
Magic Number,Vim.VisualStudio.UnitTest,MemoryLeakTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\MemoryLeakTest.cs,CreateVimBuffer,The following statement contains a magic number: i < 10
Magic Number,Vim.VisualStudio.UnitTest,MemoryLeakTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\MemoryLeakTest.cs,SearchCacheDoesntHoldTheBuffer,The following statement contains a magic number: count < 5
Magic Number,Vim.VisualStudio.UnitTest,SnippetExternalEditAdapterTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\SnippetExternalEditAdapterTest.cs,IsExternalEditMarker_SnippetTypesAreExternalEdits,The following statement contains a magic number: var array = new[] { 15' 16' 26 };
Magic Number,Vim.VisualStudio.UnitTest,SnippetExternalEditAdapterTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\SnippetExternalEditAdapterTest.cs,IsExternalEditMarker_SnippetTypesAreExternalEdits,The following statement contains a magic number: var array = new[] { 15' 16' 26 };
Magic Number,Vim.VisualStudio.UnitTest,SnippetExternalEditAdapterTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\SnippetExternalEditAdapterTest.cs,IsExternalEditMarker_SnippetTypesAreExternalEdits,The following statement contains a magic number: var array = new[] { 15' 16' 26 };
Magic Number,Vim.VisualStudio.UnitTest,SnippetExternalEditAdapterTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\SnippetExternalEditAdapterTest.cs,IsExternalEditMarker_OtherTypesAreNotExternalEdits,The following statement contains a magic number: var array = new[] { 150' 160' 260' 25 };
Magic Number,Vim.VisualStudio.UnitTest,SnippetExternalEditAdapterTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\SnippetExternalEditAdapterTest.cs,IsExternalEditMarker_OtherTypesAreNotExternalEdits,The following statement contains a magic number: var array = new[] { 150' 160' 260' 25 };
Magic Number,Vim.VisualStudio.UnitTest,SnippetExternalEditAdapterTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\SnippetExternalEditAdapterTest.cs,IsExternalEditMarker_OtherTypesAreNotExternalEdits,The following statement contains a magic number: var array = new[] { 150' 160' 260' 25 };
Magic Number,Vim.VisualStudio.UnitTest,SnippetExternalEditAdapterTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\SnippetExternalEditAdapterTest.cs,IsExternalEditMarker_OtherTypesAreNotExternalEdits,The following statement contains a magic number: var array = new[] { 150' 160' 260' 25 };
Magic Number,Vim.VisualStudio.UnitTest,VsCommandTargetTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsCommandTargetTest.cs,CreateEditCommand,The following statement contains a magic number: return new EditCommand(KeyInputUtil.CharToKeyInput('i')' editCommandKind' Guid.Empty' 42);
Magic Number,Vim.VisualStudio.UnitTest,TryCustomProcessTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsCommandTargetTest.cs,TryCustomProcessTest,The following statement contains a magic number: _vimBuffer.LocalSettings.SoftTabStop = 4;
Magic Number,Vim.VisualStudio.UnitTest,TryCustomProcessTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsCommandTargetTest.cs,TabSoftTabStop,The following statement contains a magic number: _vimBuffer.LocalSettings.SoftTabStop = 4;
Magic Number,Vim.VisualStudio.UnitTest,ExecTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsCommandTargetTest.cs,SignatureHelp_ArrowGoToCommandTarget,The following statement contains a magic number: Assert.Equal(2' count);
Magic Number,Vim.VisualStudio.UnitTest,ExecTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsCommandTargetTest.cs,GoToDefinitionShouldClearSelection,The following statement contains a magic number: _nextTarget.Setup(x => x.Exec(                      ref commandGroup'                      It.IsAny<uint>()'                      It.IsAny<uint>()'                      It.IsAny<IntPtr>()'                      It.IsAny<IntPtr>())).Returns(() =>                      {                          _textView.Selection.Select(_textBuffer.GetLineSpan(1' 3));                          return VSConstants.S_OK;                      });
Magic Number,Vim.VisualStudio.UnitTest,BackspaceAndTabTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,IgnoreTab,The following statement contains a magic number: _vimBuffer.LocalSettings.SoftTabStop = 3;
Magic Number,Vim.VisualStudio.UnitTest,BackspaceAndTabTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,IgnoreTab,The following statement contains a magic number: Assert.Equal(new string(' '' 8)' _textBuffer.GetLine(0).GetText());
Magic Number,Vim.VisualStudio.UnitTest,BackspaceAndTabTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,RespectTab,The following statement contains a magic number: _vimBuffer.LocalSettings.SoftTabStop = 3;
Magic Number,Vim.VisualStudio.UnitTest,BackspaceAndTabTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,RespectTab,The following statement contains a magic number: Assert.Equal(new string(' '' 3)' _textBuffer.GetLine(0).GetText());
Magic Number,Vim.VisualStudio.UnitTest,KeyMapTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,ShiftAndReturn,The following statement contains a magic number: Assert.Equal(3' _textBuffer.CurrentSnapshot.LineCount);
Magic Number,Vim.VisualStudio.UnitTest,KeyMapTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,ShiftAndReturn,The following statement contains a magic number: Assert.Equal("dog"' _textBuffer.GetLine(2).GetText());
Magic Number,Vim.VisualStudio.UnitTest,KeyMapTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,ShiftAndTab,The following statement contains a magic number: Assert.Equal(3' _textBuffer.CurrentSnapshot.LineCount);
Magic Number,Vim.VisualStudio.UnitTest,KeyMapTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,ShiftAndTab,The following statement contains a magic number: Assert.Equal("dog"' _textBuffer.GetLine(2).GetText());
Magic Number,Vim.VisualStudio.UnitTest,BackTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,ParenWorksInInsert,The following statement contains a magic number: _textView.MoveCaretTo(7);
Magic Number,Vim.VisualStudio.UnitTest,BackTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,AcrossEntireLine,The following statement contains a magic number: _textView.MoveCaretTo(8);
Magic Number,Vim.VisualStudio.UnitTest,BackTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,AcrossEntireLine,The following statement contains a magic number: Assert.Equal(8 - (i + 1)' _textView.GetCaretPoint().Position);
Magic Number,Vim.VisualStudio.UnitTest,BackTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,AcrossEntireLine,The following statement contains a magic number: i < 8
Magic Number,Vim.VisualStudio.UnitTest,BackTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,AcrossEntireLineWithVeOneMore,The following statement contains a magic number: _textView.MoveCaretTo(8);
Magic Number,Vim.VisualStudio.UnitTest,BackTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,AcrossEntireLineWithVeOneMore,The following statement contains a magic number: Assert.Equal(8 - (i + 1)' _textView.GetCaretPoint().Position);
Magic Number,Vim.VisualStudio.UnitTest,BackTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,AcrossEntireLineWithVeOneMore,The following statement contains a magic number: i < 8
Magic Number,Vim.VisualStudio.UnitTest,BackTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,Repeat,The following statement contains a magic number: _textView.MoveCaretToLine(1' 5);
Magic Number,Vim.VisualStudio.UnitTest,BackTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,Repeat,The following statement contains a magic number: _textView.MoveCaretTo(4);
Magic Number,Vim.VisualStudio.UnitTest,BackTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsIntegrationTest.cs,Repeat,The following statement contains a magic number: Assert.Equal(2' _textView.GetCaretPoint().Position);
Magic Number,Vim.VisualStudio.UnitTest,VsTextInputTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsKeyProcessorTest.cs,UpperControlKeys,The following statement contains a magic number: i <= start + 10
Magic Number,Vim.VisualStudio.UnitTest,VsVimHostTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsVimHostTest.cs,Create,The following statement contains a magic number: uint selectionCookie = 42;
Magic Number,Vim.VisualStudio.UnitTest,VsVimHostTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsVimHostTest.cs,Create,The following statement contains a magic number: uint runningDocumentTableCookie = 86;
Magic Number,Vim.VisualStudio.UnitTest,NavigateToTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsVimHostTest.cs,Simple,The following statement contains a magic number: var point = new VirtualSnapshotPoint(buffer.CurrentSnapshot' 2);
Magic Number,Vim.VisualStudio.UnitTest,NavigateToTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\VsVimHostTest.cs,Simple,The following statement contains a magic number: _host.NavigateTo(new VirtualSnapshotPoint(buffer.CurrentSnapshot' 2));
Magic Number,Vim.VisualStudio.UnitTest.Utils,ReSharperCommandTargetSimulation,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\Utils\ReSharperCommandTargetSimulation.cs,TryExecBack,The following statement contains a magic number: caretPoint.Position < 2 ||                  caretPoint.GetChar() != ')' ||                  caretPoint.Subtract(1).GetChar() != '('
Magic Number,Vim.VisualStudio.UnitTest.Utils,ReSharperCommandTargetSimulation,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\Utils\ReSharperCommandTargetSimulation.cs,TryExecBack,The following statement contains a magic number: var span = new Span(caretPoint.Position - 1' 2);
Missing Default,Vim.VisualStudio.UnitTest.Utils,SimulationCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VsVimSharedTest\Utils\VsSimulation.cs,TryExec,The following switch statement is missing a default case: switch (keyInput.Key)                  {                      case VimKey.Left:                          _editorOperatins.MoveToPreviousCharacter(extendSelection: keyInput.KeyModifiers == VimKeyModifiers.Shift);                          return true;                      case VimKey.Right:                          _editorOperatins.MoveToNextCharacter(extendSelection: keyInput.KeyModifiers == VimKeyModifiers.Shift);                          return true;                      case VimKey.Up:                          _editorOperatins.MoveLineUp(extendSelection: keyInput.KeyModifiers == VimKeyModifiers.Shift);                          return true;                      case VimKey.Down:                          _editorOperatins.MoveLineDown(extendSelection: keyInput.KeyModifiers == VimKeyModifiers.Shift);                          return true;                      case VimKey.Back:                          _editorOperatins.Backspace();                          return true;                      case VimKey.Tab:                          if (keyInput.KeyModifiers == VimKeyModifiers.Shift)                          {                              _editorOperatins.Unindent();                          }                          else                          {                              _editorOperatins.Indent();                          }                          return true;                  }
