Implementation smell,Namespace,Class,File,Method,Description
Complex Method,VimApp,VimAppHost,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\VimAppHost.cs,MoveFocus,Cyclomatic complexity of the method is 11
Complex Method,VimApp.Implementation.NewLineDisplay,NewLineDisplay,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\Implementation\NewLineDisplay\NewLineDisplay.cs,GetLineBreakText,Cyclomatic complexity of the method is 10
Long Parameter List,VimApp,VimAppHost,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\VimAppHost.cs,VimAppHost,The method has 7 parameters.
Long Identifier,VimApp,VimAppHost,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\VimAppHost.cs,VimAppHost,The length of the parameter editorOperationsFactoryService is 30.
Long Statement,VimApp,VimAppHost,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\VimAppHost.cs,LoadFileIntoNewWindow,The length of the statement  "		var textDocument = TextDocumentFactoryService.CreateAndLoadTextDocument (filePath' TextBufferFactoryService.TextContentType); " is 125.
Long Statement,VimApp,VimAppHost,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\VimAppHost.cs,TryGetVimViewInfo,The length of the statement  "	vimViewInfo = _vimWindowManager.VimWindowList.SelectMany (x => x.VimViewInfoList).Where (x => x.TextViewHost.TextView == textView).FirstOrDefault (); " is 149.
Long Statement,VimApp,VimAppHost,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\VimAppHost.cs,TryLoadPathAsFile,The length of the statement  "		var textDocument = TextDocumentFactoryService.CreateAndLoadTextDocument (filePath' TextBufferFactoryService.TextContentType); " is 125.
Long Statement,VimApp,MainWindow,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\MainWindow.xaml.cs,CreateTextView,The length of the statement  "	return CreateTextView (textBuffer' PredefinedTextViewRoles.PrimaryDocument' PredefinedTextViewRoles.Document' PredefinedTextViewRoles.Editable' PredefinedTextViewRoles.Interactive' PredefinedTextViewRoles.Structured' PredefinedTextViewRoles.Analyzable); " is 253.
Long Statement,VimApp,MainWindow,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\MainWindow.xaml.cs,CreateTextViewHost,The length of the statement  "	classificationFormatMap.DefaultTextProperties = TextFormattingRunProperties.CreateTextFormattingRunProperties (new Typeface (Constants.FontFamily' FontStyles.Normal' FontWeights.Normal' FontStretches.Normal)' Constants.FontSize' Colors.Black); " is 243.
Long Statement,VimApp,MainWindow,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\MainWindow.xaml.cs,OnOpenClick,The length of the statement  "		var textDocument = textDocumentFactoryService.CreateAndLoadTextDocument (filePath' _editorHost.ContentTypeRegistryService.GetContentType ("text")); " is 147.
Empty Catch Block,VimApp.Implementation.NewLineDisplay,NewLineDisplay,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\Implementation\NewLineDisplay\NewLineDisplay.cs,CreateVisuals,The method has an empty catch block.
Magic Number,VimApp,MainWindow,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\MainWindow.xaml.cs,BuildGrid,The following statement contains a magic number: for (int i = 0; i < viewInfoList.Count; i++) {  	var viewInfo = viewInfoList [i];  	var textViewHost = viewInfo.TextViewHost;  	var control = textViewHost.HostControl;  	control.SetValue (Grid.RowProperty' row++);  	control.SetValue (Grid.ColumnProperty' 0);  	grid.Children.Add (control);  	if (i + 1 < viewInfoList.Count) {  		var splitter = new GridSplitter ();  		splitter.ResizeDirection = GridResizeDirection.Rows;  		splitter.HorizontalAlignment = HorizontalAlignment.Stretch;  		splitter.VerticalAlignment = VerticalAlignment.Stretch;  		splitter.ShowsPreview = true;  		splitter.SetValue (Grid.RowProperty' row++);  		splitter.SetValue (Grid.ColumnProperty' 0);  		splitter.Height = 5;  		splitter.Background = Brushes.Black;  		grid.Children.Add (splitter);  	}  }  
Magic Number,VimApp,MainWindow,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\MainWindow.xaml.cs,BuildGrid,The following statement contains a magic number: if (i + 1 < viewInfoList.Count) {  	var splitter = new GridSplitter ();  	splitter.ResizeDirection = GridResizeDirection.Rows;  	splitter.HorizontalAlignment = HorizontalAlignment.Stretch;  	splitter.VerticalAlignment = VerticalAlignment.Stretch;  	splitter.ShowsPreview = true;  	splitter.SetValue (Grid.RowProperty' row++);  	splitter.SetValue (Grid.ColumnProperty' 0);  	splitter.Height = 5;  	splitter.Background = Brushes.Black;  	grid.Children.Add (splitter);  }  
Magic Number,VimApp,MainWindow,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\MainWindow.xaml.cs,BuildGrid,The following statement contains a magic number: splitter.Height = 5;  
Magic Number,VimApp,MainWindow,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\MainWindow.xaml.cs,OnRunGarbageCollectorClick,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	Dispatcher.DoEvents ();  	GC.Collect (2' GCCollectionMode.Forced);  	GC.WaitForPendingFinalizers ();  	GC.Collect (2' GCCollectionMode.Forced);  	GC.Collect ();  }  
Magic Number,VimApp,MainWindow,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\MainWindow.xaml.cs,OnRunGarbageCollectorClick,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	Dispatcher.DoEvents ();  	GC.Collect (2' GCCollectionMode.Forced);  	GC.WaitForPendingFinalizers ();  	GC.Collect (2' GCCollectionMode.Forced);  	GC.Collect ();  }  
Magic Number,VimApp,MainWindow,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\MainWindow.xaml.cs,OnRunGarbageCollectorClick,The following statement contains a magic number: for (var i = 0; i < 15; i++) {  	Dispatcher.DoEvents ();  	GC.Collect (2' GCCollectionMode.Forced);  	GC.WaitForPendingFinalizers ();  	GC.Collect (2' GCCollectionMode.Forced);  	GC.Collect ();  }  
Magic Number,VimApp,MainWindow,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\MainWindow.xaml.cs,OnRunGarbageCollectorClick,The following statement contains a magic number: GC.Collect (2' GCCollectionMode.Forced);  
Magic Number,VimApp,MainWindow,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\MainWindow.xaml.cs,OnRunGarbageCollectorClick,The following statement contains a magic number: GC.Collect (2' GCCollectionMode.Forced);  
Magic Number,VimApp,MainWindow,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\MainWindow.xaml.cs,OnInsertControlCharactersClick,The following statement contains a magic number: for (int i = 0; i < 32; i++) {  	builder.AppendFormat ("{0} - {1}{2}"' i' (char)i' Environment.NewLine);  }  
Magic Number,VimApp.Implementation.NewLineDisplay,NewLineDisplay,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\Implementation\NewLineDisplay\NewLineDisplay.cs,GetLineBreakText,The following statement contains a magic number: switch (snapshot [position]) {  case '\r':  	if (position + 1 < snapshot.Length && '\n' == snapshot [position + 1]) {  		return @"\r\n";  	}  	return @"\r";  case '\n':  	return @"\n";  case '\u2028':  	return @"\u2028";  case '\u2029':  	return @"\u2029";  default:  	if (snapshot [position] == (char)85) {  		return "(char)85";  	}  	return null;  }  
Magic Number,VimApp.Implementation.NewLineDisplay,NewLineDisplay,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\Implementation\NewLineDisplay\NewLineDisplay.cs,GetLineBreakText,The following statement contains a magic number: if (snapshot [position] == (char)85) {  	return "(char)85";  }  
Missing Default,VimApp,VimAppHost,F:\newReposMay17\jaredpar_VsVim\Src\VimApp\VimAppHost.cs,MoveFocus,The following switch statement is missing a default case: switch (direction) {  case Direction.Up:  	target = i - 1;  	break;  case Direction.Down:  	target = i + 1;  	break;  }  
