Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Vim.UnitTest.Mock,MockKeyboardDevice,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockKeyboardDevice.cs,TryGetKeyForKeyInput,Cyclomatic complexity of the method is 16
Long Parameter List,Vim.UnitTest,EqualityUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\EqualityUtil.cs,RunAll,The method has 5 parameters. Parameters: compEqualsOperator' compNotEqualsOperator' skipOperators' skipEquatable' values
Long Parameter List,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,AddKeyMapping,The method has 5 parameters. Parameters: keyMap' lhs' rhs' allowRemap' mode
Long Parameter List,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,GetBlockSpan,The method has 5 parameters. Parameters: vimBuffer' column' length' startLine' lineCount
Long Parameter List,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,GetBlockSpan,The method has 6 parameters. Parameters: textBuffer' column' length' startLine' lineCount' tabStop
Long Parameter List,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,GetBlock,The method has 5 parameters. Parameters: textBuffer' column' length' startLine' lineCount
Long Parameter List,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,GetVisualSpanBlock,The method has 6 parameters. Parameters: textBuffer' column' length' startLine' lineCount' tabStop
Long Parameter List,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,GetVisualSpanBlock,The method has 6 parameters. Parameters: textView' column' length' startLine' lineCount' tabStop
Long Parameter List,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,GetBlockSpan,The method has 5 parameters. Parameters: textView' column' length' startLine' lineCount
Long Parameter List,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,GetBlock,The method has 5 parameters. Parameters: textView' column' length' startLine' lineCount
Long Parameter List,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,SetLocalMark,The method has 5 parameters. Parameters: markMap' c' vimBufferData' line' column
Long Parameter List,Vim.UnitTest,VimTestBase,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\VimTestBase.cs,CreateVimBufferData,The method has 6 parameters. Parameters: textView' statusUtil' jumpList' windowSettings' caretRegisterMap' selectionUtil
Long Parameter List,Vim.UnitTest,VimTestBase,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\VimTestBase.cs,CreateVimBufferData,The method has 7 parameters. Parameters: vimTextBuffer' textView' statusUtil' jumpList' windowSettings' caretRegisterMap' selectionUtil
Long Parameter List,Vim.UnitTest,VimTestBase,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\VimTestBase.cs,CreateCommandUtil,The method has 5 parameters. Parameters: vimBufferData' motionUtil' operations' foldManager' insertUtil
Long Parameter List,Vim.UnitTest,VimUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\VimUtil.cs,CreateSubstituteArgument,The method has 5 parameters. Parameters: span' search' replace' flags' range
Long Parameter List,Vim.UnitTest,VimUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\VimUtil.cs,CreateMotionResult,The method has 5 parameters. Parameters: span' isForward' motionKind' flags' desiredColumn
Long Parameter List,Vim.UnitTest.Mock,VsVimTestExtensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\Extensions.cs,SetupCommandVisual,The method has 5 parameters. Parameters: commandUtil' visualCommand' count' registerName' visualSpan
Long Parameter List,Vim.UnitTest.Mock,MockObjectFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockObjectFactory.cs,CreateVim,The method has 13 parameters. Parameters: registerMap' map' globalSettings' globalAbbreviationMap' globalKeyMap' host' keyboardDevice' mouseDevice' vimData' macroRecorder' searchService' variableMap' factory
Long Parameter List,Vim.UnitTest.Mock,MockObjectFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockObjectFactory.cs,CreateVimBuffer,The method has 9 parameters. Parameters: textView' name' vim' jumpList' localSettings' incrementalSearch' motionUtil' wordUtil' factory
Long Parameter List,Vim.UnitTest.Mock,MockObjectFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockObjectFactory.cs,CreateVimTextBuffer,The method has 8 parameters. Parameters: textBuffer' localSettings' localAbbreviationMap' localKeyMap' vim' undoRedoOperations' wordUtil' factory
Long Parameter List,Vim.UnitTest.Mock,MockObjectFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockObjectFactory.cs,CreateVimBufferData,The method has 8 parameters. Parameters: vimTextBuffer' textView' jumpList' statusUtil' windowSettings' caretRegisterMap' selectionUtil' factory
Long Parameter List,Vim.UnitTest.Mock,MockObjectFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockObjectFactory.cs,CreateTextView,The method has 10 parameters. Parameters: textBuffer' caret' selection' textViewRoleSet' textViewModel' editorOptions' bufferGraph' textDataModel' propertyCollection' factory
Long Parameter List,Vim.UnitTest.Mock,MockObjectFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockObjectFactory.cs,CreateTextViewWithVisibleLines,The method has 5 parameters. Parameters: textBuffer' startLine' endLine' caretPosition' factory
Long Parameter List,Vim.UnitTest.Mock,MockVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockVimHost.cs,FindInFiles,The method has 5 parameters. Parameters: pattern' matchCase' filesOfType' flags' onFindDone
Long Parameter List,Vim.UnitTest.Utilities,WpfTestCase,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTestCase.cs,WpfTestCase,The method has 5 parameters. Parameters: diagnosticMessageSink' defaultMethodDisplay' defaultMethodDisplayOptions' testMethod' testMethodArguments
Long Parameter List,Vim.UnitTest.Utilities,WpfTestCase,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTestCase.cs,RunAsync,The method has 5 parameters. Parameters: diagnosticMessageSink' messageBus' constructorArguments' aggregator' cancellationTokenSource
Long Parameter List,Vim.UnitTest.Utilities,WpfTestCaseRunner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTestCaseRunner.cs,WpfTestCaseRunner,The method has 9 parameters. Parameters: sharedData' testCase' displayName' skipReason' constructorArguments' testMethodArguments' messageBus' aggregator' cancellationTokenSource
Long Parameter List,Vim.UnitTest.Utilities,WpfTestCaseRunner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTestCaseRunner.cs,CreateTestRunner,The method has 10 parameters. Parameters: test' messageBus' testClass' constructorArguments' testMethod' testMethodArguments' skipReason' beforeAfterAttributes' aggregator' cancellationTokenSource
Long Parameter List,Vim.UnitTest.Utilities,WpfTestInvoker,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTestInvoker.cs,WpfTestInvoker,The method has 10 parameters. Parameters: sharedData' test' messageBus' testClass' constructorArguments' testMethod' testMethodArguments' beforeAfterAttributes' aggregator' cancellationTokenSource
Long Parameter List,Vim.UnitTest.Utilities,WpfTestRunner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTestRunner.cs,WpfTestRunner,The method has 11 parameters. Parameters: sharedData' test' messageBus' testClass' constructorArguments' testMethod' testMethodArguments' skipReason' beforeAfterAttributes' aggregator' cancellationTokenSource
Long Parameter List,Vim.UnitTest.Utilities,WpfTheoryTestCase,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTheoryTestCase.cs,RunAsync,The method has 5 parameters. Parameters: diagnosticMessageSink' messageBus' constructorArguments' aggregator' cancellationTokenSource
Long Parameter List,Vim.UnitTest.Utilities,WpfTheoryTestCaseRunner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTheoryTestCaseRunner.cs,WpfTheoryTestCaseRunner,The method has 9 parameters. Parameters: sharedData' testCase' displayName' skipReason' constructorArguments' diagnosticMessageSink' messageBus' aggregator' cancellationTokenSource
Long Parameter List,Vim.UnitTest.Utilities,WpfTheoryTestCaseRunner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTheoryTestCaseRunner.cs,CreateTestRunner,The method has 10 parameters. Parameters: test' messageBus' testClass' constructorArguments' testMethod' testMethodArguments' skipReason' beforeAfterAttributes' aggregator' cancellationTokenSource
Long Identifier,Vim.UnitTest,EqualityUtil<T>,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\EqualityUtil.cs,,The length of the parameter _compareWithInequalityOperator is 30.
Long Identifier,Vim.UnitTest,VimEditorHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\VimEditorHost.cs,,The length of the parameter _classificationFormatMapService is 31.
Long Identifier,Vim.UnitTest.Exports,VimErrorDetector,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Exports\VimErrorHandler.cs,,The length of the parameter _textBufferUndoManagerProvider is 30.
Long Identifier,Vim.VisualStudio.Specific.Implementation.WordCompletion,VimWordCompletionUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimSpecific\Implementation\WordCompletion\VimWordCompletionUtil.cs,VimWordCompletionUtil,The length of the parameter intellisenseSessionStackMapService is 34.
Long Identifier,Vim.VisualStudio.Specific.Implementation.WordCompletion.Legacy,WordLegacyCompletionSessionFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimSpecific\Implementation\WordCompletion\Legacy\WordLegacyCompletionSessionFactory.cs,WordLegacyCompletionSessionFactory,The length of the parameter intellisenseSessionStackMapService is 34.
Long Identifier,Vim.VisualStudio.Specific.Implementation.WordCompletion.Legacy,WordLegacyCompletionSessionFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimSpecific\Implementation\WordCompletion\Legacy\WordLegacyCompletionSessionFactory.cs,,The length of the parameter _intellisenseSessionStackMapService is 35.
Long Statement,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,SelectAndMoveCaret,The length of the statement  "            TextViewUtil.MoveCaretToVirtualPointRaw(textView' selection.GetCaretVirtualPoint(SelectionKind.Inclusive)' MoveCaretFlags.EnsureOnScreen); " is 138.
Long Statement,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,ScrollToTop,The length of the statement  "            textView.ViewScroller.ScrollViewportVerticallyByLines(ScrollDirection.Up' textView.TextBuffer.CurrentSnapshot.LineCount); " is 121.
Long Statement,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,ScrollToBottom,The length of the statement  "            textView.ViewScroller.ScrollViewportVerticallyByLines(ScrollDirection.Down' textView.TextBuffer.CurrentSnapshot.LineCount); " is 123.
Long Statement,Vim.UnitTest,TestableSynchronizationContext,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\TestableSynchronizationContext.cs,Uninstall,The length of the statement  "                throw new InvalidOperationException($"Cannot uninstall because {nameof(PostedCallbackCount)} is {PostedCallbackCount}"); " is 120.
Long Statement,Vim.UnitTest,VimUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\VimUtil.cs,CreateMotionData,The length of the statement  "            return CreateMotionData(motion' new MotionArgument(MotionContext.AfterOperator' FSharpOption.Create(count)' FSharpOption<int>.None)); " is 133.
Long Statement,Vim.UnitTest.Exports,VimErrorDetector,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Exports\VimErrorHandler.cs,HandleError,The length of the statement  "            if (exception.Message.Contains("Microsoft.VisualStudio.Language.CodeCleanUp.CodeCleanUpFixerRegistrationService.ProfileService") || " is 131.
Long Statement,Vim.UnitTest.Exports,VimErrorDetector,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Exports\VimErrorHandler.cs,HandleError,The length of the statement  "                exception.Message.Contains("Microsoft.VisualStudio.Language.CodeCleanUp.CodeCleanUpFixerRegistrationService.mefRegisteredCodeCleanupProviders") || " is 146.
Long Statement,Vim.UnitTest.Exports,VimErrorDetector,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Exports\VimErrorHandler.cs,HandleError,The length of the statement  "                exception.StackTrace.Contains("Microsoft.VisualStudio.UI.Text.Wpf.FileHealthIndicator.Implementation.FileHealthIndicatorButton..ctor")) " is 135.
Long Statement,Vim.UnitTest.Mock,MockObjectFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockObjectFactory.cs,CreateVimTextBuffer,The length of the statement  "            localAbbreviationMap = localAbbreviationMap ?? new LocalAbbreviationMap(localKeyMap' vim.GlobalAbbreviationMap' wordUtil); " is 122.
Long Statement,Vim.UnitTest.Utilities,WpfTheoryDiscoverer,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfFactDiscoverer.cs,CreateTestCasesForDataRow,The length of the statement  "            var testCase = new WpfTestCase(_diagnosticMessageSink' discoveryOptions.MethodDisplayOrDefault()' discoveryOptions.MethodDisplayOptionsOrDefault()' testMethod' dataRow); " is 169.
Long Statement,Vim.UnitTest.Utilities,WpfTheoryDiscoverer,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfFactDiscoverer.cs,CreateTestCasesForTheory,The length of the statement  "            var testCase = new WpfTheoryTestCase(_diagnosticMessageSink' discoveryOptions.MethodDisplayOrDefault()' discoveryOptions.MethodDisplayOptionsOrDefault()' testMethod); " is 166.
Long Statement,Vim.UnitTest.Utilities,WpfTestCase,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTestCase.cs,RunAsync,The length of the statement  "            var runner = new WpfTestCaseRunner(SharedData' this' DisplayName' SkipReason' constructorArguments' TestMethodArguments' messageBus' aggregator' cancellationTokenSource); " is 170.
Long Statement,Vim.UnitTest.Utilities,WpfTestCaseRunner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTestCaseRunner.cs,CreateTestRunner,The length of the statement  "            var runner = new WpfTestRunner(SharedData' test' messageBus' testClass' constructorArguments' testMethod' testMethodArguments' skipReason' beforeAfterAttributes' aggregator' cancellationTokenSource); " is 199.
Long Statement,Vim.UnitTest.Utilities,WpfTestRunner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTestRunner.cs,InvokeTestMethodAsync,The length of the statement  "                    // Just call back into the normal xUnit dispatch process now that we are on an STA Thread with no synchronization context. " is 122.
Long Statement,Vim.UnitTest.Utilities,WpfTestRunner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTestRunner.cs,InvokeTestMethodAsync,The length of the statement  "                    var invoker = new XunitTestInvoker(Test' MessageBus' TestClass' ConstructorArguments' TestMethod' TestMethodArguments' BeforeAfterAttributes' aggregator' CancellationTokenSource); " is 179.
Long Statement,Vim.UnitTest.Utilities,WpfTheoryTestCase,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTheoryTestCase.cs,RunAsync,The length of the statement  "            var runner = new WpfTheoryTestCaseRunner(SharedData' this' DisplayName' SkipReason' constructorArguments' diagnosticMessageSink' messageBus' aggregator' cancellationTokenSource); " is 178.
Long Statement,Vim.UnitTest.Utilities,WpfTheoryTestCaseRunner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Utilities\WpfTheoryTestCaseRunner.cs,CreateTestRunner,The length of the statement  "            var runner = new WpfTestRunner(SharedData' test' messageBus' testClass' constructorArguments' testMethod' testMethodArguments' skipReason' beforeAfterAttributes' aggregator' cancellationTokenSource); " is 199.
Empty Catch Block,Vim.VisualStudio.Specific.Implementation.WordCompletion.Legacy,WordLegacyCompletionPresenterProvider,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimSpecific\Implementation\WordCompletion\Legacy\WordLegacyCompletionPresenterProvider.cs,TryCreateIntellisensePresenter,The method has an empty catch block.
Magic Number,Vim.UnitTest,EqualityUtil<T>,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\EqualityUtil.cs,ObjectEqualsDifferentType,The following statement contains a magic number: Assert.False(value.Equals(42));
Magic Number,Vim.UnitTest,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Extensions.cs,ForceLayout,The following statement contains a magic number: var method = wpfTextView                  .GetType()                  .GetMethods(BindingFlags.NonPublic | BindingFlags.Instance)                  .Single(x => x.Name == "PerformLayout" && x.GetParameters().Length == 2);
Magic Number,Vim.UnitTest.Exports,TestableMouseDevice,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Exports\TestableMouseDevice.cs,GetPosition,The following statement contains a magic number: var yCoordinate = (textViewLine.Top + textViewLine.Bottom) / 2 - textView.ViewportTop;
Magic Number,Vim.UnitTest.Mock,MockKeyboardDevice,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockKeyboardDevice.cs,TryGetKeyForKeyInput,The following statement contains a magic number: rawChar >= 1 && rawChar <= 26
Magic Number,Vim.UnitTest.Mock,MockObjectFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockObjectFactory.cs,CreateTextView,The following statement contains a magic number: textBuffer = textBuffer ?? CreateTextBuffer(100' factory: factory).Object;
Missing Default,Vim.UnitTest,KeyboardInputSimulation,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\KeyboardInputSimulation.cs,VimKeyToKey,The following switch statement is missing a default case: switch (vimKey)              {                  case VimKey.Escape:                      return Key.Escape;                  case VimKey.Back:                      return Key.Back;                  case VimKey.Up:                      return Key.Up;                  case VimKey.Right:                      return Key.Right;                  case VimKey.Down:                      return Key.Down;                  case VimKey.Left:                      return Key.Left;              }
Missing Default,Vim.UnitTest,VimTestBase,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\VimTestBase.cs,FormatException,The following switch statement is missing a default case: switch (ex)                  {                      case AggregateException aggregate:                          builder.AppendLine("Begin aggregate exceptions");                          foreach (var inner in aggregate.InnerExceptions)                          {                              appendException(inner);                          }                          builder.AppendLine("End aggregate exceptions");                          break;                  }
Missing Default,Vim.UnitTest.Mock,MockKeyboardDevice,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockKeyboardDevice.cs,GetKeyStatesFromSystem,The following switch statement is missing a default case: switch (key)              {                  case Key.LeftAlt:                  case Key.RightAlt:                      hasMod = HasModifierKey(ModifierKeys.Alt);                      break;                  case Key.LeftCtrl:                  case Key.RightCtrl:                      hasMod = HasModifierKey(ModifierKeys.Control);                      break;                  case Key.LeftShift:                  case Key.RightShift:                      hasMod = HasModifierKey(ModifierKeys.Shift);                      break;              }
Missing Default,Vim.UnitTest.Mock,MockKeyboardDevice,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VimTestUtils\Mock\MockKeyboardDevice.cs,TryGetKeyForKeyInput,The following switch statement is missing a default case: switch (keyInput.Key)              {                  case VimKey.Tab:                      key = Key.Tab;                      return true;                  case VimKey.Left:                      key = Key.Left;                      return true;                  case VimKey.Right:                      key = Key.Right;                      return true;                  case VimKey.Up:                      key = Key.Up;                      return true;                  case VimKey.Down:                      key = Key.Down;                      return true;                  case VimKey.Escape:                      key = Key.Escape;                      return true;                  case VimKey.Enter:                      key = Key.Enter;                      return true;                  case VimKey.Delete:                      key = Key.Delete;                      return true;                  case VimKey.Back:                      key = Key.Back;                      return true;                  case VimKey.Home:                      key = Key.Home;                      return true;                  case VimKey.End:                      key = Key.End;                      return true;                  case VimKey.LineFeed:                      key = Key.J;                      modKeys = ModifierKeys.Control;                      return true;              }
