Implementation smell,Namespace,Class,File,Method,Description
Long Method,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,The method has 159 lines of code.
Complex Method,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,Cyclomatic complexity of the method is 31
Complex Method,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,Cyclomatic complexity of the method is 12
Complex Method,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,Cyclomatic complexity of the method is 14
Complex Method,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,Cyclomatic complexity of the method is 8
Complex Method,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,NavigateToLocation,Cyclomatic complexity of the method is 9
Complex Method,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,GoToWindow,Cyclomatic complexity of the method is 16
Complex Method,Vim.VisualStudio.Implementation.Misc,KeyBindingService,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\KeyBindingService.cs,FixKeyMappingIssue,Cyclomatic complexity of the method is 8
Complex Method,Vim.VisualStudio.Implementation.Misc,StandardCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\StandardCommandTarget.cs,TryProcessWithBuffer,Cyclomatic complexity of the method is 9
Complex Method,Vim.VisualStudio.Implementation.Misc,StandardCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\StandardCommandTarget.cs,Exec,Cyclomatic complexity of the method is 13
Complex Method,Vim.VisualStudio.Implementation.OptionPages,KeyBindingHandledByOption,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyBindingHandledByOption.cs,KeyBindingHandledByOption,Cyclomatic complexity of the method is 10
Complex Method,Vim.VisualStudio.Implementation.ReSharper,ResharperVersionUtility,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ReSharper\ResharperVersionutility.cs,DetectFromAssembly,Cyclomatic complexity of the method is 12
Long Parameter List,Vim.VisualStudio,HostFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\HostFactory.cs,HostFactory,The method has 11 parameters. Parameters: vim' adaptersFactory' displayWindowBrokerFactoryService' textManager' adapter' protectedOperations' bufferCoordinatorFactory' keyUtil' editorToSettingSynchronizer' vimApplicationSettings' commandTargetFactoryList
Long Parameter List,Vim.VisualStudio,NativeMethods,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\NativeMethods.cs,CallWindowProc,The method has 5 parameters. Parameters: previousWindowProc' hWnd' Msg' wParam' lParam
Long Parameter List,Vim.VisualStudio,OleCommandData,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandData.cs,OleCommandData,The method has 5 parameters. Parameters: commandGroup' commandId' commandExecOpt' variantIn' variantOut
Long Parameter List,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,The method has 5 parameters. Parameters: commandGroup' commandId' pVariableIn' modifiers' command
Long Parameter List,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,The method has 5 parameters. Parameters: commandGroup' commandId' variantIn' keyInput' kind
Long Parameter List,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,The method has 6 parameters. Parameters: commandGroup' commandId' variantIn' keyInput' kind' isRawText
Long Parameter List,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,The method has 5 parameters. Parameters: cmdId' variantIn' keyInput' kind' isRawText
Long Parameter List,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,The method has 5 parameters. Parameters: cmdId' variantIn' ki' kind' isRawText
Long Parameter List,Vim.VisualStudio,VsCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsCommandTarget.cs,VsCommandTarget,The method has 6 parameters. Parameters: vimBufferCoordinator' textManager' vsAdapter' broker' keyUtil' vimApplicationSettings
Long Parameter List,Vim.VisualStudio,VsCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsCommandTarget.cs,VsCommandTarget,The method has 8 parameters. Parameters: vimBufferCoordinator' textManager' vsAdapter' broker' keyUtil' vimApplicationSettings' nextTarget' commandTargets
Long Parameter List,Vim.VisualStudio,VsCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsCommandTarget.cs,Create,The method has 8 parameters. Parameters: vimBufferCoordinator' vsTextView' textManager' adapter' broker' keyUtil' vimApplicationSettings' commandTargetFactoryList
Long Parameter List,Vim.VisualStudio,VsCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsCommandTarget.cs,Exec,The method has 5 parameters. Parameters: commandGroup' commandId' commandExecOpt' variantIn' variantOut
Long Parameter List,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,VsVimHost,The method has 18 parameters. Parameters: adapter' textBufferFactoryService' textEditorFactoryService' textDocumentFactoryService' undoManagerProvider' editorAdaptersFactoryService' editorOperationsFactoryService' smartIndentationService' textManager' sharedServiceFactory' vimApplicationSettings' extensionAdapterBroker' protectedOperations' markDisplayUtil' controlCharUtil' commandDispatcher' serviceProvider' clipboardDevice
Long Parameter List,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,FindInFiles,The method has 5 parameters. Parameters: pattern' matchCase' filesOfType' flags' action
Long Parameter List,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,OnSelectionChanged,The method has 8 parameters. Parameters: pHierOld' itemidOld' pMISOld' pSCOld' pHierNew' itemidNew' pMISNew' pSCNew
Long Parameter List,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,OnAfterAttributeChangeEx,The method has 8 parameters. Parameters: docCookie' grfAttribs' pHierOld' itemidOld' pszMkDocumentOld' pHierNew' itemidNew' pszMkDocumentNew
Long Parameter List,Vim.VisualStudio.Implementation.ExternalEdit,ExternalEditMonitor,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ExternalEdit\ExternalEditMonitor.cs,ExternalEditMonitor,The method has 6 parameters. Parameters: vimApplicationSettings' buffer' protectedOperations' vsTextLines' taggerCollection' externalEditorAdapters
Long Parameter List,Vim.VisualStudio.Implementation.Misc,FallbackKeyProcessor,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\FallbackKeyProcessor.cs,FallbackKeyProcessor,The method has 7 parameters. Parameters: vsShell' dte' keyUtil' vimApplicationSettings' textView' vimBuffer' scopeData
Long Parameter List,Vim.VisualStudio.Implementation.Misc,FallbackKeyProcessorProvider,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\FallbackKeyProcessorProvider.cs,FallbackKeyProcessorProvider,The method has 5 parameters. Parameters: serviceProvider' keyUtil' vimApplicationSettings' vim' vsAdapter
Long Parameter List,Vim.VisualStudio.Implementation.Misc,KeyBindingService,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\KeyBindingService.cs,KeyBindingService,The method has 5 parameters. Parameters: dte' keyboardOptionsProvider' protectedOperations' vimApplicationSettings' scopeData
Long Parameter List,Vim.VisualStudio.Implementation.Misc,ScopeData,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\ScopeData.cs,TryGetKeyBindingScopeName,The method has 5 parameters. Parameters: vsShell' keyBindingsKey' subKeyName' id' localizedScopeName
Long Parameter List,Vim.VisualStudio.Implementation.Misc,StandardCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\StandardCommandTarget.cs,StandardCommandTarget,The method has 5 parameters. Parameters: vimBufferCoordinator' textManager' commonOperations' broker' nextOleCommandTarget
Long Parameter List,Vim.VisualStudio.Implementation.Misc,StatusBarAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\StatusBarAdapter.cs,StatusBarAdapter,The method has 5 parameters. Parameters: vim' vimProtectedOperations' commandMarginUtil' vimApplicationSettings' vsServiceProvider
Long Parameter List,Vim.VisualStudio.Implementation.Misc,TextManager,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\TextManager.cs,TextManager,The method has 6 parameters. Parameters: adapter' textDocumentFactoryService' textBufferFactoryService' sharedServiceFactory' peekBroker' serviceProvider
Long Parameter List,Vim.VisualStudio.Implementation.Misc,TextManager,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\TextManager.cs,TextManager,The method has 6 parameters. Parameters: adapter' textDocumentFactoryService' textBufferFactoryService' sharedService' peekBroker' serviceProvider
Long Parameter List,Vim.VisualStudio.Implementation.Misc,VsAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\VsAdapter.cs,VsAdapter,The method has 5 parameters. Parameters: editorAdaptersFactoryService' editorOptionsFactoryService' incrementalSearchFactoryService' extensionAdapterBroker' vsServiceProvider
Long Parameter List,Vim.VisualStudio.Implementation.Misc,VsVimKeyProcessorProvider,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\VsVimKeyProcessorProvider.cs,VsVimKeyProcessorProvider,The method has 5 parameters. Parameters: vim' adapter' bufferCoordinatorFactory' keyUtil' reportDesignerUtil
Long Identifier,Vim.VisualStudio,VsVimConstants,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Constants.cs,,The length of the parameter TextViewRoleEmbeddedPeekTextView is 32.
Long Identifier,Vim.VisualStudio,VsVimConstants,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Constants.cs,,The length of the parameter ToastMarginFormatDefinitionName is 31.
Long Identifier,Vim.VisualStudio,HostFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\HostFactory.cs,HostFactory,The length of the parameter displayWindowBrokerFactoryService is 33.
Long Identifier,Vim.VisualStudio,HostFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\HostFactory.cs,,The length of the parameter _displayWindowBrokerFactoryServcie is 34.
Long Identifier,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,VsVimHost,The length of the parameter editorOperationsFactoryService is 30.
Long Identifier,Vim.VisualStudio.Implementation.ConflictingKey,ConflictingKeyBindingMarginProvider,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ConflictingKey\ConflictingKeyBindingMarginProvider.cs,ConflictingKeyBindingMarginProvider,The length of the parameter toastNotificationServiceProvider is 32.
Long Identifier,Vim.VisualStudio.Implementation.ConflictingKey,ConflictingKeyBindingMarginProvider,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ConflictingKey\ConflictingKeyBindingMarginProvider.cs,,The length of the parameter _toastNotificationServiceProvider is 33.
Long Identifier,Vim.VisualStudio.Implementation.Misc,ReportDesignerUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\ReportDesignerUtil.cs,ReportDesignerUtil,The length of the parameter vsEditorAdaptersFactoryService is 30.
Long Identifier,Vim.VisualStudio.Implementation.Misc,ReportDesignerUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\ReportDesignerUtil.cs,,The length of the parameter _vsEditorAdaptersFactoryService is 31.
Long Identifier,Vim.VisualStudio.Implementation.Misc,ScopeData,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\ScopeData.cs,,The length of the parameter DefaultSolutionExplorerScopeName is 32.
Long Identifier,Vim.VisualStudio.Implementation.Misc,VsAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\VsAdapter.cs,VsAdapter,The length of the parameter incrementalSearchFactoryService is 31.
Long Identifier,Vim.VisualStudio.Implementation.Misc,VsAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\VsAdapter.cs,IsTextEditorView,The length of the parameter GUID_EditPropCategory_View_MasterSettings is 41.
Long Identifier,Vim.VisualStudio.Implementation.Misc,VsAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\VsAdapter.cs,,The length of the parameter _incrementalSearchFactoryService is 32.
Long Identifier,Vim.VisualStudio.Implementation.OptionPages,DefaultOptionPage,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\DefaultOptionPage.cs,,The length of the parameter s_highlightIncrementalSearchColorKey is 36.
Long Identifier,Vim.VisualStudio.Implementation.OptionPages,DefaultOptionPage,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\DefaultOptionPage.cs,,The length of the parameter s_blockCaretForegroundColorKey is 30.
Long Identifier,Vim.VisualStudio.Implementation.OptionPages,DefaultOptionPage,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\DefaultOptionPage.cs,,The length of the parameter s_blockCaretBackgroundColorKey is 30.
Long Identifier,Vim.VisualStudio.Implementation.OptionPages,DefaultOptionPage,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\DefaultOptionPage.cs,,The length of the parameter s_primaryCaretForegroundColorKey is 32.
Long Identifier,Vim.VisualStudio.Implementation.OptionPages,DefaultOptionPage,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\DefaultOptionPage.cs,,The length of the parameter s_primaryCaretBackgroundColorKey is 32.
Long Identifier,Vim.VisualStudio.Implementation.OptionPages,DefaultOptionPage,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\DefaultOptionPage.cs,,The length of the parameter s_secondaryCaretForegroundColorKey is 34.
Long Identifier,Vim.VisualStudio.Implementation.OptionPages,DefaultOptionPage,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\DefaultOptionPage.cs,,The length of the parameter s_secondaryCaretBackgroundColorKey is 34.
Long Identifier,Vim.VisualStudio.Implementation.OptionPages,DefaultOptionPage,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\DefaultOptionPage.cs,,The length of the parameter s_commandMarginForegroundColorKey is 33.
Long Identifier,Vim.VisualStudio.Implementation.OptionPages,DefaultOptionPage,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\DefaultOptionPage.cs,,The length of the parameter s_commandMarginBackgroundColorKey is 33.
Long Identifier,Vim.VisualStudio.Implementation.OptionPages,KeyBindingData,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyBindingData.cs,,The length of the parameter SelectedHandledByOptionProperty is 31.
Long Identifier,Vim.VisualStudio.Implementation.PowerShellTools,PowerShellToolsUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\PowerShellTools\PowerShellToolsUtil.cs,,The length of the parameter s_powerShellToolsPackageIdDev15 is 31.
Long Identifier,Vim.VisualStudio.Implementation.PowerShellTools,PowerShellToolsUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\PowerShellTools\PowerShellToolsUtil.cs,,The length of the parameter s_powerShellToolsPackageIdDev14 is 31.
Long Identifier,Vim.VisualStudio.Implementation.ReSharper,ReSharperExtensionAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ReSharper\ReSharperExtensionAdapter.cs,,The length of the parameter FilePathPrefixUnitTestSessionOutput is 35.
Long Identifier,Vim.VisualStudio.Implementation.ReSharper,ResharperVersionUtility,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ReSharper\ResharperVersionutility.cs,,The length of the parameter ResharperPlatform6AssemblyName is 30.
Long Identifier,Vim.VisualStudio.Implementation.Settings,VimApplicationSettings,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Settings\VimApplicationSettings.cs,,The length of the parameter EnableExternalEditMonitoringName is 32.
Long Identifier,Vim.VisualStudio.Implementation.Settings,VimApplicationSettings,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Settings\VimApplicationSettings.cs,,The length of the parameter IgnoredConflictingKeyBindingName is 32.
Long Identifier,Vim.VisualStudio.Implementation.UpgradeNotification,VimRcLoadNotificationMarginProvider,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\UpgradeNotification\VimRcLoadNotificationMarginProvider.cs,VimRcLoadNotificationMarginProvider,The length of the parameter toastNotificationServiceProvider is 32.
Long Identifier,Vim.VisualStudio.Implementation.UpgradeNotification,VimRcLoadNotificationMarginProvider,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\UpgradeNotification\VimRcLoadNotificationMarginProvider.cs,,The length of the parameter _toastNotificationServiceProvider is 33.
Long Identifier,Vim.VisualStudio.Implementation.VisualAssist,VisualAssistUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\VisualAssist\VisualAssistUtil.cs,VisualAssistUtil,The length of the parameter toastNotificationServiceProvider is 32.
Long Identifier,Vim.VisualStudio.Implementation.VisualAssist,VisualAssistUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\VisualAssist\VisualAssistUtil.cs,,The length of the parameter _toastNotificationServiceProvider is 33.
Long Statement,Vim.VisualStudio,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Extensions.cs,GetLineMarkersEnum,The length of the statement  "            var hresult = lines.EnumMarkers(span.iStartLine' span.iStartIndex' span.iEndLine' span.iEndIndex' 0' (uint)ENUMMARKERFLAGS.EM_ALLTYPES' out IVsEnumLineMarkers markers); " is 168.
Long Statement,Vim.VisualStudio,HostFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\HostFactory.cs,ConnectToOleCommandTarget,The length of the statement  "            var result = VsCommandTarget.Create(vimBufferCoordinator' vsTextView' _textManager' _adapter' broker' _keyUtil' _vimApplicationSettings' _commandTargetFactoryList); " is 164.
Long Statement,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,The length of the statement  "            if (!TryConvert(commandGroup' commandId' pVariableIn' out KeyInput keyInput' out EditCommandKind kind' out bool isRawText)) " is 123.
Long Statement,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,The length of the statement  "            return TryConvert(oleCommandData.Group' oleCommandData.Id' oleCommandData.VariantIn' out keyInput' out EditCommandKind editCommandKind); " is 136.
Long Statement,Vim.VisualStudio,VsCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsCommandTarget.cs,Create,The length of the statement  "            var vsCommandTarget = new VsCommandTarget(vimBufferCoordinator' textManager' adapter' broker' keyUtil' vimApplicationSettings); " is 127.
Long Statement,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,OnElementValueChanged,The length of the statement  "                if (ErrorHandler.Succeeded(_vsMonitorSelection.GetCurrentElementValue((uint)VSConstants.VSSELELEMID.SEID_WindowFrame' out object value))) " is 137.
Long Statement,Vim.VisualStudio.Implementation.ConflictingKey,ConflictingKeyBindingMarginControl,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ConflictingKey\ConflictingKeyBindingMarginControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Vim.VisualStudio.Shared;component/implementation/conflictingkey/conflictingkeybi" + " is 129.
Long Statement,Vim.VisualStudio.Implementation.ExternalEdit,ExternalEditMonitor,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ExternalEdit\ExternalEditMonitor.cs,SetIgnoredExternalEditSpans,The length of the statement  "            _ignoredExternalEditSpans.AddRange(spans.Select(x => x.Snapshot.CreateTrackingSpan(x.Span' SpanTrackingMode.EdgeInclusive))); " is 125.
Long Statement,Vim.VisualStudio.Implementation.InlineRename,InlineRenameUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\InlineRename\InlineRenameUtil.cs,Cancel,The length of the statement  "                var activeSessionPropertyInfo = _inlineRenameService.GetType().GetProperty("ActiveSession"' BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance); " is 162.
Long Statement,Vim.VisualStudio.Implementation.InlineRename,InlineRenameUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\InlineRename\InlineRenameUtil.cs,Cancel,The length of the statement  "                var cancelMethodInfo = activeSession.GetType().GetMethod("Cancel"' BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance' null' Type.EmptyTypes' null); " is 166.
Long Statement,Vim.VisualStudio.Implementation.InlineRename,InlineRenameUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\InlineRename\InlineRenameUtil.cs,TryCreateCore,The length of the statement  "                    var name = $"Microsoft.CodeAnalysis.Editor.Implementation.InlineRename.InlineRenameService+{typeName}' {assemblyName}' Version={versionNumber}' Culture=neutral' PublicKeyToken=31bf3856ad364e35"; " is 194.
Long Statement,Vim.VisualStudio.Implementation.InlineRename,InlineRenameUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\InlineRename\InlineRenameUtil.cs,TryCreateCore,The length of the statement  "                var inlineRenameService = exportProvider.GetExportedValue<object>("Microsoft.CodeAnalysis.Editor.Implementation.InlineRename.InlineRenameService"); " is 147.
Long Statement,Vim.VisualStudio.Implementation.InlineRename,InlineRenameUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\InlineRename\InlineRenameUtil.cs,TryCreateCore,The length of the statement  "                var activeSessionPropertyInfo = inlineRenameServiceType.GetProperty("ActiveSession"' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public); " is 155.
Long Statement,Vim.VisualStudio.Implementation.InlineRename,InlineRenameUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\InlineRename\InlineRenameUtil.cs,TryCreateCore,The length of the statement  "                var activeSessionChangedEventInfo = inlineRenameServiceType.GetEvent("ActiveSessionChanged"' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public); " is 163.
Long Statement,Vim.VisualStudio.Implementation.InlineRename,InlineRenameUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\InlineRename\InlineRenameUtil.cs,TryCreateCore,The length of the statement  "                var methodInfo = InlineRenameUtil.GetType().GetMethod("OnActiveSessionChanged"' BindingFlags.Instance | BindingFlags.NonPublic); " is 128.
Long Statement,Vim.VisualStudio.Implementation.Misc,KeyBindingService,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\KeyBindingService.cs,ShouldSkip,The length of the statement  "            if (!_includeAllScopes && (_scopeData.GetScopeKind(scope) == ScopeKind.Unknown || _scopeData.GetScopeKind(scope) == ScopeKind.SolutionExplorer)) " is 144.
Long Statement,Vim.VisualStudio.Implementation.Misc,ScopeData,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\ScopeData.cs,TryGetMainScopeNames,The length of the statement  "                        if (!TryGetKeyBindingScopeName(vsShell' keyBindingsKey' "{5efc7975-14bc-11cf-9b2b-00aa00573819}"' 13018' out globalScopeName)) " is 126.
Long Statement,Vim.VisualStudio.Implementation.Misc,ScopeData,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\ScopeData.cs,TryGetMainScopeNames,The length of the statement  "                        if (!TryGetKeyBindingScopeName(vsShell' keyBindingsKey' "{8B382828-6202-11D1-8870-0000F87579D2}"' null' out textEditorScopeName)) " is 129.
Long Statement,Vim.VisualStudio.Implementation.Misc,ScopeData,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\ScopeData.cs,TryGetMainScopeNames,The length of the statement  "                        if (!TryGetKeyBindingScopeName(vsShell' keyBindingsKey' "{3AE79031-E1BC-11D0-8F78-00A0C9110057}"' null' out solutionExplorerScopeName)) " is 135.
Long Statement,Vim.VisualStudio.Implementation.Misc,StandardCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\StandardCommandTarget.cs,TryGetSingleMapping,The length of the statement  "                var set = result.IsMapped ? ((KeyMappingResult.Mapped)result).KeyInputSet : ((KeyMappingResult.Unmapped)result).KeyInputSet; " is 124.
Long Statement,Vim.VisualStudio.Implementation.Misc,StandardCommandTargetFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\StandardCommandTarget.cs,CreateCommandTarget,The length of the statement  "            return new StandardCommandTarget(vimBufferCoordinator' _textManager' commonOperations' displayWindowBroker' nextCommandTarget); " is 127.
Long Statement,Vim.VisualStudio.Implementation.Misc,TextManager,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\TextManager.cs,SaveCore,The length of the statement  "                ErrorHandler.ThrowOnFailure(runningDocumentTable.SaveDocuments((uint)__VSRDTSAVEOPTIONS.RDTSAVEOPT_ForceSave' null' 0' docCookie)); " is 131.
Long Statement,Vim.VisualStudio.Implementation.Misc,TextManager,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\TextManager.cs,SendSplit,The length of the statement  "                var result = target.Exec(ref group' (uint)cmdId' (uint)OLECMDEXECOPT.OLECMDEXECOPT_DODEFAULT' IntPtr.Zero' IntPtr.Zero); " is 120.
Long Statement,Vim.VisualStudio.Implementation.Misc,VsAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\VsAdapter.cs,GetContainingWindowFrames,The length of the statement  "                if (frameTextBuffer is IProjectionBuffer frameProjectionBuffer && frameProjectionBuffer.SourceBuffers.Contains(textBuffer)) " is 123.
Long Statement,Vim.VisualStudio.Implementation.Misc,VsAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\VsAdapter.cs,IsTextEditorView,The length of the statement  "                if (categoryContainer.GetPropertyCategory(ref guid' out IVsTextEditorPropertyContainer propertyContainer) == VSConstants.S_OK) " is 126.
Long Statement,Vim.VisualStudio.Implementation.Misc,VsAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\VsAdapter.cs,IsTextEditorView,The length of the statement  "                    if (propertyContainer.GetProperty(VSEDITPROPID.VSEDITPROPID_ViewGeneral_FontCategory' out object property) == VSConstants.S_OK) " is 127.
Long Statement,Vim.VisualStudio.Implementation.Misc,VsAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\VsAdapter.cs,TryGetActiveTextView,The length of the statement  "            var hr = textManager.GetActiveView2(fMustHaveFocus: 0' pBuffer: null' grfIncludeViewFrameType: (uint)_VIEWFRAMETYPE.vftCodeWindow' ppView: out IVsTextView vsTextView); " is 167.
Long Statement,Vim.VisualStudio.Implementation.NavigateTo,NavigateToItemProviderFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\NavigateTo\NavigateToItemProviderFactory.cs,Dispose,The length of the statement  "            if (_textManager.ActiveTextViewOptional is IWpfTextView wpfTextView && !wpfTextView.HasAggregateFocus && wpfTextView.TextSnapshot.ContentType.IsCPlusPlus()) " is 156.
Long Statement,Vim.VisualStudio.Implementation.OptionPages,KeyboardOptionPage,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyboardOptionPage.cs,CreateKeyboardSettingsControl,The length of the statement  "            return new KeyboardSettingsControl(vim' keyBindingService' exportProvider.GetExportedValue<IVimApplicationSettings>()' exportProvider.GetExportedValue<IProtectedOperations>()); " is 176.
Long Statement,Vim.VisualStudio.Implementation.OptionPages,KeyboardSettingsControl,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyboardSettingsControl.xaml.cs,UpdateKeyBindings,The length of the statement  "                _keyBindingList.Where(x => x.HandledByVsVim).SelectMany(x => x.Bindings).Select(x => x.KeyBinding.CommandString).Distinct(comparer)' " is 132.
Long Statement,Vim.VisualStudio.Implementation.OptionPages,KeyboardSettingsControl,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyboardSettingsControl.xaml.cs,UpdateKeyBindings,The length of the statement  "                if (!_snapshot.TryGetCommandData(commandId' out EnvDTE.Command command' out ReadOnlyCollection<CommandKeyBinding> currentBindingList)) " is 134.
Long Statement,Vim.VisualStudio.Implementation.OptionPages,KeyboardSettingsControl,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyboardSettingsControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Vim.VisualStudio.Shared;component/implementation/optionpages/keyboardsettingscon" + " is 129.
Long Statement,Vim.VisualStudio.Implementation.OptionPages,KeyboardSettingsControl,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyboardSettingsControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnEnableAllVimKeysClick); " is 120.
Long Statement,Vim.VisualStudio.Implementation.OptionPages,KeyboardSettingsControl,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyboardSettingsControl.xaml.cs,Connect,The length of the statement  "            ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnDisableAllVimKeysClick); " is 121.
Long Statement,Vim.VisualStudio.Implementation.ReSharper,ReSharperKeyUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ReSharper\ReSharperKeyUtil.cs,GetOrCreate,The length of the statement  "            return vimBufferCoordinator.VimBuffer.Properties.GetOrCreateSingletonProperty(s_propertyBagKey' () => new ReSharperKeyUtil(vimBufferCoordinator)); " is 146.
Long Statement,Vim.VisualStudio.Implementation.ReSharper,ReSharperKeyUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ReSharper\ReSharperKeyUtil.cs,PreviewKeyUp,The length of the statement  "                // The Escape key was pressed and we are still inside of Insert mode.  If the buffer didn't already "see" this key then R#  " is 122.
Long Statement,Vim.VisualStudio.Implementation.ToastNotification,ToastControl,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ToastNotification\ToastControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Vim.VisualStudio.Shared;component/implementation/toastnotification/toastcontrol." + " is 129.
Long Statement,Vim.VisualStudio.Implementation.ToastNotification,ToastNotificationService,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ToastNotification\ToastNotificationService.cs,UpdateTheme,The length of the statement  "            _toastControl.Background = _editorFormatMap.GetBackgroundBrush(EditorFormatDefinitionNames.Margin' MarginFormatDefinition.DefaultColor); " is 136.
Long Statement,Vim.VisualStudio.Implementation.UpgradeNotification,ErrorBanner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\UpgradeNotification\ErrorBanner.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Vim.VisualStudio.Shared;component/implementation/upgradenotification/errorbanner" + " is 129.
Long Statement,Vim.VisualStudio.Implementation.UpgradeNotification,LinkBanner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\UpgradeNotification\LinkBanner.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Vim.VisualStudio.Shared;component/implementation/upgradenotification/linkbanner." + " is 129.
Long Statement,Vim.VisualStudio.Implementation.UpgradeNotification,LinkBanner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\UpgradeNotification\LinkBanner.xaml.cs,Connect,The length of the statement  "            this._faqHyperlink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.OnRequestNavigate); " is 120.
Long Statement,Vim.VisualStudio.Implementation.UpgradeNotification,VimRcLoadNotificationMarginProvider,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\UpgradeNotification\VimRcLoadNotificationMarginProvider.cs,VimBufferCreated,The length of the statement  "                _toastNotificationServiceProvider.GetToastNoficationService(wpfTextView).Display(_notifyToastKey' linkBanner' OnNotifyClosed); " is 126.
Long Statement,Vim.VisualStudio.Implementation.UpgradeNotification,VimRcLoadNotificationMarginProvider,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\UpgradeNotification\VimRcLoadNotificationMarginProvider.cs,VimBufferCreated,The length of the statement  "                _toastNotificationServiceProvider.GetToastNoficationService(wpfTextView).Display(_errorToastKey' errorBanner' OnErrorClosed); " is 125.
Long Statement,Vim.VisualStudio.Implementation.VisualAssist,VisualAssistMargin,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\VisualAssist\VisualAssistMargin.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/Vim.VisualStudio.Shared;component/implementation/visualassist/visualassistmargin" + " is 129.
Long Statement,Vim.VisualStudio.Implementation.VisualAssist,VisualAssistMargin,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\VisualAssist\VisualAssistMargin.xaml.cs,Connect,The length of the statement  "            this._faqHyperlink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.OnRequestNavigate); " is 120.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\jaredpar_VsVim\Binaries\obj\VsVimShared\Debug\net45\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Complex Conditional,Vim.VisualStudio.Implementation.Misc,FallbackKeyProcessor,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\FallbackKeyProcessor.cs,TryProcess,The conditional expression  "cmds.Count == 1 && cmds[0].KeyBindings.Count == 1                  || cmds.Count == 2 && cmds[0].KeyBindings.Count == 1 && cmds[1].KeyBindings.Count == 1"  is complex.
Complex Conditional,Vim.VisualStudio.Implementation.Misc,StandardCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\StandardCommandTarget.cs,Exec,The conditional expression  "editCommand.EditCommandKind == EditCommandKind.UserInput &&                              CharUtil.IsPrintable(keyInput.Char) &&                              (_vimBuffer.ModeKind == ModeKind.Normal || _vimBuffer.ModeKind.IsAnyVisual())"  is complex.
Complex Conditional,Vim.VisualStudio.Implementation.Misc,VsVimKeyProcessor,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\VsVimKeyProcessor.cs,TryProcess,The conditional expression  "(VimBuffer.ModeKind.IsAnyInsert() || VimBuffer.ModeKind.IsAnySelect()) &&                  !VimBuffer.CanProcessAsCommand(keyInput) &&                  (int)keyInput.Char > 0x1f"  is complex.
Complex Conditional,Vim.VisualStudio.Implementation.OptionPages,KeyBindingHandledByOption,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyBindingHandledByOption.cs,KeyBindingHandledByOption,The conditional expression  "(group.Key == "Test" || group.Key == "Refactor" ||                       group.Key == "TestResults" || group.Key == "Debug") && group.Count() >= 3"  is complex.
Complex Conditional,Vim.VisualStudio.Implementation.VisualAssist,VisualAssistKeyProcessor,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\VisualAssist\VisualAssistKeyProcessor.cs,PreviewKeyDown,The conditional expression  "IsTextViewFocused                  && _vimBuffer.ModeKind == ModeKind.Normal                  && args.Key == Key.OemPeriod                  && args.KeyboardDevice.Modifiers == ModifierKeys.None"  is complex.
Complex Conditional,Vim.VisualStudio.Implementation.VisualAssist,VisualAssistKeyProcessor,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\VisualAssist\VisualAssistKeyProcessor.cs,PreviewKeyUp,The conditional expression  "IsTextViewFocused                  && (args.Key == Key.Escape                      || (args.Key == Key.OemOpenBrackets                          && args.KeyboardDevice.Modifiers == ModifierKeys.Control))"  is complex.
Empty Catch Block,Vim.VisualStudio,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Extensions.cs,SafeResetBindings,The method has an empty catch block.
Empty Catch Block,Vim.VisualStudio,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Extensions.cs,SafeSetBindings,The method has an empty catch block.
Empty Catch Block,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,BeginBulkOperation,The method has an empty catch block.
Empty Catch Block,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,EndBulkOperation,The method has an empty catch block.
Empty Catch Block,Vim.VisualStudio.Implementation.InlineRename,InlineRenameUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\InlineRename\InlineRenameUtil.cs,Cancel,The method has an empty catch block.
Empty Catch Block,Vim.VisualStudio.Implementation.InlineRename,InlineRenameUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\InlineRename\InlineRenameUtil.cs,TryCreateCore,The method has an empty catch block.
Empty Catch Block,Vim.VisualStudio.Implementation.NavigateTo,NavigateToItemProviderFactory,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\NavigateTo\NavigateToItemProviderFactory.cs,CallOnMainThread,The method has an empty catch block.
Empty Catch Block,Vim.VisualStudio.Implementation.ReSharper,ReSharperExternalEditAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ReSharper\ReSharperExternalEditAdapter.cs,GetTaggerProvidersSafe,The method has an empty catch block.
Magic Number,Vim.VisualStudio,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Extensions.cs,GetContents,The following statement contains a magic number: var array = new IVsWindowFrame[16];
Magic Number,Vim.VisualStudio,Extensions,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Extensions.cs,GetLikelyVisibleSnapshotSpans,The following statement contains a magic number: formattedLength / 2 <= textView.VisualSnapshot.Length
Magic Number,Vim.VisualStudio,KeyBinding,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\KeyBinding.cs,TryParse,The following statement contains a magic number: var rest = binding.Substring(scopeEnd + 2);
Magic Number,Vim.VisualStudio,OleCommandData,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandData.cs,CreateTypeChar,The following statement contains a magic number: var variantIn = Marshal.AllocCoTaskMem(32);
Magic Number,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,NavigateToLocation,The following statement contains a magic number: var start = message.Length >= 2 && message[1] == ':' ? 2 : 0;
Magic Number,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,NavigateToLocation,The following statement contains a magic number: var start = message.Length >= 2 && message[1] == ':' ? 2 : 0;
Magic Number,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,GetScreenPoint,The following statement contains a magic number: var caretX = (caret.Left + caret.Right) / 2 - textView.ViewportLeft;
Magic Number,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,GetScreenPoint,The following statement contains a magic number: var caretY = (caret.Top + caret.Bottom) / 2 - textView.ViewportTop;
Magic Number,Vim.VisualStudio,VsVimHost,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsVimHost.cs,GoToWindow,The following statement contains a magic number: const int maxCount = 1000;
Magic Number,Vim.VisualStudio.Implementation.ExternalEdit,SnippetExternalEditAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ExternalEdit\SnippetExternalEditAdapter.cs,IsExternalEditMarker,The following statement contains a magic number: switch ((int)result.Value)              {                  case 15:                  case 16:                  case 26:                      // Details                      //  15: Snippet marker for inactive span                      //  16: Snippet marker for active span                      //  26: Tracks comment insertion for a snippet don' for cursor placement                      return true;                  case 25:                      // Kind currently unknown.                        // Used at least for brace matching                      return false;                  default:                      return false;              }
Magic Number,Vim.VisualStudio.Implementation.ExternalEdit,SnippetExternalEditAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ExternalEdit\SnippetExternalEditAdapter.cs,IsExternalEditMarker,The following statement contains a magic number: switch ((int)result.Value)              {                  case 15:                  case 16:                  case 26:                      // Details                      //  15: Snippet marker for inactive span                      //  16: Snippet marker for active span                      //  26: Tracks comment insertion for a snippet don' for cursor placement                      return true;                  case 25:                      // Kind currently unknown.                        // Used at least for brace matching                      return false;                  default:                      return false;              }
Magic Number,Vim.VisualStudio.Implementation.ExternalEdit,SnippetExternalEditAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ExternalEdit\SnippetExternalEditAdapter.cs,IsExternalEditMarker,The following statement contains a magic number: switch ((int)result.Value)              {                  case 15:                  case 16:                  case 26:                      // Details                      //  15: Snippet marker for inactive span                      //  16: Snippet marker for active span                      //  26: Tracks comment insertion for a snippet don' for cursor placement                      return true;                  case 25:                      // Kind currently unknown.                        // Used at least for brace matching                      return false;                  default:                      return false;              }
Magic Number,Vim.VisualStudio.Implementation.ExternalEdit,SnippetExternalEditAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ExternalEdit\SnippetExternalEditAdapter.cs,IsExternalEditMarker,The following statement contains a magic number: switch ((int)result.Value)              {                  case 15:                  case 16:                  case 26:                      // Details                      //  15: Snippet marker for inactive span                      //  16: Snippet marker for active span                      //  26: Tracks comment insertion for a snippet don' for cursor placement                      return true;                  case 25:                      // Kind currently unknown.                        // Used at least for brace matching                      return false;                  default:                      return false;              }
Magic Number,Vim.VisualStudio.Implementation.Misc,FallbackKeyProcessor,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\FallbackKeyProcessor.cs,GetScopeOrder,The following statement contains a magic number: switch (scope)              {                  case ScopeKind.TextEditor:                      return 1;                  case ScopeKind.Global:                      return 2;                  default:                      throw new InvalidOperationException("Unexpected ScopeKind");              }
Magic Number,Vim.VisualStudio.Implementation.Misc,ScopeData,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\ScopeData.cs,TryGetMainScopeNames,The following statement contains a magic number: !TryGetKeyBindingScopeName(vsShell' keyBindingsKey' "{5efc7975-14bc-11cf-9b2b-00aa00573819}"' 13018' out globalScopeName)
Magic Number,Vim.VisualStudio.Implementation.Misc,StatusBarAdapter,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\StatusBarAdapter.cs,StatusBarAdapter,The following statement contains a magic number: _timer = new DispatcherTimer(                  TimeSpan.FromSeconds(.1)'                  DispatcherPriority.Normal'                  OnTimer'                  Dispatcher.CurrentDispatcher)              {                  IsEnabled = !_vimApplicationSettings.UseEditorCommandMargin              };
Magic Number,Vim.VisualStudio.Implementation.OptionPages,KeyBindingHandledByOption,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyBindingHandledByOption.cs,KeyBindingHandledByOption,The following statement contains a magic number: (group.Key == "Test" || group.Key == "Refactor" ||                       group.Key == "TestResults" || group.Key == "Debug") && group.Count() >= 3
Magic Number,Vim.VisualStudio.Implementation.OptionPages,KeyboardSettingsControl,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyboardSettingsControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BindingsListBox = ((System.Windows.Controls.ListBox)(target));              return;              case 2:                            #line 69 "Implementation\OptionPages\KeyboardSettingsControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnEnableAllVimKeysClick);                            #line default              #line hidden              return;              case 3:                            #line 70 "Implementation\OptionPages\KeyboardSettingsControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnDisableAllVimKeysClick);                            #line default              #line hidden              return;              }
Magic Number,Vim.VisualStudio.Implementation.OptionPages,KeyboardSettingsControl,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyboardSettingsControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.BindingsListBox = ((System.Windows.Controls.ListBox)(target));              return;              case 2:                            #line 69 "Implementation\OptionPages\KeyboardSettingsControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnEnableAllVimKeysClick);                            #line default              #line hidden              return;              case 3:                            #line 70 "Implementation\OptionPages\KeyboardSettingsControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnDisableAllVimKeysClick);                            #line default              #line hidden              return;              }
Magic Number,Vim.VisualStudio.Implementation.ReSharper,ResharperVersionUtility,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ReSharper\ResharperVersionutility.cs,DetectFromAssembly,The following statement contains a magic number: switch (version.Minor)                      {                          case 0:                              return ReSharperVersion.Version8;                          case 1:                              return ReSharperVersion.Version81;                          case 2:                              return ReSharperVersion.Version82;                          default:                              return ReSharperVersion.Version82;                      }
Magic Number,Vim.VisualStudio.Implementation.ReSharper,ResharperVersionUtility,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ReSharper\ResharperVersionutility.cs,DetectFromAssembly,The following statement contains a magic number: version.Major == 8
Magic Number,Vim.VisualStudio.Implementation.ReSharper,ResharperVersionUtility,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ReSharper\ResharperVersionutility.cs,DetectFromAssembly,The following statement contains a magic number: switch (version.Major)                  {                      case 6:                          return ReSharperVersion.Version9;                      case 102:                          return ReSharperVersion.Version91;                      case 103:                          return ReSharperVersion.Version92;                      case 104:                          return ReSharperVersion.Version10;                      default:                          return ReSharperVersion.Version10;                  }
Magic Number,Vim.VisualStudio.Implementation.ReSharper,ResharperVersionUtility,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ReSharper\ResharperVersionutility.cs,DetectFromAssembly,The following statement contains a magic number: switch (version.Major)                  {                      case 6:                          return ReSharperVersion.Version9;                      case 102:                          return ReSharperVersion.Version91;                      case 103:                          return ReSharperVersion.Version92;                      case 104:                          return ReSharperVersion.Version10;                      default:                          return ReSharperVersion.Version10;                  }
Magic Number,Vim.VisualStudio.Implementation.ReSharper,ResharperVersionUtility,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ReSharper\ResharperVersionutility.cs,DetectFromAssembly,The following statement contains a magic number: switch (version.Major)                  {                      case 6:                          return ReSharperVersion.Version9;                      case 102:                          return ReSharperVersion.Version91;                      case 103:                          return ReSharperVersion.Version92;                      case 104:                          return ReSharperVersion.Version10;                      default:                          return ReSharperVersion.Version10;                  }
Magic Number,Vim.VisualStudio.Implementation.ReSharper,ResharperVersionUtility,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ReSharper\ResharperVersionutility.cs,DetectFromAssembly,The following statement contains a magic number: switch (version.Major)                  {                      case 6:                          return ReSharperVersion.Version9;                      case 102:                          return ReSharperVersion.Version91;                      case 103:                          return ReSharperVersion.Version92;                      case 104:                          return ReSharperVersion.Version10;                      default:                          return ReSharperVersion.Version10;                  }
Magic Number,Vim.VisualStudio.Implementation.Settings,SettingSerializer,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Settings\SettingSerializer.cs,TryConvertToCommandKeyBindings,The following statement contains a magic number: items.Count % 4 != 0
Magic Number,Vim.VisualStudio.Implementation.Settings,SettingSerializer,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Settings\SettingSerializer.cs,TryConvertToCommandKeyBindings,The following statement contains a magic number: !Guid.TryParse(items[i]' out Guid group) ||                      !UInt32.TryParse(items[i + 1]' out uint id) ||                      !KeyBinding.TryParse(items[i + 3]' out KeyBinding keyBinding)
Magic Number,Vim.VisualStudio.Implementation.Settings,SettingSerializer,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Settings\SettingSerializer.cs,TryConvertToCommandKeyBindings,The following statement contains a magic number: list.Add(new CommandKeyBinding(commandId' items[i + 2]' keyBinding));
Missing Default,Vim.VisualStudio,KeyBinding,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\KeyBinding.cs,TryConvertVsSpecificKey,The following switch statement is missing a default case: switch (keystroke.ToLower())                  {                      case "num +":                          keyInput = KeyInputUtil.VimKeyToKeyInput(VimKey.KeypadPlus);                          break;                      case "num /":                          keyInput = KeyInputUtil.VimKeyToKeyInput(VimKey.KeypadDivide);                          break;                      case "num *":                          keyInput = KeyInputUtil.VimKeyToKeyInput(VimKey.KeypadMultiply);                          break;                      case "num -":                          keyInput = KeyInputUtil.VimKeyToKeyInput(VimKey.KeypadMinus);                          break;                  }
Missing Default,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,The following switch statement is missing a default case: switch (cmdId)              {                  case VSConstants.VSStd97CmdID.SingleChar:                      var obj = Marshal.GetObjectForNativeVariant(variantIn);                      var c = (char)(ushort)obj;                      ki = KeyInputUtil.CharToKeyInput(c);                      kind = EditCommandKind.UserInput;                      isRawText = true;                      break;                  case VSConstants.VSStd97CmdID.Escape:                      ki = KeyInputUtil.EscapeKey;                      kind = EditCommandKind.UserInput;                      break;                  case VSConstants.VSStd97CmdID.Delete:                      ki = KeyInputUtil.VimKeyToKeyInput(VimKey.Delete);                      kind = EditCommandKind.UserInput;                      break;                  case VSConstants.VSStd97CmdID.F1Help:                      ki = KeyInputUtil.VimKeyToKeyInput(VimKey.F1);                      kind = EditCommandKind.UserInput;                      break;                  case VSConstants.VSStd97CmdID.Undo:                      ki = KeyInput.DefaultValue;                      kind = EditCommandKind.Undo;                      break;                  case VSConstants.VSStd97CmdID.Redo:                      ki = KeyInput.DefaultValue;                      kind = EditCommandKind.Redo;                      break;                  case VSConstants.VSStd97CmdID.MultiLevelUndo:                      // This occurs when the undo button is pressed.  If it's just simply pressed we get                       // a IntPtr.Zero 'variantIn' value and can proceed with Vim undo.  Else user selected                      // a very specific undo point and we shouldn't mess with it                      if (variantIn == IntPtr.Zero)                      {                          ki = KeyInput.DefaultValue;                          kind = EditCommandKind.Undo;                      }                      break;                  case VSConstants.VSStd97CmdID.MultiLevelRedo:                      // This occurs when the redo button is pressed.  If it's just simply pressed we get                       // a IntPtr.Zero 'variantIn' value and can proceed with Vim redo .  Else user selected                      // a very specific redo point and we shouldn't mess with it                      if (variantIn == IntPtr.Zero)                      {                          ki = KeyInput.DefaultValue;                          kind = EditCommandKind.Redo;                      }                      break;                  case VSConstants.VSStd97CmdID.GotoDecl:                  case VSConstants.VSStd97CmdID.GotoDefn:                      ki = KeyInput.DefaultValue;                      kind = EditCommandKind.GoToDefinition;                      break;                  case VSConstants.VSStd97CmdID.Paste:                      ki = KeyInput.DefaultValue;                      kind = EditCommandKind.Paste;                      break;              }
Missing Default,Vim.VisualStudio,OleCommandUtil,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\OleCommandUtil.cs,TryConvert,The following switch statement is missing a default case: switch (keyInput.Key)              {                  case VimKey.Enter:                      cmdId = VSConstants.VSStd2KCmdID.RETURN;                      break;                  case VimKey.Escape:                      cmdId = VSConstants.VSStd2KCmdID.CANCEL;                      break;                  case VimKey.Delete:                      cmdId = VSConstants.VSStd2KCmdID.DELETE;                      break;                  case VimKey.Back:                      cmdId = VSConstants.VSStd2KCmdID.BACKSPACE;                      break;                  case VimKey.Up:                      cmdId = simulateStandardKeyBindings && hasShift                          ? VSConstants.VSStd2KCmdID.UP_EXT                          : VSConstants.VSStd2KCmdID.UP;                      break;                  case VimKey.Down:                      cmdId = simulateStandardKeyBindings && hasShift                          ? VSConstants.VSStd2KCmdID.DOWN_EXT                          : VSConstants.VSStd2KCmdID.DOWN;                      break;                  case VimKey.Left:                      cmdId = simulateStandardKeyBindings && hasShift                          ? VSConstants.VSStd2KCmdID.LEFT_EXT                          : VSConstants.VSStd2KCmdID.LEFT;                      break;                  case VimKey.Right:                      cmdId = simulateStandardKeyBindings && hasShift                          ? VSConstants.VSStd2KCmdID.RIGHT_EXT                          : VSConstants.VSStd2KCmdID.RIGHT;                      break;                  case VimKey.Tab:                      cmdId = simulateStandardKeyBindings && hasShift                          ? VSConstants.VSStd2KCmdID.BACKTAB                          : VSConstants.VSStd2KCmdID.TAB;                      break;                  case VimKey.PageUp:                      cmdId = simulateStandardKeyBindings && hasShift                          ? VSConstants.VSStd2KCmdID.PAGEUP_EXT                          : VSConstants.VSStd2KCmdID.PAGEUP;                      break;                  case VimKey.PageDown:                      cmdId = simulateStandardKeyBindings && hasShift                          ? VSConstants.VSStd2KCmdID.PAGEDN_EXT                          : VSConstants.VSStd2KCmdID.PAGEDN;                      break;                  case VimKey.Insert:                      cmdId = VSConstants.VSStd2KCmdID.TOGGLE_OVERTYPE_MODE;                      break;              }
Missing Default,Vim.VisualStudio,VsCommandTarget,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\VsCommandTarget.cs,QueryStatus,The following switch statement is missing a default case: switch (action)                  {                      case CommandStatus.Enable:                          prgCmds[0].cmdf = (uint)(OLECMDF.OLECMDF_ENABLED | OLECMDF.OLECMDF_SUPPORTED);                          return NativeMethods.S_OK;                      case CommandStatus.Disable:                          prgCmds[0].cmdf = (uint)OLECMDF.OLECMDF_SUPPORTED;                          return NativeMethods.S_OK;                      case CommandStatus.PassOn:                          return _nextCommandTarget.QueryStatus(pguidCmdGroup' cCmds' prgCmds' pCmdText);                  }
Missing Default,Vim.VisualStudio.Implementation.ConflictingKey,ConflictingKeyBindingMarginControl,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ConflictingKey\ConflictingKeyBindingMarginControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 20 "Implementation\ConflictingKey\ConflictingKeyBindingMarginControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnConfigureClick);                            #line default              #line hidden              return;              }
Missing Default,Vim.VisualStudio.Implementation.Misc,KeyBindingService,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\Misc\KeyBindingService.cs,FixKeyMappingIssue,The following switch statement is missing a default case: switch ((VSConstants.VSStd2KCmdID)commandId.Id)                          {                              case VSConstants.VSStd2KCmdID.RETURN:                                  if (!command.GetBindings().Any())                                  {                                      command.SafeSetBindings(KeyBinding.Parse(globalScopeName + "::Enter"));                                  }                                  break;                              case VSConstants.VSStd2KCmdID.BACKSPACE:                                  if (!command.GetBindings().Any())                                  {                                      command.SafeSetBindings(KeyBinding.Parse(globalScopeName + "::Bkspce"));                                  }                                  break;                          }
Missing Default,Vim.VisualStudio.Implementation.OptionPages,KeyBindingHandledByOption,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyBindingHandledByOption.cs,KeyBindingHandledByOption,The following switch statement is missing a default case: switch (group.Key)                      {                          case "Debug": cleanedUpCommands.Add("Debugging"); break;                          case "Refactor": cleanedUpCommands.Add("Refactoring"); break;                          case "Test": cleanedUpCommands.Add("Testing"); break;                          case "TestResults": cleanedUpCommands.Add("Test Results"); break;                      }
Missing Default,Vim.VisualStudio.Implementation.OptionPages,KeyboardSettingsControl,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\OptionPages\KeyboardSettingsControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.BindingsListBox = ((System.Windows.Controls.ListBox)(target));              return;              case 2:                            #line 69 "Implementation\OptionPages\KeyboardSettingsControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnEnableAllVimKeysClick);                            #line default              #line hidden              return;              case 3:                            #line 70 "Implementation\OptionPages\KeyboardSettingsControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnDisableAllVimKeysClick);                            #line default              #line hidden              return;              }
Missing Default,Vim.VisualStudio.Implementation.ToastNotification,ToastControl,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\ToastNotification\ToastControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 34 "Implementation\ToastNotification\ToastControl.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnCloseClick);                            #line default              #line hidden              break;              }
Missing Default,Vim.VisualStudio.Implementation.UpgradeNotification,ErrorBanner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\UpgradeNotification\ErrorBanner.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:                            #line 24 "Implementation\UpgradeNotification\ErrorBanner.xaml"              ((System.Windows.Controls.Button)(target)).Click += new System.Windows.RoutedEventHandler(this.OnViewClick);                            #line default              #line hidden              return;              }
Missing Default,Vim.VisualStudio.Implementation.UpgradeNotification,LinkBanner,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\UpgradeNotification\LinkBanner.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this._faqHyperlink = ((System.Windows.Documents.Hyperlink)(target));                            #line 17 "Implementation\UpgradeNotification\LinkBanner.xaml"              this._faqHyperlink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.OnRequestNavigate);                            #line default              #line hidden              return;              }
Missing Default,Vim.VisualStudio.Implementation.VisualAssist,VisualAssistMargin,D:\research\architectureSmells\repos\jaredpar_VsVim\Src\VsVimShared\Implementation\VisualAssist\VisualAssistMargin.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this._faqHyperlink = ((System.Windows.Documents.Hyperlink)(target));                            #line 17 "Implementation\VisualAssist\VisualAssistMargin.xaml"              this._faqHyperlink.RequestNavigate += new System.Windows.Navigation.RequestNavigateEventHandler(this.OnRequestNavigate);                            #line default              #line hidden              return;              }
