Implementation smell,Namespace,Class,File,Method,Description
Complex Method,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,Cyclomatic complexity of the method is 8
Complex Method,usbQRBar,StatisticsTest,C:\repos\xlgwr_usbQRbar\usbQRBar\STATISTICSSO.CS,SetDemonstrationStatistics,Cyclomatic complexity of the method is 10
Long Parameter List,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,ToAscii,The method has 5 parameters.
Long Parameter List,usbQRBar,SampleMsr,C:\repos\xlgwr_usbQRbar\usbQRBar\MSR.cs,ParseMsrFieldData,The method has 5 parameters.
Long Parameter List,usbQRBar,SampleMsr,C:\repos\xlgwr_usbQRbar\usbQRBar\MSR.cs,ParseMsrTrackData,The method has 5 parameters.
Long Parameter List,usbQRBar,RevSerialPort,C:\repos\xlgwr_usbQRbar\usbQRBar\RevSerialPort.cs,RevSerialPort,The method has 5 parameters.
Long Parameter List,usbQRBar,StatisticsTest,C:\repos\xlgwr_usbQRbar\usbQRBar\STATISTICSSO.CS,ParseMsrFieldData,The method has 5 parameters.
Long Parameter List,usbQRBar,StatisticsTest,C:\repos\xlgwr_usbQRbar\usbQRBar\STATISTICSSO.CS,ParseMsrTrackData,The method has 5 parameters.
Long Statement,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,Start,The length of the statement  "		//  hKeyboardHook = SetWindowsHookEx(13' hookproc' Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0])' 0); " is 125.
Long Statement,usbQRBar,SampleStatistics,C:\repos\xlgwr_usbQRbar\usbQRBar\SampleStatistics.cs,StartServiceObject,The length of the statement  "					MessageBox.Show ("The Service Object '" + SOName + "' failed to load"' "Service Object Error"' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 145.
Long Statement,usbQRBar,SampleStatistics,C:\repos\xlgwr_usbQRbar\usbQRBar\SampleStatistics.cs,StartServiceObject,The length of the statement  "			MessageBox.Show ("The Service Object '" + SOName + "' could not be found"' "Service Object Error"' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 149.
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (nCode == 0) {  	EventMsg msg = (EventMsg)Marshal.PtrToStructure (lParam' typeof(EventMsg));  	if (wParam == 0x100)//WM_KEYDOWN=0x100  	 {  		barCode.VirtKey = msg.message & 0xff;  		//虚拟吗  		barCode.ScanCode = msg.paramL & 0xff;  		//扫描码  		StringBuilder strKeyName = new StringBuilder (225);  		if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  			barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  				' ''  				'\0'  			});  		}  		else {  			barCode.KeyName = "";  		}  		byte[] kbArray = new byte[256];  		uint uKey = 0;  		GetKeyboardState (kbArray);  		if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  			barCode.Ascll = uKey;  			barCode.Chr = Convert.ToChar (uKey);  		}  		TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  		if (ts.TotalMilliseconds > 50) {  			//时间戳，大于50 毫秒表示手动输入  			strBarCode = barCode.Chr.ToString ();  		}  		else {  			if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  				//回车  				barCode.BarCode = strBarCode;  				barCode.IsValid = true;  			}  			strBarCode += barCode.Chr.ToString ();  		}  		barCode.Time = DateTime.Now;  		if (BarCodeEvent != null)  			BarCodeEvent (barCode);  		//触发事件  		barCode.IsValid = false;  	}  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (nCode == 0) {  	EventMsg msg = (EventMsg)Marshal.PtrToStructure (lParam' typeof(EventMsg));  	if (wParam == 0x100)//WM_KEYDOWN=0x100  	 {  		barCode.VirtKey = msg.message & 0xff;  		//虚拟吗  		barCode.ScanCode = msg.paramL & 0xff;  		//扫描码  		StringBuilder strKeyName = new StringBuilder (225);  		if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  			barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  				' ''  				'\0'  			});  		}  		else {  			barCode.KeyName = "";  		}  		byte[] kbArray = new byte[256];  		uint uKey = 0;  		GetKeyboardState (kbArray);  		if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  			barCode.Ascll = uKey;  			barCode.Chr = Convert.ToChar (uKey);  		}  		TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  		if (ts.TotalMilliseconds > 50) {  			//时间戳，大于50 毫秒表示手动输入  			strBarCode = barCode.Chr.ToString ();  		}  		else {  			if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  				//回车  				barCode.BarCode = strBarCode;  				barCode.IsValid = true;  			}  			strBarCode += barCode.Chr.ToString ();  		}  		barCode.Time = DateTime.Now;  		if (BarCodeEvent != null)  			BarCodeEvent (barCode);  		//触发事件  		barCode.IsValid = false;  	}  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (nCode == 0) {  	EventMsg msg = (EventMsg)Marshal.PtrToStructure (lParam' typeof(EventMsg));  	if (wParam == 0x100)//WM_KEYDOWN=0x100  	 {  		barCode.VirtKey = msg.message & 0xff;  		//虚拟吗  		barCode.ScanCode = msg.paramL & 0xff;  		//扫描码  		StringBuilder strKeyName = new StringBuilder (225);  		if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  			barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  				' ''  				'\0'  			});  		}  		else {  			barCode.KeyName = "";  		}  		byte[] kbArray = new byte[256];  		uint uKey = 0;  		GetKeyboardState (kbArray);  		if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  			barCode.Ascll = uKey;  			barCode.Chr = Convert.ToChar (uKey);  		}  		TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  		if (ts.TotalMilliseconds > 50) {  			//时间戳，大于50 毫秒表示手动输入  			strBarCode = barCode.Chr.ToString ();  		}  		else {  			if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  				//回车  				barCode.BarCode = strBarCode;  				barCode.IsValid = true;  			}  			strBarCode += barCode.Chr.ToString ();  		}  		barCode.Time = DateTime.Now;  		if (BarCodeEvent != null)  			BarCodeEvent (barCode);  		//触发事件  		barCode.IsValid = false;  	}  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (nCode == 0) {  	EventMsg msg = (EventMsg)Marshal.PtrToStructure (lParam' typeof(EventMsg));  	if (wParam == 0x100)//WM_KEYDOWN=0x100  	 {  		barCode.VirtKey = msg.message & 0xff;  		//虚拟吗  		barCode.ScanCode = msg.paramL & 0xff;  		//扫描码  		StringBuilder strKeyName = new StringBuilder (225);  		if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  			barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  				' ''  				'\0'  			});  		}  		else {  			barCode.KeyName = "";  		}  		byte[] kbArray = new byte[256];  		uint uKey = 0;  		GetKeyboardState (kbArray);  		if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  			barCode.Ascll = uKey;  			barCode.Chr = Convert.ToChar (uKey);  		}  		TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  		if (ts.TotalMilliseconds > 50) {  			//时间戳，大于50 毫秒表示手动输入  			strBarCode = barCode.Chr.ToString ();  		}  		else {  			if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  				//回车  				barCode.BarCode = strBarCode;  				barCode.IsValid = true;  			}  			strBarCode += barCode.Chr.ToString ();  		}  		barCode.Time = DateTime.Now;  		if (BarCodeEvent != null)  			BarCodeEvent (barCode);  		//触发事件  		barCode.IsValid = false;  	}  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (nCode == 0) {  	EventMsg msg = (EventMsg)Marshal.PtrToStructure (lParam' typeof(EventMsg));  	if (wParam == 0x100)//WM_KEYDOWN=0x100  	 {  		barCode.VirtKey = msg.message & 0xff;  		//虚拟吗  		barCode.ScanCode = msg.paramL & 0xff;  		//扫描码  		StringBuilder strKeyName = new StringBuilder (225);  		if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  			barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  				' ''  				'\0'  			});  		}  		else {  			barCode.KeyName = "";  		}  		byte[] kbArray = new byte[256];  		uint uKey = 0;  		GetKeyboardState (kbArray);  		if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  			barCode.Ascll = uKey;  			barCode.Chr = Convert.ToChar (uKey);  		}  		TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  		if (ts.TotalMilliseconds > 50) {  			//时间戳，大于50 毫秒表示手动输入  			strBarCode = barCode.Chr.ToString ();  		}  		else {  			if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  				//回车  				barCode.BarCode = strBarCode;  				barCode.IsValid = true;  			}  			strBarCode += barCode.Chr.ToString ();  		}  		barCode.Time = DateTime.Now;  		if (BarCodeEvent != null)  			BarCodeEvent (barCode);  		//触发事件  		barCode.IsValid = false;  	}  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (nCode == 0) {  	EventMsg msg = (EventMsg)Marshal.PtrToStructure (lParam' typeof(EventMsg));  	if (wParam == 0x100)//WM_KEYDOWN=0x100  	 {  		barCode.VirtKey = msg.message & 0xff;  		//虚拟吗  		barCode.ScanCode = msg.paramL & 0xff;  		//扫描码  		StringBuilder strKeyName = new StringBuilder (225);  		if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  			barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  				' ''  				'\0'  			});  		}  		else {  			barCode.KeyName = "";  		}  		byte[] kbArray = new byte[256];  		uint uKey = 0;  		GetKeyboardState (kbArray);  		if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  			barCode.Ascll = uKey;  			barCode.Chr = Convert.ToChar (uKey);  		}  		TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  		if (ts.TotalMilliseconds > 50) {  			//时间戳，大于50 毫秒表示手动输入  			strBarCode = barCode.Chr.ToString ();  		}  		else {  			if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  				//回车  				barCode.BarCode = strBarCode;  				barCode.IsValid = true;  			}  			strBarCode += barCode.Chr.ToString ();  		}  		barCode.Time = DateTime.Now;  		if (BarCodeEvent != null)  			BarCodeEvent (barCode);  		//触发事件  		barCode.IsValid = false;  	}  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (nCode == 0) {  	EventMsg msg = (EventMsg)Marshal.PtrToStructure (lParam' typeof(EventMsg));  	if (wParam == 0x100)//WM_KEYDOWN=0x100  	 {  		barCode.VirtKey = msg.message & 0xff;  		//虚拟吗  		barCode.ScanCode = msg.paramL & 0xff;  		//扫描码  		StringBuilder strKeyName = new StringBuilder (225);  		if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  			barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  				' ''  				'\0'  			});  		}  		else {  			barCode.KeyName = "";  		}  		byte[] kbArray = new byte[256];  		uint uKey = 0;  		GetKeyboardState (kbArray);  		if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  			barCode.Ascll = uKey;  			barCode.Chr = Convert.ToChar (uKey);  		}  		TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  		if (ts.TotalMilliseconds > 50) {  			//时间戳，大于50 毫秒表示手动输入  			strBarCode = barCode.Chr.ToString ();  		}  		else {  			if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  				//回车  				barCode.BarCode = strBarCode;  				barCode.IsValid = true;  			}  			strBarCode += barCode.Chr.ToString ();  		}  		barCode.Time = DateTime.Now;  		if (BarCodeEvent != null)  			BarCodeEvent (barCode);  		//触发事件  		barCode.IsValid = false;  	}  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (wParam == 0x100)//WM_KEYDOWN=0x100   {  	barCode.VirtKey = msg.message & 0xff;  	//虚拟吗  	barCode.ScanCode = msg.paramL & 0xff;  	//扫描码  	StringBuilder strKeyName = new StringBuilder (225);  	if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  		barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  			' ''  			'\0'  		});  	}  	else {  		barCode.KeyName = "";  	}  	byte[] kbArray = new byte[256];  	uint uKey = 0;  	GetKeyboardState (kbArray);  	if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  		barCode.Ascll = uKey;  		barCode.Chr = Convert.ToChar (uKey);  	}  	TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  	if (ts.TotalMilliseconds > 50) {  		//时间戳，大于50 毫秒表示手动输入  		strBarCode = barCode.Chr.ToString ();  	}  	else {  		if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  			//回车  			barCode.BarCode = strBarCode;  			barCode.IsValid = true;  		}  		strBarCode += barCode.Chr.ToString ();  	}  	barCode.Time = DateTime.Now;  	if (BarCodeEvent != null)  		BarCodeEvent (barCode);  	//触发事件  	barCode.IsValid = false;  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (wParam == 0x100)//WM_KEYDOWN=0x100   {  	barCode.VirtKey = msg.message & 0xff;  	//虚拟吗  	barCode.ScanCode = msg.paramL & 0xff;  	//扫描码  	StringBuilder strKeyName = new StringBuilder (225);  	if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  		barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  			' ''  			'\0'  		});  	}  	else {  		barCode.KeyName = "";  	}  	byte[] kbArray = new byte[256];  	uint uKey = 0;  	GetKeyboardState (kbArray);  	if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  		barCode.Ascll = uKey;  		barCode.Chr = Convert.ToChar (uKey);  	}  	TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  	if (ts.TotalMilliseconds > 50) {  		//时间戳，大于50 毫秒表示手动输入  		strBarCode = barCode.Chr.ToString ();  	}  	else {  		if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  			//回车  			barCode.BarCode = strBarCode;  			barCode.IsValid = true;  		}  		strBarCode += barCode.Chr.ToString ();  	}  	barCode.Time = DateTime.Now;  	if (BarCodeEvent != null)  		BarCodeEvent (barCode);  	//触发事件  	barCode.IsValid = false;  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (wParam == 0x100)//WM_KEYDOWN=0x100   {  	barCode.VirtKey = msg.message & 0xff;  	//虚拟吗  	barCode.ScanCode = msg.paramL & 0xff;  	//扫描码  	StringBuilder strKeyName = new StringBuilder (225);  	if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  		barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  			' ''  			'\0'  		});  	}  	else {  		barCode.KeyName = "";  	}  	byte[] kbArray = new byte[256];  	uint uKey = 0;  	GetKeyboardState (kbArray);  	if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  		barCode.Ascll = uKey;  		barCode.Chr = Convert.ToChar (uKey);  	}  	TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  	if (ts.TotalMilliseconds > 50) {  		//时间戳，大于50 毫秒表示手动输入  		strBarCode = barCode.Chr.ToString ();  	}  	else {  		if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  			//回车  			barCode.BarCode = strBarCode;  			barCode.IsValid = true;  		}  		strBarCode += barCode.Chr.ToString ();  	}  	barCode.Time = DateTime.Now;  	if (BarCodeEvent != null)  		BarCodeEvent (barCode);  	//触发事件  	barCode.IsValid = false;  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (wParam == 0x100)//WM_KEYDOWN=0x100   {  	barCode.VirtKey = msg.message & 0xff;  	//虚拟吗  	barCode.ScanCode = msg.paramL & 0xff;  	//扫描码  	StringBuilder strKeyName = new StringBuilder (225);  	if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  		barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  			' ''  			'\0'  		});  	}  	else {  		barCode.KeyName = "";  	}  	byte[] kbArray = new byte[256];  	uint uKey = 0;  	GetKeyboardState (kbArray);  	if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  		barCode.Ascll = uKey;  		barCode.Chr = Convert.ToChar (uKey);  	}  	TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  	if (ts.TotalMilliseconds > 50) {  		//时间戳，大于50 毫秒表示手动输入  		strBarCode = barCode.Chr.ToString ();  	}  	else {  		if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  			//回车  			barCode.BarCode = strBarCode;  			barCode.IsValid = true;  		}  		strBarCode += barCode.Chr.ToString ();  	}  	barCode.Time = DateTime.Now;  	if (BarCodeEvent != null)  		BarCodeEvent (barCode);  	//触发事件  	barCode.IsValid = false;  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (wParam == 0x100)//WM_KEYDOWN=0x100   {  	barCode.VirtKey = msg.message & 0xff;  	//虚拟吗  	barCode.ScanCode = msg.paramL & 0xff;  	//扫描码  	StringBuilder strKeyName = new StringBuilder (225);  	if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  		barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  			' ''  			'\0'  		});  	}  	else {  		barCode.KeyName = "";  	}  	byte[] kbArray = new byte[256];  	uint uKey = 0;  	GetKeyboardState (kbArray);  	if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  		barCode.Ascll = uKey;  		barCode.Chr = Convert.ToChar (uKey);  	}  	TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  	if (ts.TotalMilliseconds > 50) {  		//时间戳，大于50 毫秒表示手动输入  		strBarCode = barCode.Chr.ToString ();  	}  	else {  		if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  			//回车  			barCode.BarCode = strBarCode;  			barCode.IsValid = true;  		}  		strBarCode += barCode.Chr.ToString ();  	}  	barCode.Time = DateTime.Now;  	if (BarCodeEvent != null)  		BarCodeEvent (barCode);  	//触发事件  	barCode.IsValid = false;  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (wParam == 0x100)//WM_KEYDOWN=0x100   {  	barCode.VirtKey = msg.message & 0xff;  	//虚拟吗  	barCode.ScanCode = msg.paramL & 0xff;  	//扫描码  	StringBuilder strKeyName = new StringBuilder (225);  	if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  		barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  			' ''  			'\0'  		});  	}  	else {  		barCode.KeyName = "";  	}  	byte[] kbArray = new byte[256];  	uint uKey = 0;  	GetKeyboardState (kbArray);  	if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  		barCode.Ascll = uKey;  		barCode.Chr = Convert.ToChar (uKey);  	}  	TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  	if (ts.TotalMilliseconds > 50) {  		//时间戳，大于50 毫秒表示手动输入  		strBarCode = barCode.Chr.ToString ();  	}  	else {  		if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  			//回车  			barCode.BarCode = strBarCode;  			barCode.IsValid = true;  		}  		strBarCode += barCode.Chr.ToString ();  	}  	barCode.Time = DateTime.Now;  	if (BarCodeEvent != null)  		BarCodeEvent (barCode);  	//触发事件  	barCode.IsValid = false;  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (wParam == 0x100)//WM_KEYDOWN=0x100   {  	barCode.VirtKey = msg.message & 0xff;  	//虚拟吗  	barCode.ScanCode = msg.paramL & 0xff;  	//扫描码  	StringBuilder strKeyName = new StringBuilder (225);  	if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  		barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  			' ''  			'\0'  		});  	}  	else {  		barCode.KeyName = "";  	}  	byte[] kbArray = new byte[256];  	uint uKey = 0;  	GetKeyboardState (kbArray);  	if (ToAscii (barCode.VirtKey' barCode.ScanCode' kbArray' ref uKey' 0)) {  		barCode.Ascll = uKey;  		barCode.Chr = Convert.ToChar (uKey);  	}  	TimeSpan ts = DateTime.Now.Subtract (barCode.Time);  	if (ts.TotalMilliseconds > 50) {  		//时间戳，大于50 毫秒表示手动输入  		strBarCode = barCode.Chr.ToString ();  	}  	else {  		if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  			//回车  			barCode.BarCode = strBarCode;  			barCode.IsValid = true;  		}  		strBarCode += barCode.Chr.ToString ();  	}  	barCode.Time = DateTime.Now;  	if (BarCodeEvent != null)  		BarCodeEvent (barCode);  	//触发事件  	barCode.IsValid = false;  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  	barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  		' ''  		'\0'  	});  }  else {  	barCode.KeyName = "";  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (GetKeyNameText (barCode.ScanCode * 65536' strKeyName' 255) > 0) {  	barCode.KeyName = strKeyName.ToString ().Trim (new char[] {  		' ''  		'\0'  	});  }  else {  	barCode.KeyName = "";  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (ts.TotalMilliseconds > 50) {  	//时间戳，大于50 毫秒表示手动输入  	strBarCode = barCode.Chr.ToString ();  }  else {  	if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  		//回车  		barCode.BarCode = strBarCode;  		barCode.IsValid = true;  	}  	strBarCode += barCode.Chr.ToString ();  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (ts.TotalMilliseconds > 50) {  	//时间戳，大于50 毫秒表示手动输入  	strBarCode = barCode.Chr.ToString ();  }  else {  	if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  		//回车  		barCode.BarCode = strBarCode;  		barCode.IsValid = true;  	}  	strBarCode += barCode.Chr.ToString ();  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if (ts.TotalMilliseconds > 50) {  	//时间戳，大于50 毫秒表示手动输入  	strBarCode = barCode.Chr.ToString ();  }  else {  	if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  		//回车  		barCode.BarCode = strBarCode;  		barCode.IsValid = true;  	}  	strBarCode += barCode.Chr.ToString ();  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  	//回车  	barCode.BarCode = strBarCode;  	barCode.IsValid = true;  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,KeyboardHookProc,The following statement contains a magic number: if ((msg.message & 0xff) == 13 && strBarCode.Length > 3) {  	//回车  	barCode.BarCode = strBarCode;  	barCode.IsValid = true;  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,Start,The following statement contains a magic number: if (hKeyboardHook == 0) {  	hookproc = new HookProc (KeyboardHookProc);  	//GetModuleHandle 函数 替代 Marshal.GetHINSTANCE  	//防止在 framework4.0中 注册钩子不成功  	IntPtr modulePtr = GetModuleHandle (Process.GetCurrentProcess ().MainModule.ModuleName);  	//WH_KEYBOARD_LL=13  	//全局钩子 WH_KEYBOARD_LL  	//  hKeyboardHook = SetWindowsHookEx(13' hookproc' Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0])' 0);  	hKeyboardHook = SetWindowsHookEx (13' hookproc' modulePtr' 0);  }  
Magic Number,usbQRBar,BardCodeHooK,C:\repos\xlgwr_usbQRbar\usbQRBar\BardCodeHooK.cs,Start,The following statement contains a magic number: hKeyboardHook = SetWindowsHookEx (13' hookproc' modulePtr' 0);  
Magic Number,usbQRBar,MsrThreadingObject,C:\repos\xlgwr_usbQRbar\usbQRBar\MsrThreadingObject.cs,ServiceObjectThreadProcedure,The following statement contains a magic number: while (true) {  	// When this method is called by the   	// ServiceObjectThreadHelper' it is obligated to  	// exit when the event ThreadStopEvent has been  	// set.  	// Additionally' this method will also wait for  	// hardware events or for a time-out. That should  	// be done here.  	// This example waits for the event to be set  	// or times out after several seconds.  	if (ThreadStopEvent.WaitOne (2000' false)) {  		break;  	}  	Logger.Info (ObjectName' "Reader Thread cycling");  	// Try to get a strong reference to the Service  	// Object using the weak reference saved when  	// this helper object was created.  	AdvancedSampleMsr msr = ServiceObjectReference.Target as AdvancedSampleMsr;  	// If this fails' that means the Service   	// Object has already been disposed of. Exit the  	// thread.  	if (msr == null) {  		break;  	}  	// Using the strong reference' you can now make  	// calls back into the Service Object.  	msr.OnCardSwipe (MsrData);  	msr = null;  }  
Magic Number,usbQRBar,MsrThreadingObject,C:\repos\xlgwr_usbQRbar\usbQRBar\MsrThreadingObject.cs,ServiceObjectThreadProcedure,The following statement contains a magic number: if (ThreadStopEvent.WaitOne (2000' false)) {  	break;  }  
Magic Number,usbQRBar,SampleStatistics,C:\repos\xlgwr_usbQRbar\usbQRBar\SampleStatistics.cs,DisplayStatistics,The following statement contains a magic number: if (isXml) {  	// Create new XML document and load the statistics   	// XML string.  	XmlDocument doc = new XmlDocument ();  	doc.LoadXml (inputString);  	// Create a XmlTextWriter using a MemoryStream and  	// tell it to indent the XML output (so that it is   	// readable.)  	MemoryStream m = new MemoryStream ();  	XmlTextWriter writer = new XmlTextWriter (m' null);  	writer.Formatting = Formatting.Indented;  	writer.Indentation = 4;  	// Save the document to the memory stream using the  	// XmlWriter.  	doc.Save (writer);  	// The stream will be encoded as UTF8' so convert the  	// buffer into a string.  	UTF8Encoding u = new UTF8Encoding ();  	s = u.GetString (m.GetBuffer ());  }  
Magic Number,usbQRBar,SampleStatistics,C:\repos\xlgwr_usbQRbar\usbQRBar\SampleStatistics.cs,DisplayStatistics,The following statement contains a magic number: writer.Indentation = 4;  
Magic Number,usbQRBar,ServiceObjectThreadHelper,C:\repos\xlgwr_usbQRbar\usbQRBar\ServiceObjectThreadHelper.cs,OpenThread,The following statement contains a magic number: try {  	// Check to see if this object is still valid.  	if (IsDisposed) {  		// Throw system exception to indicate that  		// the object has already been disposed.  		throw new ObjectDisposedException ("ServiceObjectSampleThread");  	}  	// In case the application has called OpenThread  	// before calling CloseThread' stop any previously  	// started thread.  	SignalThreadClose ();  	ServiceObjectThreadOpen ();  	// Reset event used to signal the thread to quit.  	ThreadTerminating.Reset ();  	// Reset the event that used by the thread to signal  	// that it has started.  	ThreadStarted.Reset ();  	// Create the thread object and give it a name. The   	// method used here' ThreadMethod' is a wrapper around  	// the actual thread procedure' which will be run in   	// the threading object provided by the Service   	// Object.  	ReadThread = new Thread (new ThreadStart (ThreadMethod));  	// Set the thread background mode.  	ReadThread.IsBackground = false;  	// Finally' attempt to start the thread.  	ReadThread.Start ();  	// Wait for the thread to start' or until the time-out  	// is reached.  	if (!ThreadStarted.WaitOne (3000' false)) {  		// If the time-out was reached before the event  		// was set' then throw an exception.  		throw new PosControlException ("Unable to open the device for reading"' ErrorCode.Failure);  	}  	// The thread has started succesfully.  	ThreadWasStarted = true;  }  catch (Exception e) {  	// If an error occurred' be sure the new thread is  	// stopped.  	CloseThread ();  	// Re-throw to let the application handle the   	// failure.  	throw;  }  
Magic Number,usbQRBar,ServiceObjectThreadHelper,C:\repos\xlgwr_usbQRbar\usbQRBar\ServiceObjectThreadHelper.cs,OpenThread,The following statement contains a magic number: if (!ThreadStarted.WaitOne (3000' false)) {  	// If the time-out was reached before the event  	// was set' then throw an exception.  	throw new PosControlException ("Unable to open the device for reading"' ErrorCode.Failure);  }  
Magic Number,usbQRBar,ServiceObjectThreadHelper,C:\repos\xlgwr_usbQRbar\usbQRBar\ServiceObjectThreadHelper.cs,SignalThreadClose,The following statement contains a magic number: if (ThreadTerminating != null && ThreadWasStarted) {  	// Tell the thread to terminate.  	ThreadTerminating.Set ();  	// Give the thread a few seconds to end.  	ThreadStarted.WaitOne (10000' false);  	// Mark the thread as being terminated.  	ThreadWasStarted = false;  }  
Magic Number,usbQRBar,ServiceObjectThreadHelper,C:\repos\xlgwr_usbQRbar\usbQRBar\ServiceObjectThreadHelper.cs,SignalThreadClose,The following statement contains a magic number: ThreadStarted.WaitOne (10000' false);  
Magic Number,usbQRBar,StatisticsTest,C:\repos\xlgwr_usbQRbar\usbQRBar\STATISTICSSO.CS,SetDemonstrationStatistics,The following statement contains a magic number: switch (enableCount) {  case 0:  	SetStatisticValue (StatisticManufacturerName' "Microsoft Corporation");  	break;  case 1:  	SetStatisticValue (StatisticManufacturerName' "Service Control Contractors' Inc.");  	break;  case 2:  	SetStatisticValue (StatisticManufacturerName' "Point of Service Controls .com");  	break;  }  
Magic Number,usbQRBar,StatisticsTest,C:\repos\xlgwr_usbQRbar\usbQRBar\STATISTICSSO.CS,SetDemonstrationStatistics,The following statement contains a magic number: if (++enableCount == 3) {  	enableCount = 0;  }  
Missing Default,usbQRBar,StatisticsTest,C:\repos\xlgwr_usbQRbar\usbQRBar\STATISTICSSO.CS,SetDemonstrationStatistics,The following switch statement is missing a default case: switch (enableCount) {  case 0:  	SetStatisticValue (StatisticManufacturerName' "Microsoft Corporation");  	break;  case 1:  	SetStatisticValue (StatisticManufacturerName' "Service Control Contractors' Inc.");  	break;  case 2:  	SetStatisticValue (StatisticManufacturerName' "Point of Service Controls .com");  	break;  }  
