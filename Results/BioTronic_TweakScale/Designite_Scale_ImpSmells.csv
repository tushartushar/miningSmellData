Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TweakScale,ScaleExponents,D:\research\architectureSmells\repos\BioTronic_TweakScale\ScaleExponents.cs,ScaleExponents,Cyclomatic complexity of the method is 9
Complex Method,TweakScale,ScaleExponents,D:\research\architectureSmells\repos\BioTronic_TweakScale\ScaleExponents.cs,Rescale,Cyclomatic complexity of the method is 16
Complex Method,TweakScale,ScaleExponents,D:\research\architectureSmells\repos\BioTronic_TweakScale\ScaleExponents.cs,UpdateFields,Cyclomatic complexity of the method is 9
Complex Method,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,Setup,Cyclomatic complexity of the method is 8
Complex Method,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,UpdateByWidth,Cyclomatic complexity of the method is 8
Complex Method,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,Update,Cyclomatic complexity of the method is 8
Long Parameter List,TweakScale,Hotkeyable,D:\research\architectureSmells\repos\BioTronic_TweakScale\Hotkeyable.cs,Hotkeyable,The method has 5 parameters. Parameters: osd' name' tempDisableDefault' toggleDefault' state
Long Parameter List,TweakScale,Hotkeyable,D:\research\architectureSmells\repos\BioTronic_TweakScale\Hotkeyable.cs,Hotkeyable,The method has 5 parameters. Parameters: osd' name' tempDisableDefault' toggleDefault' state
Long Parameter List,TweakScale,ScaleExponents,D:\research\architectureSmells\repos\BioTronic_TweakScale\ScaleExponents.cs,Rescale,The method has 5 parameters. Parameters: current' baseValue' name' scalingMode' factor
Long Statement,TweakScale,CompatibilityChecker,D:\research\architectureSmells\repos\BioTronic_TweakScale\Checker.cs,Start,The length of the statement  "            Debug.Log(String.Format("[CompatibilityChecker] Running checker version {0} from '{1}'"' _version' Assembly.GetExecutingAssembly().GetName().Name)); " is 148.
Long Statement,TweakScale,CompatibilityChecker,D:\research\architectureSmells\repos\BioTronic_TweakScale\Checker.cs,Start,The length of the statement  "                        Debug.LogWarning(String.Format("[CompatibilityChecker] Exception while invoking IsCompatible() from '{0}':\n\n{1}"' m.DeclaringType.Assembly.GetName().Name' e)); " is 161.
Long Statement,TweakScale,CompatibilityChecker,D:\research\architectureSmells\repos\BioTronic_TweakScale\Checker.cs,Start,The length of the statement  "                        Debug.LogWarning(String.Format("[CompatibilityChecker] Exception while invoking IsUnityCompatible() from '{0}':\n\n{1}"' m.DeclaringType.Assembly.GetName().Name' e)); " is 166.
Long Statement,TweakScale,CompatibilityChecker,D:\research\architectureSmells\repos\BioTronic_TweakScale\Checker.cs,Start,The length of the statement  "                message += "WARNING: You are using 64-bit KSP on Windows. This version of KSP is known to cause crashes. It's highly recommended that you use either 32-bit KSP on Windows or switch to Linux."; " is 192.
Long Statement,TweakScale,CompatibilityChecker,D:\research\architectureSmells\repos\BioTronic_TweakScale\Checker.cs,Start,The length of the statement  "                message += ((message == String.Empty) ? "Some" : "\n\nAdditionally' some") + " installed mods may be incompatible with this version of Kerbal Space Program. Features may be broken or disabled. Please check for updates to the listed mods."; " is 239.
Long Statement,TweakScale,CompatibilityChecker,D:\research\architectureSmells\repos\BioTronic_TweakScale\Checker.cs,Start,The length of the statement  "                    message += String.Format("\n\nThese mods are incompatible with KSP {0}.{1}.{2}:\n\n"' Versioning.version_major' Versioning.version_minor' Versioning.Revision); " is 159.
Long Statement,TweakScale,MemberUpdater,D:\research\architectureSmells\repos\BioTronic_TweakScale\MemberUpdater.cs,Create,The length of the statement  "                Tools.LogWf("Property {0} on {1} requires indices' which TweakScale currently does not support."' name' objectType.Name);" is 121.
Long Statement,TweakScale,ScaleExponents,D:\research\architectureSmells\repos\BioTronic_TweakScale\ScaleExponents.cs,Rescale,The length of the statement  "                    Tools.LogWf("Too few values given for {0}. Expected at least {1}' got {2}: {3}"' name' factor.index + 1' values.Length' exponentValue); " is 135.
Long Statement,TweakScale,ScaleExponents,D:\research\architectureSmells\repos\BioTronic_TweakScale\ScaleExponents.cs,Rescale,The length of the statement  "                current.Scale(Math.Pow(scalingMode.UseRelativeScaling ? factor.relative.linear : factor.absolute.linear' exponent)' baseValue); " is 127.
Long Statement,TweakScale,Tools,D:\research\architectureSmells\repos\BioTronic_TweakScale\Tools.cs,Logf,The length of the statement  "            Debug.Log("[TweakScale] " + string.Format(format' args.Select(a => a.PreFormat()).ToArray()) + Environment.NewLine + StackTraceUtility.ExtractStackTrace()); " is 156.
Long Statement,TweakScale,Tools,D:\research\architectureSmells\repos\BioTronic_TweakScale\Tools.cs,LogWf,The length of the statement  "            Debug.LogWarning("[TweakScale Warning] " + string.Format(format' args.Select(a => a.PreFormat()).ToArray()) + Environment.NewLine + StackTraceUtility.ExtractStackTrace()); " is 171.
Long Statement,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,Setup,The length of the statement  "                DryCost = (float)(part.partInfo.cost - _prefabPart.Resources.Cast<PartResource>().Aggregate(0.0' (a' b) => a + b.maxAmount * b.info.unitCost)); " is 143.
Long Statement,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,RescaleNode,The length of the statement  "                    node.size = (int)(baseNode.size + (Tools.ClosestIndex(tweakScale' ScaleType.AllScaleFactors) - Tools.ClosestIndex(defaultScale' ScaleType.AllScaleFactors)) / (float)ScaleType.AllScaleFactors.Length * 5); " is 203.
Long Statement,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,CheckForInvalidCfg,The length of the statement  "            Tools.LogWf("{0}({1}) has no valid scale factors. This is probably caused by an invalid TweakScale configuration for the part."' part.name' part.partInfo.title); " is 161.
Long Statement,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,Update,The length of the statement  "                else if (part.transform.GetChild(0).localScale != _savedScale) // editor frequently nukes our OnStart resize some time later " is 124.
Long Statement,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,GetModuleCost,The length of the statement  "            return (float)(DryCost - part.partInfo.cost + part.Resources.Cast<PartResource>().Aggregate(0.0' (a' b) => a + b.maxAmount * b.info.unitCost)); " is 143.
Complex Conditional,TweakScale,Tools,D:\research\architectureSmells\repos\BioTronic_TweakScale\Tools.cs,ConfigValue,The conditional expression  "ex is InvalidCastException || ex is FormatException || ex is OverflowException || ex is ArgumentNullException"  is complex.
Complex Conditional,TweakScale,Tools,D:\research\architectureSmells\repos\BioTronic_TweakScale\Tools.cs,ConvertString,The conditional expression  "!(ex is InvalidCastException) && !(ex is FormatException) && !(ex is OverflowException) &&                      !(ex is ArgumentNullException)"  is complex.
Empty Catch Block,TweakScale,Tools,D:\research\architectureSmells\repos\BioTronic_TweakScale\Tools.cs,ToString_rec,The method has an empty catch block.
Magic Number,TweakScale,CompatibilityChecker,D:\research\architectureSmells\repos\BioTronic_TweakScale\Checker.cs,IsCompatible,The following statement contains a magic number: return Versioning.version_major == 0 && Versioning.version_minor == 90 && Versioning.Revision == 0;
Magic Number,TweakScale,CompatibilityChecker,D:\research\architectureSmells\repos\BioTronic_TweakScale\Checker.cs,IsWin64,The following statement contains a magic number: return (IntPtr.Size == 8) && (Environment.OSVersion.Platform == PlatformID.Win32NT);
Magic Number,TweakScale,OSD,D:\research\architectureSmells\repos\BioTronic_TweakScale\OSD.cs,CreateStyle,The following statement contains a magic number: var style = new GUIStyle              {                  stretchWidth = true'                  alignment = TextAnchor.MiddleCenter'                  fontSize = 16'                  fontStyle = FontStyle.Bold'                  normal = { textColor = color }              };
Magic Number,TweakScale,OSD,D:\research\architectureSmells\repos\BioTronic_TweakScale\OSD.cs,Update,The following statement contains a magic number: GUILayout.BeginArea(new Rect(0' Screen.height * 0.1f' Screen.width' h)' CreateStyle(Color.white));
Magic Number,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,SetupFromConfig,The following statement contains a magic number: range.incrementLarge = (float)Math.Round((range.maxValue - range.minValue) / 10' 2);
Magic Number,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,SetupFromConfig,The following statement contains a magic number: range.incrementLarge = (float)Math.Round((range.maxValue - range.minValue) / 10' 2);
Magic Number,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,SetupFromConfig,The following statement contains a magic number: range.incrementSmall = (float)Math.Round(range.incrementLarge / 10' 2);
Magic Number,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,SetupFromConfig,The following statement contains a magic number: range.incrementSmall = (float)Math.Round(range.incrementLarge / 10' 2);
Magic Number,TweakScale,TweakScale,D:\research\architectureSmells\repos\BioTronic_TweakScale\Scale.cs,RescaleNode,The following statement contains a magic number: node.size = (int)(baseNode.size + (tweakScale - defaultScale) / (MaxSize - MinSize) * 5);
Magic Number,TweakScale,NodeInfo,D:\research\architectureSmells\repos\BioTronic_TweakScale\ScaleType.cs,NodeInfo,The following statement contains a magic number: Mathf.Abs(Scale) < 0.01
Magic Number,TweakScale,NodeInfo,D:\research\architectureSmells\repos\BioTronic_TweakScale\ScaleType.cs,NodeInfo,The following statement contains a magic number: Mathf.Abs(Scale) < 0.01
Magic Number,TweakScale,Tuple,D:\research\architectureSmells\repos\BioTronic_TweakScale\Tuple.cs,CombineHashCodes,The following statement contains a magic number: return (h1 << 5) + h1 ^ h2;
