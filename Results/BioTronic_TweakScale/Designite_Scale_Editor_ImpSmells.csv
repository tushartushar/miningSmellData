Implementation smell,Namespace,Class,File,Method,Description
Long Statement,TweakScale,ScaleDatabase,C:\repos\BioTronic_TweakScale\Scale_Editor\ScaleDatabase.cs,Save,The length of the statement  "            const string partFormat1 = "@PART[{0}] // {1}\r\n{{\r\n\tMODULE\r\n\t{{\r\n\t\tname = TweakScale\r\n\t\ttype = {2}\r\n\t\tdefaultScale = {3}\r\n\t}}\r\n}}"; " is 156.
Long Statement,TweakScale,ScaleDatabase,C:\repos\BioTronic_TweakScale\Scale_Editor\ScaleDatabase.cs,Save,The length of the statement  "            const string partFormat2 = "@PART[{0}] // {1}\r\n{{\r\n\tMODULE\r\n\t{{\r\n\t\tname = TweakScale\r\n\t\ttype = {2}\r\n\t}}\r\n}}"; " is 130.
Magic Number,TweakScale,TweakScaleEditor,C:\repos\BioTronic_TweakScale\Scale_Editor\Editor.cs,ChangeScaleType,The following statement contains a magic number: if (_cfg.IsFreeScale)              {                  _scaleEdit.minValue = _cfg.MinValue;                  _scaleEdit.maxValue = _cfg.MaxValue;                  _scaleEdit.incrementLarge = (float)Math.Round((_scaleEdit.maxValue - _scaleEdit.minValue) / 10' 2);                  _scaleEdit.incrementSmall = (float)Math.Round(_scaleEdit.incrementLarge / 10' 2);                  _tweakScale = _cfg.DefaultScale;                  _scale.guiUnits = _cfg.Suffix;              }              else              {                  _nameEdit.options = _cfg.ScaleNames;                  _tweakName = Tools.ClosestIndex(_cfg.DefaultScale' _cfg.AllScaleFactors);                  _tweakScale = _cfg.AllScaleFactors[_tweakName];              }
Magic Number,TweakScale,TweakScaleEditor,C:\repos\BioTronic_TweakScale\Scale_Editor\Editor.cs,ChangeScaleType,The following statement contains a magic number: if (_cfg.IsFreeScale)              {                  _scaleEdit.minValue = _cfg.MinValue;                  _scaleEdit.maxValue = _cfg.MaxValue;                  _scaleEdit.incrementLarge = (float)Math.Round((_scaleEdit.maxValue - _scaleEdit.minValue) / 10' 2);                  _scaleEdit.incrementSmall = (float)Math.Round(_scaleEdit.incrementLarge / 10' 2);                  _tweakScale = _cfg.DefaultScale;                  _scale.guiUnits = _cfg.Suffix;              }              else              {                  _nameEdit.options = _cfg.ScaleNames;                  _tweakName = Tools.ClosestIndex(_cfg.DefaultScale' _cfg.AllScaleFactors);                  _tweakScale = _cfg.AllScaleFactors[_tweakName];              }
Magic Number,TweakScale,TweakScaleEditor,C:\repos\BioTronic_TweakScale\Scale_Editor\Editor.cs,ChangeScaleType,The following statement contains a magic number: if (_cfg.IsFreeScale)              {                  _scaleEdit.minValue = _cfg.MinValue;                  _scaleEdit.maxValue = _cfg.MaxValue;                  _scaleEdit.incrementLarge = (float)Math.Round((_scaleEdit.maxValue - _scaleEdit.minValue) / 10' 2);                  _scaleEdit.incrementSmall = (float)Math.Round(_scaleEdit.incrementLarge / 10' 2);                  _tweakScale = _cfg.DefaultScale;                  _scale.guiUnits = _cfg.Suffix;              }              else              {                  _nameEdit.options = _cfg.ScaleNames;                  _tweakName = Tools.ClosestIndex(_cfg.DefaultScale' _cfg.AllScaleFactors);                  _tweakScale = _cfg.AllScaleFactors[_tweakName];              }
Magic Number,TweakScale,TweakScaleEditor,C:\repos\BioTronic_TweakScale\Scale_Editor\Editor.cs,ChangeScaleType,The following statement contains a magic number: if (_cfg.IsFreeScale)              {                  _scaleEdit.minValue = _cfg.MinValue;                  _scaleEdit.maxValue = _cfg.MaxValue;                  _scaleEdit.incrementLarge = (float)Math.Round((_scaleEdit.maxValue - _scaleEdit.minValue) / 10' 2);                  _scaleEdit.incrementSmall = (float)Math.Round(_scaleEdit.incrementLarge / 10' 2);                  _tweakScale = _cfg.DefaultScale;                  _scale.guiUnits = _cfg.Suffix;              }              else              {                  _nameEdit.options = _cfg.ScaleNames;                  _tweakName = Tools.ClosestIndex(_cfg.DefaultScale' _cfg.AllScaleFactors);                  _tweakScale = _cfg.AllScaleFactors[_tweakName];              }
