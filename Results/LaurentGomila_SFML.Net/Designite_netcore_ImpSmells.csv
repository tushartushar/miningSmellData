Implementation smell,Namespace,Class,File,Method,Description
Magic Number,netcore,Program,D:\research\architectureSmells\repos\LaurentGomila_SFML.Net\examples\netcore\Program.cs,Main,The following statement contains a magic number: var shape = new RectangleShape(new Vector2f(100' 100))              {                  FillColor = Color.Black              };
Magic Number,netcore,Program,D:\research\architectureSmells\repos\LaurentGomila_SFML.Net\examples\netcore\Program.cs,Main,The following statement contains a magic number: var shape = new RectangleShape(new Vector2f(100' 100))              {                  FillColor = Color.Black              };
Magic Number,netcore,Program,D:\research\architectureSmells\repos\LaurentGomila_SFML.Net\examples\netcore\Program.cs,Main,The following statement contains a magic number: var sound = new Sound(GenerateSineWave(frequency: 440.0' volume: .25' seconds: 1));
Magic Number,netcore,Program,D:\research\architectureSmells\repos\LaurentGomila_SFML.Net\examples\netcore\Program.cs,Main,The following statement contains a magic number: var sound = new Sound(GenerateSineWave(frequency: 440.0' volume: .25' seconds: 1));
Magic Number,netcore,Program,D:\research\architectureSmells\repos\LaurentGomila_SFML.Net\examples\netcore\Program.cs,Main,The following statement contains a magic number: var window = new RenderWindow(new VideoMode(800' 600)' "SFML running in .NET Core");
Magic Number,netcore,Program,D:\research\architectureSmells\repos\LaurentGomila_SFML.Net\examples\netcore\Program.cs,Main,The following statement contains a magic number: var window = new RenderWindow(new VideoMode(800' 600)' "SFML running in .NET Core");
Magic Number,netcore,Program,D:\research\architectureSmells\repos\LaurentGomila_SFML.Net\examples\netcore\Program.cs,GenerateSineWave,The following statement contains a magic number: uint sampleRate = 44100;
Magic Number,netcore,Program,D:\research\architectureSmells\repos\LaurentGomila_SFML.Net\examples\netcore\Program.cs,GenerateSineWave,The following statement contains a magic number: samples[i] = (short)(Math.Sin(frequency * (2 * Math.PI) * i / sampleRate) * volume * short.MaxValue);
