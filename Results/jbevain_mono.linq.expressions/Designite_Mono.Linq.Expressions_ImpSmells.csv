Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.Linq.Expressions,CustomExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\DoWhileExpression.cs,For,Cyclomatic complexity of the method is 9
Long Parameter List,Mono.Linq.Expressions,CustomExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\DoWhileExpression.cs,ForEach,The method has 5 parameters. Parameters: variable' enumerable' body' breakTarget' continueTarget
Long Parameter List,Mono.Linq.Expressions,CustomExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\DoWhileExpression.cs,For,The method has 5 parameters. Parameters: variable' initializer' test' step' body
Long Parameter List,Mono.Linq.Expressions,CustomExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\DoWhileExpression.cs,For,The method has 6 parameters. Parameters: variable' initializer' test' step' body' breakTarget
Long Parameter List,Mono.Linq.Expressions,CustomExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\DoWhileExpression.cs,For,The method has 7 parameters. Parameters: variable' initializer' test' step' body' breakTarget' continueTarget
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,MakeBinary,The method has 5 parameters. Parameters: binaryType' left' right' liftToNull' method
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,MakeBinary,The method has 6 parameters. Parameters: binaryType' left' right' liftToNull' method' conversion
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,Block,The method has 5 parameters. Parameters: arg0' arg1' arg2' arg3' arg4
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,DebugInfo,The method has 5 parameters. Parameters: document' startLine' startColumn' endLine' endColumn
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,MakeDynamic,The method has 5 parameters. Parameters: delegateType' binder' arg0' arg1' arg2
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,MakeDynamic,The method has 6 parameters. Parameters: delegateType' binder' arg0' arg1' arg2' arg3
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,Dynamic,The method has 5 parameters. Parameters: binder' returnType' arg0' arg1' arg2
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,Dynamic,The method has 6 parameters. Parameters: binder' returnType' arg0' arg1' arg2' arg3
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,Lambda,The method has 5 parameters. Parameters: delegateType' body' name' tailCall' parameters
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,Call,The method has 5 parameters. Parameters: method' arg0' arg1' arg2' arg3
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,Call,The method has 6 parameters. Parameters: method' arg0' arg1' arg2' arg3' arg4
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,Call,The method has 5 parameters. Parameters: instance' method' arg0' arg1' arg2
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,Switch,The method has 5 parameters. Parameters: type' switchValue' defaultBody' comparison' cases
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,Switch,The method has 5 parameters. Parameters: type' switchValue' defaultBody' comparison' cases
Long Parameter List,Mono.Linq.Expressions,FluentExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\FluentExtensions.cs,MakeTry,The method has 5 parameters. Parameters: type' body' finally' fault' handlers
Long Parameter List,Mono.Linq.Expressions,ForEachExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\ForEachExpression.cs,ForEachExpression,The method has 5 parameters. Parameters: variable' enumerable' body' break_target' continue_target
Long Parameter List,Mono.Linq.Expressions,ForEachExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\ForEachExpression.cs,Update,The method has 5 parameters. Parameters: variable' enumerable' body' breakTarget' continueTarget
Long Parameter List,Mono.Linq.Expressions,ForExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\ForExpression.cs,ForExpression,The method has 7 parameters. Parameters: variable' initializer' test' step' body' breakTarget' continueTarget
Long Parameter List,Mono.Linq.Expressions,ForExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\ForExpression.cs,Update,The method has 7 parameters. Parameters: variable' initializer' test' step' body' breakTarget' continueTarget
Long Statement,Mono.Linq.Expressions,CombineExtensions,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\CombineExtensions.cs,Combine,The length of the statement  "			return Expression.Lambda<T> (combinator (RewriteBody (self' parameters)' RewriteBody (expression' parameters))' parameters); " is 124.
Long Statement,Mono.Linq.Expressions,ParameterRewriter,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\CombineExtensions.cs,ParametersMappingFor,The length of the statement  "				return candidates.Zip (replacements' (candidate' replacement) => new { candidate' replacement }).ToDictionary (t => t.candidate' t => t.replacement); " is 149.
Long Statement,Mono.Linq.Expressions,DoWhileExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\DoWhileExpression.cs,Update,The length of the statement  "			if (this.test == test && this.body == body && this.break_target == breakTarget && this.continue_target == continueTarget) " is 121.
Long Statement,Mono.Linq.Expressions,WhileExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\WhileExpression.cs,Update,The length of the statement  "			if (this.test == test && this.body == body && this.break_target == breakTarget && this.continue_target == continueTarget) " is 121.
Long Statement,Mono.Linq.Expressions,ForEachExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\ForEachExpression.cs,Update,The length of the statement  "			if (this.variable == variable && this.enumerable == enumerable && this.body == body && break_target == breakTarget && continue_target == continueTarget) " is 152.
Long Statement,Mono.Linq.Expressions,ForExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\ForExpression.cs,Update,The length of the statement  "			if (this.variable == variable && this.initializer == initializer && this.test == test && this.step == step && this.body == body && this.break_target == breakTarget && this.continue_target == continueTarget) " is 206.
Complex Conditional,Mono.Linq.Expressions,DoWhileExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\DoWhileExpression.cs,Update,The conditional expression  "this.test == test && this.body == body && this.break_target == breakTarget && this.continue_target == continueTarget"  is complex.
Complex Conditional,Mono.Linq.Expressions,WhileExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\WhileExpression.cs,Update,The conditional expression  "this.test == test && this.body == body && this.break_target == breakTarget && this.continue_target == continueTarget"  is complex.
Complex Conditional,Mono.Linq.Expressions,ForEachExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\ForEachExpression.cs,Update,The conditional expression  "this.variable == variable && this.enumerable == enumerable && this.body == body && break_target == breakTarget && continue_target == continueTarget"  is complex.
Complex Conditional,Mono.Linq.Expressions,ForExpression,C:\repos\jbevain_mono.linq.expressions\Mono.Linq.Expressions\ForExpression.cs,Update,The conditional expression  "this.variable == variable && this.initializer == initializer && this.test == test && this.step == step && this.body == body && this.break_target == breakTarget && this.continue_target == continueTarget"  is complex.
