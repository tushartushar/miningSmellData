Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiThreadedSyncedCommandifiedListAccessTest,The length of the statement  "			var threadA = new Thread(()=>MultiThreadedSyncedCommandifiedListAccessTest_ThreadA(toTest' waitHandles[0]' (e)=> caughtException=e)); " is 133.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiThreadedSyncedCommandifiedListAccessTest,The length of the statement  "			var threadB = new Thread(()=>MultiThreadedSyncedCommandifiedListAccessTest_ThreadB(toTest' waitHandles[1]' (e) => caughtException=e)); " is 134.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,SingleUndoOfMultiCommandLevelTest,The length of the statement  "			// set the property through a command. As the property name change also spawns a command' it will create a 2-level command set. " is 127.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,SingleUndoOfMultiCommandLevelTest,The length of the statement  "			// it doesn't use an undo function' as it doesn't change state itself' that's delegated to another command. Typically one wouldn't do it this way' " is 146.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,SingleUndoOfMultiCommandLevelTest,The length of the statement  "			// equal to the test above' but now with an undo function. The undo function will try to undo the state as well. e.Name therefore has to check " is 142.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiUndoRedoOfMultiCommandLevelWithBeforeAfterActionCallsTest,The length of the statement  "			// set the property through a command. As the property name change also spawns a command' it will create a 2-level command set. " is 127.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiUndoRedoOfMultiCommandLevelWithBeforeAfterActionCallsTest,The length of the statement  "			// it doesn't use an undo function' as it doesn't change state itself' that's delegated to another command. Typically one wouldn't do it this way' " is 146.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItemTest,The length of the statement  "			// use a library extension method to swap two items. We want to roll back the swap call completely' so the SwapValues call is seen " is 130.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItemTest,The length of the statement  "			// as an atomic action. We therefore have to create a command to make it undoable as an atomic action. It doesn't have an undo action' " is 134.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItemTest,The length of the statement  "			// undo operation. This is undoing the call to SwapValues' which by undoing that' will undo all the actions SwapValues took' i.e. setting 2 items at " is 148.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSortWithUndoTest,The length of the statement  "			CQManager.EnqueueAndRunCommand(new Command<string>(() => toTest.Sort(SortAlgorithm.ShellSort' SortDirection.Descending))); " is 122.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItem_Sync_Test,The length of the statement  "			// use a library extension method to swap two items. We want to roll back the swap call completely' so the SwapValues call is seen " is 130.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItem_Sync_Test,The length of the statement  "			// as an atomic action. We therefore have to create a command to make it undoable as an atomic action. It doesn't have an undo action' " is 134.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItem_Sync_Test,The length of the statement  "			// undo operation. This is undoing the call to SwapValues' which by undoing that' will undo all the actions SwapValues took' i.e. setting 2 items at " is 148.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSortWithUndo_Sync_Test,The length of the statement  "			CQManager.EnqueueAndRunCommand(new Command<string>(() => toTest.Sort(SortAlgorithm.ShellSort' SortDirection.Descending))); " is 122.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The length of the statement  "			// create graph to add to this graph. Doesn't have to be a commandified graph' as we're not rolling back the actions on that graph.  " is 131.
Long Statement,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The length of the statement  "			EventHandler<CancelableListModificationEventArgs<int>> cancelableHandler = delegate(object sender' CancelableListModificationEventArgs<int> e) { e.Cancel = true; }; " is 164.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,MultiThreadedSyncedGraphAccessTest,The length of the statement  "			var toTest = new DirectedGraph<int' DirectedEdge<int>>((a' b) => new DirectedEdge<int>(a' b)' isCommandified: true' isSynchronized: true); " is 138.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,MultiThreadedSyncedGraphAccessTest,The length of the statement  "			var threadA = new Thread(() => MultiThreadedSyncedGraphAccessTest_ThreadA(toTest' waitHandles[0]' (e) => caughtException = e)); " is 127.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,MultiThreadedSyncedGraphAccessTest,The length of the statement  "			var threadB = new Thread(() => MultiThreadedSyncedGraphAccessTest_ThreadB(toTest' waitHandles[1]' (e) => caughtException = e)); " is 127.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,RandomTransitiveClosureAndCompositionTest,The length of the statement  "				DirectedGraph<int' DirectedEdge<int>> composed = DirectedGraph<int' DirectedEdge<int>>.Compose(graph' graph' (a' b) => new DirectedEdge<int>(a' b)); " is 148.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,RandomTransitiveClosureAndCompositionTest,The length of the statement  "					Assert.IsTrue(closure.ContainsEdge(edge.StartVertex' edge.EndVertex)' "Failure on run " + i.ToString() + " based on seed " + _seed.ToString() + "."); " is 149.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,GenerateRandomIntegerDirectedGraph,The length of the statement  "			var graph = new DirectedGraph<int' DirectedEdge<int>>((a' b) => new DirectedEdge<int>(a' b)' isCommandified: false' isSynchronized:true); " is 137.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The length of the statement  "			var g = new DirectedGraph<int' DirectedEdge<int>>((a' b) => new DirectedEdge<int>(a' b)' isCommandified: false' isSynchronized: true); " is 134.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The length of the statement  "			var g = new DirectedGraph<int' DirectedEdge<int>>((a' b) => new DirectedEdge<int>(a' b)' isCommandified: false' isSynchronized: true); " is 134.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,BasicDepthFirstSearchCrawlerTest,The length of the statement  "			DepthFirstSearchTester<string' NonDirectedEdge<string>> dfs = new DepthFirstSearchTester<string' NonDirectedEdge<string>>(graph); " is 129.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TopologicalSorterOnDirectedGraphWithCycle,The length of the statement  "			DirectedGraph<string' DirectedEdge<string>> graph = new DirectedGraph<string' DirectedEdge<string>>(isCommandified: false' isSynchronized: true); " is 145.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TopologicalSorterOnDirectedAcyclicGraphWhereDirectionMeansDependency,The length of the statement  "			DirectedGraph<string' DirectedEdge<string>> graph = new DirectedGraph<string' DirectedEdge<string>>(isCommandified: false' isSynchronized: true); " is 145.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TopologicalSorterOnDirectedAcyclicGraphWhereDirectionMeansOrder,The length of the statement  "			DirectedGraph<string' DirectedEdge<string>> graph = new DirectedGraph<string' DirectedEdge<string>>(isCommandified: false' isSynchronized: true); " is 145.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TopologicalSorterOnDirectedAcyclicGraphWhereDirectionMeansOrder,The length of the statement  "			TopologicalSorter<string' DirectedEdge<string>> sorter = new TopologicalSorter<string' DirectedEdge<string>>(graph' true); " is 122.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,OrphanedVerticesRetrievalTest,The length of the statement  "			DirectedGraph<string' DirectedEdge<string>> graph = new DirectedGraph<string' DirectedEdge<string>>(isCommandified: false' isSynchronized: true); " is 145.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,RemoveOrphanedVerticesWhenEdgeIsRemovedTest,The length of the statement  "			DirectedGraph<string' DirectedEdge<string>> graph = new DirectedGraph<string' DirectedEdge<string>>(isCommandified: false' isSynchronized: true); " is 145.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,IsConnectedTest,The length of the statement  "			DirectedGraph<string' DirectedEdge<string>> graph = new DirectedGraph<string' DirectedEdge<string>>(isCommandified: false' isSynchronized: true); " is 145.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,IsConnected2Test,The length of the statement  "			DirectedGraph<string' DirectedEdge<string>> graph = new DirectedGraph<string' DirectedEdge<string>>(isCommandified: false' isSynchronized: true); " is 145.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,AsNonDirectedGraphTest,The length of the statement  "			DirectedGraph<string' DirectedEdge<string>> graph = new DirectedGraph<string' DirectedEdge<string>>(isCommandified: false' isSynchronized: true); " is 145.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,AsNonDirectedGraphTest,The length of the statement  "			NonDirectedGraph<string' NonDirectedEdge<string>> nonDirectedGraph = (NonDirectedGraph<string' NonDirectedEdge<string>>)graph.GetAsNonDirectedCopy(); " is 149.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,RandomTransitiveClosureAndCompositionTest,The length of the statement  "				DirectedGraph<int' DirectedEdge<int>> composed = DirectedGraph<int' DirectedEdge<int>>.Compose(graph' graph' (a' b)=>new DirectedEdge<int>(a' b)); " is 146.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,RandomTransitiveClosureAndCompositionTest,The length of the statement  "					Assert.IsTrue(closure.ContainsEdge(edge.StartVertex' edge.EndVertex)' "Failure on run " + i.ToString() + " based on seed " + _seed.ToString() + "."); " is 149.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,GenerateRandomIntegerDirectedGraph,The length of the statement  "			DirectedGraph<int' DirectedEdge<int>> graph = new DirectedGraph<int' DirectedEdge<int>>((a' b) => new DirectedEdge<int>(a' b)); " is 127.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The length of the statement  "			DirectedGraph<int' DirectedEdge<int>> g = new DirectedGraph<int' DirectedEdge<int>>((a' b) => new DirectedEdge<int>(a' b)); " is 123.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The length of the statement  "			DirectedGraph<int' DirectedEdge<int>> g = new DirectedGraph<int' DirectedEdge<int>>((a' b) => new DirectedEdge<int>(a' b)); " is 123.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,BasicDepthFirstSearchCrawlerTest,The length of the statement  "			DepthFirstSearchTester<string' NonDirectedEdge<string>> dfs = new DepthFirstSearchTester<string' NonDirectedEdge<string>>(graph); " is 129.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TopologicalSorterOnDirectedAcyclicGraphWhereDirectionMeansOrder,The length of the statement  "			TopologicalSorter<string' DirectedEdge<string>> sorter = new TopologicalSorter<string' DirectedEdge<string>>(graph' true); " is 122.
Long Statement,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,AsNonDirectedGraphTest,The length of the statement  "			NonDirectedGraph<string' NonDirectedEdge<string>> nonDirectedGraph = (NonDirectedGraph<string' NonDirectedEdge<string>>)graph.GetAsNonDirectedCopy(); " is 149.
Long Statement,SD.Tools.Algorithmia.Tests,MultiValueDictionaryTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\MultiValueDictionaryTests.cs,SimpleEnumerationTest,The length of the statement  "			MultiValueDictionary<int' string> container = new MultiValueDictionary<int' string> { { 1' "value1" }' { 2' "value2" }' { 2' "value3" } }; " is 138.
Long Statement,SD.Tools.Algorithmia.Tests,MultiValueDictionaryTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\MultiValueDictionaryTests.cs,SimpleEnumerationTestWithLinqOperator,The length of the statement  "			MultiValueDictionary<int' string> container = new MultiValueDictionary<int' string> { { 1' "value1" }' { 2' "value2" }' { 2' "value3" } }; " is 138.
Long Statement,SD.Tools.Algorithmia.Tests,PriorityQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PriorityQueueTests.cs,SimplePriorityQueueFunctionalityTest,The length of the statement  "			SimplePriorityQueue<QueueElement> queue = new SimplePriorityQueue<QueueElement>((a' b) => a.Priority.CompareTo(b.Priority)); " is 124.
Long Statement,SD.Tools.Algorithmia.Tests,PriorityQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PriorityQueueTests.cs,SortedPriorityQueueFunctionalityTest,The length of the statement  "			SortedPriorityQueue<QueueElement> queue = new SortedPriorityQueue<QueueElement>((a' b) => a.Priority.CompareTo(b.Priority)); " is 124.
Long Statement,SD.Tools.Algorithmia.Tests,PriorityQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PriorityQueueTests.cs,BinaryHeapPriorityQueueFunctionalityTest,The length of the statement  "			BinaryHeapPriorityQueue<QueueElement> queue = new BinaryHeapPriorityQueue<QueueElement>((a' b) => a.Priority.CompareTo(b.Priority)); " is 132.
Long Statement,SD.Tools.Algorithmia.Tests,PropertyBagTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PropertyBagTests.cs,SimplePropertyDescriptorConstructionTest,The length of the statement  "			bag.PropertySpecifications.Add(new PropertySpecification("Property 3"' typeof(string)' "Cat2"' "Prop3 desc"' string.Empty)); " is 124.
Long Statement,SD.Tools.Algorithmia.Tests,PropertyBagTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PropertyBagTests.cs,SimplePropertyDescriptorConstructionTest,The length of the statement  "			// open a testform which binds the propertybag to a property grid. There's no value store so edited values are not stored. Just " is 127.
Long Statement,SD.Tools.Algorithmia.Tests,PropertyBagTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PropertyBagTests.cs,AdvancedPropertyDescriptorConstructionTestWithEvents,The length of the statement  "			var property3 = new PropertySpecification("Source folder"' typeof(string)' "OutputFolders"' "The output folder for the sourcecode"' "c:\\temp"); " is 144.
Long Statement,SD.Tools.Algorithmia.Tests,PropertyBagTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PropertyBagTests.cs,AdvancedPropertyDescriptorConstructionTestWithEvents,The length of the statement  "			property3.Attributes.Add(new EditorAttribute(typeof(System.Windows.Forms.Design.FolderNameEditor)' typeof(System.Drawing.Design.UITypeEditor))); " is 144.
Long Statement,SD.Tools.Algorithmia.Tests,PropertyBagTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PropertyBagTests.cs,AdvancedPropertyDescriptorConstructionTestWithEvents,The length of the statement  "			var property4 = new PropertySpecification("PickAValue"' typeof(string)' "Cat1"' "A property which value has to be picked from a list"); " is 135.
Long Statement,SD.Tools.Algorithmia.Tests,PropertyBagTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PropertyBagTests.cs,AdvancedPropertyDescriptorConstructionTestWithEvents,The length of the statement  "			// open a testform which binds the bag to the propertygrid. Editing values will store the values in the dictionary' default values are " is 134.
Long Statement,SD.Tools.Algorithmia.Tests,PropertyBagTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PropertyBagTests.cs,AdvancedPropertyDescriptorConstructionTestWithFuncs,The length of the statement  "			var property3 = new PropertySpecification("Source folder"' typeof(string)' "OutputFolders"' "The output folder for the sourcecode"' "c:\\temp"); " is 144.
Long Statement,SD.Tools.Algorithmia.Tests,PropertyBagTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PropertyBagTests.cs,AdvancedPropertyDescriptorConstructionTestWithFuncs,The length of the statement  "			property3.Attributes.Add(new EditorAttribute(typeof(System.Windows.Forms.Design.FolderNameEditor)' typeof(System.Drawing.Design.UITypeEditor))); " is 144.
Long Statement,SD.Tools.Algorithmia.Tests,PropertyBagTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PropertyBagTests.cs,AdvancedPropertyDescriptorConstructionTestWithFuncs,The length of the statement  "			var property4 = new PropertySpecification("PickAValue"' typeof(string)' "Cat1"' "A property which value has to be picked from a list"' "One"); " is 142.
Long Statement,SD.Tools.Algorithmia.Tests,PropertyBagTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PropertyBagTests.cs,AdvancedPropertyDescriptorConstructionTestWithFuncs,The length of the statement  "			var property5 = new PropertySpecification("EnumValue"' typeof(ConsoleColor)' "Cat1"' "Enum property to see that values are converted back/forth to int"); " is 153.
Long Statement,SD.Tools.Algorithmia.Tests,PropertyBagTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PropertyBagTests.cs,AdvancedPropertyDescriptorConstructionTestWithFuncs,The length of the statement  "			// func setting so values get store inside the dictionary and also retrieved from it. Console write added to see what happens when you bind " is 139.
Long Statement,SD.Tools.Algorithmia.Tests,PropertyBagTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PropertyBagTests.cs,AdvancedPropertyDescriptorConstructionTestWithFuncs,The length of the statement  "			// open a testform which binds the bag to the propertygrid. Editing values will store the values in the dictionary' default values are " is 134.
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiThreadedSyncedCommandifiedListAccessTest,The following statement contains a magic number: i < 10
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiThreadedSyncedCommandifiedListAccessTest_ThreadA,The following statement contains a magic number: Thread.Sleep(2);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiThreadedSyncedCommandifiedListAccessTest_ThreadA,The following statement contains a magic number: i < 500
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiThreadedSyncedCommandifiedListAccessTest_ThreadB,The following statement contains a magic number: Thread.Sleep(7);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiThreadedSyncedCommandifiedListAccessTest_ThreadB,The following statement contains a magic number: i < 500
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiUndoRedoOfMultiCommandLevelWithBeforeAfterActionCallsTest,The following statement contains a magic number: Assert.AreEqual(3' beforeDoCounter);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiUndoRedoOfMultiCommandLevelWithBeforeAfterActionCallsTest,The following statement contains a magic number: Assert.AreEqual(3' beforeUndoCounter);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiUndoRedoOfMultiCommandLevelWithBeforeAfterActionCallsTest,The following statement contains a magic number: Assert.AreEqual(3' afterDoCounter);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MultiUndoRedoOfMultiCommandLevelWithBeforeAfterActionCallsTest,The following statement contains a magic number: Assert.AreEqual(3' afterUndoCounter);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListClearTest,The following statement contains a magic number: Assert.AreEqual(3' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListClearTest,The following statement contains a magic number: Assert.AreEqual("Blah"' toTest[2]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListClearTest,The following statement contains a magic number: Assert.AreEqual(3' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListClearTest,The following statement contains a magic number: Assert.AreEqual("Blah"' toTest[2]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsertTest,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsertTest,The following statement contains a magic number: Assert.AreEqual(3' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsertTest,The following statement contains a magic number: Assert.AreEqual("Blah"' toTest[2]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsertTest,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsertTest,The following statement contains a magic number: Assert.AreEqual(3' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsertTest,The following statement contains a magic number: Assert.AreEqual("Bar"' toTest[2]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsertTest,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListRemoveTest,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListRemoveTest,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListRemoveTest,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItemTest,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItemTest,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItemTest,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItemTest,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItemTest,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSortWithUndoTest,The following statement contains a magic number: Assert.AreEqual("aab"' toTest[2]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSortWithUndoTest,The following statement contains a magic number: Assert.AreEqual("aaa"' toTest[3]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSortWithUndoTest,The following statement contains a magic number: Assert.AreEqual("aba"' toTest[2]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSortWithUndoTest,The following statement contains a magic number: Assert.AreEqual("baa"' toTest[3]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListClear_Sync_Test,The following statement contains a magic number: Assert.AreEqual(3' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListClear_Sync_Test,The following statement contains a magic number: Assert.AreEqual("Blah"' toTest[2]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListClear_Sync_Test,The following statement contains a magic number: Assert.AreEqual(3' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListClear_Sync_Test,The following statement contains a magic number: Assert.AreEqual("Blah"' toTest[2]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsert_Sync_Test,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsert_Sync_Test,The following statement contains a magic number: Assert.AreEqual(3' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsert_Sync_Test,The following statement contains a magic number: Assert.AreEqual("Blah"' toTest[2]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsert_Sync_Test,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsert_Sync_Test,The following statement contains a magic number: Assert.AreEqual(3' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsert_Sync_Test,The following statement contains a magic number: Assert.AreEqual("Bar"' toTest[2]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListInsert_Sync_Test,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListRemove_Sync_Test,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListRemove_Sync_Test,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListRemove_Sync_Test,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItem_Sync_Test,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItem_Sync_Test,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItem_Sync_Test,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItem_Sync_Test,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSetItem_Sync_Test,The following statement contains a magic number: Assert.AreEqual(2' toTest.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSortWithUndo_Sync_Test,The following statement contains a magic number: Assert.AreEqual("aab"' toTest[2]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSortWithUndo_Sync_Test,The following statement contains a magic number: Assert.AreEqual("aaa"' toTest[3]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSortWithUndo_Sync_Test,The following statement contains a magic number: Assert.AreEqual("aba"' toTest[2]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedListSortWithUndo_Sync_Test,The following statement contains a magic number: Assert.AreEqual("baa"' toTest[3]);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: graph.Add(42);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(42));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.Contains(42));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: graph.Add(42);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: graph.Add(13);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: graph.Add(10);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(42));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(13));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(10));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: graph.Add(new DirectedEdge<int>(42' 13));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: graph.Add(new DirectedEdge<int>(42' 13));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: graph.Add(new DirectedEdge<int>(42' 10));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: graph.Add(new DirectedEdge<int>(42' 10));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.AreEqual(2' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 13));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 13));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 10));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 10));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: graph.Remove(42);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.Contains(42));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.AreEqual(2' graph.VertexCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.AreEqual(2' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 13));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 13));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 10));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 10));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveVertexWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(42));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graph.Add(42);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graph.Add(13);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graph.Add(10);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graph.Add(new DirectedEdge<int>(42' 13));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graph.Add(new DirectedEdge<int>(42' 13));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graph.Add(new DirectedEdge<int>(42' 10));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graph.Add(new DirectedEdge<int>(42' 10));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(42));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(13));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(10));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(2' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 13));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 13));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 10));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 10));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graphToAdd.Add(2);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graphToAdd.Add(3);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graphToAdd.Add(new DirectedEdge<int>(1' 2));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graphToAdd.Add(new DirectedEdge<int>(1' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graphToAdd.Add(new DirectedEdge<int>(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graphToAdd.Add(new DirectedEdge<int>(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(3' graphToAdd.VertexCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(3' graphToAdd.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(6' graph.VertexCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(5' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(2));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(1' 2));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(1' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(3' graph.VertexCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(2' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.Contains(2));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.Contains(3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.ContainsEdge(1' 2));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.ContainsEdge(1' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(6' graph.VertexCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(5' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(2));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(1' 2));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(1' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(3' graph.VertexCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(2' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.Contains(2));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.Contains(3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.ContainsEdge(1' 2));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.ContainsEdge(1' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(6' graph.VertexCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(5' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(2));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.Contains(3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(1' 2));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(1' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: DirectedEdge<int> newEdge = new DirectedEdge<int>(42' 1);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(6' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 1));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.ContainsEdge(1' 42));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(5' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.ContainsEdge(42' 1));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(6' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 1));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(5' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.ContainsEdge(42' 1));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(6' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 1));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: graph.Disconnect(42' 1' false);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(5' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsFalse(graph.ContainsEdge(42' 1));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.AreEqual(6' graph.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CommandifiedGraphAddRemoveGraphAndEdgesWithUndoTest,The following statement contains a magic number: Assert.IsTrue(graph.ContainsEdge(42' 1));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: CommandifiedList<int> list = new CommandifiedList<int>() { 1' 2' 3 };
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: CommandifiedList<int> list = new CommandifiedList<int>() { 1' 2' 3 };
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: list.Add(4);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: Assert.IsFalse(list.Contains(4));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: Assert.IsFalse(list.Contains(4));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: list.Add(4);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: Assert.AreEqual(4' list.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: Assert.IsTrue(list.Contains(4));
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,CancelableEventsOnCommandifiedListTests,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MoveItemInCommandifiedListTest,The following statement contains a magic number: CommandifiedList<int> list = new CommandifiedList<int> { 1' 2' 3' 4 };
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MoveItemInCommandifiedListTest,The following statement contains a magic number: CommandifiedList<int> list = new CommandifiedList<int> { 1' 2' 3' 4 };
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MoveItemInCommandifiedListTest,The following statement contains a magic number: CommandifiedList<int> list = new CommandifiedList<int> { 1' 2' 3' 4 };
Magic Number,SD.Tools.Algorithmia.Tests,CommandQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,MoveItemInCommandifiedListTest,The following statement contains a magic number: Assert.AreEqual(2' list[0]);
Magic Number,SD.Tools.Algorithmia.Tests,GeneralDataStructuresTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GeneralDataStructuresTests.cs,CallLimiter_MultipleCallLimiterTest,The following statement contains a magic number: Assert.IsTrue(limiter.Call(lambda' 100.0' null));
Magic Number,SD.Tools.Algorithmia.Tests,GeneralDataStructuresTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GeneralDataStructuresTests.cs,CallLimiter_MultipleCallLimiterTest,The following statement contains a magic number: Assert.IsFalse(limiter.Call(lambda' 100.0' null));
Magic Number,SD.Tools.Algorithmia.Tests,GeneralDataStructuresTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GeneralDataStructuresTests.cs,CallLimiter_MultipleCallLimiterTest,The following statement contains a magic number: Assert.IsFalse(limiter.Call(lambda' 100.0' null));
Magic Number,SD.Tools.Algorithmia.Tests,GeneralDataStructuresTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GeneralDataStructuresTests.cs,CallLimiter_MultipleCallLimiterTest,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,SD.Tools.Algorithmia.Tests,GeneralDataStructuresTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GeneralDataStructuresTests.cs,CallLimiter_MultipleCallLimiterTest,The following statement contains a magic number: Assert.IsTrue(limiter.Call(lambda' 100.0' null));
Magic Number,SD.Tools.Algorithmia.Tests,GeneralDataStructuresTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GeneralDataStructuresTests.cs,CallLimiter_MultipleCallLimiterTest,The following statement contains a magic number: Assert.IsFalse(limiter.Call(lambda' 100.0' null));
Magic Number,SD.Tools.Algorithmia.Tests,GeneralDataStructuresTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GeneralDataStructuresTests.cs,CallLimiter_MultipleCallLimiterTest,The following statement contains a magic number: Assert.IsFalse(limiter.Call(lambda' 100.0' null));
Magic Number,SD.Tools.Algorithmia.Tests,GeneralDataStructuresTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GeneralDataStructuresTests.cs,CallLimiter_MultipleCallLimiterTest,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,SD.Tools.Algorithmia.Tests,GeneralDataStructuresTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GeneralDataStructuresTests.cs,CallLimiter_MultipleCallLimiterTest,The following statement contains a magic number: Assert.AreEqual(2' counter);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,MultiThreadedSyncedGraphAccessTest,The following statement contains a magic number: toTest.Add(new DirectedEdge<int>(i+3' i));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,MultiThreadedSyncedGraphAccessTest,The following statement contains a magic number: i < 30
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,MultiThreadedSyncedGraphAccessTest_ThreadA,The following statement contains a magic number: Thread.Sleep(2);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,MultiThreadedSyncedGraphAccessTest_ThreadA,The following statement contains a magic number: i < 100
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,MultiThreadedSyncedGraphAccessTest_ThreadB,The following statement contains a magic number: Thread.Sleep(7);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,MultiThreadedSyncedGraphAccessTest_ThreadB,The following statement contains a magic number: i < 100
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: DirectedEdge<int> toAdd = new DirectedEdge<int>(1' 2);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(3' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(3' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.VertexCount == 4);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.EdgeCount == 6);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(1' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(1' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(1' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(1' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(3' 1));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.AreEqual(3' h.VertexCount);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.AreEqual(9' h.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(1' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 1));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(1' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 1));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,BasicDepthFirstSearchCrawlerTest,The following statement contains a magic number: Assert.AreEqual(13' dfs.VerticesLoggedInOnVisiting.Count);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,BasicDepthFirstSearchCrawlerTest,The following statement contains a magic number: Assert.AreEqual(13' dfs.VerticesLoggedInOnVisited.Count);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,BasicDepthFirstSearchCrawlerTest,The following statement contains a magic number: Assert.AreEqual(13' dfs.VerticesLoggedInOnVisiting.Count);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,BasicDepthFirstSearchCrawlerTest,The following statement contains a magic number: Assert.AreEqual(13' dfs.VerticesLoggedInOnVisited.Count);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,FindDisconnectedSubGraphsTest,The following statement contains a magic number: Assert.AreEqual(2' finder.FoundDisconnectedGraphs.Count);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,FindDisconnectedSubGraphsTest,The following statement contains a magic number: Assert.AreEqual(5' finder.FoundDisconnectedGraphs[0].Vertices.Count());
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,FindDisconnectedSubGraphsTest,The following statement contains a magic number: Assert.AreEqual(2' finder.FoundDisconnectedGraphs[1].Vertices.Count());
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,FindDisconnectedSubGraphsTest,The following statement contains a magic number: Assert.AreEqual(5' finder.FoundDisconnectedGraphs[0].Edges.Count());
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,FindDisconnectedSubGraphsTest,The following statement contains a magic number: Assert.AreEqual(5' finder.FoundDisconnectedGraphs[0].Vertices.Count());
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,FindDisconnectedSubGraphsTest,The following statement contains a magic number: Assert.AreEqual(5' finder.FoundDisconnectedGraphs[0].Edges.Count());
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests_Synchronized,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests_Synchronized.cs,AsNonDirectedGraphTest,The following statement contains a magic number: Assert.IsTrue(graph.EdgeCount == 5);
Magic Number,SD.Tools.Algorithmia.Tests,SortingTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\SortingTests.cs,SelectionSortSortListOfIntegersAscending,The following statement contains a magic number: int listSize = 1000;
Magic Number,SD.Tools.Algorithmia.Tests,SortingTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\SortingTests.cs,SelectionSortSortListOfIntegersDescending,The following statement contains a magic number: int listSize = 1000;
Magic Number,SD.Tools.Algorithmia.Tests,SortingTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\SortingTests.cs,ShellSortSortListOfIntegersAscending,The following statement contains a magic number: int listSize = 1000;
Magic Number,SD.Tools.Algorithmia.Tests,SortingTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\SortingTests.cs,ShellSortSortListOfIntegersDescending,The following statement contains a magic number: int listSize = 1000;
Magic Number,SD.Tools.Algorithmia.Tests,SortingTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\SortingTests.cs,QuickSortSortListOfIntegersAscending,The following statement contains a magic number: int listSize = 1000;
Magic Number,SD.Tools.Algorithmia.Tests,SortingTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\SortingTests.cs,QuickSortSortListOfIntegersDescending,The following statement contains a magic number: int listSize = 1000;
Magic Number,SD.Tools.Algorithmia.Tests,SortingTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\SortingTests.cs,CreateListOfRandomNumbers,The following statement contains a magic number: toSort.Add(rand.Next(listSize*1313));
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapMergeTestMaxHeaps,The following statement contains a magic number: FillHeap(heap1' 100);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapMergeTestMaxHeaps,The following statement contains a magic number: FillHeap(heap2' 100);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapMergeTestMaxHeaps,The following statement contains a magic number: Assert.AreEqual(100' heap1.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapMergeTestMaxHeaps,The following statement contains a magic number: Assert.AreEqual(100' heap2.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapMergeTestMaxHeaps,The following statement contains a magic number: Assert.AreEqual(200' heap1.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapMergeTestMinHeaps,The following statement contains a magic number: FillHeap(heap1' 100);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapMergeTestMinHeaps,The following statement contains a magic number: FillHeap(heap2' 100);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapMergeTestMinHeaps,The following statement contains a magic number: Assert.AreEqual(100' heap1.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapMergeTestMinHeaps,The following statement contains a magic number: Assert.AreEqual(100' heap2.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapMergeTestMinHeaps,The following statement contains a magic number: Assert.AreEqual(200' heap1.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapUpdateKeyMaxHeap,The following statement contains a magic number: FillHeap(heap' 100);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapUpdateKeyMaxHeap,The following statement contains a magic number: Assert.AreEqual(100' heap.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapUpdateKeyMaxHeap,The following statement contains a magic number: HeapElement element = new HeapElement(50' "Value: 50");
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapUpdateKeyMaxHeap,The following statement contains a magic number: Assert.AreEqual(101' heap.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapUpdateKeyMaxHeap,The following statement contains a magic number: heap.UpdateKey(element' (a' b) => a.Priority = b' 70);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapUpdateKeyMaxHeap,The following statement contains a magic number: Assert.AreEqual(70' element.Priority);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapUpdateKeyMinHeap,The following statement contains a magic number: FillHeap(heap' 100);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapUpdateKeyMinHeap,The following statement contains a magic number: Assert.AreEqual(100' heap.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapUpdateKeyMinHeap,The following statement contains a magic number: HeapElement element = new HeapElement(50' "Value: 50");
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapUpdateKeyMinHeap,The following statement contains a magic number: Assert.AreEqual(101' heap.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapUpdateKeyMinHeap,The following statement contains a magic number: heap.UpdateKey(element' (a' b) => a.Priority = b' 10);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,BinaryHeapUpdateKeyMinHeap,The following statement contains a magic number: Assert.AreEqual(10' element.Priority);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapMergeTestMaxHeaps,The following statement contains a magic number: FillHeap(heap1' 100);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapMergeTestMaxHeaps,The following statement contains a magic number: FillHeap(heap2' 100);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapMergeTestMaxHeaps,The following statement contains a magic number: Assert.AreEqual(100' heap1.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapMergeTestMaxHeaps,The following statement contains a magic number: Assert.AreEqual(100' heap2.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapMergeTestMaxHeaps,The following statement contains a magic number: Assert.AreEqual(200' heap1.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapMergeTestMinHeaps,The following statement contains a magic number: FillHeap(heap1' 100);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapMergeTestMinHeaps,The following statement contains a magic number: FillHeap(heap2' 100);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapMergeTestMinHeaps,The following statement contains a magic number: Assert.AreEqual(100' heap1.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapMergeTestMinHeaps,The following statement contains a magic number: Assert.AreEqual(100' heap2.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapMergeTestMinHeaps,The following statement contains a magic number: Assert.AreEqual(200' heap1.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapUpdateKeyMaxHeap,The following statement contains a magic number: FillHeap(heap' 100);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapUpdateKeyMaxHeap,The following statement contains a magic number: Assert.AreEqual(100' heap.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapUpdateKeyMaxHeap,The following statement contains a magic number: HeapElement element = new HeapElement(50' "Value: 50");
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapUpdateKeyMaxHeap,The following statement contains a magic number: Assert.AreEqual(101' heap.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapUpdateKeyMaxHeap,The following statement contains a magic number: heap.UpdateKey(element' (a' b) => a.Priority = b' 70);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapUpdateKeyMaxHeap,The following statement contains a magic number: Assert.AreEqual(70' element.Priority);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapUpdateKeyMinHeap,The following statement contains a magic number: FillHeap(heap' 100);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapUpdateKeyMinHeap,The following statement contains a magic number: Assert.AreEqual(100' heap.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapUpdateKeyMinHeap,The following statement contains a magic number: HeapElement element = new HeapElement(50' "Value: 50");
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapUpdateKeyMinHeap,The following statement contains a magic number: Assert.AreEqual(101' heap.Count);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapUpdateKeyMinHeap,The following statement contains a magic number: heap.UpdateKey(element' (a' b) => a.Priority = b' 10);
Magic Number,SD.Tools.Algorithmia.Tests,HeapTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\HeapTests.cs,FibonacciHeapUpdateKeyMinHeap,The following statement contains a magic number: Assert.AreEqual(10' element.Priority);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: DirectedEdge<int> toAdd = new DirectedEdge<int>(1' 2);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(3' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(3' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.VertexCount == 4);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.EdgeCount == 6);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(1' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(1' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(1' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureBasicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 4));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(1' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: g.Add(new DirectedEdge<int>(3' 1));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.AreEqual(3' h.VertexCount);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.AreEqual(9' h.EdgeCount);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(1' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 1));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(1' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 1));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(2' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 2));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,TransitiveClosureCyclicTest,The following statement contains a magic number: Assert.IsTrue(h.ContainsEdge(3' 3));
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,BasicDepthFirstSearchCrawlerTest,The following statement contains a magic number: Assert.AreEqual(13' dfs.VerticesLoggedInOnVisiting.Count);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,BasicDepthFirstSearchCrawlerTest,The following statement contains a magic number: Assert.AreEqual(13' dfs.VerticesLoggedInOnVisited.Count);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,BasicDepthFirstSearchCrawlerTest,The following statement contains a magic number: Assert.AreEqual(13' dfs.VerticesLoggedInOnVisiting.Count);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,BasicDepthFirstSearchCrawlerTest,The following statement contains a magic number: Assert.AreEqual(13' dfs.VerticesLoggedInOnVisited.Count);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,FindDisconnectedSubGraphsTest,The following statement contains a magic number: Assert.AreEqual(2' finder.FoundDisconnectedGraphs.Count);
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,FindDisconnectedSubGraphsTest,The following statement contains a magic number: Assert.AreEqual(5' finder.FoundDisconnectedGraphs[0].Vertices.Count());
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,FindDisconnectedSubGraphsTest,The following statement contains a magic number: Assert.AreEqual(2' finder.FoundDisconnectedGraphs[1].Vertices.Count());
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,FindDisconnectedSubGraphsTest,The following statement contains a magic number: Assert.AreEqual(5' finder.FoundDisconnectedGraphs[0].Edges.Count());
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,FindDisconnectedSubGraphsTest,The following statement contains a magic number: Assert.AreEqual(5' finder.FoundDisconnectedGraphs[0].Vertices.Count());
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,FindDisconnectedSubGraphsTest,The following statement contains a magic number: Assert.AreEqual(5' finder.FoundDisconnectedGraphs[0].Edges.Count());
Magic Number,SD.Tools.Algorithmia.Tests,GraphTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\GraphTests.cs,AsNonDirectedGraphTest,The following statement contains a magic number: Assert.IsTrue(graph.EdgeCount == 5);
Magic Number,SD.Tools.Algorithmia.Tests,MultiValueDictionaryTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\MultiValueDictionaryTests.cs,SimpleEnumerationTest,The following statement contains a magic number: MultiValueDictionary<int' string> container = new MultiValueDictionary<int' string> { { 1' "value1" }' { 2' "value2" }' { 2' "value3" } };
Magic Number,SD.Tools.Algorithmia.Tests,MultiValueDictionaryTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\MultiValueDictionaryTests.cs,SimpleEnumerationTest,The following statement contains a magic number: MultiValueDictionary<int' string> container = new MultiValueDictionary<int' string> { { 1' "value1" }' { 2' "value2" }' { 2' "value3" } };
Magic Number,SD.Tools.Algorithmia.Tests,MultiValueDictionaryTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\MultiValueDictionaryTests.cs,SimpleEnumerationTest,The following statement contains a magic number: switch(pair.Key)  				{  					case 1:  						Assert.AreEqual("value1"' pair.Value.First());  						break;  					case 2:  						Assert.AreEqual(2' pair.Value.Count);  						Assert.IsTrue(pair.Value.Contains("value2"));  						Assert.IsTrue(pair.Value.Contains("value3"));  						break;  				}
Magic Number,SD.Tools.Algorithmia.Tests,MultiValueDictionaryTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\MultiValueDictionaryTests.cs,SimpleEnumerationTest,The following statement contains a magic number: switch(pair.Key)  				{  					case 1:  						Assert.AreEqual("value1"' pair.Value.First());  						break;  					case 2:  						Assert.AreEqual(2' pair.Value.Count);  						Assert.IsTrue(pair.Value.Contains("value2"));  						Assert.IsTrue(pair.Value.Contains("value3"));  						break;  				}
Magic Number,SD.Tools.Algorithmia.Tests,MultiValueDictionaryTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\MultiValueDictionaryTests.cs,SimpleEnumerationTestWithLinqOperator,The following statement contains a magic number: MultiValueDictionary<int' string> container = new MultiValueDictionary<int' string> { { 1' "value1" }' { 2' "value2" }' { 2' "value3" } };
Magic Number,SD.Tools.Algorithmia.Tests,MultiValueDictionaryTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\MultiValueDictionaryTests.cs,SimpleEnumerationTestWithLinqOperator,The following statement contains a magic number: MultiValueDictionary<int' string> container = new MultiValueDictionary<int' string> { { 1' "value1" }' { 2' "value2" }' { 2' "value3" } };
Magic Number,SD.Tools.Algorithmia.Tests,MultiValueDictionaryTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\MultiValueDictionaryTests.cs,SimpleEnumerationTestWithLinqOperator,The following statement contains a magic number: switch(pair.Key)  				{  					case 1:  						Assert.AreEqual("value1"' pair.Value.First());  						break;  					case 2:  						Assert.AreEqual(2' pair.Value.Count);  						Assert.IsTrue(pair.Value.Contains("value2"));  						Assert.IsTrue(pair.Value.Contains("value3"));  						break;  				}
Magic Number,SD.Tools.Algorithmia.Tests,MultiValueDictionaryTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\MultiValueDictionaryTests.cs,SimpleEnumerationTestWithLinqOperator,The following statement contains a magic number: switch(pair.Key)  				{  					case 1:  						Assert.AreEqual("value1"' pair.Value.First());  						break;  					case 2:  						Assert.AreEqual(2' pair.Value.Count);  						Assert.IsTrue(pair.Value.Contains("value2"));  						Assert.IsTrue(pair.Value.Contains("value3"));  						break;  				}
Magic Number,SD.Tools.Algorithmia.Tests,PriorityQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PriorityQueueTests.cs,SimplePriorityQueueFunctionalityTest,The following statement contains a magic number: PriorityQueueFunctionalityTest(queue' 100' true);
Magic Number,SD.Tools.Algorithmia.Tests,PriorityQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PriorityQueueTests.cs,SortedPriorityQueueFunctionalityTest,The following statement contains a magic number: PriorityQueueFunctionalityTest(queue' 100' true);
Magic Number,SD.Tools.Algorithmia.Tests,PriorityQueueTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\PriorityQueueTests.cs,BinaryHeapPriorityQueueFunctionalityTest,The following statement contains a magic number: PriorityQueueFunctionalityTest(queue' 100' false);
Missing Default,SD.Tools.Algorithmia.Tests,BindableHelperClass,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\CommandQueueTests.cs,_name_ValueChanged,The following switch statement is missing a default case: switch(e.TypeOfChange)  			{  				case HelperChangeType.Name:  					OnPropertyChanged("Name");  					break;  			}
Missing Default,SD.Tools.Algorithmia.Tests,MultiValueDictionaryTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\MultiValueDictionaryTests.cs,SimpleEnumerationTest,The following switch statement is missing a default case: switch(pair.Key)  				{  					case 1:  						Assert.AreEqual("value1"' pair.Value.First());  						break;  					case 2:  						Assert.AreEqual(2' pair.Value.Count);  						Assert.IsTrue(pair.Value.Contains("value2"));  						Assert.IsTrue(pair.Value.Contains("value3"));  						break;  				}
Missing Default,SD.Tools.Algorithmia.Tests,MultiValueDictionaryTests,D:\research\architectureSmells\repos1\SolutionsDesign_Algorithmia\SD.Tools.Algorithmia.Tests\MultiValueDictionaryTests.cs,SimpleEnumerationTestWithLinqOperator,The following switch statement is missing a default case: switch(pair.Key)  				{  					case 1:  						Assert.AreEqual("value1"' pair.Value.First());  						break;  					case 2:  						Assert.AreEqual(2' pair.Value.Count);  						Assert.IsTrue(pair.Value.Contains("value2"));  						Assert.IsTrue(pair.Value.Contains("value3"));  						break;  				}
