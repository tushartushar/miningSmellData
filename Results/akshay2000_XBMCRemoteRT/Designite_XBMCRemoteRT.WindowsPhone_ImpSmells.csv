Implementation smell,Namespace,Class,File,Method,Description
Complex Method,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,Cyclomatic complexity of the method is 13
Complex Method,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,WakeUpServerMFI_Click,Cyclomatic complexity of the method is 8
Complex Method,XBMCRemoteRT,App,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\App.xaml.cs,OnLaunched,Cyclomatic complexity of the method is 8
Complex Method,XBMCRemoteRT.Pages,EditConnectionPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\EditConnectionPage.xaml.cs,SaveConnectionAppBarButton_Click,Cyclomatic complexity of the method is 8
Complex Method,XBMCRemoteRT.Pages,InputPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\InputPage.xaml.cs,AdvancedMenuFlyout_ItemsPicked,Cyclomatic complexity of the method is 9
Complex Method,XBMCRemoteRT.Pages,SettingsPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,LoadSkipJumpState,Cyclomatic complexity of the method is 17
Complex Method,XBMCRemoteRT.Pages,SettingsPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,SaveSkipJumpState,Cyclomatic complexity of the method is 17
Complex Method,XBMCRemoteRT.Pages.Entry,VoiceCommandsPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Entry\VoiceCommandsPage.xaml.cs,ExecuteVoiceCommand,Cyclomatic complexity of the method is 37
Complex Method,XBMCRemoteRT.Pages.Entry,VoiceCommandsPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Entry\VoiceCommandsPage.xaml.cs,YesButton_Click,Cyclomatic complexity of the method is 10
Complex Method,XBMCRemoteRT.Helpers,GroupingHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GroupList,Cyclomatic complexity of the method is 9
Complex Method,XBMCRemoteRT.Helpers,PlayerHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,GetAudioStreams,Cyclomatic complexity of the method is 9
Complex Method,XBMCRemoteRT.Helpers,PlayerHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,GetSubtitles,Cyclomatic complexity of the method is 10
Complex Method,XBMCRemoteRT.RPCWrappers,Playlist,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Playlist.cs,GetPlaylistId,Cyclomatic complexity of the method is 10
Long Statement,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,EpisodeWrapper_Tapped,The length of the statement  "	GlobalVariables.CurrentTracker.SendEvent (EventCategories.UIInteraction' EventActions.Click' "CoverPageEpisodeWrapper"' 0); " is 123.
Long Statement,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,HandleSupportDialog,The length of the statement  "		MessageDialog messageDialog = new MessageDialog ("App development is discontinued. Click okay to learn more."' "Development has stopped!"); " is 139.
Long Statement,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The length of the statement  "		bePatientText = String.Format (loader.GetString ("WakeupPatientMessage")' MathExtension.CurrentStep (wakeupTime' stepSize)' MathExtension.UpperStep (wakeupTime' stepSize)); " is 172.
Long Statement,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The length of the statement  "	MessageDialog tryMessage = new MessageDialog (loader.GetString ("WOLConnectionErrorMessage")' loader.GetString ("WOLConnectionErrorHeader")); " is 141.
Long Statement,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,WakeUpServerMFI_Click,The length of the statement  "		MessageDialog message = new MessageDialog (loader.GetString ("WOLMacNotFoundMessage")' loader.GetString ("WOLMacNotFoundHeader")); " is 130.
Long Statement,XBMCRemoteRT.Pages,AboutPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\AboutPivot.xaml.cs,RegisterForShare,The length of the statement  "	dataTransferManager.DataRequested += new TypedEventHandler<DataTransferManager' DataRequestedEventArgs> (this.ShareTextHandler); " is 128.
Long Statement,XBMCRemoteRT.Pages,AboutPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\AboutPivot.xaml.cs,ShareTextHandler,The length of the statement  "	request.Data.SetText ("I'm using #KodiAssit for Windows Phone. Get it for free: http://www.windowsphone.com/s?appid=3897b459-b11b-41eb-9cea-dd9e53c55b78"); " is 155.
Long Statement,XBMCRemoteRT.Pages,EditConnectionPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\EditConnectionPage.xaml.cs,SaveConnectionAppBarButton_Click,The length of the statement  "			MessageDialog msg = new MessageDialog ("Please enter a valid MAC address in format 00:11:22:33:44:55."' "Invalid MAC address"); " is 127.
Long Statement,XBMCRemoteRT.Pages,EditConnectionPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\EditConnectionPage.xaml.cs,SaveConnectionAppBarButton_Click,The length of the statement  "			MessageDialog msg = new MessageDialog ("Please enter a valid subnet mask in format 255.255.255.255."' "Invalid subnet mask"); " is 125.
Long Statement,XBMCRemoteRT.Pages,SupportPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SupportPage.xaml.cs,SubmitButton_Click,The length of the statement  "	string message = "Development of Kodi Assist has stopped due to lack of funds. You can support the development by following the link: http://igg.me/at/KodiAssist/x/11391141"; " is 174.
Long Statement,XBMCRemoteRT.Pages.Audio,AllMusicPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Audio\AllMusicPivot.xaml.cs,OnNavigatedTo,The length of the statement  "	DisplayInformation.AutoRotationPreferences = DisplayOrientations.LandscapeFlipped | DisplayOrientations.Landscape | DisplayOrientations.Portrait; " is 145.
Long Statement,XBMCRemoteRT.Pages.Audio,AllMusicPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Audio\AllMusicPivot.xaml.cs,ReloadAll,The length of the statement  "	GlobalVariables.CurrentTracker.SendTiming ((DateTime.Now.Subtract (loadSartTime))' TimingCategories.LoadTime' "AllMusic"' "AllMusic"); " is 134.
Long Statement,XBMCRemoteRT.Pages.Entry,VoiceCommandsPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Entry\VoiceCommandsPage.xaml.cs,ExecuteVoiceCommand,The length of the statement  "		GlobalVariables.CurrentTracker.SendEvent (EventCategories.VoiceCommand' EventActions.VoiceCommand' "Single" + voiceCommandName' 0); " is 131.
Long Statement,XBMCRemoteRT.Pages.Entry,VoiceCommandsPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Entry\VoiceCommandsPage.xaml.cs,ExecuteVoiceCommand,The length of the statement  "		GlobalVariables.CurrentTracker.SendEvent (EventCategories.VoiceCommand' EventActions.VoiceCommand' "Zero" + voiceCommandName' 0); " is 129.
Long Statement,XBMCRemoteRT.Pages.Video,AllMoviesPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\AllMoviesPivot.xaml.cs,LoadMovies,The length of the statement  "	GlobalVariables.CurrentTracker.SendTiming (DateTime.Now.Subtract (loadStartTime)' TimingCategories.LoadTime' "AllMovies"' "AllMovies"); " is 135.
Long Statement,XBMCRemoteRT.Pages.Video,AllTVShowsPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\AllTVShowsPage.xaml.cs,LoadTVShows,The length of the statement  "	GlobalVariables.CurrentTracker.SendTiming (DateTime.Now.Subtract (loadStartTime)' TimingCategories.LoadTime' "AllTVShows"' "AllTVShows"); " is 137.
Long Statement,XBMCRemoteRT.Pages.Video,TVShowDetailsHub,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\TVShowDetailsHub.xaml.cs,EpisodeWrapper_Tapped,The length of the statement  "	GlobalVariables.CurrentTracker.SendEvent (EventCategories.UIInteraction' EventActions.Click' "TVShowDetailsHubEpisodeWrapper"' 0); " is 130.
Long Statement,XBMCRemoteRT.Common,ObservableDictionary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Common\ObservableDictionary.cs,Remove,The length of the statement  "	if (this._dictionary.TryGetValue (item.Key' out currentValue) && Object.Equals (item.Value' currentValue) && this._dictionary.Remove (item.Key)) { " is 146.
Long Statement,XBMCRemoteRT.Common,SuspensionManager,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "		StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync (sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 141.
Long Statement,XBMCRemoteRT.Common,SuspensionManager,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Common\SuspensionManager.cs,RestoreAsync,The length of the statement  "			if (weakFrameReference.TryGetTarget (out frame) && (string)frame.GetValue (FrameSessionBaseKeyProperty) == sessionBaseKey) { " is 124.
Long Statement,XBMCRemoteRT.Common,SuspensionManager,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "		throw new InvalidOperationException ("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 139.
Long Statement,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,GetImageStreamAsync,The length of the statement  "		client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue ("Basic"' System.Convert.ToBase64String (Encoding.UTF8.GetBytes (String.Format ("{0}:{1}"' con.Username' con.Password)))); " is 197.
Long Statement,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,DownloadImageForTile,The length of the statement  "			var file = await(await ApplicationData.Current.LocalFolder.CreateFolderAsync ("Tiles"' CreationCollisionOption.OpenIfExists)).CreateFileAsync (fileName' CreationCollisionOption.GenerateUniqueName); " is 197.
Long Statement,XBMCRemoteRT.Helpers,ProxyManager,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\ProxyManager.cs,GetImageStreamAsync,The length of the statement  "	HttpResponseMessage res = await ConnectionManager.CurrentConnection.HttpClient.SendAsync (req' HttpCompletionOption.ResponseHeadersRead); " is 137.
Long Statement,XBMCRemoteRT.Helpers,ConnectionManager,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\ConnectionManager.cs,ExecuteRequest,The length of the statement  "		request.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue ("Basic"' Convert.ToBase64String (Encoding.UTF8.GetBytes (String.Format ("{0}:{1}"' CurrentConnection.Username' CurrentConnection.Password)))); " is 229.
Long Statement,XBMCRemoteRT.Helpers,ConnectionManager,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\ConnectionManager.cs,ExecuteRequest,The length of the statement  "	HttpResponseMessage response = await CurrentConnection.HttpClient.SendAsync (request' HttpCompletionOption.ResponseHeadersRead); " is 128.
Long Statement,XBMCRemoteRT.Helpers,ConnectionManager,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\ConnectionManager.cs,ConstructRequestObject,The length of the statement  "	JObject requestObject = new JObject (new JProperty ("jsonrpc"' "2.0")' new JProperty ("id"' lastRequestID++)' new JProperty ("method"' methodName)); " is 148.
Long Statement,XBMCRemoteRT.Helpers,PlayerHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The length of the statement  "		GlobalVariables.CurrentPlayerState.TotalTimeSeconds = ((int)totalTime ["hours"] * 3600) + ((int)totalTime ["minutes"] * 60) + (int)totalTime ["seconds"]; " is 153.
Long Statement,XBMCRemoteRT.Helpers,PlayerHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The length of the statement  "		GlobalVariables.CurrentPlayerState.TimeSeconds = ((int)time ["hours"] * 3600) + ((int)time ["minutes"] * 60) + (int)time ["seconds"]; " is 133.
Long Statement,XBMCRemoteRT.Models.Common,IncrementalCollection,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Models\Common\IncrementalCollection.cs,NotifyOfInsertedItems,The length of the statement  "		var args = new NotifyCollectionChangedEventArgs (NotifyCollectionChangedAction.Add' base [i + baseIndex]' i + baseIndex); " is 121.
Long Statement,XBMCRemoteRT.Models.Network,ConnectionItem,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Models\Network\ConnectionItem.cs,ResetHttpClient,The length of the statement  "		this.HttpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue ("Basic"' System.Convert.ToBase64String (Encoding.UTF8.GetBytes (String.Format ("{0}:{1}"' Username' Password)))); " is 222.
Long Statement,XBMCRemoteRT.RPCWrappers,AudioLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,GetAlbumDetails,The length of the statement  "	JObject parameters = new JObject (new JProperty ("albumid"' albumid)' new JProperty ("properties"' new JArray ("title"' "description"' "artist"' "genre"' "theme"' "mood"' "style"' "type"' "albumlabel"' "rating"' "year"' "musicbrainzalbumid"' "musicbrainzalbumartistid"' "fanart"' "thumbnail"' "playcount"' "genreid"' "artistid"' "displayartist"))); " is 348.
Long Statement,XBMCRemoteRT.RPCWrappers,AudioLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,GetRecentlyAddedAlbums,The length of the statement  "	JObject parameters = new JObject (new JProperty ("properties"' new JArray ("title"' "description"' "artist"' "genre"' "theme"' "mood"' "style"' "type"' "albumlabel"' "rating"' "year"' "musicbrainzalbumid"' "musicbrainzalbumartistid"' "fanart"' "thumbnail"' "playcount"' "genreid"' "artistid"' "displayartist"))); " is 312.
Long Statement,XBMCRemoteRT.RPCWrappers,AudioLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,GetSongs,The length of the statement  "	JObject parameters = new JObject (new JProperty ("properties"' new JArray ("album"' "albumartist"' "albumartistid"' "albumid"' "comment"' "disc"' "duration"' "file"' "lastplayed"' "lyrics"' "musicbrainzartistid"' "musicbrainztrackid"' "playcount"' "track"))); " is 259.
Long Statement,XBMCRemoteRT.RPCWrappers,AudioLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,GetArtists,The length of the statement  "	JObject parameters = new JObject (new JProperty ("properties"' new JArray ("born"' "description"' "died"' "disbanded"' "formed"' "instrument"' "mood"' "musicbrainzartistid"' "style"' "yearsactive"' "thumbnail"' "fanart"))); " is 223.
Long Statement,XBMCRemoteRT.RPCWrappers,AudioLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,GetArtists,The length of the statement  "	List<Artist> listToReturn = artistListObject != null ? artistListObject.ToObject<List<Artist>> () : new List<Artist> (); " is 120.
Long Statement,XBMCRemoteRT.RPCWrappers,AudioLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,GetAlbums,The length of the statement  "	JObject parameters = new JObject (new JProperty ("properties"' new JArray ("title"' "description"' "artist"' "genre"' "theme"' "mood"' "style"' "type"' "albumlabel"' "rating"' "year"' "musicbrainzalbumid"' "musicbrainzalbumartistid"' "fanart"' "thumbnail"' "playcount"' "genreid"' "artistid"' "displayartist"))); " is 312.
Long Statement,XBMCRemoteRT.RPCWrappers,JSONRPC,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\JSONRPC.cs,Ping,The length of the statement  "	JObject requestObject = new JObject (new JProperty ("jsonrpc"' "2.0")' new JProperty ("id"' 234)' new JProperty ("method"' "JSONRPC.ping")); " is 140.
Long Statement,XBMCRemoteRT.RPCWrappers,Player,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,GoTo,The length of the statement  "	JObject parameters = new JObject (new JProperty ("playerid"' playerId)' new JProperty ("to"' goTo.ToString ().ToLower ())); " is 123.
Long Statement,XBMCRemoteRT.RPCWrappers,Player,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,GetItem,The length of the statement  "	JObject parameters = new JObject (new JProperty ("playerid"' getIdFromPlayers (player))' new JProperty ("properties"' properties)); " is 131.
Long Statement,XBMCRemoteRT.RPCWrappers,Player,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,GetProperties,The length of the statement  "	JObject parameters = new JObject (new JProperty ("playerid"' getIdFromPlayers (player))' new JProperty ("properties"' properties)); " is 131.
Long Statement,XBMCRemoteRT.RPCWrappers,Player,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,SetSpeed,The length of the statement  "	JObject parameters = new JObject (new JProperty ("playerid"' getIdFromPlayers (player))' new JProperty ("speed"' speed)); " is 121.
Long Statement,XBMCRemoteRT.RPCWrappers,Player,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,SetPartyMode,The length of the statement  "	JObject parameters = new JObject (new JProperty ("playerid"' getIdFromPlayers (player))' new JProperty ("partymode"' partymode)); " is 129.
Long Statement,XBMCRemoteRT.RPCWrappers,Player,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,Seek,The length of the statement  "	JObject parameters = new JObject (new JProperty ("playerid"' getIdFromPlayers (player))' new JProperty ("value"' value)); " is 121.
Long Statement,XBMCRemoteRT.RPCWrappers,Player,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,SetAndEnableSubtitle,The length of the statement  "	JObject parameters = new JObject (new JProperty ("playerid"' getIdFromPlayers (player))' new JProperty ("subtitle"' index)' new JProperty ("enable"' true)); " is 156.
Long Statement,XBMCRemoteRT.RPCWrappers,Player,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,SetAudioStream,The length of the statement  "	JObject parameters = new JObject (new JProperty ("playerid"' getIdFromPlayers (player))' new JProperty ("stream"' index)); " is 122.
Long Statement,XBMCRemoteRT.RPCWrappers,Player,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,DisableSubtitle,The length of the statement  "	JObject parameters = new JObject (new JProperty ("playerid"' getIdFromPlayers (player))' new JProperty ("subtitle"' "off")); " is 124.
Long Statement,XBMCRemoteRT.RPCWrappers,Playlist,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Playlist.cs,GetItems,The length of the statement  "	//TODO: check the video return output -- currently in the app this is not used but should it be in the future' this will have to be checked " is 139.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetRecentlyAddedEpisodes,The length of the statement  "	JObject parameters = new JObject (new JProperty ("properties"' new JArray ("title"' "plot"' "votes"' "rating"' "writer"' "firstaired"' "playcount"' "runtime"' "director"' "productioncode"' "season"' "episode"' "originaltitle"' "showtitle"' "streamdetails"' "lastplayed"' "fanart"' "thumbnail"' "file"' "resume"' "tvshowid"' "dateadded"' "uniqueid"' "art"))); " is 358.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetRecentlyAddedEpisodes,The length of the statement  "	JObject responseObject = await ConnectionManager.ExecuteRPCRequest ("VideoLibrary.GetRecentlyAddedEpisodes"' parameters); " is 121.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetRecentlyAddedEpisodes,The length of the statement  "	List<Episode> listToReturn = episodeListObject != null ? episodeListObject.ToObject<List<Episode>> () : new List<Episode> (); " is 125.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetRecentlyAddedMovies,The length of the statement  "	JObject parameters = new JObject (new JProperty ("properties"' new JArray ("title"' "genre"' "year"' "rating"' "director"' "trailer"' "tagline"' "plot"' "plotoutline"' "originaltitle"' "lastplayed"' "playcount"' "writer"' "studio"' "mpaa"' "cast"' "country"' "imdbnumber"' "runtime"' "set"' "showlink"' "streamdetails"' "top250"' "votes"' "fanart"' "thumbnail"' "file"' "sorttitle"' "resume"' "setid"' "dateadded"' "tag"' "art"))); " is 431.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetTVShows,The length of the statement  "	JObject parameters = new JObject (new JProperty ("properties"' new JArray ("title"' "genre"' "year"' "rating"' "plot"' "studio"' "mpaa"' "cast"' "playcount"' "episode"' "imdbnumber"' "premiered"' "votes"' "lastplayed"' "fanart"' "thumbnail"' "file"' "originaltitle"' "sorttitle"' "episodeguide"' "season"' "watchedepisodes"' "dateadded"' "tag"' "art"))); " is 354.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetTVShows,The length of the statement  "	List<TVShow> listToReturn = tvShowsListObject != null ? tvShowsListObject.ToObject<List<TVShow>> () : new List<TVShow> (); " is 122.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetMovies,The length of the statement  "	JObject parameters = new JObject (new JProperty ("properties"' new JArray ("title"' "genre"' "year"' "rating"' "director"' "trailer"' "tagline"' "plot"' "plotoutline"' "originaltitle"' "lastplayed"' "playcount"' "writer"' "studio"' "mpaa"' "cast"' "country"' "imdbnumber"' "runtime"' "set"' "showlink"' "streamdetails"' "top250"' "votes"' "fanart"' "thumbnail"' "file"' "sorttitle"' "resume"' "setid"' "dateadded"' "tag"' "art"))); " is 431.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetEpisodes,The length of the statement  "	JObject parameters = new JObject (new JProperty ("properties"' new JArray ("title"' "plot"' "votes"' "rating"' "writer"' "firstaired"' "playcount"' "runtime"' "director"' "productioncode"' "season"' "episode"' "originaltitle"' "showtitle"' "streamdetails"' "lastplayed"' "fanart"' "thumbnail"' "file"' "resume"' "tvshowid"' "dateadded"' "uniqueid"' "art"))); " is 358.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetEpisodes,The length of the statement  "	List<Episode> listToReturn = episodeListObject != null ? episodeListObject.ToObject<List<Episode>> () : new List<Episode> (); " is 125.
Empty Catch Block,XBMCRemoteRT,App,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\App.xaml.cs,EnsureRootFrame,The method has an empty catch block.
Empty Catch Block,XBMCRemoteRT.Pages,NowPlaying,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\NowPlaying.xaml.cs,RefreshSongs,The method has an empty catch block.
Empty Catch Block,XBMCRemoteRT.Converters,IdToColourConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\IdToColourConverter.cs,Convert,The method has an empty catch block.
Empty Catch Block,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The method has an empty catch block.
Empty Catch Block,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The method has an empty catch block.
Empty Catch Block,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,GetRemoteUri,The method has an empty catch block.
Empty Catch Block,XBMCRemoteRT.Helpers,ProxyManager,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\ProxyManager.cs,GetRemoteUri,The method has an empty catch block.
Magic Number,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,CoverPage,The following statement contains a magic number: PlayerHelper.RefreshPlayerState ().Wait (200);  
Magic Number,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,RefreshListsIfNull,The following statement contains a magic number: if (Albums == null) {  	Albums = await AudioLibrary.GetRecentlyAddedAlbums (new Limits {  		Start = 0'  		End = 12  	});  	MusicHubSection.DataContext = Albums;  }  
Magic Number,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,RefreshListsIfNull,The following statement contains a magic number: Albums = await AudioLibrary.GetRecentlyAddedAlbums (new Limits {  	Start = 0'  	End = 12  });  
Magic Number,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,RefreshListsIfNull,The following statement contains a magic number: if (Episodes == null) {  	Episodes = await VideoLibrary.GetRecentlyAddedEpisodes (new Limits {  		Start = 0'  		End = 10  	});  	TVHubSection.DataContext = Episodes;  }  
Magic Number,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,RefreshListsIfNull,The following statement contains a magic number: Episodes = await VideoLibrary.GetRecentlyAddedEpisodes (new Limits {  	Start = 0'  	End = 10  });  
Magic Number,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,RefreshListsIfNull,The following statement contains a magic number: if (Movies == null) {  	Movies = await VideoLibrary.GetRecentlyAddedMovies (new Limits {  		Start = 0'  		End = 12  	});  	MoviesHubSection.DataContext = Movies;  }  
Magic Number,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,RefreshListsIfNull,The following statement contains a magic number: Movies = await VideoLibrary.GetRecentlyAddedMovies (new Limits {  	Start = 0'  	End = 12  });  
Magic Number,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,BottomBar_Opened,The following statement contains a magic number: (sender as CommandBar).Opacity = 0.8;  
Magic Number,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,BottomBar_Closed,The following statement contains a magic number: (sender as CommandBar).Opacity = 0.5;  
Magic Number,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,HandleSupportDialog,The following statement contains a magic number: if (noOfLaunches < 30 && noOfLaunches % 5 == 0) {  	GlobalVariables.CurrentTracker.SendEvent ("Donation"' "MessageLaunched"' "Message Launched"' 1);  	MessageDialog messageDialog = new MessageDialog ("App development is discontinued. Click okay to learn more."' "Development has stopped!");  	messageDialog.Commands.Add (new UICommand ("okay"));  	messageDialog.Commands.Add (new UICommand ("later"));  	var command = await messageDialog.ShowAsync ();  	if (command.Label == "okay") {  		Frame.Navigate (typeof(SupportPage));  		GlobalVariables.CurrentTracker.SendEvent ("Donation"' "ClickedOkay"' "Clicked Okay"' 1);  	}  }  
Magic Number,XBMCRemoteRT,CoverPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,HandleSupportDialog,The following statement contains a magic number: if (noOfLaunches < 30 && noOfLaunches % 5 == 0) {  	GlobalVariables.CurrentTracker.SendEvent ("Donation"' "MessageLaunched"' "Message Launched"' 1);  	MessageDialog messageDialog = new MessageDialog ("App development is discontinued. Click okay to learn more."' "Development has stopped!");  	messageDialog.Commands.Add (new UICommand ("okay"));  	messageDialog.Commands.Add (new UICommand ("later"));  	var command = await messageDialog.ShowAsync ();  	if (command.Label == "okay") {  		Frame.Navigate (typeof(SupportPage));  		GlobalVariables.CurrentTracker.SendEvent ("Donation"' "ClickedOkay"' "Clicked Okay"' 1);  	}  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: if (connectionItem.AutoWake) {  	uint result = await WOLHelper.WakeUp (connectionItem);  	if (result != 102) {  		string messageText;  		switch (result) {  		case 10:  			messageText = loader.GetString ("IPErrorMessage");  			break;  		default:  			messageText = loader.GetString ("WOLErrorMessage") + result;  			break;  		}  		MessageDialog message = new MessageDialog (messageText' loader.GetString ("WakeUpFailed"));  		await message.ShowAsync ();  		SetPageState (PageStates.Ready);  		return;  	}  	bePatientText = String.Format (loader.GetString ("WakeupPatientMessage")' MathExtension.CurrentStep (wakeupTime' stepSize)' MathExtension.UpperStep (wakeupTime' stepSize));  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: if (connectionItem.AutoWake) {  	uint result = await WOLHelper.WakeUp (connectionItem);  	if (result != 102) {  		string messageText;  		switch (result) {  		case 10:  			messageText = loader.GetString ("IPErrorMessage");  			break;  		default:  			messageText = loader.GetString ("WOLErrorMessage") + result;  			break;  		}  		MessageDialog message = new MessageDialog (messageText' loader.GetString ("WakeUpFailed"));  		await message.ShowAsync ();  		SetPageState (PageStates.Ready);  		return;  	}  	bePatientText = String.Format (loader.GetString ("WakeupPatientMessage")' MathExtension.CurrentStep (wakeupTime' stepSize)' MathExtension.UpperStep (wakeupTime' stepSize));  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: if (result != 102) {  	string messageText;  	switch (result) {  	case 10:  		messageText = loader.GetString ("IPErrorMessage");  		break;  	default:  		messageText = loader.GetString ("WOLErrorMessage") + result;  		break;  	}  	MessageDialog message = new MessageDialog (messageText' loader.GetString ("WakeUpFailed"));  	await message.ShowAsync ();  	SetPageState (PageStates.Ready);  	return;  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: if (result != 102) {  	string messageText;  	switch (result) {  	case 10:  		messageText = loader.GetString ("IPErrorMessage");  		break;  	default:  		messageText = loader.GetString ("WOLErrorMessage") + result;  		break;  	}  	MessageDialog message = new MessageDialog (messageText' loader.GetString ("WakeUpFailed"));  	await message.ShowAsync ();  	SetPageState (PageStates.Ready);  	return;  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: switch (result) {  case 10:  	messageText = loader.GetString ("IPErrorMessage");  	break;  default:  	messageText = loader.GetString ("WOLErrorMessage") + result;  	break;  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: while (!isSuccessful) {  	var timeSinceWakeUp = (DateTime.Now - wakeUpStart).TotalSeconds;  	var timeSincePopup = (DateTime.Now - lastPopupTime).TotalSeconds;  	if (timeSinceWakeUp > 5) {  		SetPageState (PageStates.Busy' bePatientText);  	}  	if (timeSincePopup > 10) {  		var selectedCommand = await tryMessage.ShowAsync ();  		lastPopupTime = DateTime.Now;  		if (selectedCommand.Label == stopCommand) {  			break;  		}  	}  	isSuccessful = await JSONRPC.Ping (connectionItem);  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: while (!isSuccessful) {  	var timeSinceWakeUp = (DateTime.Now - wakeUpStart).TotalSeconds;  	var timeSincePopup = (DateTime.Now - lastPopupTime).TotalSeconds;  	if (timeSinceWakeUp > 5) {  		SetPageState (PageStates.Busy' bePatientText);  	}  	if (timeSincePopup > 10) {  		var selectedCommand = await tryMessage.ShowAsync ();  		lastPopupTime = DateTime.Now;  		if (selectedCommand.Label == stopCommand) {  			break;  		}  	}  	isSuccessful = await JSONRPC.Ping (connectionItem);  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: if (timeSinceWakeUp > 5) {  	SetPageState (PageStates.Busy' bePatientText);  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: if (timeSincePopup > 10) {  	var selectedCommand = await tryMessage.ShowAsync ();  	lastPopupTime = DateTime.Now;  	if (selectedCommand.Label == stopCommand) {  		break;  	}  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: if (isSuccessful) {  	ConnectionManager.CurrentConnection = connectionItem;  	SettingsHelper.SetValue ("RecentServerIP"' connectionItem.IpAddress);  	int newWakeupTime = (int)(DateTime.Now - wakeUpStart).TotalSeconds;  	connectionItem.WakeUpTime = newWakeupTime < 5 ? connectionItem.WakeUpTime : newWakeupTime;  	App.ConnectionsVM.UpdateConnectionItem ();  	Frame.Navigate (typeof(CoverPage));  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: connectionItem.WakeUpTime = newWakeupTime < 5 ? connectionItem.WakeUpTime : newWakeupTime;  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,WakeUpServerMFI_Click,The following statement contains a magic number: await Task.Delay (3500);  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,WakeUpServerMFI_Click,The following statement contains a magic number: if (result != 102) {  	string messageText;  	switch (result) {  	case 10:  		messageText = loader.GetString ("IPErrorMessage");  		break;  	default:  		messageText = loader.GetString ("WOLErrorMessage") + result;  		break;  	}  	MessageDialog message = new MessageDialog (messageText' loader.GetString ("WakeUpFailed"));  	await message.ShowAsync ();  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,WakeUpServerMFI_Click,The following statement contains a magic number: if (result != 102) {  	string messageText;  	switch (result) {  	case 10:  		messageText = loader.GetString ("IPErrorMessage");  		break;  	default:  		messageText = loader.GetString ("WOLErrorMessage") + result;  		break;  	}  	MessageDialog message = new MessageDialog (messageText' loader.GetString ("WakeUpFailed"));  	await message.ShowAsync ();  }  
Magic Number,XBMCRemoteRT,MainPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,WakeUpServerMFI_Click,The following statement contains a magic number: switch (result) {  case 10:  	messageText = loader.GetString ("IPErrorMessage");  	break;  default:  	messageText = loader.GetString ("WOLErrorMessage") + result;  	break;  }  
Magic Number,XBMCRemoteRT.Pages,InputPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\InputPage.xaml.cs,SpeedDownButton_Click,The following statement contains a magic number: if (backwardCommand == "DecreaseSpeed") {  	int speed = GlobalVariables.CurrentPlayerState.Speed;  	if (speed != 0 && speed != -32) {  		int index = Array.IndexOf (Speeds' speed);  		int newSpeed = Speeds [index - 1];  		await Player.SetSpeed (GlobalVariables.CurrentPlayerState.PlayerType' newSpeed);  		await PlayerHelper.RefreshPlayerState ();  	}  } else {  	Player.Seek (GlobalVariables.CurrentPlayerState.PlayerType' backwardCommand.ToLower ());  }  
Magic Number,XBMCRemoteRT.Pages,InputPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\InputPage.xaml.cs,SpeedDownButton_Click,The following statement contains a magic number: if (speed != 0 && speed != -32) {  	int index = Array.IndexOf (Speeds' speed);  	int newSpeed = Speeds [index - 1];  	await Player.SetSpeed (GlobalVariables.CurrentPlayerState.PlayerType' newSpeed);  	await PlayerHelper.RefreshPlayerState ();  }  
Magic Number,XBMCRemoteRT.Pages,InputPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\InputPage.xaml.cs,SpeedUpButton_Click,The following statement contains a magic number: if (forwardCommand == "IncreaseSpeed") {  	int speed = GlobalVariables.CurrentPlayerState.Speed;  	if (speed != 0 && speed != 32) {  		int index = Array.IndexOf (Speeds' speed);  		int newSpeed = Speeds [index + 1];  		await Player.SetSpeed (GlobalVariables.CurrentPlayerState.PlayerType' newSpeed);  		await PlayerHelper.RefreshPlayerState ();  	}  } else {  	Player.Seek (GlobalVariables.CurrentPlayerState.PlayerType' forwardCommand.ToLower ());  }  
Magic Number,XBMCRemoteRT.Pages,InputPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\InputPage.xaml.cs,SpeedUpButton_Click,The following statement contains a magic number: if (speed != 0 && speed != 32) {  	int index = Array.IndexOf (Speeds' speed);  	int newSpeed = Speeds [index + 1];  	await Player.SetSpeed (GlobalVariables.CurrentPlayerState.PlayerType' newSpeed);  	await PlayerHelper.RefreshPlayerState ();  }  
Magic Number,XBMCRemoteRT.Pages,InputPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\InputPage.xaml.cs,vibrate,The following statement contains a magic number: vibrationDevice.Vibrate (TimeSpan.FromMilliseconds (50));  
Magic Number,XBMCRemoteRT.Pages,NowPlaying,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\NowPlaying.xaml.cs,RefreshMetadata,The following statement contains a magic number: defaultViewModel ["TotalPlaytimeHours"] = Math.Floor (totalPlaytimeSec / 3600.0).ToString ("F0");  
Magic Number,XBMCRemoteRT.Pages,NowPlaying,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\NowPlaying.xaml.cs,RefreshMetadata,The following statement contains a magic number: defaultViewModel ["TotalPlaytimeMinutes"] = ((totalPlaytimeSec / 60.0) % 60).ToString ("F0").PadLeft (2' '0');  
Magic Number,XBMCRemoteRT.Pages,NowPlaying,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\NowPlaying.xaml.cs,RefreshMetadata,The following statement contains a magic number: defaultViewModel ["TotalPlaytimeMinutes"] = ((totalPlaytimeSec / 60.0) % 60).ToString ("F0").PadLeft (2' '0');  
Magic Number,XBMCRemoteRT.Pages,NowPlaying,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\NowPlaying.xaml.cs,RefreshMetadata,The following statement contains a magic number: defaultViewModel ["TotalPlaytimeMinutes"] = ((totalPlaytimeSec / 60.0) % 60).ToString ("F0").PadLeft (2' '0');  
Magic Number,XBMCRemoteRT.Pages,SettingsPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,LoadSkipJumpState,The following statement contains a magic number: switch (forwardFunction) {  case "IncreaseSpeed":  	ForwardComboBox.SelectedIndex = 0;  	break;  case "SmallForward":  	ForwardComboBox.SelectedIndex = 1;  	break;  case "BigForward":  	ForwardComboBox.SelectedIndex = 2;  	break;  }  
Magic Number,XBMCRemoteRT.Pages,SettingsPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,LoadSkipJumpState,The following statement contains a magic number: ForwardComboBox.SelectedIndex = 2;  
Magic Number,XBMCRemoteRT.Pages,SettingsPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,LoadSkipJumpState,The following statement contains a magic number: switch (backwardFunction) {  case "DecreaseSpeed":  	BackwardComboBox.SelectedIndex = 0;  	break;  case "SmallBackward":  	BackwardComboBox.SelectedIndex = 1;  	break;  case "BigBackward":  	BackwardComboBox.SelectedIndex = 2;  	break;  }  
Magic Number,XBMCRemoteRT.Pages,SettingsPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,LoadSkipJumpState,The following statement contains a magic number: BackwardComboBox.SelectedIndex = 2;  
Magic Number,XBMCRemoteRT.Pages,SettingsPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,SaveSkipJumpState,The following statement contains a magic number: switch (ForwardComboBox.SelectedIndex) {  case 0:  	forwardValue = "IncreaseSpeed";  	break;  case 1:  	forwardValue = "SmallForward";  	break;  case 2:  	forwardValue = "BigForward";  	break;  }  
Magic Number,XBMCRemoteRT.Pages,SettingsPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,SaveSkipJumpState,The following statement contains a magic number: switch (BackwardComboBox.SelectedIndex) {  case 0:  	backwardValue = "DecreaseSpeed";  	break;  case 1:  	backwardValue = "SmallBackward";  	break;  case 2:  	backwardValue = "BigBackward";  	break;  }  
Magic Number,XBMCRemoteRT.Pages.Audio,ArtistDetailsHub,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Audio\ArtistDetailsHub.xaml.cs,BottomBar_Opened,The following statement contains a magic number: (sender as CommandBar).Opacity = 0.8;  
Magic Number,XBMCRemoteRT.Pages.Audio,ArtistDetailsHub,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Audio\ArtistDetailsHub.xaml.cs,BottomBar_Closed,The following statement contains a magic number: (sender as CommandBar).Opacity = 0.5;  
Magic Number,XBMCRemoteRT.Pages.Entry,VoiceCommandsPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Entry\VoiceCommandsPage.xaml.cs,ExecuteVoiceCommand,The following statement contains a magic number: switch (voiceCommandName) {  case "PlayArtist":  	searchType = SearchType.Artist;  	string artistName = SemanticInterpretation ("musicTopic"' result);  	allArtists = await AudioLibrary.GetArtists ();  	var filteredArtists = allArtists.Where (t => t.Label.ToLower ().Contains (artistName.ToLower ())).ToList ();  	if (filteredArtists.Count > 1) {  		searchHitState = SearchHitState.Multiple;  		ReceivedCommandTextBlock.Text = "We found multiple artists. Choose one...";  		SearchedItemsListView.ItemsSource = filteredArtists;  	} else if (filteredArtists.Count > 0) {  		searchHitState = SearchHitState.Single;  		ReceivedCommandTextBlock.Text = "This is the artist we found...";  		SearchedItemsListView.ItemsSource = filteredArtists;  		Player.PlayArtist (filteredArtists [0]);  		QuestionNameTextBlock.Text = "Did we get the right one?";  		QuestionWrapper.Visibility = Windows.UI.Xaml.Visibility.Visible;  	} else {  		searchHitState = SearchHitState.None;  		ReceivedCommandTextBlock.Text = "Sorry' we couldn't find what you asked for.";  		//SearchedItemsListView.ItemsSource = allArtists;  		QuestionNameTextBlock.Text = "Would you like to see a list of all artists?";  		QuestionWrapper.Visibility = Windows.UI.Xaml.Visibility.Visible;  	}  	break;  case "PlayMovie":  	searchType = SearchType.Movie;  	string movieName = SemanticInterpretation ("movieTopic"' result);  	allMovies = await VideoLibrary.GetMovies ();  	var filteredMovies = allMovies.Where (t => t.Title.ToLower ().Contains (movieName.ToLower ())).ToList ();  	if (filteredMovies.Count > 1) {  		searchHitState = SearchHitState.Multiple;  		ReceivedCommandTextBlock.Text = "We found multiple movies. Choose one...";  		SearchedItemsListView.ItemsSource = filteredMovies;  	} else if (filteredMovies.Count > 0) {  		searchHitState = SearchHitState.Single;  		ReceivedCommandTextBlock.Text = "This is the movie we found...";  		SearchedItemsListView.ItemsSource = filteredMovies;  		Player.PlayMovie (filteredMovies [0]);  		QuestionNameTextBlock.Text = "Did we find the right one?";  		QuestionWrapper.Visibility = Windows.UI.Xaml.Visibility.Visible;  	} else {  		searchHitState = SearchHitState.None;  		ReceivedCommandTextBlock.Text = "Sorry' we couldn't find what you asked for. Here is the list of all movies.";  		//SearchedItemsListView.ItemsSource = allMovies;  		QuestionNameTextBlock.Text = "Would you like to see a list of all movies?";  		QuestionWrapper.Visibility = Windows.UI.Xaml.Visibility.Visible;  	}  	break;  case "PlayAlbum":  	searchType = SearchType.Album;  	string albumName = SemanticInterpretation ("musicTopic"' result);  	allAlbums = await AudioLibrary.GetAlbums ();  	var filteredAlbums = allAlbums.Where (t => t.Title.ToLower ().Contains (albumName.ToLower ())).ToList ();  	if (filteredAlbums.Count > 1) {  		searchHitState = SearchHitState.Multiple;  		ReceivedCommandTextBlock.Text = "We found multiple albums. Choose one...";  		SearchedItemsListView.ItemsSource = filteredAlbums;  	} else if (filteredAlbums.Count > 0) {  		searchHitState = SearchHitState.Single;  		ReceivedCommandTextBlock.Text = "This is the album we found...";  		SearchedItemsListView.ItemsSource = filteredAlbums;  		Player.PlayAlbum (filteredAlbums [0]);  		QuestionNameTextBlock.Text = "Did we get the right one?";  		QuestionWrapper.Visibility = Windows.UI.Xaml.Visibility.Visible;  	} else {  		searchHitState = SearchHitState.None;  		ReceivedCommandTextBlock.Text = "Sorry' we couldn't find what you asked for. Here is the list of all albums.";  		//SearchedItemsListView.ItemsSource = allAlbums;  		QuestionNameTextBlock.Text = "Would you like to see a list of all albums?";  		QuestionWrapper.Visibility = Windows.UI.Xaml.Visibility.Visible;  	}  	break;  case "StartParty":  	await Player.PlayPartyMode ();  	ReceivedCommandTextBlock.Text = "Started party mode!";  	await Task.Delay (1000);  	Frame.Navigate (typeof(CoverPage));  	break;  default:  	break;  }  
Magic Number,XBMCRemoteRT.Pages.Entry,VoiceCommandsPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Entry\VoiceCommandsPage.xaml.cs,ExecuteVoiceCommand,The following statement contains a magic number: await Task.Delay (1000);  
Magic Number,XBMCRemoteRT.Pages.Video,MovieDetailsHub,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\MovieDetailsHub.xaml.cs,BottomBar_Opened,The following statement contains a magic number: (sender as CommandBar).Opacity = 0.8;  
Magic Number,XBMCRemoteRT.Pages.Video,MovieDetailsHub,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\MovieDetailsHub.xaml.cs,BottomBar_Closed,The following statement contains a magic number: (sender as CommandBar).Opacity = 0.5;  
Magic Number,XBMCRemoteRT.Pages.Video,SearchMoviesPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\SearchMoviesPage.xaml.cs,SearchMoviesTextBox_TextChanged,The following statement contains a magic number: if (query.Length > 2)  	SearchAndReload (SearchMoviesTextBox.Text);  else  	SearchMoviesListView.ItemsSource = emptyList;  
Magic Number,XBMCRemoteRT.Pages.Video,SearchTVShowsPage,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\SearchTVShowsPage.xaml.cs,SearchTVShowsTextBox_TextChanged,The following statement contains a magic number: if (query.Length > 2)  	SearchAndReload (SearchTVShowsTextBox.Text);  else  	SearchTVShowsListView.ItemsSource = emptyList;  
Magic Number,XBMCRemoteRT.Converters,BoolToOpacityConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\BoolToOpacityConverter.cs,Convert,The following statement contains a magic number: return flag ? 1 : 0.5;  
Magic Number,XBMCRemoteRT.Converters,CountToOpacityConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\CountToOpacityConverter.cs,Convert,The following statement contains a magic number: return count == 0 ? 0.6 : 1;  
Magic Number,XBMCRemoteRT.Converters,ListToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\ListToStringConverter.cs,Convert,The following statement contains a magic number: if (inputList.Count > 0 && inputList [0] != "") {  	toReturn = string.Empty;  	int index = 0;  	foreach (string s in inputList) {  		index++;  		if (index > 5) {  			toReturn = toReturn + "etc.'";  			break;  		}  		toReturn = toReturn + s + "' ";  	}  	char[] trim =  {  		''''  		' '  	};  	toReturn = toReturn.TrimEnd (trim);  }  
Magic Number,XBMCRemoteRT.Converters,ListToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\ListToStringConverter.cs,Convert,The following statement contains a magic number: foreach (string s in inputList) {  	index++;  	if (index > 5) {  		toReturn = toReturn + "etc.'";  		break;  	}  	toReturn = toReturn + s + "' ";  }  
Magic Number,XBMCRemoteRT.Converters,ListToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\ListToStringConverter.cs,Convert,The following statement contains a magic number: if (index > 5) {  	toReturn = toReturn + "etc.'";  	break;  }  
Magic Number,XBMCRemoteRT.Converters,DurationToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\DurationToStringConverter.cs,Convert,The following statement contains a magic number: if (value != null) {  	int totalSeconds = (int)value;  	int minutes = (int)Math.Floor (totalSeconds / 60d);  	int seconds = totalSeconds % 60;  	result = minutes.ToString () + ":" + (seconds < 10 ? "0" : "") + seconds.ToString ();  }  
Magic Number,XBMCRemoteRT.Converters,DurationToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\DurationToStringConverter.cs,Convert,The following statement contains a magic number: if (value != null) {  	int totalSeconds = (int)value;  	int minutes = (int)Math.Floor (totalSeconds / 60d);  	int seconds = totalSeconds % 60;  	result = minutes.ToString () + ":" + (seconds < 10 ? "0" : "") + seconds.ToString ();  }  
Magic Number,XBMCRemoteRT.Converters,DurationToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\DurationToStringConverter.cs,Convert,The following statement contains a magic number: result = minutes.ToString () + ":" + (seconds < 10 ? "0" : "") + seconds.ToString ();  
Magic Number,XBMCRemoteRT.Converters,MinutesToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\MinutesToStringConverter.cs,Convert,The following statement contains a magic number: if (minutes > 60) {  	int hours = minutes / 60;  	int remainingMinutes = minutes % 60;  	string hourString = (hours > 1) ? " hours" : " hour";  	string minuteString = (remainingMinutes > 1) ? " minutes" : " minute";  	stringToReturn = hours.ToString () + hourString;  	if (remainingMinutes > 0)  		stringToReturn = stringToReturn + " " + remainingMinutes.ToString () + minuteString;  } else if (minutes > 0) {  	stringToReturn = minutes.ToString () + " minutes";  }  
Magic Number,XBMCRemoteRT.Converters,MinutesToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\MinutesToStringConverter.cs,Convert,The following statement contains a magic number: if (minutes > 60) {  	int hours = minutes / 60;  	int remainingMinutes = minutes % 60;  	string hourString = (hours > 1) ? " hours" : " hour";  	string minuteString = (remainingMinutes > 1) ? " minutes" : " minute";  	stringToReturn = hours.ToString () + hourString;  	if (remainingMinutes > 0)  		stringToReturn = stringToReturn + " " + remainingMinutes.ToString () + minuteString;  } else if (minutes > 0) {  	stringToReturn = minutes.ToString () + " minutes";  }  
Magic Number,XBMCRemoteRT.Converters,MinutesToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\MinutesToStringConverter.cs,Convert,The following statement contains a magic number: if (minutes > 60) {  	int hours = minutes / 60;  	int remainingMinutes = minutes % 60;  	string hourString = (hours > 1) ? " hours" : " hour";  	string minuteString = (remainingMinutes > 1) ? " minutes" : " minute";  	stringToReturn = hours.ToString () + hourString;  	if (remainingMinutes > 0)  		stringToReturn = stringToReturn + " " + remainingMinutes.ToString () + minuteString;  } else if (minutes > 0) {  	stringToReturn = minutes.ToString () + " minutes";  }  
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: if (seconds > 3600) {  	return seconds / 3600 + "h " + (seconds % 3600) / 60 + "m";  } else {  	return seconds / 60 + "m " + seconds % 60 + "s";  }  
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: if (seconds > 3600) {  	return seconds / 3600 + "h " + (seconds % 3600) / 60 + "m";  } else {  	return seconds / 60 + "m " + seconds % 60 + "s";  }  
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: if (seconds > 3600) {  	return seconds / 3600 + "h " + (seconds % 3600) / 60 + "m";  } else {  	return seconds / 60 + "m " + seconds % 60 + "s";  }  
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: if (seconds > 3600) {  	return seconds / 3600 + "h " + (seconds % 3600) / 60 + "m";  } else {  	return seconds / 60 + "m " + seconds % 60 + "s";  }  
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: if (seconds > 3600) {  	return seconds / 3600 + "h " + (seconds % 3600) / 60 + "m";  } else {  	return seconds / 60 + "m " + seconds % 60 + "s";  }  
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: if (seconds > 3600) {  	return seconds / 3600 + "h " + (seconds % 3600) / 60 + "m";  } else {  	return seconds / 60 + "m " + seconds % 60 + "s";  }  
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: return seconds / 3600 + "h " + (seconds % 3600) / 60 + "m";  
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: return seconds / 3600 + "h " + (seconds % 3600) / 60 + "m";  
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: return seconds / 3600 + "h " + (seconds % 3600) / 60 + "m";  
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: return seconds / 60 + "m " + seconds % 60 + "s";  
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: return seconds / 60 + "m " + seconds % 60 + "s";  
Magic Number,XBMCRemoteRT.Converters,StringToImageBrushConverter,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\StringToImageBrushConverter.cs,Convert,The following statement contains a magic number: imageBrush.Opacity = 0.6;  
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The following statement contains a magic number: if (file != null && stream != null) {  	// Prepare input image stream  	IInputStream inStream = stream.AsInputStream ();  	DataReader reader = new DataReader (inStream);  	IRandomAccessStream fileStream = null;  	try {  		fileStream = await file.OpenAsync (FileAccessMode.ReadWrite);  		// Buffered write to file  		await reader.LoadAsync (1024);  		while (reader.UnconsumedBufferLength > 0) {  			await fileStream.WriteAsync (reader.ReadBuffer (reader.UnconsumedBufferLength));  			await reader.LoadAsync (1024);  		}  	} catch (Exception) {  	} finally {  		if (fileStream != null) {  			await fileStream.FlushAsync ();  		}  	}  	inStream.Dispose ();  }  
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The following statement contains a magic number: if (file != null && stream != null) {  	// Prepare input image stream  	IInputStream inStream = stream.AsInputStream ();  	DataReader reader = new DataReader (inStream);  	IRandomAccessStream fileStream = null;  	try {  		fileStream = await file.OpenAsync (FileAccessMode.ReadWrite);  		// Buffered write to file  		await reader.LoadAsync (1024);  		while (reader.UnconsumedBufferLength > 0) {  			await fileStream.WriteAsync (reader.ReadBuffer (reader.UnconsumedBufferLength));  			await reader.LoadAsync (1024);  		}  	} catch (Exception) {  	} finally {  		if (fileStream != null) {  			await fileStream.FlushAsync ();  		}  	}  	inStream.Dispose ();  }  
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The following statement contains a magic number: try {  	fileStream = await file.OpenAsync (FileAccessMode.ReadWrite);  	// Buffered write to file  	await reader.LoadAsync (1024);  	while (reader.UnconsumedBufferLength > 0) {  		await fileStream.WriteAsync (reader.ReadBuffer (reader.UnconsumedBufferLength));  		await reader.LoadAsync (1024);  	}  } catch (Exception) {  } finally {  	if (fileStream != null) {  		await fileStream.FlushAsync ();  	}  }  
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The following statement contains a magic number: try {  	fileStream = await file.OpenAsync (FileAccessMode.ReadWrite);  	// Buffered write to file  	await reader.LoadAsync (1024);  	while (reader.UnconsumedBufferLength > 0) {  		await fileStream.WriteAsync (reader.ReadBuffer (reader.UnconsumedBufferLength));  		await reader.LoadAsync (1024);  	}  } catch (Exception) {  } finally {  	if (fileStream != null) {  		await fileStream.FlushAsync ();  	}  }  
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The following statement contains a magic number: await reader.LoadAsync (1024);  
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The following statement contains a magic number: while (reader.UnconsumedBufferLength > 0) {  	await fileStream.WriteAsync (reader.ReadBuffer (reader.UnconsumedBufferLength));  	await reader.LoadAsync (1024);  }  
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The following statement contains a magic number: await reader.LoadAsync (1024);  
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,DownloadImageForTile,The following statement contains a magic number: using (Stream stream = await GetImageStreamAsync (imageUri)) {  	using (IRandomAccessStream inStream = stream.AsRandomAccessStream ()) {  		// BitmapDecoder decoder = await BitmapDecoder.CreateAsync(stream.AsRandomAccessStream());  		var ras = await ResizeImage (inStream' 1024' 1024);  		//BitmapEncoder encoder = await BitmapEncoder.CreateForTranscodingAsync(ras' decoder);  		//encoder.BitmapTransform.ScaledWidth = 1024;  		//encoder.BitmapTransform.sc  		//await encoder.FlushAsync();  		string fileName = "tile.tmp";  		var file = await(await ApplicationData.Current.LocalFolder.CreateFolderAsync ("Tiles"' CreationCollisionOption.OpenIfExists)).CreateFileAsync (fileName' CreationCollisionOption.GenerateUniqueName);  		using (var reader = new DataReader (ras)) {  			await reader.LoadAsync ((uint)ras.Size);  			var buffer = new byte[(int)ras.Size];  			reader.ReadBytes (buffer);  			await Windows.Storage.FileIO.WriteBytesAsync (file' buffer);  		}  		return file.Path;  	}  }  
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,DownloadImageForTile,The following statement contains a magic number: using (Stream stream = await GetImageStreamAsync (imageUri)) {  	using (IRandomAccessStream inStream = stream.AsRandomAccessStream ()) {  		// BitmapDecoder decoder = await BitmapDecoder.CreateAsync(stream.AsRandomAccessStream());  		var ras = await ResizeImage (inStream' 1024' 1024);  		//BitmapEncoder encoder = await BitmapEncoder.CreateForTranscodingAsync(ras' decoder);  		//encoder.BitmapTransform.ScaledWidth = 1024;  		//encoder.BitmapTransform.sc  		//await encoder.FlushAsync();  		string fileName = "tile.tmp";  		var file = await(await ApplicationData.Current.LocalFolder.CreateFolderAsync ("Tiles"' CreationCollisionOption.OpenIfExists)).CreateFileAsync (fileName' CreationCollisionOption.GenerateUniqueName);  		using (var reader = new DataReader (ras)) {  			await reader.LoadAsync ((uint)ras.Size);  			var buffer = new byte[(int)ras.Size];  			reader.ReadBytes (buffer);  			await Windows.Storage.FileIO.WriteBytesAsync (file' buffer);  		}  		return file.Path;  	}  }  
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,DownloadImageForTile,The following statement contains a magic number: using (IRandomAccessStream inStream = stream.AsRandomAccessStream ()) {  	// BitmapDecoder decoder = await BitmapDecoder.CreateAsync(stream.AsRandomAccessStream());  	var ras = await ResizeImage (inStream' 1024' 1024);  	//BitmapEncoder encoder = await BitmapEncoder.CreateForTranscodingAsync(ras' decoder);  	//encoder.BitmapTransform.ScaledWidth = 1024;  	//encoder.BitmapTransform.sc  	//await encoder.FlushAsync();  	string fileName = "tile.tmp";  	var file = await(await ApplicationData.Current.LocalFolder.CreateFolderAsync ("Tiles"' CreationCollisionOption.OpenIfExists)).CreateFileAsync (fileName' CreationCollisionOption.GenerateUniqueName);  	using (var reader = new DataReader (ras)) {  		await reader.LoadAsync ((uint)ras.Size);  		var buffer = new byte[(int)ras.Size];  		reader.ReadBytes (buffer);  		await Windows.Storage.FileIO.WriteBytesAsync (file' buffer);  	}  	return file.Path;  }  
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,DownloadImageForTile,The following statement contains a magic number: using (IRandomAccessStream inStream = stream.AsRandomAccessStream ()) {  	// BitmapDecoder decoder = await BitmapDecoder.CreateAsync(stream.AsRandomAccessStream());  	var ras = await ResizeImage (inStream' 1024' 1024);  	//BitmapEncoder encoder = await BitmapEncoder.CreateForTranscodingAsync(ras' decoder);  	//encoder.BitmapTransform.ScaledWidth = 1024;  	//encoder.BitmapTransform.sc  	//await encoder.FlushAsync();  	string fileName = "tile.tmp";  	var file = await(await ApplicationData.Current.LocalFolder.CreateFolderAsync ("Tiles"' CreationCollisionOption.OpenIfExists)).CreateFileAsync (fileName' CreationCollisionOption.GenerateUniqueName);  	using (var reader = new DataReader (ras)) {  		await reader.LoadAsync ((uint)ras.Size);  		var buffer = new byte[(int)ras.Size];  		reader.ReadBytes (buffer);  		await Windows.Storage.FileIO.WriteBytesAsync (file' buffer);  	}  	return file.Path;  }  
Magic Number,XBMCRemoteRT.Helpers,GroupingHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GetTrimmedName,The following statement contains a magic number: if (itemName.StartsWith ("a "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 2);  } else if (itemName.StartsWith ("an "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 3);  } else if (itemName.StartsWith ("the "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 4);  }  
Magic Number,XBMCRemoteRT.Helpers,GroupingHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GetTrimmedName,The following statement contains a magic number: if (itemName.StartsWith ("a "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 2);  } else if (itemName.StartsWith ("an "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 3);  } else if (itemName.StartsWith ("the "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 4);  }  
Magic Number,XBMCRemoteRT.Helpers,GroupingHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GetTrimmedName,The following statement contains a magic number: if (itemName.StartsWith ("a "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 2);  } else if (itemName.StartsWith ("an "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 3);  } else if (itemName.StartsWith ("the "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 4);  }  
Magic Number,XBMCRemoteRT.Helpers,GroupingHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GetTrimmedName,The following statement contains a magic number: itemName = itemName.Remove (0' 2);  
Magic Number,XBMCRemoteRT.Helpers,GroupingHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GetTrimmedName,The following statement contains a magic number: if (itemName.StartsWith ("an "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 3);  } else if (itemName.StartsWith ("the "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 4);  }  
Magic Number,XBMCRemoteRT.Helpers,GroupingHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GetTrimmedName,The following statement contains a magic number: if (itemName.StartsWith ("an "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 3);  } else if (itemName.StartsWith ("the "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 4);  }  
Magic Number,XBMCRemoteRT.Helpers,GroupingHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GetTrimmedName,The following statement contains a magic number: itemName = itemName.Remove (0' 3);  
Magic Number,XBMCRemoteRT.Helpers,GroupingHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GetTrimmedName,The following statement contains a magic number: if (itemName.StartsWith ("the "' StringComparison.OrdinalIgnoreCase)) {  	itemName = itemName.Remove (0' 4);  }  
Magic Number,XBMCRemoteRT.Helpers,GroupingHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GetTrimmedName,The following statement contains a magic number: itemName = itemName.Remove (0' 4);  
Magic Number,XBMCRemoteRT.Helpers,PlayerHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The following statement contains a magic number: if (result != null) {  	JObject totalTime = (JObject)result ["totaltime"];  	GlobalVariables.CurrentPlayerState.TotalTimeSeconds = ((int)totalTime ["hours"] * 3600) + ((int)totalTime ["minutes"] * 60) + (int)totalTime ["seconds"];  	JObject time = (JObject)result ["time"];  	GlobalVariables.CurrentPlayerState.TimeSeconds = ((int)time ["hours"] * 3600) + ((int)time ["minutes"] * 60) + (int)time ["seconds"];  	GlobalVariables.CurrentPlayerState.Speed = (int)result ["speed"];  }  
Magic Number,XBMCRemoteRT.Helpers,PlayerHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The following statement contains a magic number: if (result != null) {  	JObject totalTime = (JObject)result ["totaltime"];  	GlobalVariables.CurrentPlayerState.TotalTimeSeconds = ((int)totalTime ["hours"] * 3600) + ((int)totalTime ["minutes"] * 60) + (int)totalTime ["seconds"];  	JObject time = (JObject)result ["time"];  	GlobalVariables.CurrentPlayerState.TimeSeconds = ((int)time ["hours"] * 3600) + ((int)time ["minutes"] * 60) + (int)time ["seconds"];  	GlobalVariables.CurrentPlayerState.Speed = (int)result ["speed"];  }  
Magic Number,XBMCRemoteRT.Helpers,PlayerHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The following statement contains a magic number: if (result != null) {  	JObject totalTime = (JObject)result ["totaltime"];  	GlobalVariables.CurrentPlayerState.TotalTimeSeconds = ((int)totalTime ["hours"] * 3600) + ((int)totalTime ["minutes"] * 60) + (int)totalTime ["seconds"];  	JObject time = (JObject)result ["time"];  	GlobalVariables.CurrentPlayerState.TimeSeconds = ((int)time ["hours"] * 3600) + ((int)time ["minutes"] * 60) + (int)time ["seconds"];  	GlobalVariables.CurrentPlayerState.Speed = (int)result ["speed"];  }  
Magic Number,XBMCRemoteRT.Helpers,PlayerHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The following statement contains a magic number: if (result != null) {  	JObject totalTime = (JObject)result ["totaltime"];  	GlobalVariables.CurrentPlayerState.TotalTimeSeconds = ((int)totalTime ["hours"] * 3600) + ((int)totalTime ["minutes"] * 60) + (int)totalTime ["seconds"];  	JObject time = (JObject)result ["time"];  	GlobalVariables.CurrentPlayerState.TimeSeconds = ((int)time ["hours"] * 3600) + ((int)time ["minutes"] * 60) + (int)time ["seconds"];  	GlobalVariables.CurrentPlayerState.Speed = (int)result ["speed"];  }  
Magic Number,XBMCRemoteRT.Helpers,PlayerHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The following statement contains a magic number: GlobalVariables.CurrentPlayerState.TotalTimeSeconds = ((int)totalTime ["hours"] * 3600) + ((int)totalTime ["minutes"] * 60) + (int)totalTime ["seconds"];  
Magic Number,XBMCRemoteRT.Helpers,PlayerHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The following statement contains a magic number: GlobalVariables.CurrentPlayerState.TotalTimeSeconds = ((int)totalTime ["hours"] * 3600) + ((int)totalTime ["minutes"] * 60) + (int)totalTime ["seconds"];  
Magic Number,XBMCRemoteRT.Helpers,PlayerHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The following statement contains a magic number: GlobalVariables.CurrentPlayerState.TimeSeconds = ((int)time ["hours"] * 3600) + ((int)time ["minutes"] * 60) + (int)time ["seconds"];  
Magic Number,XBMCRemoteRT.Helpers,PlayerHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The following statement contains a magic number: GlobalVariables.CurrentPlayerState.TimeSeconds = ((int)time ["hours"] * 3600) + ((int)time ["minutes"] * 60) + (int)time ["seconds"];  
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,WakeUp,The following statement contains a magic number: if (!IPAddress.TryParse (server.IpAddress' out serverIP))  	return 10;  
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,WakeUp,The following statement contains a magic number: return 10;  
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: if (macAddress.Bytes.Length != 6)  	throw new ArgumentException ("macAddress must have length of 6 bytes");  
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	package [i] = 0xFF;  }  
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: for (int i = 1; i < 17; i++) {  	for (int j = 0; j < 6; j++) {  		package [i * 6 + j] = macAddress.Bytes [j];  	}  }  
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: for (int i = 1; i < 17; i++) {  	for (int j = 0; j < 6; j++) {  		package [i * 6 + j] = macAddress.Bytes [j];  	}  }  
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: for (int i = 1; i < 17; i++) {  	for (int j = 0; j < 6; j++) {  		package [i * 6 + j] = macAddress.Bytes [j];  	}  }  
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: for (int j = 0; j < 6; j++) {  	package [i * 6 + j] = macAddress.Bytes [j];  }  
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: for (int j = 0; j < 6; j++) {  	package [i * 6 + j] = macAddress.Bytes [j];  }  
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: package [i * 6 + j] = macAddress.Bytes [j];  
Magic Number,XBMCRemoteRT.RPCWrappers,AudioLibrary,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,IsLarge,The following statement contains a magic number: return await GetSongsCount () > 1000;  
Magic Number,XBMCRemoteRT.RPCWrappers,Player,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,getIdFromPlayers,The following statement contains a magic number: switch (player) {  case Players.Audio:  default:  	return 0;  case Players.Video:  	return 1;  case Players.Picture:  	return 2;  }  
Magic Number,XBMCRemoteRT.RPCWrappers,Player,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,getIdFromPlayers,The following statement contains a magic number: return 2;  
Magic Number,XBMCRemoteRT.RPCWrappers,Player,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,getPlayersFromId,The following statement contains a magic number: switch (id) {  case 0:  default:  	return Players.Audio;  case 1:  	return Players.Video;  case 2:  	return Players.Picture;  }  
Magic Number,XBMCRemoteRT.RPCWrappers,Playlist,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Playlist.cs,GetPlaylistId,The following statement contains a magic number: switch (playlistType) {  case PlayelistType.Video:  	playlistId = 1;  	break;  case PlayelistType.Picture:  	playlistId = 2;  	break;  case PlayelistType.Audio:  default:  	playlistId = 0;  	break;  }  
Magic Number,XBMCRemoteRT.RPCWrappers,Playlist,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Playlist.cs,GetPlaylistId,The following statement contains a magic number: playlistId = 2;  
Missing Default,XBMCRemoteRT.Pages,SettingsPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,LoadSkipJumpState,The following switch statement is missing a default case: switch (forwardFunction) {  case "IncreaseSpeed":  	ForwardComboBox.SelectedIndex = 0;  	break;  case "SmallForward":  	ForwardComboBox.SelectedIndex = 1;  	break;  case "BigForward":  	ForwardComboBox.SelectedIndex = 2;  	break;  }  
Missing Default,XBMCRemoteRT.Pages,SettingsPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,LoadSkipJumpState,The following switch statement is missing a default case: switch (backwardFunction) {  case "DecreaseSpeed":  	BackwardComboBox.SelectedIndex = 0;  	break;  case "SmallBackward":  	BackwardComboBox.SelectedIndex = 1;  	break;  case "BigBackward":  	BackwardComboBox.SelectedIndex = 2;  	break;  }  
Missing Default,XBMCRemoteRT.Pages,SettingsPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,SaveSkipJumpState,The following switch statement is missing a default case: switch (ForwardComboBox.SelectedIndex) {  case 0:  	forwardValue = "IncreaseSpeed";  	break;  case 1:  	forwardValue = "SmallForward";  	break;  case 2:  	forwardValue = "BigForward";  	break;  }  
Missing Default,XBMCRemoteRT.Pages,SettingsPivot,F:\newReposMay17\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,SaveSkipJumpState,The following switch statement is missing a default case: switch (BackwardComboBox.SelectedIndex) {  case 0:  	backwardValue = "DecreaseSpeed";  	break;  case 1:  	backwardValue = "SmallBackward";  	break;  case 2:  	backwardValue = "BigBackward";  	break;  }  
