Implementation smell,Namespace,Class,File,Method,Description
Long Method,XBMCRemoteRT.Pages.Entry,VoiceCommandsPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Entry\VoiceCommandsPage.xaml.cs,ExecuteVoiceCommand,The method has 114 lines of code.
Complex Method,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,Cyclomatic complexity of the method is 9
Complex Method,XBMCRemoteRT.Pages,EditConnectionPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\EditConnectionPage.xaml.cs,SaveConnectionAppBarButton_Click,Cyclomatic complexity of the method is 8
Complex Method,XBMCRemoteRT.Pages,InputPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\InputPage.xaml.cs,AdvancedMenuFlyout_ItemsPicked,Cyclomatic complexity of the method is 9
Complex Method,XBMCRemoteRT.Pages.Entry,VoiceCommandsPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Entry\VoiceCommandsPage.xaml.cs,ExecuteVoiceCommand,Cyclomatic complexity of the method is 14
Complex Method,XBMCRemoteRT.Helpers,GroupingHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GroupList,Cyclomatic complexity of the method is 9
Complex Method,XBMCRemoteRT.Helpers,PlayerHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,GetAudioStreams,Cyclomatic complexity of the method is 8
Complex Method,XBMCRemoteRT.Helpers,PlayerHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,GetSubtitles,Cyclomatic complexity of the method is 9
Long Statement,XBMCRemoteRT,CoverPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,EpisodeWrapper_Tapped,The length of the statement  "            GlobalVariables.CurrentTracker.SendEvent(EventCategories.UIInteraction' EventActions.Click' "CoverPageEpisodeWrapper"' 0); " is 122.
Long Statement,XBMCRemoteRT,CoverPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,HandleSupportDialog,The length of the statement  "                MessageDialog messageDialog = new MessageDialog("App development is discontinued. Click okay to learn more."' "Development has stopped!"); " is 138.
Long Statement,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The length of the statement  "                bePatientText = String.Format(loader.GetString("WakeupPatientMessage")' MathExtension.CurrentStep(wakeupTime' stepSize)' MathExtension.UpperStep(wakeupTime' stepSize)); " is 168.
Long Statement,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The length of the statement  "            MessageDialog tryMessage = new MessageDialog(loader.GetString("WOLConnectionErrorMessage")' loader.GetString("WOLConnectionErrorHeader")); " is 138.
Long Statement,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,WakeUpServerMFI_Click,The length of the statement  "                MessageDialog message = new MessageDialog(loader.GetString("WOLMacNotFoundMessage")' loader.GetString("WOLMacNotFoundHeader")); " is 127.
Long Statement,XBMCRemoteRT.Pages,AboutPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\AboutPivot.xaml.cs,RegisterForShare,The length of the statement  "            dataTransferManager.DataRequested += new TypedEventHandler<DataTransferManager' DataRequestedEventArgs>(this.ShareTextHandler); " is 127.
Long Statement,XBMCRemoteRT.Pages,AboutPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\AboutPivot.xaml.cs,ShareTextHandler,The length of the statement  "            request.Data.SetText("I'm using #KodiAssit for Windows Phone. Get it for free: http://www.windowsphone.com/s?appid=3897b459-b11b-41eb-9cea-dd9e53c55b78"); " is 154.
Long Statement,XBMCRemoteRT.Pages,EditConnectionPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\EditConnectionPage.xaml.cs,SaveConnectionAppBarButton_Click,The length of the statement  "                    MessageDialog msg = new MessageDialog("Please enter a valid MAC address in format 00:11:22:33:44:55."' "Invalid MAC address"); " is 126.
Long Statement,XBMCRemoteRT.Pages,EditConnectionPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\EditConnectionPage.xaml.cs,SaveConnectionAppBarButton_Click,The length of the statement  "                    MessageDialog msg = new MessageDialog("Please enter a valid subnet mask in format 255.255.255.255."' "Invalid subnet mask"); " is 124.
Long Statement,XBMCRemoteRT.Pages,InputPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\InputPage.xaml.cs,PopulateFlyout,The length of the statement  "            AdvancedMenuFlyout.ItemsSource = new List<string> { audioLibUpdate' videoLibUpdate' audioLibClean' videoLibClean' showSubtitleSerach' showVideoInfo' suspend' shutDown }; " is 169.
Long Statement,XBMCRemoteRT.Pages,SupportPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SupportPage.xaml.cs,SubmitButton_Click,The length of the statement  "            string message = "Development of Kodi Assist has stopped due to lack of funds. You can support the development by following the link: http://igg.me/at/KodiAssist/x/11391141"; " is 174.
Long Statement,XBMCRemoteRT.Pages.Audio,AllMusicPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Audio\AllMusicPivot.xaml.cs,OnNavigatedTo,The length of the statement  "            DisplayInformation.AutoRotationPreferences = DisplayOrientations.LandscapeFlipped | DisplayOrientations.Landscape | DisplayOrientations.Portrait;   " is 145.
Long Statement,XBMCRemoteRT.Pages.Audio,AllMusicPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Audio\AllMusicPivot.xaml.cs,init,The length of the statement  "                    string messageContent = loader.GetString("LargeMusicMessage"); //"There seems to be a lot of music here. Would you like us to help you search for the music instead?"; " is 166.
Long Statement,XBMCRemoteRT.Pages.Audio,AllMusicPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Audio\AllMusicPivot.xaml.cs,ReloadAll,The length of the statement  "            GlobalVariables.CurrentTracker.SendTiming((DateTime.Now.Subtract(loadSartTime))' TimingCategories.LoadTime' "AllMusic"' "AllMusic"); " is 132.
Long Statement,XBMCRemoteRT.Pages.Entry,VoiceCommandsPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Entry\VoiceCommandsPage.xaml.cs,ExecuteVoiceCommand,The length of the statement  "                GlobalVariables.CurrentTracker.SendEvent(EventCategories.VoiceCommand' EventActions.VoiceCommand' "Single" + voiceCommandName' 0); " is 130.
Long Statement,XBMCRemoteRT.Pages.Entry,VoiceCommandsPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Entry\VoiceCommandsPage.xaml.cs,ExecuteVoiceCommand,The length of the statement  "                GlobalVariables.CurrentTracker.SendEvent(EventCategories.VoiceCommand' EventActions.VoiceCommand' "Zero" + voiceCommandName' 0); " is 128.
Long Statement,XBMCRemoteRT.Pages.Video,AllMoviesPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\AllMoviesPivot.xaml.cs,LoadMovies,The length of the statement  "            GlobalVariables.CurrentTracker.SendTiming(DateTime.Now.Subtract(loadStartTime)' TimingCategories.LoadTime' "AllMovies"' "AllMovies"); " is 133.
Long Statement,XBMCRemoteRT.Pages.Video,AllTVShowsPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\AllTVShowsPage.xaml.cs,LoadTVShows,The length of the statement  "            GlobalVariables.CurrentTracker.SendTiming(DateTime.Now.Subtract(loadStartTime)' TimingCategories.LoadTime' "AllTVShows"' "AllTVShows"); " is 135.
Long Statement,XBMCRemoteRT.Pages.Video,TVShowDetailsHub,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\TVShowDetailsHub.xaml.cs,EpisodeWrapper_Tapped,The length of the statement  "            GlobalVariables.CurrentTracker.SendEvent(EventCategories.UIInteraction' EventActions.Click' "TVShowDetailsHubEpisodeWrapper"' 0); " is 129.
Long Statement,XBMCRemoteRT.Common,SuspensionManager,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "                StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync(sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 140.
Long Statement,XBMCRemoteRT.Common,SuspensionManager,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Common\SuspensionManager.cs,RestoreAsync,The length of the statement  "                    if (weakFrameReference.TryGetTarget(out frame) && (string)frame.GetValue(FrameSessionBaseKeyProperty) == sessionBaseKey) " is 120.
Long Statement,XBMCRemoteRT.Common,SuspensionManager,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "                throw new InvalidOperationException("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 138.
Long Statement,XBMCRemoteRT.Converters,RepeatStateConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\RepeatStateConverter.cs,Convert,The length of the statement  "            ImageBrush repeatAllBrush = new ImageBrush { ImageSource = new BitmapImage(new Uri("/Assets/Glyphs/transport.repeat.png"' UriKind.Relative))' Stretch = Stretch.Uniform }; " is 170.
Long Statement,XBMCRemoteRT.Converters,RepeatStateConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\RepeatStateConverter.cs,Convert,The length of the statement  "            ImageBrush repeatOneBrush = new ImageBrush { ImageSource = new BitmapImage(new Uri("/Assets/Glyphs/transport.repeatone.png"' UriKind.Relative))' Stretch = Stretch.Uniform }; " is 173.
Long Statement,XBMCRemoteRT.Converters,RepeatStateConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\RepeatStateConverter.cs,Convert,The length of the statement  "            ImageBrush repeatOffBrush = new ImageBrush { ImageSource = new BitmapImage(new Uri("/Assets/Glyphs/transport.repeat.png"' UriKind.Relative))' Stretch = Stretch.Uniform' Opacity = 0.5 }; " is 185.
Long Statement,XBMCRemoteRT.Helpers,DownloadHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,DownloadImageForTile,The length of the statement  "                    var file = await (await ApplicationData.Current.LocalFolder.CreateFolderAsync("Tiles"' CreationCollisionOption.OpenIfExists)).CreateFileAsync(fileName' CreationCollisionOption.GenerateUniqueName); " is 196.
Long Statement,XBMCRemoteRT.Helpers,ProxyManager,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\ProxyManager.cs,GetImageStreamAsync,The length of the statement  "            HttpResponseMessage res = await ConnectionManager.CurrentConnection.HttpClient.SendAsync(req' HttpCompletionOption.ResponseHeadersRead); " is 136.
Long Statement,XBMCRemoteRT.Helpers,ConnectionManager,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\ConnectionManager.cs,ExecuteRequest,The length of the statement  "                request.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Basic"' Convert.ToBase64String(Encoding.UTF8.GetBytes(String.Format("{0}:{1}"' CurrentConnection.Username' CurrentConnection.Password)))); " is 225.
Long Statement,XBMCRemoteRT.Helpers,ConnectionManager,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\ConnectionManager.cs,ExecuteRequest,The length of the statement  "            HttpResponseMessage response = await CurrentConnection.HttpClient.SendAsync(request' HttpCompletionOption.ResponseHeadersRead); " is 127.
Long Statement,XBMCRemoteRT.Helpers,GroupingHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GroupList,The length of the statement  "                    group.Sort((c0' c1) => { return CultureInfo.InvariantCulture.CompareInfo.Compare(GetTrimmedName(getName(c0))' GetTrimmedName(getName(c1))); }); " is 143.
Long Statement,XBMCRemoteRT.Helpers,PlayerHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The length of the statement  "                GlobalVariables.CurrentPlayerState.TotalTimeSeconds = ((int)totalTime["hours"] * 3600) + ((int)totalTime["minutes"] * 60) + (int)totalTime["seconds"]; " is 150.
Long Statement,XBMCRemoteRT.Helpers,PlayerHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The length of the statement  "                GlobalVariables.CurrentPlayerState.TimeSeconds = ((int)time["hours"] * 3600) + ((int)time["minutes"] * 60) + (int)time["seconds"]; " is 130.
Long Statement,XBMCRemoteRT.RPCWrappers,AudioLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,GetAlbumDetails,The length of the statement  "                    new JArray("title"' "description"' "artist"' "genre"' "theme"' "mood"' "style"' "type"' "albumlabel"' "rating"' "year"' "musicbrainzalbumid"' "musicbrainzalbumartistid"' "fanart"' "thumbnail"' "playcount"' "genreid"' "artistid"' "displayartist") " is 245.
Long Statement,XBMCRemoteRT.RPCWrappers,AudioLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,GetRecentlyAddedAlbums,The length of the statement  "                                    new JArray("title"' "description"' "artist"' "genre"' "theme"' "mood"' "style"' "type"' "albumlabel"' "rating"' "year"' "musicbrainzalbumid"' "musicbrainzalbumartistid"' "fanart"' "thumbnail"' "playcount"' "genreid"' "artistid"' "displayartist") " is 245.
Long Statement,XBMCRemoteRT.RPCWrappers,AudioLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,GetSongs,The length of the statement  "                                         new JArray("album"' "albumartist"' "albumartistid"' "albumid"' "comment"' "disc"' "duration"' "file"' "lastplayed"' "lyrics"' "musicbrainzartistid"' "musicbrainztrackid"' "playcount"' "track")) " is 193.
Long Statement,XBMCRemoteRT.RPCWrappers,AudioLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,GetArtists,The length of the statement  "                                         new JArray("born"' "description"' "died"' "disbanded"' "formed"' "instrument"' "mood"' "musicbrainzartistid"' "style"' "yearsactive"' "thumbnail"' "fanart")) " is 157.
Long Statement,XBMCRemoteRT.RPCWrappers,AudioLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,GetAlbums,The length of the statement  "                                        new JArray("title"' "description"' "artist"' "genre"' "theme"' "mood"' "style"' "type"' "albumlabel"' "rating"' "year"' "musicbrainzalbumid"' "musicbrainzalbumartistid"' "fanart"' "thumbnail"' "playcount"' "genreid"' "artistid"' "displayartist")) " is 246.
Long Statement,XBMCRemoteRT.RPCWrappers,Playlist,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Playlist.cs,GetItems,The length of the statement  "            //TODO: check the video return output -- currently in the app this is not used but should it be in the future' this will have to be checked " is 139.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetRecentlyAddedEpisodes,The length of the statement  "                                    new JArray("title"' "plot"' "votes"' "rating"' "writer"' "firstaired"' "playcount"' "runtime"' "director"' "productioncode"' "season"' "episode"' "originaltitle"' "showtitle"' "streamdetails"' "lastplayed"' "fanart"' "thumbnail"' "file"' "resume"' "tvshowid"' "dateadded"' "uniqueid"' "art") " is 291.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetRecentlyAddedEpisodes,The length of the statement  "            JObject responseObject = await ConnectionManager.ExecuteRPCRequest("VideoLibrary.GetRecentlyAddedEpisodes"' parameters); " is 120.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetRecentlyAddedEpisodes,The length of the statement  "            List<Episode> listToReturn = episodeListObject != null ? episodeListObject.ToObject<List<Episode>>() : new List<Episode>(); " is 123.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetRecentlyAddedMovies,The length of the statement  "                                    new JArray("title"' "genre"' "year"' "rating"' "director"' "trailer"' "tagline"' "plot"' "plotoutline"' "originaltitle"' "lastplayed"' "playcount"' "writer"' "studio"' "mpaa"' "cast"' "country"' "imdbnumber"' "runtime"' "set"' "showlink"' "streamdetails"' "top250"' "votes"' "fanart"' "thumbnail"' "file"' "sorttitle"' "resume"' "setid"' "dateadded"' "tag"' "art") " is 364.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetTVShows,The length of the statement  "                                    new JArray("title"' "genre"' "year"' "rating"' "plot"' "studio"' "mpaa"' "cast"' "playcount"' "episode"' "imdbnumber"' "premiered"' "votes"' "lastplayed"' "fanart"' "thumbnail"' "file"' "originaltitle"' "sorttitle"' "episodeguide"' "season"' "watchedepisodes"' "dateadded"' "tag"' "art") " is 287.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetTVShows,The length of the statement  "            List<TVShow> listToReturn = tvShowsListObject != null ? tvShowsListObject.ToObject<List<TVShow>>() : new List<TVShow>(); " is 120.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetMovies,The length of the statement  "                                    new JArray("title"' "genre"' "year"' "rating"' "director"' "trailer"' "tagline"' "plot"' "plotoutline"' "originaltitle"' "lastplayed"' "playcount"' "writer"' "studio"' "mpaa"' "cast"' "country"' "imdbnumber"' "runtime"' "set"' "showlink"' "streamdetails"' "top250"' "votes"' "fanart"' "thumbnail"' "file"' "sorttitle"' "resume"' "setid"' "dateadded"' "tag"' "art") " is 364.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetEpisodes,The length of the statement  "                                   new JArray("title"' "plot"' "votes"' "rating"' "writer"' "firstaired"' "playcount"' "runtime"' "director"' "productioncode"' "season"' "episode"' "originaltitle"' "showtitle"' "streamdetails"' "lastplayed"' "fanart"' "thumbnail"' "file"' "resume"' "tvshowid"' "dateadded"' "uniqueid"' "art") " is 291.
Long Statement,XBMCRemoteRT.RPCWrappers,VideoLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\VideoLibrary.cs,GetEpisodes,The length of the statement  "            List<Episode> listToReturn = episodeListObject != null ? episodeListObject.ToObject<List<Episode>>() : new List<Episode>(); " is 123.
Empty Catch Block,XBMCRemoteRT,App,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\App.xaml.cs,EnsureRootFrame,The method has an empty catch block.
Empty Catch Block,XBMCRemoteRT.Pages,NowPlaying,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\NowPlaying.xaml.cs,RefreshSongs,The method has an empty catch block.
Empty Catch Block,XBMCRemoteRT.Converters,IdToColourConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\IdToColourConverter.cs,Convert,The method has an empty catch block.
Empty Catch Block,XBMCRemoteRT.Helpers,DownloadHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The method has an empty catch block.
Empty Catch Block,XBMCRemoteRT.Helpers,DownloadHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The method has an empty catch block.
Empty Catch Block,XBMCRemoteRT.Helpers,DownloadHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,GetRemoteUri,The method has an empty catch block.
Empty Catch Block,XBMCRemoteRT.Helpers,ProxyManager,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\ProxyManager.cs,GetRemoteUri,The method has an empty catch block.
Magic Number,XBMCRemoteRT,CoverPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,CoverPage,The following statement contains a magic number: PlayerHelper.RefreshPlayerState().Wait(200);
Magic Number,XBMCRemoteRT,CoverPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,RefreshListsIfNull,The following statement contains a magic number: Albums = await AudioLibrary.GetRecentlyAddedAlbums(new Limits { Start = 0' End = 12 });
Magic Number,XBMCRemoteRT,CoverPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,RefreshListsIfNull,The following statement contains a magic number: Episodes = await VideoLibrary.GetRecentlyAddedEpisodes(new Limits { Start = 0' End = 10 });
Magic Number,XBMCRemoteRT,CoverPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,RefreshListsIfNull,The following statement contains a magic number: Movies = await VideoLibrary.GetRecentlyAddedMovies(new Limits { Start = 0' End = 12 });
Magic Number,XBMCRemoteRT,CoverPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,slider_PointerReleased,The following statement contains a magic number: var percentage = (slider.Value * 100) / slider.Maximum;
Magic Number,XBMCRemoteRT,CoverPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,BottomBar_Opened,The following statement contains a magic number: (sender as CommandBar).Opacity = 0.8;
Magic Number,XBMCRemoteRT,CoverPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,BottomBar_Closed,The following statement contains a magic number: (sender as CommandBar).Opacity = 0.5;
Magic Number,XBMCRemoteRT,CoverPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,HandleSupportDialog,The following statement contains a magic number: noOfLaunches < 30 && noOfLaunches % 5 == 0
Magic Number,XBMCRemoteRT,CoverPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\CoverPage.xaml.cs,HandleSupportDialog,The following statement contains a magic number: noOfLaunches < 30 && noOfLaunches % 5 == 0
Magic Number,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: int wakeupTime = connectionItem.WakeUpTime < 5 ? 5 : connectionItem.WakeUpTime;
Magic Number,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: int wakeupTime = connectionItem.WakeUpTime < 5 ? 5 : connectionItem.WakeUpTime;
Magic Number,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: int stepSize = 5;
Magic Number,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: switch (result)                      {                          case 10:                              messageText = loader.GetString("IPErrorMessage");                              break;                          default:                              messageText = loader.GetString("WOLErrorMessage") + result;                              break;                      }
Magic Number,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: result != 102
Magic Number,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: timeSinceWakeUp > 5
Magic Number,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: timeSincePopup > 10
Magic Number,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,ConnectToServer,The following statement contains a magic number: connectionItem.WakeUpTime = newWakeupTime < 5 ? connectionItem.WakeUpTime : newWakeupTime;
Magic Number,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,WakeUpServerMFI_Click,The following statement contains a magic number: await Task.Delay(3500);
Magic Number,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,WakeUpServerMFI_Click,The following statement contains a magic number: switch (result)                  {                      case 10:                          messageText = loader.GetString("IPErrorMessage");                          break;                      default:                          messageText = loader.GetString("WOLErrorMessage") + result;                          break;                  }
Magic Number,XBMCRemoteRT,MainPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\MainPage.xaml.cs,WakeUpServerMFI_Click,The following statement contains a magic number: result != 102
Magic Number,XBMCRemoteRT.Pages,InputPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\InputPage.xaml.cs,SpeedDownButton_Click,The following statement contains a magic number: speed != 0 && speed != -32
Magic Number,XBMCRemoteRT.Pages,InputPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\InputPage.xaml.cs,SpeedUpButton_Click,The following statement contains a magic number: speed != 0 && speed != 32
Magic Number,XBMCRemoteRT.Pages,InputPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\InputPage.xaml.cs,vibrate,The following statement contains a magic number: vibrationDevice.Vibrate(TimeSpan.FromMilliseconds(50));
Magic Number,XBMCRemoteRT.Pages,NowPlaying,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\NowPlaying.xaml.cs,RefreshMetadata,The following statement contains a magic number: defaultViewModel["TotalPlaytimeHours"] = Math.Floor(totalPlaytimeSec / 3600.0).ToString("F0");
Magic Number,XBMCRemoteRT.Pages,NowPlaying,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\NowPlaying.xaml.cs,RefreshMetadata,The following statement contains a magic number: defaultViewModel["TotalPlaytimeMinutes"] = ((totalPlaytimeSec / 60.0) % 60).ToString("F0").PadLeft(2' '0');
Magic Number,XBMCRemoteRT.Pages,NowPlaying,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\NowPlaying.xaml.cs,RefreshMetadata,The following statement contains a magic number: defaultViewModel["TotalPlaytimeMinutes"] = ((totalPlaytimeSec / 60.0) % 60).ToString("F0").PadLeft(2' '0');
Magic Number,XBMCRemoteRT.Pages,NowPlaying,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\NowPlaying.xaml.cs,RefreshMetadata,The following statement contains a magic number: defaultViewModel["TotalPlaytimeMinutes"] = ((totalPlaytimeSec / 60.0) % 60).ToString("F0").PadLeft(2' '0');
Magic Number,XBMCRemoteRT.Pages,SettingsPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,LoadSkipJumpState,The following statement contains a magic number: switch (forwardFunction)              {                  case "IncreaseSpeed":                      ForwardComboBox.SelectedIndex = 0;                      break;                  case "SmallForward":                      ForwardComboBox.SelectedIndex = 1;                      break;                  case "BigForward":                      ForwardComboBox.SelectedIndex = 2;                      break;                                  }
Magic Number,XBMCRemoteRT.Pages,SettingsPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,LoadSkipJumpState,The following statement contains a magic number: switch (backwardFunction)              {                  case "DecreaseSpeed":                      BackwardComboBox.SelectedIndex = 0;                      break;                  case "SmallBackward":                      BackwardComboBox.SelectedIndex = 1;                      break;                  case "BigBackward":                      BackwardComboBox.SelectedIndex = 2;                      break;              }
Magic Number,XBMCRemoteRT.Pages,SettingsPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,SaveSkipJumpState,The following statement contains a magic number: switch (ForwardComboBox.SelectedIndex)              {                  case 0:                      forwardValue = "IncreaseSpeed";                      break;                  case 1:                      forwardValue = "SmallForward";                      break;                  case 2:                      forwardValue = "BigForward";                      break;              }
Magic Number,XBMCRemoteRT.Pages,SettingsPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,SaveSkipJumpState,The following statement contains a magic number: switch (BackwardComboBox.SelectedIndex)              {                  case 0:                      backwardValue = "DecreaseSpeed";                      break;                  case 1:                      backwardValue = "SmallBackward";                      break;                  case 2:                      backwardValue = "BigBackward";                      break;              }
Magic Number,XBMCRemoteRT.Pages.Audio,ArtistDetailsHub,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Audio\ArtistDetailsHub.xaml.cs,BottomBar_Opened,The following statement contains a magic number: (sender as CommandBar).Opacity = 0.8;
Magic Number,XBMCRemoteRT.Pages.Audio,ArtistDetailsHub,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Audio\ArtistDetailsHub.xaml.cs,BottomBar_Closed,The following statement contains a magic number: (sender as CommandBar).Opacity = 0.5;
Magic Number,XBMCRemoteRT.Pages.Entry,VoiceCommandsPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Entry\VoiceCommandsPage.xaml.cs,ExecuteVoiceCommand,The following statement contains a magic number: switch (voiceCommandName)              {                  case "PlayArtist":                      searchType = SearchType.Artist;                      string artistName = SemanticInterpretation("musicTopic"' result);                      allArtists = await AudioLibrary.GetArtists();                      var filteredArtists = allArtists.Where(t => t.Label.ToLower().Contains(artistName.ToLower())).ToList();                      if (filteredArtists.Count > 1)                      {                          searchHitState = SearchHitState.Multiple;                          ReceivedCommandTextBlock.Text = "We found multiple artists. Choose one...";                          SearchedItemsListView.ItemsSource = filteredArtists;                      }                      else if (filteredArtists.Count > 0)                      {                          searchHitState = SearchHitState.Single;                          ReceivedCommandTextBlock.Text = "This is the artist we found...";                          SearchedItemsListView.ItemsSource = filteredArtists;                          Player.PlayArtist(filteredArtists[0]);                          QuestionNameTextBlock.Text = "Did we get the right one?";                          QuestionWrapper.Visibility = Windows.UI.Xaml.Visibility.Visible;                      }                      else                      {                          searchHitState = SearchHitState.None;                          ReceivedCommandTextBlock.Text = "Sorry' we couldn't find what you asked for.";                          //SearchedItemsListView.ItemsSource = allArtists;                          QuestionNameTextBlock.Text = "Would you like to see a list of all artists?";                          QuestionWrapper.Visibility = Windows.UI.Xaml.Visibility.Visible;                      }                      break;                  case "PlayMovie":                      searchType = SearchType.Movie;                      string movieName = SemanticInterpretation("movieTopic"' result);                      allMovies = await VideoLibrary.GetMovies();                      var filteredMovies = allMovies.Where(t => t.Title.ToLower().Contains(movieName.ToLower())).ToList();                      if (filteredMovies.Count > 1)                      {                          searchHitState = SearchHitState.Multiple;                          ReceivedCommandTextBlock.Text = "We found multiple movies. Choose one...";                          SearchedItemsListView.ItemsSource = filteredMovies;                      }                      else if (filteredMovies.Count > 0)                      {                          searchHitState = SearchHitState.Single;                          ReceivedCommandTextBlock.Text = "This is the movie we found...";                          SearchedItemsListView.ItemsSource = filteredMovies;                          Player.PlayMovie(filteredMovies[0]);                          QuestionNameTextBlock.Text = "Did we find the right one?";                          QuestionWrapper.Visibility = Windows.UI.Xaml.Visibility.Visible;                      }                      else                      {                          searchHitState = SearchHitState.None;                          ReceivedCommandTextBlock.Text = "Sorry' we couldn't find what you asked for. Here is the list of all movies.";                          //SearchedItemsListView.ItemsSource = allMovies;                          QuestionNameTextBlock.Text = "Would you like to see a list of all movies?";                          QuestionWrapper.Visibility = Windows.UI.Xaml.Visibility.Visible;                      }                      break;                  case "PlayAlbum":                      searchType = SearchType.Album;                      string albumName = SemanticInterpretation("musicTopic"' result);                      allAlbums = await AudioLibrary.GetAlbums();                      var filteredAlbums = allAlbums.Where(t => t.Title.ToLower().Contains(albumName.ToLower())).ToList();                      if (filteredAlbums.Count > 1)                      {                          searchHitState = SearchHitState.Multiple;                          ReceivedCommandTextBlock.Text = "We found multiple albums. Choose one...";                          SearchedItemsListView.ItemsSource = filteredAlbums;                      }                      else if (filteredAlbums.Count > 0)                      {                          searchHitState = SearchHitState.Single;                          ReceivedCommandTextBlock.Text = "This is the album we found...";                          SearchedItemsListView.ItemsSource = filteredAlbums;                          Player.PlayAlbum(filteredAlbums[0]);                          QuestionNameTextBlock.Text = "Did we get the right one?";                          QuestionWrapper.Visibility = Windows.UI.Xaml.Visibility.Visible;                      }                      else                      {                          searchHitState = SearchHitState.None;                          ReceivedCommandTextBlock.Text = "Sorry' we couldn't find what you asked for. Here is the list of all albums.";                          //SearchedItemsListView.ItemsSource = allAlbums;                          QuestionNameTextBlock.Text = "Would you like to see a list of all albums?";                          QuestionWrapper.Visibility = Windows.UI.Xaml.Visibility.Visible;                      }                      break;                  case "StartParty":                      await Player.PlayPartyMode();                      ReceivedCommandTextBlock.Text = "Started party mode!";                      await Task.Delay(1000);                      Frame.Navigate(typeof(CoverPage));                      break;                  default:                      break;              }
Magic Number,XBMCRemoteRT.Pages.Video,MovieDetailsHub,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\MovieDetailsHub.xaml.cs,BottomBar_Opened,The following statement contains a magic number: (sender as CommandBar).Opacity = 0.8;
Magic Number,XBMCRemoteRT.Pages.Video,MovieDetailsHub,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\MovieDetailsHub.xaml.cs,BottomBar_Closed,The following statement contains a magic number: (sender as CommandBar).Opacity = 0.5;
Magic Number,XBMCRemoteRT.Pages.Video,SearchMoviesPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\SearchMoviesPage.xaml.cs,SearchMoviesTextBox_TextChanged,The following statement contains a magic number: query.Length > 2
Magic Number,XBMCRemoteRT.Pages.Video,SearchTVShowsPage,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\Video\SearchTVShowsPage.xaml.cs,SearchTVShowsTextBox_TextChanged,The following statement contains a magic number: query.Length > 2
Magic Number,XBMCRemoteRT.Converters,BoolToOpacityConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\BoolToOpacityConverter.cs,Convert,The following statement contains a magic number: return flag ? 1 : 0.5;
Magic Number,XBMCRemoteRT.Converters,CountToOpacityConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\CountToOpacityConverter.cs,Convert,The following statement contains a magic number: return count == 0 ? 0.6 : 1;
Magic Number,XBMCRemoteRT.Converters,ListToStringConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\ListToStringConverter.cs,Convert,The following statement contains a magic number: index > 5
Magic Number,XBMCRemoteRT.Converters,ListTrimmer,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\ListTrimmer.cs,Convert,The following statement contains a magic number: int resultCount = 6;
Magic Number,XBMCRemoteRT.Converters,DurationToStringConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\DurationToStringConverter.cs,Convert,The following statement contains a magic number: int minutes = (int)Math.Floor(totalSeconds / 60d);
Magic Number,XBMCRemoteRT.Converters,DurationToStringConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\DurationToStringConverter.cs,Convert,The following statement contains a magic number: int seconds = totalSeconds % 60;
Magic Number,XBMCRemoteRT.Converters,DurationToStringConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\DurationToStringConverter.cs,Convert,The following statement contains a magic number: result = minutes.ToString() + ":" + (seconds < 10 ? "0" : "") + seconds.ToString();
Magic Number,XBMCRemoteRT.Converters,MinutesToStringConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\MinutesToStringConverter.cs,Convert,The following statement contains a magic number: int minutes = seconds / 60;
Magic Number,XBMCRemoteRT.Converters,MinutesToStringConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\MinutesToStringConverter.cs,Convert,The following statement contains a magic number: int hours = minutes / 60;
Magic Number,XBMCRemoteRT.Converters,MinutesToStringConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\MinutesToStringConverter.cs,Convert,The following statement contains a magic number: int remainingMinutes = minutes % 60;
Magic Number,XBMCRemoteRT.Converters,MinutesToStringConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\MinutesToStringConverter.cs,Convert,The following statement contains a magic number: minutes > 60
Magic Number,XBMCRemoteRT.Converters,RatingConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\RatingConverter.cs,Convert,The following statement contains a magic number: double roundRating = Math.Round(rating' 2);
Magic Number,XBMCRemoteRT.Converters,RepeatStateConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\RepeatStateConverter.cs,Convert,The following statement contains a magic number: ImageBrush repeatOffBrush = new ImageBrush { ImageSource = new BitmapImage(new Uri("/Assets/Glyphs/transport.repeat.png"' UriKind.Relative))' Stretch = Stretch.Uniform' Opacity = 0.5 };
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: return seconds / 3600 + "h " + (seconds % 3600) / 60 + "m";
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: return seconds / 3600 + "h " + (seconds % 3600) / 60 + "m";
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: return seconds / 3600 + "h " + (seconds % 3600) / 60 + "m";
Magic Number,XBMCRemoteRT.Converters,SecondsToStringConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\SecondsToStringConverter.cs,Convert,The following statement contains a magic number: seconds > 3600
Magic Number,XBMCRemoteRT.Converters,StringToImageBrushConverter,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Converters\StringToImageBrushConverter.cs,Convert,The following statement contains a magic number: imageBrush.Opacity = 0.6;
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The following statement contains a magic number: await reader.LoadAsync(1024);
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,WriteFileAsync,The following statement contains a magic number: await reader.LoadAsync(1024);
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,DownloadImageForTile,The following statement contains a magic number: var ras = await ResizeImage(inStream' 1024' 1024);
Magic Number,XBMCRemoteRT.Helpers,DownloadHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\DownloadHelper.cs,DownloadImageForTile,The following statement contains a magic number: var ras = await ResizeImage(inStream' 1024' 1024);
Magic Number,XBMCRemoteRT.Helpers,GroupingHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\GroupingHelper.cs,GetTrimmedName,The following statement contains a magic number: itemName = itemName.Remove(0' 2);
Magic Number,XBMCRemoteRT.Helpers,PlayerHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The following statement contains a magic number: GlobalVariables.CurrentPlayerState.TotalTimeSeconds = ((int)totalTime["hours"] * 3600) + ((int)totalTime["minutes"] * 60) + (int)totalTime["seconds"];
Magic Number,XBMCRemoteRT.Helpers,PlayerHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The following statement contains a magic number: GlobalVariables.CurrentPlayerState.TotalTimeSeconds = ((int)totalTime["hours"] * 3600) + ((int)totalTime["minutes"] * 60) + (int)totalTime["seconds"];
Magic Number,XBMCRemoteRT.Helpers,PlayerHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The following statement contains a magic number: GlobalVariables.CurrentPlayerState.TimeSeconds = ((int)time["hours"] * 3600) + ((int)time["minutes"] * 60) + (int)time["seconds"];
Magic Number,XBMCRemoteRT.Helpers,PlayerHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\PlayerHelper.cs,RefreshPlayerProperties,The following statement contains a magic number: GlobalVariables.CurrentPlayerState.TimeSeconds = ((int)time["hours"] * 3600) + ((int)time["minutes"] * 60) + (int)time["seconds"];
Magic Number,XBMCRemoteRT.Helpers,TileHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\TileHelper.cs,UpdateTile,The following statement contains a magic number: Limits limits = new Limits(0' 3);
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,WakeUp,The following statement contains a magic number: return 10;
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: macAddress.Bytes.Length != 6
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: byte[] package = new byte[102];
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: i < 6
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: package[i * 6 + j] = macAddress.Bytes[j];
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: j < 6
Magic Number,XBMCRemoteRT.Helpers,WOLHelper,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\Helpers\WOLHelper.cs,CreateMagicPackage,The following statement contains a magic number: i < 17
Magic Number,XBMCRemoteRT.RPCWrappers,AudioLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,GetAllSongs,The following statement contains a magic number: int stepSize = 50;
Magic Number,XBMCRemoteRT.RPCWrappers,AudioLibrary,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\AudioLibrary.cs,IsLarge,The following statement contains a magic number: return await GetSongsCount() > 1000;
Magic Number,XBMCRemoteRT.RPCWrappers,JSONRPC,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\JSONRPC.cs,Ping,The following statement contains a magic number: JObject requestObject = new JObject(                  new JProperty("jsonrpc"' "2.0")'                  new JProperty("id"' 234)'                  new JProperty("method"' "JSONRPC.ping"));
Magic Number,XBMCRemoteRT.RPCWrappers,Player,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,getIdFromPlayers,The following statement contains a magic number: switch (player)              {                  case Players.Audio:                  default:                      return 0;                  case Players.Video:                      return 1;                  case Players.Picture:                      return 2;              }
Magic Number,XBMCRemoteRT.RPCWrappers,Player,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Player.cs,getPlayersFromId,The following statement contains a magic number: switch (id)              {                  case 0:                  default:                      return Players.Audio;                  case 1:                      return Players.Video;                  case 2:                      return Players.Picture;              }
Magic Number,XBMCRemoteRT.RPCWrappers,Playlist,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.Shared\RPCWrappers\Playlist.cs,GetPlaylistId,The following statement contains a magic number: switch (playlistType)              {                  case PlayelistType.Video:                      playlistId = 1;                      break;                  case PlayelistType.Picture:                      playlistId = 2;                      break;                  case PlayelistType.Audio:                  default:                      playlistId = 0;                      break;              }
Missing Default,XBMCRemoteRT.Pages,SettingsPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,LoadSkipJumpState,The following switch statement is missing a default case: switch (forwardFunction)              {                  case "IncreaseSpeed":                      ForwardComboBox.SelectedIndex = 0;                      break;                  case "SmallForward":                      ForwardComboBox.SelectedIndex = 1;                      break;                  case "BigForward":                      ForwardComboBox.SelectedIndex = 2;                      break;                                  }
Missing Default,XBMCRemoteRT.Pages,SettingsPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,LoadSkipJumpState,The following switch statement is missing a default case: switch (backwardFunction)              {                  case "DecreaseSpeed":                      BackwardComboBox.SelectedIndex = 0;                      break;                  case "SmallBackward":                      BackwardComboBox.SelectedIndex = 1;                      break;                  case "BigBackward":                      BackwardComboBox.SelectedIndex = 2;                      break;              }
Missing Default,XBMCRemoteRT.Pages,SettingsPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,SaveSkipJumpState,The following switch statement is missing a default case: switch (ForwardComboBox.SelectedIndex)              {                  case 0:                      forwardValue = "IncreaseSpeed";                      break;                  case 1:                      forwardValue = "SmallForward";                      break;                  case 2:                      forwardValue = "BigForward";                      break;              }
Missing Default,XBMCRemoteRT.Pages,SettingsPivot,D:\research\architectureSmells\repos\akshay2000_XBMCRemoteRT\XBMCRemoteRT\XBMCRemoteRT.WindowsPhone\Pages\SettingsPivot.xaml.cs,SaveSkipJumpState,The following switch statement is missing a default case: switch (BackwardComboBox.SelectedIndex)              {                  case 0:                      backwardValue = "DecreaseSpeed";                      break;                  case 1:                      backwardValue = "SmallBackward";                      break;                  case 2:                      backwardValue = "BigBackward";                      break;              }
