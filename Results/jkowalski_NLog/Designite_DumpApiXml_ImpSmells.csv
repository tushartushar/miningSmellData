Implementation smell,Namespace,Class,File,Method,Description
Long Method,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,DumpTypeMembers,The method has 105 lines of code.
Complex Method,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,DumpApiDocs,Cyclomatic complexity of the method is 9
Complex Method,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,DumpTypeMembers,Cyclomatic complexity of the method is 22
Complex Method,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,GetSlug,Cyclomatic complexity of the method is 8
Complex Method,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,IncludeProperty,Cyclomatic complexity of the method is 8
Complex Method,DumpApiXml,Program,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\Program.cs,Main,Cyclomatic complexity of the method is 25
Long Parameter List,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,DumpApiDocs,The method has 5 parameters.
Long Statement,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,LoadAssembly,The length of the statement  "	AppDomain.CurrentDomain.ReflectionOnlyAssemblyResolve += new ResolveEventHandler (this.CurrentDomain_ReflectionOnlyAssemblyResolve); " is 132.
Long Statement,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,LoadAssembly,The length of the statement  "		//AppDomain.CurrentDomain.ReflectionOnlyAssemblyResolve -= new ResolveEventHandler(CurrentDomain_ReflectionOnlyAssemblyResolve); " is 128.
Long Statement,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,CurrentDomain_ReflectionOnlyAssemblyResolve,The length of the statement  "	//Console.WriteLine("Resolving '{0}' {1}"' args.Name' string.Join(";"' this.assemblies.Select(c => c.ToString()).ToArray())); " is 125.
Long Statement,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,DumpTypeMembers,The length of the statement  "			Console.WriteLine ("WARNING: Property {0}.{1} does not have <docgen /> element defined."' propInfo.DeclaringType.Name' propInfo.Name); " is 134.
Long Statement,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,DumpTypeMembers,The length of the statement  "		foreach (PropertyInfo propInfo in this.GetProperties (type).Where (p => property2Category [p] == categoryName).OrderBy (p => propertyOrderWithinCategory [p]).ThenBy (pi => pi.Name)) { " is 183.
Long Statement,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,IncludeProperty,The length of the statement  "		if ((pi.PropertyType.FullName.StartsWith ("NLog.ILayout") || pi.PropertyType.FullName.StartsWith ("NLog.Layout")) && pi.Name != "Layout" && pi.Name.EndsWith ("Layout")) { " is 170.
Long Statement,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,IncludeProperty,The length of the statement  "		if (pi.PropertyType.FullName.StartsWith ("NLog.Conditions.ConditionExpression") && pi.Name != "Condition" && pi.Name.EndsWith ("Condition")) { " is 142.
Long Statement,DumpApiXml,Program,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\Program.cs,Usage,The length of the statement  "	Console.WriteLine ("DumpApiXml [-comments commentFile.xml]+ [-ref referenceDirectory ] [-assembly assembly.dll] -output file.xml"); " is 131.
Complex Conditional,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,IncludeProperty,The conditional expression  "pi.CanRead && pi.CanWrite && pi.GetSetMethod () != null && pi.GetSetMethod ().IsPublic"  is complex.
Complex Conditional,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,IncludeProperty,The conditional expression  "(pi.PropertyType.FullName.StartsWith ("NLog.ILayout") || pi.PropertyType.FullName.StartsWith ("NLog.Layout")) && pi.Name != "Layout" && pi.Name.EndsWith ("Layout")"  is complex.
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,DumpTypeMembers,The following statement contains a magic number: categories ["General Options"] = 10;  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,DumpTypeMembers,The following statement contains a magic number: categories ["Layout Options"] = 20;  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,DumpTypeMembers,The following statement contains a magic number: foreach (PropertyInfo propInfo in this.GetProperties (type)) {  	string category = null;  	int order = 100;  	if (this.TryGetMemberDoc ("P:" + propInfo.DeclaringType.FullName + "." + propInfo.Name' out memberDoc)) {  		propertyDoc.Add (propInfo' memberDoc);  		var docgen = (XmlElement)memberDoc.SelectSingleNode ("docgen");  		if (docgen != null) {  			category = docgen.GetAttribute ("category");  			order = Convert.ToInt32 (docgen.GetAttribute ("order"));  		}  	}  	if (string.IsNullOrEmpty (category)) {  		Console.WriteLine ("WARNING: Property {0}.{1} does not have <docgen /> element defined."' propInfo.DeclaringType.Name' propInfo.Name);  		category = "Other";  	}  	int categoryOrder;  	if (!categories.TryGetValue (category' out categoryOrder)) {  		categories.Add (category' 100 + categories.Count);  	}  	//Console.WriteLine("p: {0} cat: {1} order: {2}"' propInfo.Name' category' order);  	property2Category [propInfo] = category;  	propertyOrderWithinCategory [propInfo] = order;  }  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,DumpTypeMembers,The following statement contains a magic number: foreach (PropertyInfo propInfo in this.GetProperties (type)) {  	string category = null;  	int order = 100;  	if (this.TryGetMemberDoc ("P:" + propInfo.DeclaringType.FullName + "." + propInfo.Name' out memberDoc)) {  		propertyDoc.Add (propInfo' memberDoc);  		var docgen = (XmlElement)memberDoc.SelectSingleNode ("docgen");  		if (docgen != null) {  			category = docgen.GetAttribute ("category");  			order = Convert.ToInt32 (docgen.GetAttribute ("order"));  		}  	}  	if (string.IsNullOrEmpty (category)) {  		Console.WriteLine ("WARNING: Property {0}.{1} does not have <docgen /> element defined."' propInfo.DeclaringType.Name' propInfo.Name);  		category = "Other";  	}  	int categoryOrder;  	if (!categories.TryGetValue (category' out categoryOrder)) {  		categories.Add (category' 100 + categories.Count);  	}  	//Console.WriteLine("p: {0} cat: {1} order: {2}"' propInfo.Name' category' order);  	property2Category [propInfo] = category;  	propertyOrderWithinCategory [propInfo] = order;  }  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,DumpTypeMembers,The following statement contains a magic number: if (!categories.TryGetValue (category' out categoryOrder)) {  	categories.Add (category' 100 + categories.Count);  }  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,DumpTypeMembers,The following statement contains a magic number: categories.Add (category' 100 + categories.Count);  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,GetCategoryOrder,The following statement contains a magic number: if (this.TryGetMemberDoc ("P:" + propInfo.DeclaringType.FullName + "." + propInfo.Name' out memberDoc)) {  	string category = null;  	var docgen = (XmlElement)memberDoc.SelectSingleNode ("docgen");  	if (docgen != null) {  		category = docgen.GetAttribute ("category");  	}  	if (string.IsNullOrEmpty (category)) {  		category = "General";  	}  	int categoryOrder;  	if (!orders.TryGetValue (category' out categoryOrder)) {  		categoryOrder = 100 + orders.Count;  		orders.Add (category' categoryOrder);  	}  	return categoryOrder;  }  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,GetCategoryOrder,The following statement contains a magic number: if (!orders.TryGetValue (category' out categoryOrder)) {  	categoryOrder = 100 + orders.Count;  	orders.Add (category' categoryOrder);  }  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,GetCategoryOrder,The following statement contains a magic number: categoryOrder = 100 + orders.Count;  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,GetCategoryOrder,The following statement contains a magic number: return 50;  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,GetOrder,The following statement contains a magic number: return 100;  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,MakeCamelCase,The following statement contains a magic number: if (s.Length <= 2) {  	return s.ToLowerInvariant ();  }  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,MakeCamelCase,The following statement contains a magic number: if (s.StartsWith ("DB")) {  	return "db" + s.Substring (2);  }  
Magic Number,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,MakeCamelCase,The following statement contains a magic number: return "db" + s.Substring (2);  
Missing Default,DumpApiXml,DocFileBuilder,F:\newReposMay17\jkowalski_NLog\tools\DumpApiXml\DocFileBuilder.cs,GetSlug,The following switch statement is missing a default case: switch (kind) {  case "target":  	return name + "_target";  case "layout-renderer":  	return name + "_layout_renderer";  case "layout":  	return name;  case "filter":  	return name + "_filter";  }  
