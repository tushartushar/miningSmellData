Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,Cyclomatic complexity of the method is 13
Magic Number,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,The following statement contains a magic number: try {  	if (args.Length != 4) {  		Usage ();  		return 1;  	}  	string platformId = args [0];  	string deviceId = args [1];  	string packageID;  	switch (args [2]) {  	case "2.0":  		packageID = NetCf20PackageId;  		break;  	case "3.5":  		packageID = NetCf35PackageId;  		break;  	default:  		packageID = args [2];  		break;  	}  	string cabName = args [3];  	// Get the datastore object  	var dsmgr = new DatastoreManager (1033);  	var platform = dsmgr.GetPlatform (new ObjectId (platformId));  	var device = platform.GetDevice (new ObjectId (deviceId));  	Console.WriteLine ("Connecting to device...");  	device.Connect ();  	FileDeployer fileDeployer = device.GetFileDeployer ();  	Console.WriteLine ("Deploying package...");  	fileDeployer.DownloadPackage (new ObjectId (packageID));  	Console.WriteLine ("Installing package...");  	RemoteProcess installer = device.GetRemoteProcess ();  	installer.Start ("wceload.exe"' cabName);  	while (installer.HasExited () != true) {  		System.Threading.Thread.Sleep (1000);  	}  	var exitCode = installer.GetExitCode ();  	if (exitCode != 0) {  		Console.WriteLine ("Installation failed. Exit code: {0}"' exitCode);  	} else {  		Console.WriteLine ("Installation succeeded.");  	}  	return exitCode;  } catch (Exception ex) {  	Console.WriteLine ("ERROR: {0}"' ex);  	return 1;  }  
Magic Number,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,The following statement contains a magic number: try {  	if (args.Length != 4) {  		Usage ();  		return 1;  	}  	string platformId = args [0];  	string deviceId = args [1];  	string packageID;  	switch (args [2]) {  	case "2.0":  		packageID = NetCf20PackageId;  		break;  	case "3.5":  		packageID = NetCf35PackageId;  		break;  	default:  		packageID = args [2];  		break;  	}  	string cabName = args [3];  	// Get the datastore object  	var dsmgr = new DatastoreManager (1033);  	var platform = dsmgr.GetPlatform (new ObjectId (platformId));  	var device = platform.GetDevice (new ObjectId (deviceId));  	Console.WriteLine ("Connecting to device...");  	device.Connect ();  	FileDeployer fileDeployer = device.GetFileDeployer ();  	Console.WriteLine ("Deploying package...");  	fileDeployer.DownloadPackage (new ObjectId (packageID));  	Console.WriteLine ("Installing package...");  	RemoteProcess installer = device.GetRemoteProcess ();  	installer.Start ("wceload.exe"' cabName);  	while (installer.HasExited () != true) {  		System.Threading.Thread.Sleep (1000);  	}  	var exitCode = installer.GetExitCode ();  	if (exitCode != 0) {  		Console.WriteLine ("Installation failed. Exit code: {0}"' exitCode);  	} else {  		Console.WriteLine ("Installation succeeded.");  	}  	return exitCode;  } catch (Exception ex) {  	Console.WriteLine ("ERROR: {0}"' ex);  	return 1;  }  
Magic Number,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,The following statement contains a magic number: try {  	if (args.Length != 4) {  		Usage ();  		return 1;  	}  	string platformId = args [0];  	string deviceId = args [1];  	string packageID;  	switch (args [2]) {  	case "2.0":  		packageID = NetCf20PackageId;  		break;  	case "3.5":  		packageID = NetCf35PackageId;  		break;  	default:  		packageID = args [2];  		break;  	}  	string cabName = args [3];  	// Get the datastore object  	var dsmgr = new DatastoreManager (1033);  	var platform = dsmgr.GetPlatform (new ObjectId (platformId));  	var device = platform.GetDevice (new ObjectId (deviceId));  	Console.WriteLine ("Connecting to device...");  	device.Connect ();  	FileDeployer fileDeployer = device.GetFileDeployer ();  	Console.WriteLine ("Deploying package...");  	fileDeployer.DownloadPackage (new ObjectId (packageID));  	Console.WriteLine ("Installing package...");  	RemoteProcess installer = device.GetRemoteProcess ();  	installer.Start ("wceload.exe"' cabName);  	while (installer.HasExited () != true) {  		System.Threading.Thread.Sleep (1000);  	}  	var exitCode = installer.GetExitCode ();  	if (exitCode != 0) {  		Console.WriteLine ("Installation failed. Exit code: {0}"' exitCode);  	} else {  		Console.WriteLine ("Installation succeeded.");  	}  	return exitCode;  } catch (Exception ex) {  	Console.WriteLine ("ERROR: {0}"' ex);  	return 1;  }  
Magic Number,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,The following statement contains a magic number: try {  	if (args.Length != 4) {  		Usage ();  		return 1;  	}  	string platformId = args [0];  	string deviceId = args [1];  	string packageID;  	switch (args [2]) {  	case "2.0":  		packageID = NetCf20PackageId;  		break;  	case "3.5":  		packageID = NetCf35PackageId;  		break;  	default:  		packageID = args [2];  		break;  	}  	string cabName = args [3];  	// Get the datastore object  	var dsmgr = new DatastoreManager (1033);  	var platform = dsmgr.GetPlatform (new ObjectId (platformId));  	var device = platform.GetDevice (new ObjectId (deviceId));  	Console.WriteLine ("Connecting to device...");  	device.Connect ();  	FileDeployer fileDeployer = device.GetFileDeployer ();  	Console.WriteLine ("Deploying package...");  	fileDeployer.DownloadPackage (new ObjectId (packageID));  	Console.WriteLine ("Installing package...");  	RemoteProcess installer = device.GetRemoteProcess ();  	installer.Start ("wceload.exe"' cabName);  	while (installer.HasExited () != true) {  		System.Threading.Thread.Sleep (1000);  	}  	var exitCode = installer.GetExitCode ();  	if (exitCode != 0) {  		Console.WriteLine ("Installation failed. Exit code: {0}"' exitCode);  	} else {  		Console.WriteLine ("Installation succeeded.");  	}  	return exitCode;  } catch (Exception ex) {  	Console.WriteLine ("ERROR: {0}"' ex);  	return 1;  }  
Magic Number,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,The following statement contains a magic number: try {  	if (args.Length != 4) {  		Usage ();  		return 1;  	}  	string platformId = args [0];  	string deviceId = args [1];  	string packageID;  	switch (args [2]) {  	case "2.0":  		packageID = NetCf20PackageId;  		break;  	case "3.5":  		packageID = NetCf35PackageId;  		break;  	default:  		packageID = args [2];  		break;  	}  	string cabName = args [3];  	// Get the datastore object  	var dsmgr = new DatastoreManager (1033);  	var platform = dsmgr.GetPlatform (new ObjectId (platformId));  	var device = platform.GetDevice (new ObjectId (deviceId));  	Console.WriteLine ("Connecting to device...");  	device.Connect ();  	FileDeployer fileDeployer = device.GetFileDeployer ();  	Console.WriteLine ("Deploying package...");  	fileDeployer.DownloadPackage (new ObjectId (packageID));  	Console.WriteLine ("Installing package...");  	RemoteProcess installer = device.GetRemoteProcess ();  	installer.Start ("wceload.exe"' cabName);  	while (installer.HasExited () != true) {  		System.Threading.Thread.Sleep (1000);  	}  	var exitCode = installer.GetExitCode ();  	if (exitCode != 0) {  		Console.WriteLine ("Installation failed. Exit code: {0}"' exitCode);  	} else {  		Console.WriteLine ("Installation succeeded.");  	}  	return exitCode;  } catch (Exception ex) {  	Console.WriteLine ("ERROR: {0}"' ex);  	return 1;  }  
Magic Number,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,The following statement contains a magic number: try {  	if (args.Length != 4) {  		Usage ();  		return 1;  	}  	string platformId = args [0];  	string deviceId = args [1];  	string packageID;  	switch (args [2]) {  	case "2.0":  		packageID = NetCf20PackageId;  		break;  	case "3.5":  		packageID = NetCf35PackageId;  		break;  	default:  		packageID = args [2];  		break;  	}  	string cabName = args [3];  	// Get the datastore object  	var dsmgr = new DatastoreManager (1033);  	var platform = dsmgr.GetPlatform (new ObjectId (platformId));  	var device = platform.GetDevice (new ObjectId (deviceId));  	Console.WriteLine ("Connecting to device...");  	device.Connect ();  	FileDeployer fileDeployer = device.GetFileDeployer ();  	Console.WriteLine ("Deploying package...");  	fileDeployer.DownloadPackage (new ObjectId (packageID));  	Console.WriteLine ("Installing package...");  	RemoteProcess installer = device.GetRemoteProcess ();  	installer.Start ("wceload.exe"' cabName);  	while (installer.HasExited () != true) {  		System.Threading.Thread.Sleep (1000);  	}  	var exitCode = installer.GetExitCode ();  	if (exitCode != 0) {  		Console.WriteLine ("Installation failed. Exit code: {0}"' exitCode);  	} else {  		Console.WriteLine ("Installation succeeded.");  	}  	return exitCode;  } catch (Exception ex) {  	Console.WriteLine ("ERROR: {0}"' ex);  	return 1;  }  
Magic Number,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,The following statement contains a magic number: if (args.Length != 4) {  	Usage ();  	return 1;  }  
Magic Number,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,The following statement contains a magic number: switch (args [2]) {  case "2.0":  	packageID = NetCf20PackageId;  	break;  case "3.5":  	packageID = NetCf35PackageId;  	break;  default:  	packageID = args [2];  	break;  }  
Magic Number,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,The following statement contains a magic number: switch (args [2]) {  case "2.0":  	packageID = NetCf20PackageId;  	break;  case "3.5":  	packageID = NetCf35PackageId;  	break;  default:  	packageID = args [2];  	break;  }  
Magic Number,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,The following statement contains a magic number: packageID = args [2];  
Magic Number,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,The following statement contains a magic number: while (installer.HasExited () != true) {  	System.Threading.Thread.Sleep (1000);  }  
Magic Number,DeployNetCF,Program,F:\newReposMay17\jkowalski_NLog\tools\DeployNetCF\Program.cs,Main,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
