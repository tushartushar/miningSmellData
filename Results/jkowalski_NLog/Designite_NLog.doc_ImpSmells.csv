Implementation smell,Namespace,Class,File,Method,Description
Long Method,NLog.Conditions,ConditionTokenizer,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionTokenizer.cs,GetNextToken,The method has 122 lines of code.
Complex Method,NLog.Common,InternalLogger,F:\newReposMay17\jkowalski_NLog\src\NLog\Common\InternalLogger.cs,Write,Cyclomatic complexity of the method is 12
Complex Method,NLog.Conditions,ConditionParser,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionParser.cs,ParseLiteralExpression,Cyclomatic complexity of the method is 17
Complex Method,NLog.Conditions,ConditionRelationalExpression,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionRelationalExpression.cs,Compare,Cyclomatic complexity of the method is 8
Complex Method,NLog.Conditions,ConditionRelationalExpression,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionRelationalExpression.cs,PromoteTypes,Cyclomatic complexity of the method is 11
Complex Method,NLog.Conditions,ConditionRelationalExpression,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionRelationalExpression.cs,GetOperatorString,Cyclomatic complexity of the method is 8
Complex Method,NLog.Conditions,ConditionTokenizer,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionTokenizer.cs,GetNextToken,Cyclomatic complexity of the method is 22
Complex Method,NLog.Config,NLogXmlElement,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\NLogXmlElement.cs,Parse,Cyclomatic complexity of the method is 8
Complex Method,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseNLogElement,Cyclomatic complexity of the method is 20
Complex Method,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseLoggerElement,Cyclomatic complexity of the method is 18
Complex Method,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseTargetsElement,Cyclomatic complexity of the method is 28
Complex Method,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseTargetElement,Cyclomatic complexity of the method is 15
Complex Method,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseExtensionsElement,Cyclomatic complexity of the method is 8
Complex Method,NLog,LogEventInfo,F:\newReposMay17\jkowalski_NLog\src\NLog\LogEventInfo.cs,NeedToPreformatMessage,Cyclomatic complexity of the method is 8
Complex Method,NLog,LogFactory,F:\newReposMay17\jkowalski_NLog\src\NLog\LogFactory.cs,GetTargetsByLevelForLogger,Cyclomatic complexity of the method is 10
Complex Method,NLog,LogLevel,F:\newReposMay17\jkowalski_NLog\src\NLog\LogLevel.cs,FromOrdinal,Cyclomatic complexity of the method is 9
Complex Method,NLog,LogLevel,F:\newReposMay17\jkowalski_NLog\src\NLog\LogLevel.cs,FromString,Cyclomatic complexity of the method is 9
Complex Method,NLog,NLogTraceListener,F:\newReposMay17\jkowalski_NLog\src\NLog\NLogTraceListener.cs,ProcessLogEventInfo,Cyclomatic complexity of the method is 8
Complex Method,NLog,NLogTraceListener,F:\newReposMay17\jkowalski_NLog\src\NLog\NLogTraceListener.cs,InitAttributes,Cyclomatic complexity of the method is 11
Complex Method,NLog.Internal,ObjectGraphScanner,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\ObjectGraphScanner.cs,ScanProperties,Cyclomatic complexity of the method is 11
Complex Method,NLog.Internal,PropertyHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PropertyHelper.cs,SetPropertyFromString,Cyclomatic complexity of the method is 9
Complex Method,NLog.Internal.NetworkSenders,NetworkSenderFactory,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\NetworkSenders\NetworkSenderFactory.cs,Create,Cyclomatic complexity of the method is 9
Complex Method,NLog.LayoutRenderers,AspRequestValueLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\AspRequestValueLayoutRenderer.cs,Append,Cyclomatic complexity of the method is 9
Complex Method,NLog.LayoutRenderers,CallSiteLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\CallSiteLayoutRenderer.cs,Append,Cyclomatic complexity of the method is 10
Complex Method,NLog.LayoutRenderers,ExceptionLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\ExceptionLayoutRenderer.cs,CompileFormat,Cyclomatic complexity of the method is 22
Complex Method,NLog.LayoutRenderers,GarbageCollectorInfoLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\GarbageCollectorInfoLayoutRenderer.cs,Append,Cyclomatic complexity of the method is 18
Complex Method,NLog.LayoutRenderers,Log4JXmlEventLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Log4JXmlEventLayoutRenderer.cs,Append,Cyclomatic complexity of the method is 13
Complex Method,NLog.LayoutRenderers,StackTraceLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\StackTraceLayoutRenderer.cs,Append,Cyclomatic complexity of the method is 16
Complex Method,NLog.LayoutRenderers.Wrappers,JsonEncodeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\JsonEncodeLayoutRendererWrapper.cs,DoJsonEscape,Cyclomatic complexity of the method is 29
Complex Method,NLog.LayoutRenderers.Wrappers,XmlEncodeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\XmlEncodeLayoutRendererWrapper.cs,DoXmlEscape,Cyclomatic complexity of the method is 19
Complex Method,NLog.Layouts,CsvLayout,F:\newReposMay17\jkowalski_NLog\src\NLog\Layouts\CsvLayout.cs,InitializeLayout,Cyclomatic complexity of the method is 22
Complex Method,NLog.Layouts,CsvLayout,F:\newReposMay17\jkowalski_NLog\src\NLog\Layouts\CsvLayout.cs,GetFormattedMessage,Cyclomatic complexity of the method is 17
Complex Method,NLog.Layouts,CsvLayout,F:\newReposMay17\jkowalski_NLog\src\NLog\Layouts\CsvLayout.cs,GetHeader,Cyclomatic complexity of the method is 16
Complex Method,NLog.Layouts,LayoutParser,F:\newReposMay17\jkowalski_NLog\src\NLog\Layouts\LayoutParser.cs,ParseLayoutRenderer,Cyclomatic complexity of the method is 12
Complex Method,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,Cyclomatic complexity of the method is 13
Complex Method,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,Output,Cyclomatic complexity of the method is 11
Complex Method,NLog.Targets,DatabaseTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\DatabaseTarget.cs,InitializeTarget,Cyclomatic complexity of the method is 21
Complex Method,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,InitializeTarget,Cyclomatic complexity of the method is 8
Complex Method,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,SequentialArchive,Cyclomatic complexity of the method is 8
Complex Method,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,DoAutoArchive,Cyclomatic complexity of the method is 8
Complex Method,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,ShouldAutoArchive,Cyclomatic complexity of the method is 22
Complex Method,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,WriteToFile,Cyclomatic complexity of the method is 20
Complex Method,NLog.Targets,LogReceiverWebServiceTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\LogReceiverWebServiceTarget.cs,TranslateLogEvents,Cyclomatic complexity of the method is 9
Complex Method,NLog.Targets,MailTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\MailTarget.cs,ProcessSingleMailMessage,Cyclomatic complexity of the method is 15
Complex Method,NLog.Targets,WebServiceTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\WebServiceTarget.cs,DoInvoke,Cyclomatic complexity of the method is 12
Complex Method,NLog.Targets.Wrappers,PostFilteringTargetWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Wrappers\PostFilteringTargetWrapper.cs,Write,Cyclomatic complexity of the method is 10
Long Parameter List,NLog,LogEventInfo,F:\newReposMay17\jkowalski_NLog\src\NLog\LogEventInfo.cs,LogEventInfo,The method has 5 parameters.
Long Parameter List,NLog,LogEventInfo,F:\newReposMay17\jkowalski_NLog\src\NLog\LogEventInfo.cs,LogEventInfo,The method has 6 parameters.
Long Parameter List,NLog,LogEventInfo,F:\newReposMay17\jkowalski_NLog\src\NLog\LogEventInfo.cs,Create,The method has 5 parameters.
Long Parameter List,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,Log,The method has 5 parameters.
Long Parameter List,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,Log,The method has 6 parameters.
Long Parameter List,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,Log,The method has 5 parameters.
Long Parameter List,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,Trace,The method has 5 parameters.
Long Parameter List,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,Debug,The method has 5 parameters.
Long Parameter List,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,Info,The method has 5 parameters.
Long Parameter List,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,Warn,The method has 5 parameters.
Long Parameter List,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,Error,The method has 5 parameters.
Long Parameter List,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,Fatal,The method has 5 parameters.
Long Parameter List,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,Log,The method has 5 parameters.
Long Parameter List,NLog,NLogTraceListener,F:\newReposMay17\jkowalski_NLog\src\NLog\NLogTraceListener.cs,TraceData,The method has 5 parameters.
Long Parameter List,NLog,NLogTraceListener,F:\newReposMay17\jkowalski_NLog\src\NLog\NLogTraceListener.cs,TraceData,The method has 5 parameters.
Long Parameter List,NLog,NLogTraceListener,F:\newReposMay17\jkowalski_NLog\src\NLog\NLogTraceListener.cs,TraceEvent,The method has 6 parameters.
Long Parameter List,NLog,NLogTraceListener,F:\newReposMay17\jkowalski_NLog\src\NLog\NLogTraceListener.cs,TraceEvent,The method has 5 parameters.
Long Parameter List,NLog,NLogTraceListener,F:\newReposMay17\jkowalski_NLog\src\NLog\NLogTraceListener.cs,TraceTransfer,The method has 5 parameters.
Long Parameter List,NLog,NLogTraceListener,F:\newReposMay17\jkowalski_NLog\src\NLog\NLogTraceListener.cs,ProcessLogEventInfo,The method has 5 parameters.
Long Parameter List,NLog.Internal,FormHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\FormHelper.cs,CreateForm,The method has 6 parameters.
Long Parameter List,NLog.Internal,NativeMethods,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\NativeMethods.cs,LogonUser,The method has 6 parameters.
Long Parameter List,NLog.Internal,Win32FileNativeMethods,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\Win32FileNativeMethods.cs,CreateFile,The method has 7 parameters.
Long Identifier,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseTargetsElement,The length of the parameter typeNameToDefaultTargetParameters is 33.
Long Statement,NLog.Conditions,ConditionParser,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionParser.cs,ParseLiteralExpression,The length of the statement  "		ConditionExpression e = new ConditionLayoutExpression (Layout.FromString (this.tokenizer.StringTokenValue' this.configurationItemFactory)); " is 139.
Long Statement,NLog.Conditions,ConditionParser,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionParser.cs,ParseBooleanRelation,The length of the statement  "		return new ConditionRelationalExpression (e' this.ParseLiteralExpression ()' ConditionRelationalOperator.GreaterOrEqual); " is 121.
Long Statement,NLog.Conditions,ConditionRelationalExpression,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionRelationalExpression.cs,PromoteTypes,The length of the statement  "	throw new ConditionEvaluationException ("Cannot find common type for '" + val1.GetType ().Name + "' and '" + val2.GetType ().Name + "'."); " is 138.
Long Statement,NLog.Conditions,ConditionTokenizer,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionTokenizer.cs,Expect,The length of the statement  "		throw new ConditionParseException ("Expected token of type: " + tokenType + "' got " + this.TokenType + " (" + this.TokenValue + ")."); " is 135.
Long Statement,NLog.Config,ConfigurationItemFactory,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\ConfigurationItemFactory.cs,RegisterExtendedItems,The length of the statement  "		this.targets.RegisterNamedType ("AspNetBufferingWrapper"' targetsNamespace + ".Wrappers.AspNetBufferingTargetWrapper" + suffix); " is 128.
Long Statement,NLog.Config,ConfigurationItemFactory,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\ConfigurationItemFactory.cs,RegisterExtendedItems,The length of the statement  "		this.layoutRenderers.RegisterNamedType ("aspnet-application"' layoutRenderersNamespace + ".AspNetApplicationValueLayoutRenderer" + suffix); " is 139.
Long Statement,NLog.Config,ConfigurationItemFactory,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\ConfigurationItemFactory.cs,RegisterExtendedItems,The length of the statement  "		this.layoutRenderers.RegisterNamedType ("aspnet-request"' layoutRenderersNamespace + ".AspNetRequestValueLayoutRenderer" + suffix); " is 131.
Long Statement,NLog.Config,ConfigurationItemFactory,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\ConfigurationItemFactory.cs,RegisterExtendedItems,The length of the statement  "		this.layoutRenderers.RegisterNamedType ("aspnet-sessionid"' layoutRenderersNamespace + ".AspNetSessionIDLayoutRenderer" + suffix); " is 130.
Long Statement,NLog.Config,ConfigurationItemFactory,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\ConfigurationItemFactory.cs,RegisterExtendedItems,The length of the statement  "		this.layoutRenderers.RegisterNamedType ("aspnet-session"' layoutRenderersNamespace + ".AspNetSessionValueLayoutRenderer" + suffix); " is 131.
Long Statement,NLog.Config,ConfigurationItemFactory,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\ConfigurationItemFactory.cs,RegisterExtendedItems,The length of the statement  "		this.layoutRenderers.RegisterNamedType ("aspnet-user-authtype"' layoutRenderersNamespace + ".AspNetUserAuthTypeLayoutRenderer" + suffix); " is 137.
Long Statement,NLog.Config,ConfigurationItemFactory,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\ConfigurationItemFactory.cs,RegisterExtendedItems,The length of the statement  "		this.layoutRenderers.RegisterNamedType ("aspnet-user-identity"' layoutRenderersNamespace + ".AspNetUserIdentityLayoutRenderer" + suffix); " is 137.
Long Statement,NLog.Config,Factory,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\Factory.cs,ScanAssembly,The length of the statement  "		InternalLogger.Debug ("ScanAssembly('{0}'''{1}'''{2}')"' theAssembly.FullName' typeof(TAttributeType)' typeof(TBaseType)); " is 122.
Long Statement,NLog.Config,LoggingRule,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\LoggingRule.cs,ToString,The length of the statement  "	sb.AppendFormat (CultureInfo.InvariantCulture' "logNamePattern: ({0}:{1})"' this.loggerNameMatchArgument' this.loggerNameMatchMode); " is 132.
Long Statement,NLog.Config,MethodFactory,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\MethodFactory.cs,ScanAssembly,The length of the statement  "		InternalLogger.Debug ("ScanAssembly('{0}'''{1}'''{2}')"' theAssembly.FullName' typeof(TClassAttributeType)' typeof(TMethodAttributeType)); " is 138.
Long Statement,NLog.Config,NLogXmlElement,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\NLogXmlElement.cs,AssertName,The length of the statement  "	throw new InvalidOperationException ("Assertion failed. Expected element name '" + string.Join ("|"' allowedNames) + "'' actual: '" + this.LocalName + "'."); " is 157.
Long Statement,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,IsTargetElement,The length of the statement  "	return name.Equals ("target"' StringComparison.OrdinalIgnoreCase) || name.Equals ("wrapper"' StringComparison.OrdinalIgnoreCase) || name.Equals ("wrapper-target"' StringComparison.OrdinalIgnoreCase) || name.Equals ("compound-target"' StringComparison.OrdinalIgnoreCase); " is 270.
Long Statement,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,IsTargetRefElement,The length of the statement  "	return name.Equals ("target-ref"' StringComparison.OrdinalIgnoreCase) || name.Equals ("wrapper-target-ref"' StringComparison.OrdinalIgnoreCase) || name.Equals ("compound-target-ref"' StringComparison.OrdinalIgnoreCase); " is 219.
Long Statement,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,WrapWithAsyncTargetWrapper,The length of the statement  "	InternalLogger.Debug ("Wrapping target '{0}' with AsyncTargetWrapper and renaming to '{1}"' asyncTargetWrapper.Name' target.Name); " is 130.
Long Statement,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseNLogElement,The length of the statement  "	InternalLogger.LogToConsole = nlogElement.GetOptionalBooleanAttribute ("internalLogToConsole"' InternalLogger.LogToConsole); " is 124.
Long Statement,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseNLogElement,The length of the statement  "	InternalLogger.LogToConsoleError = nlogElement.GetOptionalBooleanAttribute ("internalLogToConsoleError"' InternalLogger.LogToConsoleError); " is 139.
Long Statement,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseNLogElement,The length of the statement  "	InternalLogger.LogLevel = LogLevel.FromString (nlogElement.GetOptionalAttribute ("internalLogLevel"' InternalLogger.LogLevel.Name)); " is 132.
Long Statement,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseNLogElement,The length of the statement  "	LogManager.GlobalThreshold = LogLevel.FromString (nlogElement.GetOptionalAttribute ("globalThreshold"' LogManager.GlobalThreshold.Name)); " is 137.
Long Statement,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,SetPropertyFromElement,The length of the statement  "	PropertyHelper.SetPropertyFromString (o' element.LocalName' this.ExpandVariables (element.Value)' this.configurationItemFactory); " is 129.
Long Statement,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ConfigureObjectFromAttributes,The length of the statement  "		PropertyHelper.SetPropertyFromString (targetObject' childName' this.ExpandVariables (childValue)' this.configurationItemFactory); " is 129.
Long Statement,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,WrapWithDefaultWrapper,The length of the statement  "	InternalLogger.Debug ("Wrapping target '{0}' with '{1}' and renaming to '{2}"' wrapperTargetInstance.Name' wrapperTargetInstance.GetType ().Name' t.Name); " is 154.
Long Statement,NLog,LogEventInfo,F:\newReposMay17\jkowalski_NLog\src\NLog\LogEventInfo.cs,ToString,The length of the statement  "	return "Log Event: Logger='" + this.LoggerName + "' Level=" + this.Level + " Message='" + this.FormattedMessage + "' SequenceID=" + this.SequenceID; " is 148.
Long Statement,NLog,LogEventInfo,F:\newReposMay17\jkowalski_NLog\src\NLog\LogEventInfo.cs,CalcFormattedMessage,The length of the statement  "			this.formattedMessage = string.Format (this.FormatProvider ?? CultureInfo.CurrentCulture' this.Message' this.Parameters); " is 121.
Long Statement,NLog,LogFactory,F:\newReposMay17\jkowalski_NLog\src\NLog\LogFactory.cs,ConfigFileChanged,The length of the statement  "			this.reloadTimer = new Timer (this.ReloadConfigOnTimer' this.Configuration' ReconfigAfterFileChangedTimeout' Timeout.Infinite); " is 127.
Long Statement,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,WriteToTargets,The length of the statement  "	LoggerImpl.Write (this.loggerType' this.GetTargetsForLevel (level)' LogEventInfo.Create (level' this.Name' formatProvider' message' args)' this.Factory); " is 153.
Long Statement,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,WriteToTargets,The length of the statement  "	LoggerImpl.Write (this.loggerType' this.GetTargetsForLevel (level)' LogEventInfo.Create (level' this.Name' formatProvider' value)' this.Factory); " is 145.
Long Statement,NLog,Logger,F:\newReposMay17\jkowalski_NLog\src\NLog\Logger.cs,WriteToTargets,The length of the statement  "	LoggerImpl.Write (this.loggerType' this.GetTargetsForLevel (level)' LogEventInfo.Create (level' this.Name' message' ex)' this.Factory); " is 135.
Long Statement,NLog.Internal,FactoryHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\FactoryHelper.cs,CreateInstance,The length of the statement  "		throw new NLogConfigurationException ("Cannot access the constructor of type: " + t.FullName + ". Is the required permission granted?"); " is 136.
Long Statement,NLog.Internal,MultiFileWatcher,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\MultiFileWatcher.cs,Watch,The length of the statement  "		NotifyFilter = NotifyFilters.LastWrite | NotifyFilters.CreationTime | NotifyFilters.Size | NotifyFilters.Security | NotifyFilters.Attributes " is 140.
Long Statement,NLog.Internal,PropertyHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PropertyHelper.cs,SetPropertyFromString,The length of the statement  "			throw new NotSupportedException ("Parameter " + name + " of " + o.GetType ().Name + " is an array and cannot be assigned a scalar value."); " is 139.
Long Statement,NLog.Internal,PropertyHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PropertyHelper.cs,SetPropertyFromString,The length of the statement  "		throw new NLogConfigurationException ("Error when setting property '" + propInfo.Name + "' on " + o' ex.InnerException); " is 120.
Long Statement,NLog.Internal,PropertyHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PropertyHelper.cs,TryGetPropertyInfo,The length of the statement  "	PropertyInfo propInfo = o.GetType ().GetProperty (propertyName' BindingFlags.IgnoreCase | BindingFlags.Public | BindingFlags.Instance); " is 135.
Long Statement,NLog.Internal,PropertyHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PropertyHelper.cs,GetArrayItemType,The length of the statement  "	var arrayParameterAttribute = (ArrayParameterAttribute)Attribute.GetCustomAttribute (propInfo' typeof(ArrayParameterAttribute)); " is 128.
Long Statement,NLog.Internal,PropertyHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PropertyHelper.cs,TryImplicitConversion,The length of the statement  "	MethodInfo operatorImplicitMethod = resultType.GetMethod ("op_Implicit"' BindingFlags.Public | BindingFlags.Static' null' new Type[] { " is 134.
Long Statement,NLog.Internal,PropertyHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PropertyHelper.cs,TryGetEnumValue,The length of the statement  "			FieldInfo enumField = resultType.GetField (v.Trim ()' BindingFlags.IgnoreCase | BindingFlags.Static | BindingFlags.FlattenHierarchy | BindingFlags.Public); " is 155.
Long Statement,NLog.Internal,PropertyHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PropertyHelper.cs,TryGetEnumValue,The length of the statement  "		FieldInfo enumField = resultType.GetField (value' BindingFlags.IgnoreCase | BindingFlags.Static | BindingFlags.FlattenHierarchy | BindingFlags.Public); " is 151.
Long Statement,NLog.Internal,PropertyHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PropertyHelper.cs,TryGetPropertyInfo,The length of the statement  "		PropertyInfo propInfo = targetType.GetProperty (propertyName' BindingFlags.IgnoreCase | BindingFlags.Public | BindingFlags.Instance); " is 133.
Long Statement,NLog.Internal,PropertyHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PropertyHelper.cs,BuildPropertyInfoDictionary,The length of the statement  "		var arrayParameterAttribute = (ArrayParameterAttribute)Attribute.GetCustomAttribute (propInfo' typeof(ArrayParameterAttribute)); " is 128.
Long Statement,NLog.Internal.FileAppenders,BaseFileAppender,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\FileAppenders\BaseFileAppender.cs,CreateFileStream,The length of the statement  "			if (!this.CreateFileParameters.ConcurrentWrites || !allowConcurrentWrite || i + 1 == this.CreateFileParameters.ConcurrentWriteAttempts) { " is 137.
Long Statement,NLog.Internal.FileAppenders,BaseFileAppender,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\FileAppenders\BaseFileAppender.cs,WindowsCreateFile,The length of the statement  "	IntPtr handle = Win32FileNativeMethods.CreateFile (fileName' Win32FileNativeMethods.FileAccess.GenericWrite' fileShare' IntPtr.Zero' Win32FileNativeMethods.CreationDisposition.OpenAlways' this.CreateFileParameters.FileAttributes' IntPtr.Zero); " is 243.
Long Statement,NLog.Internal.FileAppenders,BaseFileAppender,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\FileAppenders\BaseFileAppender.cs,TryCreateFileStream,The length of the statement  "	return new FileStream (this.FileName' FileMode.Append' FileAccess.Write' fileShare' this.CreateFileParameters.BufferSize); " is 122.
Long Statement,NLog.Internal.FileAppenders,MutexMultiProcessFileAppender,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\FileAppenders\MutexMultiProcessFileAppender.cs,GetFileInfo,The length of the statement  "	return FileInfoHelper.Helper.GetFileInfo (FileName' this.file.SafeFileHandle.DangerousGetHandle ()' out lastWriteTime' out fileLength); " is 135.
Long Statement,NLog.LayoutRenderers,Log4JXmlEventLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Log4JXmlEventLayoutRenderer.cs,Append,The length of the statement  "		xtw.WriteAttributeString ("timestamp"' Convert.ToString ((long)(logEvent.TimeStamp.ToUniversalTime () - log4jDateBase).TotalMilliseconds' CultureInfo.InvariantCulture)); " is 169.
Long Statement,NLog.LayoutRenderers,Log4JXmlEventLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Log4JXmlEventLayoutRenderer.cs,Append,The length of the statement  "		xtw.WriteAttributeString ("thread"' System.Threading.Thread.CurrentThread.ManagedThreadId.ToString (CultureInfo.InvariantCulture)); " is 131.
Long Statement,NLog.LayoutRenderers,Log4JXmlEventLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Log4JXmlEventLayoutRenderer.cs,Append,The length of the statement  "			xtw.WriteElementString ("log4j"' "NDC"' dummyNamespace' string.Join (this.NdcItemSeparator' NestedDiagnosticsContext.GetAllMessages ())); " is 137.
Long Statement,NLog.LayoutRenderers,Log4JXmlEventLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Log4JXmlEventLayoutRenderer.cs,Append,The length of the statement  "				xtw.WriteElementString ("nlog"' "eventSequenceNumber"' dummyNLogNamespace' logEvent.SequenceID.ToString (CultureInfo.InvariantCulture)); " is 136.
Long Statement,NLog.LogReceiverService,NLogEvent,F:\newReposMay17\jkowalski_NLog\src\NLog\LogReceiverService\NLogEvent.cs,ToEventInfo,The length of the statement  "	var result = new LogEventInfo (LogLevel.FromOrdinal (this.LevelOrdinal)' loggerNamePrefix + context.Strings [this.LoggerOrdinal]' context.Strings [this.MessageOrdinal]); " is 169.
Long Statement,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,Output,The length of the statement  "		ColorizeEscapeSequences (this.ErrorStream ? Console.Error : Console.Out' message' new ColorPair (Console.ForegroundColor' Console.BackgroundColor)' new ColorPair (oldForegroundColor' oldBackgroundColor)); " is 204.
Long Statement,NLog.Targets,DatabaseTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\DatabaseTarget.cs,InitializeTarget,The length of the statement  "			throw new NLogConfigurationException ("Connection string '" + this.ConnectionStringName + "' is not declared in <connectionStrings /> section."); " is 145.
Long Statement,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,InitializeTarget,The length of the statement  "		this.autoClosingTimer = new Timer (this.AutoClosingTimerCallback' null' this.OpenFileCacheTimeout * 1000' this.OpenFileCacheTimeout * 1000); " is 140.
Long Statement,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,ReplaceNumber,The length of the statement  "	return pattern.Substring (0' firstPart) + Convert.ToString (value' 10).PadLeft (numDigits' '0') + pattern.Substring (lastPart); " is 127.
Long Statement,NLog.Targets,MailTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\MailTarget.cs,ProcessSingleMailMessage,The length of the statement  "				InternalLogger.Debug ("Sending mail to {0} using {1}:{2} (ssl={3})"' msg.To' client.Host' client.Port' client.EnableSsl); " is 121.
Long Statement,NLog.Targets,MailTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\MailTarget.cs,ProcessSingleMailMessage,The length of the statement  "					InternalLogger.Trace ("  Using basic authentication: Username='{0}' Password='{1}'"' username' new string ('*'' password.Length)); " is 130.
Long Statement,NLog.Targets,NetworkTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\NetworkTarget.cs,ChunkedSend,The length of the statement  "				continuation (new OverflowException ("Attempted to send a message larger than MaxMessageSize (" + this.MaxMessageSize + "). Actual size was: " + buffer.Length + ". Adjust OnOverflow and MaxMessageSize parameters accordingly.")); " is 228.
Long Statement,NLog.Targets,PerformanceCounterTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\PerformanceCounterTarget.cs,Install,The length of the statement  "	var countersByCategory = this.LoggingConfiguration.AllTargets.OfType<PerformanceCounterTarget> ().BucketSort (c => c.CategoryName); " is 131.
Long Statement,NLog.Targets,PerformanceCounterTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\PerformanceCounterTarget.cs,Install,The length of the statement  "		CounterCreationDataCollection ccds = GetCounterCreationDataCollection (countersByCategory [this.CategoryName]' out categoryType); " is 129.
Long Statement,NLog.Targets,PerformanceCounterTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\PerformanceCounterTarget.cs,Install,The length of the statement  "		installationContext.Debug ("Creating category '{0}' with {1} counter(s) (Type: {2})"' categoryName' ccds.Count' categoryType); " is 126.
Long Statement,NLog.Targets,PerformanceCounterTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\PerformanceCounterTarget.cs,EnsureInitialized,The length of the statement  "			InternalLogger.Error ("Cannot open performance counter {0}/{1}/{2}: {3}"' this.CategoryName' this.CounterName' this.InstanceName' exception); " is 141.
Long Statement,NLog.Targets,RichTextBoxTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\RichTextBoxTarget.cs,InitializeTarget,The length of the statement  "			throw new NLogConfigurationException ("Rich text box control name must be specified for " + this.GetType ().Name + "."); " is 120.
Long Statement,NLog.Targets,RichTextBoxTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\RichTextBoxTarget.cs,InitializeTarget,The length of the statement  "			throw new NLogConfigurationException ("Rich text box control '" + this.ControlName + "' cannot be found on form '" + this.FormName + "'."); " is 139.
Long Statement,NLog.Targets,RichTextBoxTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\RichTextBoxTarget.cs,InitializeTarget,The length of the statement  "		this.TargetForm = FormHelper.CreateForm (this.FormName' this.Width' this.Height' true' this.ShowMinimized' this.ToolWindow); " is 124.
Long Statement,NLog.Targets,RichTextBoxTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\RichTextBoxTarget.cs,Write,The length of the statement  "	this.TargetRichTextBox.BeginInvoke (new DelSendTheMessageToRichTextBox (this.SendTheMessageToRichTextBox)' new object[] { " is 121.
Long Statement,NLog.Targets,Target,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Target.cs,WriteAsyncLogEvents,The length of the statement  "			wrappedEvents [i] = logEvents [i].LogEvent.WithContinuation (AsyncHelpers.PreventMultipleCalls (logEvents [i].Continuation)); " is 125.
Long Statement,NLog.Targets.Wrappers,AutoFlushTargetWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Wrappers\AutoFlushTargetWrapper.cs,Write,The length of the statement  "	this.WrappedTarget.WriteAsyncLogEvent (logEvent.LogEvent.WithContinuation (AsyncHelpers.PrecededBy (logEvent.Continuation' this.WrappedTarget.Flush))); " is 151.
Long Statement,NLog.Targets.Wrappers,FallbackGroupTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Wrappers\FallbackGroupTarget.cs,Write,The length of the statement  "						InternalLogger.Debug ("Fallback: target '{0}' succeeded. Returning to the first one."' this.Targets [this.currentTarget]); " is 122.
Long Statement,NLog.Targets.Wrappers,FallbackGroupTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Wrappers\FallbackGroupTarget.cs,Write,The length of the statement  "			InternalLogger.Warn ("Fallback: target '{0}' failed. Proceeding to the next one. Error was: {1}"' this.Targets [this.currentTarget]' ex); " is 137.
Long Statement,NLog.Targets.Wrappers,ImpersonatingTargetWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Wrappers\ImpersonatingTargetWrapper.cs,CreateWindowsIdentity,The length of the statement  "	if (!NativeMethods.LogonUser (this.UserName' this.Domain' this.Password' (int)this.LogOnType' (int)this.LogOnProvider' out logonHandle)) { " is 138.
Long Statement,NLog.Targets.Wrappers,RepeatingTargetWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Wrappers\RepeatingTargetWrapper.cs,Write,The length of the statement  "	AsyncHelpers.Repeat (this.RepeatCount' logEvent.Continuation' cont => this.WrappedTarget.WriteAsyncLogEvent (logEvent.LogEvent.WithContinuation (cont))); " is 153.
Long Statement,NLog.Targets.Wrappers,RetryingTargetWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Wrappers\RetryingTargetWrapper.cs,Write,The length of the statement  "		InternalLogger.Warn ("Error while writing to '{0}': {1}. Try {2}/{3}"' this.WrappedTarget' ex' retryNumber' this.RetryCount); " is 125.
Long Statement,NLog.Targets.Wrappers,SplitGroupTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Wrappers\SplitGroupTarget.cs,Write,The length of the statement  "	AsyncHelpers.ForEachItemSequentially (this.Targets' logEvent.Continuation' (t' cont) => t.WriteAsyncLogEvent (logEvent.LogEvent.WithContinuation (cont))); " is 154.
Complex Conditional,NLog.Common,InternalLogger,F:\newReposMay17\jkowalski_NLog\src\NLog\Common\InternalLogger.cs,Write,The conditional expression  "string.IsNullOrEmpty (LogFile) && !LogToConsole && !LogToConsoleError && LogWriter == null"  is complex.
Complex Conditional,NLog.LayoutRenderers.Wrappers,FileSystemNormalizeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\FileSystemNormalizeLayoutRendererWrapper.cs,IsSafeCharacter,The conditional expression  "char.IsLetterOrDigit (c) || c == '_' || c == '-' || c == '.' || c == ' '"  is complex.
Complex Conditional,NLog.Layouts,LayoutParser,F:\newReposMay17\jkowalski_NLog\src\NLog\Layouts\LayoutParser.cs,ParseParameterName,The conditional expression  "(ch == '=' || ch == '}' || ch == ':') && nestLevel == 0"  is complex.
Empty Catch Block,NLog.Internal.FileAppenders,MutexMultiProcessFileAppender,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\FileAppenders\MutexMultiProcessFileAppender.cs,Write,The method has an empty catch block.
Magic Number,NLog.Common,InternalLogger,F:\newReposMay17\jkowalski_NLog\src\NLog\Common\InternalLogger.cs,Write,The following statement contains a magic number: try {  	string formattedMessage = message;  	if (args != null) {  		formattedMessage = string.Format (CultureInfo.InvariantCulture' message' args);  	}  	var builder = new StringBuilder (message.Length + 32);  	if (IncludeTimestamp) {  		builder.Append (CurrentTimeGetter.Now.ToString ("yyyy-MM-dd HH:mm:ss.ffff"' CultureInfo.InvariantCulture));  		builder.Append (" ");  	}  	builder.Append (level.ToString ());  	builder.Append (" ");  	builder.Append (formattedMessage);  	string msg = builder.ToString ();  	// log to file  	var logFile = LogFile;  	if (!string.IsNullOrEmpty (logFile)) {  		using (var textWriter = File.AppendText (logFile)) {  			textWriter.WriteLine (msg);  		}  	}  	// log to LogWriter  	var writer = LogWriter;  	if (writer != null) {  		lock (lockObject) {  			writer.WriteLine (msg);  		}  	}  	// log to console  	if (LogToConsole) {  		Console.WriteLine (msg);  	}  	// log to console error  	if (LogToConsoleError) {  		Console.Error.WriteLine (msg);  	}  } catch (Exception exception) {  	if (exception.MustBeRethrown ()) {  		throw;  	}  	// we have no place to log the message to so we ignore it  }  
Magic Number,NLog.Common,LogEventInfoBuffer,F:\newReposMay17\jkowalski_NLog\src\NLog\Common\LogEventInfoBuffer.cs,Append,The following statement contains a magic number: lock (this) {  	// make room for additional item  	if (this.count >= this.buffer.Length) {  		if (this.growAsNeeded && this.buffer.Length < this.growLimit) {  			// create a new buffer' copy data from current  			int newLength = this.buffer.Length * 2;  			if (newLength >= this.growLimit) {  				newLength = this.growLimit;  			}  			// InternalLogger.Trace("Enlarging LogEventInfoBuffer from {0} to {1}"' this.buffer.Length' this.buffer.Length * 2);  			var newBuffer = new AsyncLogEventInfo[newLength];  			Array.Copy (this.buffer' 0' newBuffer' 0' this.buffer.Length);  			this.buffer = newBuffer;  		} else {  			// lose the oldest item  			this.getPointer = this.getPointer + 1;  		}  	}  	// put the item  	this.putPointer = this.putPointer % this.buffer.Length;  	this.buffer [this.putPointer] = eventInfo;  	this.putPointer = this.putPointer + 1;  	this.count++;  	if (this.count >= this.buffer.Length) {  		this.count = this.buffer.Length;  	}  	return this.count;  }  
Magic Number,NLog.Common,LogEventInfoBuffer,F:\newReposMay17\jkowalski_NLog\src\NLog\Common\LogEventInfoBuffer.cs,Append,The following statement contains a magic number: if (this.count >= this.buffer.Length) {  	if (this.growAsNeeded && this.buffer.Length < this.growLimit) {  		// create a new buffer' copy data from current  		int newLength = this.buffer.Length * 2;  		if (newLength >= this.growLimit) {  			newLength = this.growLimit;  		}  		// InternalLogger.Trace("Enlarging LogEventInfoBuffer from {0} to {1}"' this.buffer.Length' this.buffer.Length * 2);  		var newBuffer = new AsyncLogEventInfo[newLength];  		Array.Copy (this.buffer' 0' newBuffer' 0' this.buffer.Length);  		this.buffer = newBuffer;  	} else {  		// lose the oldest item  		this.getPointer = this.getPointer + 1;  	}  }  
Magic Number,NLog.Common,LogEventInfoBuffer,F:\newReposMay17\jkowalski_NLog\src\NLog\Common\LogEventInfoBuffer.cs,Append,The following statement contains a magic number: if (this.growAsNeeded && this.buffer.Length < this.growLimit) {  	// create a new buffer' copy data from current  	int newLength = this.buffer.Length * 2;  	if (newLength >= this.growLimit) {  		newLength = this.growLimit;  	}  	// InternalLogger.Trace("Enlarging LogEventInfoBuffer from {0} to {1}"' this.buffer.Length' this.buffer.Length * 2);  	var newBuffer = new AsyncLogEventInfo[newLength];  	Array.Copy (this.buffer' 0' newBuffer' 0' this.buffer.Length);  	this.buffer = newBuffer;  } else {  	// lose the oldest item  	this.getPointer = this.getPointer + 1;  }  
Magic Number,NLog.Conditions,ConditionTokenizer,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionTokenizer.cs,GetNextToken,The following statement contains a magic number: if (ch >= 32 && ch < 128) {  	ConditionTokenType tt = charIndexToTokenType [ch];  	if (tt != ConditionTokenType.Invalid) {  		this.TokenType = tt;  		this.TokenValue = new string (ch' 1);  		this.ReadChar ();  		return;  	}  	throw new ConditionParseException ("Invalid punctuation: " + ch);  }  
Magic Number,NLog.Conditions,ConditionTokenizer,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionTokenizer.cs,GetNextToken,The following statement contains a magic number: if (ch >= 32 && ch < 128) {  	ConditionTokenType tt = charIndexToTokenType [ch];  	if (tt != ConditionTokenType.Invalid) {  		this.TokenType = tt;  		this.TokenValue = new string (ch' 1);  		this.ReadChar ();  		return;  	}  	throw new ConditionParseException ("Invalid punctuation: " + ch);  }  
Magic Number,NLog.Conditions,ConditionTokenizer,F:\newReposMay17\jkowalski_NLog\src\NLog\Conditions\ConditionTokenizer.cs,BuildCharIndexToTokenType,The following statement contains a magic number: for (int i = 0; i < 128; ++i) {  	result [i] = ConditionTokenType.Invalid;  }  
Magic Number,NLog,LogEventInfo,F:\newReposMay17\jkowalski_NLog\src\NLog\LogEventInfo.cs,NeedToPreformatMessage,The following statement contains a magic number: if (parameters.Length > 3) {  	// too many parameters' too costly to check  	return true;  }  
Magic Number,NLog,LogEventInfo,F:\newReposMay17\jkowalski_NLog\src\NLog\LogEventInfo.cs,NeedToPreformatMessage,The following statement contains a magic number: if (parameters.Length >= 2) {  	if (!IsSafeToDeferFormatting (parameters [1])) {  		return true;  	}  }  
Magic Number,NLog,LogEventInfo,F:\newReposMay17\jkowalski_NLog\src\NLog\LogEventInfo.cs,NeedToPreformatMessage,The following statement contains a magic number: if (parameters.Length >= 3) {  	if (!IsSafeToDeferFormatting (parameters [2])) {  		return true;  	}  }  
Magic Number,NLog,LogEventInfo,F:\newReposMay17\jkowalski_NLog\src\NLog\LogEventInfo.cs,NeedToPreformatMessage,The following statement contains a magic number: if (parameters.Length >= 3) {  	if (!IsSafeToDeferFormatting (parameters [2])) {  		return true;  	}  }  
Magic Number,NLog,LogEventInfo,F:\newReposMay17\jkowalski_NLog\src\NLog\LogEventInfo.cs,NeedToPreformatMessage,The following statement contains a magic number: if (!IsSafeToDeferFormatting (parameters [2])) {  	return true;  }  
Magic Number,NLog,LogLevel,F:\newReposMay17\jkowalski_NLog\src\NLog\LogLevel.cs,FromOrdinal,The following statement contains a magic number: switch (ordinal) {  case 0:  	return Trace;  case 1:  	return Debug;  case 2:  	return Info;  case 3:  	return Warn;  case 4:  	return Error;  case 5:  	return Fatal;  case 6:  	return Off;  default:  	throw new ArgumentException ("Invalid ordinal.");  }  
Magic Number,NLog,LogLevel,F:\newReposMay17\jkowalski_NLog\src\NLog\LogLevel.cs,FromOrdinal,The following statement contains a magic number: switch (ordinal) {  case 0:  	return Trace;  case 1:  	return Debug;  case 2:  	return Info;  case 3:  	return Warn;  case 4:  	return Error;  case 5:  	return Fatal;  case 6:  	return Off;  default:  	throw new ArgumentException ("Invalid ordinal.");  }  
Magic Number,NLog,LogLevel,F:\newReposMay17\jkowalski_NLog\src\NLog\LogLevel.cs,FromOrdinal,The following statement contains a magic number: switch (ordinal) {  case 0:  	return Trace;  case 1:  	return Debug;  case 2:  	return Info;  case 3:  	return Warn;  case 4:  	return Error;  case 5:  	return Fatal;  case 6:  	return Off;  default:  	throw new ArgumentException ("Invalid ordinal.");  }  
Magic Number,NLog,LogLevel,F:\newReposMay17\jkowalski_NLog\src\NLog\LogLevel.cs,FromOrdinal,The following statement contains a magic number: switch (ordinal) {  case 0:  	return Trace;  case 1:  	return Debug;  case 2:  	return Info;  case 3:  	return Warn;  case 4:  	return Error;  case 5:  	return Fatal;  case 6:  	return Off;  default:  	throw new ArgumentException ("Invalid ordinal.");  }  
Magic Number,NLog,LogLevel,F:\newReposMay17\jkowalski_NLog\src\NLog\LogLevel.cs,FromOrdinal,The following statement contains a magic number: switch (ordinal) {  case 0:  	return Trace;  case 1:  	return Debug;  case 2:  	return Info;  case 3:  	return Warn;  case 4:  	return Error;  case 5:  	return Fatal;  case 6:  	return Off;  default:  	throw new ArgumentException ("Invalid ordinal.");  }  
Magic Number,NLog.Internal,PlatformDetector,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PlatformDetector.cs,GetCurrentRuntimeOS,The following statement contains a magic number: if ((int)platformID == 4 || (int)platformID == 128) {  	return RuntimeOS.Unix;  }  
Magic Number,NLog.Internal,PlatformDetector,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PlatformDetector.cs,GetCurrentRuntimeOS,The following statement contains a magic number: if ((int)platformID == 4 || (int)platformID == 128) {  	return RuntimeOS.Unix;  }  
Magic Number,NLog.Internal,PlatformDetector,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\PlatformDetector.cs,GetCurrentRuntimeOS,The following statement contains a magic number: if ((int)platformID == 3) {  	return RuntimeOS.WindowsCE;  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: for (int i = 0; i < str.Length; ++i) {  	char ch = str [i];  	if (ch == ' ' && spaceAsPlus) {  		result.Append ('+');  	} else if (IsSafeUrlCharacter (ch)) {  		result.Append (ch);  	} else if (ch < 256) {  		result.Append ('%');  		result.Append (hexChars [(ch >> 4) & 0xF]);  		result.Append (hexChars [(ch >> 0) & 0xF]);  	} else {  		result.Append ('%');  		result.Append ('u');  		result.Append (hexChars [(ch >> 12) & 0xF]);  		result.Append (hexChars [(ch >> 8) & 0xF]);  		result.Append (hexChars [(ch >> 4) & 0xF]);  		result.Append (hexChars [(ch >> 0) & 0xF]);  	}  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: for (int i = 0; i < str.Length; ++i) {  	char ch = str [i];  	if (ch == ' ' && spaceAsPlus) {  		result.Append ('+');  	} else if (IsSafeUrlCharacter (ch)) {  		result.Append (ch);  	} else if (ch < 256) {  		result.Append ('%');  		result.Append (hexChars [(ch >> 4) & 0xF]);  		result.Append (hexChars [(ch >> 0) & 0xF]);  	} else {  		result.Append ('%');  		result.Append ('u');  		result.Append (hexChars [(ch >> 12) & 0xF]);  		result.Append (hexChars [(ch >> 8) & 0xF]);  		result.Append (hexChars [(ch >> 4) & 0xF]);  		result.Append (hexChars [(ch >> 0) & 0xF]);  	}  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: for (int i = 0; i < str.Length; ++i) {  	char ch = str [i];  	if (ch == ' ' && spaceAsPlus) {  		result.Append ('+');  	} else if (IsSafeUrlCharacter (ch)) {  		result.Append (ch);  	} else if (ch < 256) {  		result.Append ('%');  		result.Append (hexChars [(ch >> 4) & 0xF]);  		result.Append (hexChars [(ch >> 0) & 0xF]);  	} else {  		result.Append ('%');  		result.Append ('u');  		result.Append (hexChars [(ch >> 12) & 0xF]);  		result.Append (hexChars [(ch >> 8) & 0xF]);  		result.Append (hexChars [(ch >> 4) & 0xF]);  		result.Append (hexChars [(ch >> 0) & 0xF]);  	}  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: for (int i = 0; i < str.Length; ++i) {  	char ch = str [i];  	if (ch == ' ' && spaceAsPlus) {  		result.Append ('+');  	} else if (IsSafeUrlCharacter (ch)) {  		result.Append (ch);  	} else if (ch < 256) {  		result.Append ('%');  		result.Append (hexChars [(ch >> 4) & 0xF]);  		result.Append (hexChars [(ch >> 0) & 0xF]);  	} else {  		result.Append ('%');  		result.Append ('u');  		result.Append (hexChars [(ch >> 12) & 0xF]);  		result.Append (hexChars [(ch >> 8) & 0xF]);  		result.Append (hexChars [(ch >> 4) & 0xF]);  		result.Append (hexChars [(ch >> 0) & 0xF]);  	}  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: for (int i = 0; i < str.Length; ++i) {  	char ch = str [i];  	if (ch == ' ' && spaceAsPlus) {  		result.Append ('+');  	} else if (IsSafeUrlCharacter (ch)) {  		result.Append (ch);  	} else if (ch < 256) {  		result.Append ('%');  		result.Append (hexChars [(ch >> 4) & 0xF]);  		result.Append (hexChars [(ch >> 0) & 0xF]);  	} else {  		result.Append ('%');  		result.Append ('u');  		result.Append (hexChars [(ch >> 12) & 0xF]);  		result.Append (hexChars [(ch >> 8) & 0xF]);  		result.Append (hexChars [(ch >> 4) & 0xF]);  		result.Append (hexChars [(ch >> 0) & 0xF]);  	}  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (ch == ' ' && spaceAsPlus) {  	result.Append ('+');  } else if (IsSafeUrlCharacter (ch)) {  	result.Append (ch);  } else if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (ch == ' ' && spaceAsPlus) {  	result.Append ('+');  } else if (IsSafeUrlCharacter (ch)) {  	result.Append (ch);  } else if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (ch == ' ' && spaceAsPlus) {  	result.Append ('+');  } else if (IsSafeUrlCharacter (ch)) {  	result.Append (ch);  } else if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (ch == ' ' && spaceAsPlus) {  	result.Append ('+');  } else if (IsSafeUrlCharacter (ch)) {  	result.Append (ch);  } else if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (ch == ' ' && spaceAsPlus) {  	result.Append ('+');  } else if (IsSafeUrlCharacter (ch)) {  	result.Append (ch);  } else if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (IsSafeUrlCharacter (ch)) {  	result.Append (ch);  } else if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (IsSafeUrlCharacter (ch)) {  	result.Append (ch);  } else if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (IsSafeUrlCharacter (ch)) {  	result.Append (ch);  } else if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (IsSafeUrlCharacter (ch)) {  	result.Append (ch);  } else if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (IsSafeUrlCharacter (ch)) {  	result.Append (ch);  } else if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: if (ch < 256) {  	result.Append ('%');  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  } else {  	result.Append ('%');  	result.Append ('u');  	result.Append (hexChars [(ch >> 12) & 0xF]);  	result.Append (hexChars [(ch >> 8) & 0xF]);  	result.Append (hexChars [(ch >> 4) & 0xF]);  	result.Append (hexChars [(ch >> 0) & 0xF]);  }  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: result.Append (hexChars [(ch >> 4) & 0xF]);  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: result.Append (hexChars [(ch >> 12) & 0xF]);  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: result.Append (hexChars [(ch >> 8) & 0xF]);  
Magic Number,NLog.Internal,UrlHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\UrlHelper.cs,UrlEncode,The following statement contains a magic number: result.Append (hexChars [(ch >> 4) & 0xF]);  
Magic Number,NLog.Internal,Win32FileInfoHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\Win32FileInfoHelper.cs,GetFileInfo,The following statement contains a magic number: if (Win32FileNativeMethods.GetFileInformationByHandle (fileHandle' out fi)) {  	lastWriteTime = DateTime.FromFileTime (fi.ftLastWriteTime);  	fileLength = fi.nFileSizeLow + (((long)fi.nFileSizeHigh) << 32);  	return true;  } else {  	lastWriteTime = DateTime.MinValue;  	fileLength = -1;  	return false;  }  
Magic Number,NLog.Internal,Win32FileInfoHelper,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\Win32FileInfoHelper.cs,GetFileInfo,The following statement contains a magic number: fileLength = fi.nFileSizeLow + (((long)fi.nFileSizeHigh) << 32);  
Magic Number,NLog.Internal.FileAppenders,BaseFileAppender,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\FileAppenders\BaseFileAppender.cs,CreateFileStream,The following statement contains a magic number: for (int i = 0; i < this.CreateFileParameters.ConcurrentWriteAttempts; ++i) {  	try {  		try {  			return this.TryCreateFileStream (allowConcurrentWrite);  		} catch (DirectoryNotFoundException) {  			if (!this.CreateFileParameters.CreateDirs) {  				throw;  			}  			Directory.CreateDirectory (Path.GetDirectoryName (this.FileName));  			return this.TryCreateFileStream (allowConcurrentWrite);  		}  	} catch (IOException) {  		if (!this.CreateFileParameters.ConcurrentWrites || !allowConcurrentWrite || i + 1 == this.CreateFileParameters.ConcurrentWriteAttempts) {  			throw;  			// rethrow  		}  		int actualDelay = this.random.Next (currentDelay);  		InternalLogger.Warn ("Attempt #{0} to open {1} failed. Sleeping for {2}ms"' i' this.FileName' actualDelay);  		currentDelay *= 2;  		System.Threading.Thread.Sleep (actualDelay);  	}  }  
Magic Number,NLog.Internal.FileAppenders,BaseFileAppender,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\FileAppenders\BaseFileAppender.cs,CreateFileStream,The following statement contains a magic number: try {  	try {  		return this.TryCreateFileStream (allowConcurrentWrite);  	} catch (DirectoryNotFoundException) {  		if (!this.CreateFileParameters.CreateDirs) {  			throw;  		}  		Directory.CreateDirectory (Path.GetDirectoryName (this.FileName));  		return this.TryCreateFileStream (allowConcurrentWrite);  	}  } catch (IOException) {  	if (!this.CreateFileParameters.ConcurrentWrites || !allowConcurrentWrite || i + 1 == this.CreateFileParameters.ConcurrentWriteAttempts) {  		throw;  		// rethrow  	}  	int actualDelay = this.random.Next (currentDelay);  	InternalLogger.Warn ("Attempt #{0} to open {1} failed. Sleeping for {2}ms"' i' this.FileName' actualDelay);  	currentDelay *= 2;  	System.Threading.Thread.Sleep (actualDelay);  }  
Magic Number,NLog.Internal.FileAppenders,BaseFileAppender,F:\newReposMay17\jkowalski_NLog\src\NLog\Internal\FileAppenders\BaseFileAppender.cs,CreateFileStream,The following statement contains a magic number: currentDelay *= 2;  
Magic Number,NLog.LayoutRenderers,ExceptionLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\ExceptionLayoutRenderer.cs,Append,The following statement contains a magic number: if (logEvent.Exception != null) {  	var sb2 = new StringBuilder (128);  	string separator = string.Empty;  	foreach (ExceptionDataTarget targetRenderFunc in this.exceptionDataTargets) {  		sb2.Append (separator);  		targetRenderFunc (sb2' logEvent.Exception);  		separator = this.Separator;  	}  	Exception currentException = logEvent.Exception.InnerException;  	int currentLevel = 0;  	while (currentException != null && currentLevel < this.MaxInnerExceptionLevel) {  		// separate inner exceptions  		sb2.Append (this.InnerExceptionSeparator);  		separator = string.Empty;  		foreach (ExceptionDataTarget targetRenderFunc in this.innerExceptionDataTargets ?? this.exceptionDataTargets) {  			sb2.Append (separator);  			targetRenderFunc (sb2' currentException);  			separator = this.Separator;  		}  		currentException = currentException.InnerException;  		currentLevel++;  	}  	builder.Append (sb2.ToString ());  }  
Magic Number,NLog.LayoutRenderers,GarbageCollectorInfoLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\GarbageCollectorInfoLayoutRenderer.cs,Append,The following statement contains a magic number: switch (this.Property) {  case GarbageCollectorProperty.TotalMemory:  	value = GC.GetTotalMemory (false);  	break;  case GarbageCollectorProperty.TotalMemoryForceCollection:  	value = GC.GetTotalMemory (true);  	break;  #if !SILVERLIGHT  case GarbageCollectorProperty.CollectionCount0:  	value = GC.CollectionCount (0);  	break;  case GarbageCollectorProperty.CollectionCount1:  	value = GC.CollectionCount (1);  	break;  case GarbageCollectorProperty.CollectionCount2:  	value = GC.CollectionCount (2);  	break;  #endif  case GarbageCollectorProperty.MaxGeneration:  	value = GC.MaxGeneration;  	break;  }  
Magic Number,NLog.LayoutRenderers,GarbageCollectorInfoLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\GarbageCollectorInfoLayoutRenderer.cs,Append,The following statement contains a magic number: value = GC.CollectionCount (2);  
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\LongDateLayoutRenderer.cs,Append,The following statement contains a magic number: Append4DigitsZeroPadded (builder' (int)(dt.Ticks % 10000000) / 1000);  
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\LongDateLayoutRenderer.cs,Append,The following statement contains a magic number: Append4DigitsZeroPadded (builder' (int)(dt.Ticks % 10000000) / 1000);  
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\LongDateLayoutRenderer.cs,Append2DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)((number / 10) + '0'));  
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\LongDateLayoutRenderer.cs,Append2DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)((number % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\LongDateLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 1000) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\LongDateLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 1000) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\LongDateLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 100) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\LongDateLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 100) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\LongDateLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 10) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\LongDateLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 10) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,LongDateLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\LongDateLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 1) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,ProcessTimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\ProcessTimeLayoutRenderer.cs,Append,The following statement contains a magic number: if (ts.Hours < 10) {  	builder.Append ('0');  }  
Magic Number,NLog.LayoutRenderers,ProcessTimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\ProcessTimeLayoutRenderer.cs,Append,The following statement contains a magic number: if (ts.Minutes < 10) {  	builder.Append ('0');  }  
Magic Number,NLog.LayoutRenderers,ProcessTimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\ProcessTimeLayoutRenderer.cs,Append,The following statement contains a magic number: if (ts.Seconds < 10) {  	builder.Append ('0');  }  
Magic Number,NLog.LayoutRenderers,ProcessTimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\ProcessTimeLayoutRenderer.cs,Append,The following statement contains a magic number: if (ts.Milliseconds < 1000) {  	builder.Append ('0');  }  
Magic Number,NLog.LayoutRenderers,ProcessTimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\ProcessTimeLayoutRenderer.cs,Append,The following statement contains a magic number: if (ts.Milliseconds < 100) {  	builder.Append ('0');  }  
Magic Number,NLog.LayoutRenderers,ProcessTimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\ProcessTimeLayoutRenderer.cs,Append,The following statement contains a magic number: if (ts.Milliseconds < 10) {  	builder.Append ('0');  }  
Magic Number,NLog.LayoutRenderers,QueryPerformanceCounterLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\QueryPerformanceCounterLayoutRenderer.cs,QueryPerformanceCounterLayoutRenderer,The following statement contains a magic number: this.Precision = 4;  
Magic Number,NLog.LayoutRenderers,StackTraceLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\StackTraceLayoutRenderer.cs,StackTraceLayoutRenderer,The following statement contains a magic number: this.TopFrames = 3;  
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\TimeLayoutRenderer.cs,Append,The following statement contains a magic number: Append4DigitsZeroPadded (builder' (int)(dt.Ticks % 10000000) / 1000);  
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\TimeLayoutRenderer.cs,Append,The following statement contains a magic number: Append4DigitsZeroPadded (builder' (int)(dt.Ticks % 10000000) / 1000);  
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\TimeLayoutRenderer.cs,Append2DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)((number / 10) + '0'));  
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\TimeLayoutRenderer.cs,Append2DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)((number % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\TimeLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 1000) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\TimeLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 1000) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\TimeLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 100) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\TimeLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 100) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\TimeLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 10) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\TimeLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 10) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers,TimeLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\TimeLayoutRenderer.cs,Append4DigitsZeroPadded,The following statement contains a magic number: builder.Append ((char)(((number / 1) % 10) + '0'));  
Magic Number,NLog.LayoutRenderers.Wrappers,JsonEncodeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\JsonEncodeLayoutRendererWrapper.cs,DoJsonEscape,The following statement contains a magic number: for (int i = 0; i < text.Length; ++i) {  	switch (text [i]) {  	case '"':  		sb.Append ("\\\"");  		break;  	case '\\':  		sb.Append ("\\\\");  		break;  	case '/':  		sb.Append ("\\/");  		break;  	case '\b':  		sb.Append ("\\b");  		break;  	case '\r':  		sb.Append ("\\r");  		break;  	case '\n':  		sb.Append ("\\n");  		break;  	case '\f':  		sb.Append ("\\f");  		break;  	case '\t':  		sb.Append ("\\t");  		break;  	default:  		if (NeedsEscaping (text [i])) {  			sb.Append ("\\u");  			sb.Append (Convert.ToString ((int)text [i]' 16).PadLeft (4' '0'));  		} else {  			sb.Append (text [i]);  		}  		break;  	}  }  
Magic Number,NLog.LayoutRenderers.Wrappers,JsonEncodeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\JsonEncodeLayoutRendererWrapper.cs,DoJsonEscape,The following statement contains a magic number: for (int i = 0; i < text.Length; ++i) {  	switch (text [i]) {  	case '"':  		sb.Append ("\\\"");  		break;  	case '\\':  		sb.Append ("\\\\");  		break;  	case '/':  		sb.Append ("\\/");  		break;  	case '\b':  		sb.Append ("\\b");  		break;  	case '\r':  		sb.Append ("\\r");  		break;  	case '\n':  		sb.Append ("\\n");  		break;  	case '\f':  		sb.Append ("\\f");  		break;  	case '\t':  		sb.Append ("\\t");  		break;  	default:  		if (NeedsEscaping (text [i])) {  			sb.Append ("\\u");  			sb.Append (Convert.ToString ((int)text [i]' 16).PadLeft (4' '0'));  		} else {  			sb.Append (text [i]);  		}  		break;  	}  }  
Magic Number,NLog.LayoutRenderers.Wrappers,JsonEncodeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\JsonEncodeLayoutRendererWrapper.cs,DoJsonEscape,The following statement contains a magic number: switch (text [i]) {  case '"':  	sb.Append ("\\\"");  	break;  case '\\':  	sb.Append ("\\\\");  	break;  case '/':  	sb.Append ("\\/");  	break;  case '\b':  	sb.Append ("\\b");  	break;  case '\r':  	sb.Append ("\\r");  	break;  case '\n':  	sb.Append ("\\n");  	break;  case '\f':  	sb.Append ("\\f");  	break;  case '\t':  	sb.Append ("\\t");  	break;  default:  	if (NeedsEscaping (text [i])) {  		sb.Append ("\\u");  		sb.Append (Convert.ToString ((int)text [i]' 16).PadLeft (4' '0'));  	} else {  		sb.Append (text [i]);  	}  	break;  }  
Magic Number,NLog.LayoutRenderers.Wrappers,JsonEncodeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\JsonEncodeLayoutRendererWrapper.cs,DoJsonEscape,The following statement contains a magic number: switch (text [i]) {  case '"':  	sb.Append ("\\\"");  	break;  case '\\':  	sb.Append ("\\\\");  	break;  case '/':  	sb.Append ("\\/");  	break;  case '\b':  	sb.Append ("\\b");  	break;  case '\r':  	sb.Append ("\\r");  	break;  case '\n':  	sb.Append ("\\n");  	break;  case '\f':  	sb.Append ("\\f");  	break;  case '\t':  	sb.Append ("\\t");  	break;  default:  	if (NeedsEscaping (text [i])) {  		sb.Append ("\\u");  		sb.Append (Convert.ToString ((int)text [i]' 16).PadLeft (4' '0'));  	} else {  		sb.Append (text [i]);  	}  	break;  }  
Magic Number,NLog.LayoutRenderers.Wrappers,JsonEncodeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\JsonEncodeLayoutRendererWrapper.cs,DoJsonEscape,The following statement contains a magic number: if (NeedsEscaping (text [i])) {  	sb.Append ("\\u");  	sb.Append (Convert.ToString ((int)text [i]' 16).PadLeft (4' '0'));  } else {  	sb.Append (text [i]);  }  
Magic Number,NLog.LayoutRenderers.Wrappers,JsonEncodeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\JsonEncodeLayoutRendererWrapper.cs,DoJsonEscape,The following statement contains a magic number: if (NeedsEscaping (text [i])) {  	sb.Append ("\\u");  	sb.Append (Convert.ToString ((int)text [i]' 16).PadLeft (4' '0'));  } else {  	sb.Append (text [i]);  }  
Magic Number,NLog.LayoutRenderers.Wrappers,JsonEncodeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\JsonEncodeLayoutRendererWrapper.cs,DoJsonEscape,The following statement contains a magic number: sb.Append (Convert.ToString ((int)text [i]' 16).PadLeft (4' '0'));  
Magic Number,NLog.LayoutRenderers.Wrappers,JsonEncodeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\JsonEncodeLayoutRendererWrapper.cs,DoJsonEscape,The following statement contains a magic number: sb.Append (Convert.ToString ((int)text [i]' 16).PadLeft (4' '0'));  
Magic Number,NLog.LayoutRenderers.Wrappers,JsonEncodeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\JsonEncodeLayoutRendererWrapper.cs,NeedsEscaping,The following statement contains a magic number: return ch < 32 || ch > 127;  
Magic Number,NLog.LayoutRenderers.Wrappers,JsonEncodeLayoutRendererWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\Wrappers\JsonEncodeLayoutRendererWrapper.cs,NeedsEscaping,The following statement contains a magic number: return ch < 32 || ch > 127;  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: while (p0 < message.Length) {  	int p1 = p0;  	while (p1 < message.Length && message [p1] >= 32) {  		p1++;  	}  	// text  	if (p1 != p0) {  		output.Write (message.Substring (p0' p1 - p0));  	}  	if (p1 >= message.Length) {  		p0 = p1;  		break;  	}  	// control characters  	char c1 = message [p1];  	char c2 = (char)0;  	if (p1 + 1 < message.Length) {  		c2 = message [p1 + 1];  	}  	if (c1 == '\a' && c2 == '\a') {  		output.Write ('\a');  		p0 = p1 + 2;  		continue;  	}  	if (c1 == '\r' || c1 == '\n') {  		Console.ForegroundColor = defaultColor.ForegroundColor;  		Console.BackgroundColor = defaultColor.BackgroundColor;  		output.Write (c1);  		Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  		Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  		p0 = p1 + 1;  		continue;  	}  	if (c1 == '\a') {  		if (c2 == 'X') {  			colorStack.Pop ();  			Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  			Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  			p0 = p1 + 2;  			continue;  		}  		var foreground = (ConsoleOutputColor)(c2 - 'A');  		var background = (ConsoleOutputColor)(message [p1 + 2] - 'A');  		if (foreground != ConsoleOutputColor.NoChange) {  			Console.ForegroundColor = (ConsoleColor)foreground;  		}  		if (background != ConsoleOutputColor.NoChange) {  			Console.BackgroundColor = (ConsoleColor)background;  		}  		colorStack.Push (new ColorPair (Console.ForegroundColor' Console.BackgroundColor));  		p0 = p1 + 3;  		continue;  	}  	output.Write (c1);  	p0 = p1 + 1;  }  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: while (p0 < message.Length) {  	int p1 = p0;  	while (p1 < message.Length && message [p1] >= 32) {  		p1++;  	}  	// text  	if (p1 != p0) {  		output.Write (message.Substring (p0' p1 - p0));  	}  	if (p1 >= message.Length) {  		p0 = p1;  		break;  	}  	// control characters  	char c1 = message [p1];  	char c2 = (char)0;  	if (p1 + 1 < message.Length) {  		c2 = message [p1 + 1];  	}  	if (c1 == '\a' && c2 == '\a') {  		output.Write ('\a');  		p0 = p1 + 2;  		continue;  	}  	if (c1 == '\r' || c1 == '\n') {  		Console.ForegroundColor = defaultColor.ForegroundColor;  		Console.BackgroundColor = defaultColor.BackgroundColor;  		output.Write (c1);  		Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  		Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  		p0 = p1 + 1;  		continue;  	}  	if (c1 == '\a') {  		if (c2 == 'X') {  			colorStack.Pop ();  			Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  			Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  			p0 = p1 + 2;  			continue;  		}  		var foreground = (ConsoleOutputColor)(c2 - 'A');  		var background = (ConsoleOutputColor)(message [p1 + 2] - 'A');  		if (foreground != ConsoleOutputColor.NoChange) {  			Console.ForegroundColor = (ConsoleColor)foreground;  		}  		if (background != ConsoleOutputColor.NoChange) {  			Console.BackgroundColor = (ConsoleColor)background;  		}  		colorStack.Push (new ColorPair (Console.ForegroundColor' Console.BackgroundColor));  		p0 = p1 + 3;  		continue;  	}  	output.Write (c1);  	p0 = p1 + 1;  }  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: while (p0 < message.Length) {  	int p1 = p0;  	while (p1 < message.Length && message [p1] >= 32) {  		p1++;  	}  	// text  	if (p1 != p0) {  		output.Write (message.Substring (p0' p1 - p0));  	}  	if (p1 >= message.Length) {  		p0 = p1;  		break;  	}  	// control characters  	char c1 = message [p1];  	char c2 = (char)0;  	if (p1 + 1 < message.Length) {  		c2 = message [p1 + 1];  	}  	if (c1 == '\a' && c2 == '\a') {  		output.Write ('\a');  		p0 = p1 + 2;  		continue;  	}  	if (c1 == '\r' || c1 == '\n') {  		Console.ForegroundColor = defaultColor.ForegroundColor;  		Console.BackgroundColor = defaultColor.BackgroundColor;  		output.Write (c1);  		Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  		Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  		p0 = p1 + 1;  		continue;  	}  	if (c1 == '\a') {  		if (c2 == 'X') {  			colorStack.Pop ();  			Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  			Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  			p0 = p1 + 2;  			continue;  		}  		var foreground = (ConsoleOutputColor)(c2 - 'A');  		var background = (ConsoleOutputColor)(message [p1 + 2] - 'A');  		if (foreground != ConsoleOutputColor.NoChange) {  			Console.ForegroundColor = (ConsoleColor)foreground;  		}  		if (background != ConsoleOutputColor.NoChange) {  			Console.BackgroundColor = (ConsoleColor)background;  		}  		colorStack.Push (new ColorPair (Console.ForegroundColor' Console.BackgroundColor));  		p0 = p1 + 3;  		continue;  	}  	output.Write (c1);  	p0 = p1 + 1;  }  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: while (p0 < message.Length) {  	int p1 = p0;  	while (p1 < message.Length && message [p1] >= 32) {  		p1++;  	}  	// text  	if (p1 != p0) {  		output.Write (message.Substring (p0' p1 - p0));  	}  	if (p1 >= message.Length) {  		p0 = p1;  		break;  	}  	// control characters  	char c1 = message [p1];  	char c2 = (char)0;  	if (p1 + 1 < message.Length) {  		c2 = message [p1 + 1];  	}  	if (c1 == '\a' && c2 == '\a') {  		output.Write ('\a');  		p0 = p1 + 2;  		continue;  	}  	if (c1 == '\r' || c1 == '\n') {  		Console.ForegroundColor = defaultColor.ForegroundColor;  		Console.BackgroundColor = defaultColor.BackgroundColor;  		output.Write (c1);  		Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  		Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  		p0 = p1 + 1;  		continue;  	}  	if (c1 == '\a') {  		if (c2 == 'X') {  			colorStack.Pop ();  			Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  			Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  			p0 = p1 + 2;  			continue;  		}  		var foreground = (ConsoleOutputColor)(c2 - 'A');  		var background = (ConsoleOutputColor)(message [p1 + 2] - 'A');  		if (foreground != ConsoleOutputColor.NoChange) {  			Console.ForegroundColor = (ConsoleColor)foreground;  		}  		if (background != ConsoleOutputColor.NoChange) {  			Console.BackgroundColor = (ConsoleColor)background;  		}  		colorStack.Push (new ColorPair (Console.ForegroundColor' Console.BackgroundColor));  		p0 = p1 + 3;  		continue;  	}  	output.Write (c1);  	p0 = p1 + 1;  }  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: while (p0 < message.Length) {  	int p1 = p0;  	while (p1 < message.Length && message [p1] >= 32) {  		p1++;  	}  	// text  	if (p1 != p0) {  		output.Write (message.Substring (p0' p1 - p0));  	}  	if (p1 >= message.Length) {  		p0 = p1;  		break;  	}  	// control characters  	char c1 = message [p1];  	char c2 = (char)0;  	if (p1 + 1 < message.Length) {  		c2 = message [p1 + 1];  	}  	if (c1 == '\a' && c2 == '\a') {  		output.Write ('\a');  		p0 = p1 + 2;  		continue;  	}  	if (c1 == '\r' || c1 == '\n') {  		Console.ForegroundColor = defaultColor.ForegroundColor;  		Console.BackgroundColor = defaultColor.BackgroundColor;  		output.Write (c1);  		Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  		Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  		p0 = p1 + 1;  		continue;  	}  	if (c1 == '\a') {  		if (c2 == 'X') {  			colorStack.Pop ();  			Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  			Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  			p0 = p1 + 2;  			continue;  		}  		var foreground = (ConsoleOutputColor)(c2 - 'A');  		var background = (ConsoleOutputColor)(message [p1 + 2] - 'A');  		if (foreground != ConsoleOutputColor.NoChange) {  			Console.ForegroundColor = (ConsoleColor)foreground;  		}  		if (background != ConsoleOutputColor.NoChange) {  			Console.BackgroundColor = (ConsoleColor)background;  		}  		colorStack.Push (new ColorPair (Console.ForegroundColor' Console.BackgroundColor));  		p0 = p1 + 3;  		continue;  	}  	output.Write (c1);  	p0 = p1 + 1;  }  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: while (p1 < message.Length && message [p1] >= 32) {  	p1++;  }  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: if (c1 == '\a' && c2 == '\a') {  	output.Write ('\a');  	p0 = p1 + 2;  	continue;  }  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: p0 = p1 + 2;  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: if (c1 == '\a') {  	if (c2 == 'X') {  		colorStack.Pop ();  		Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  		Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  		p0 = p1 + 2;  		continue;  	}  	var foreground = (ConsoleOutputColor)(c2 - 'A');  	var background = (ConsoleOutputColor)(message [p1 + 2] - 'A');  	if (foreground != ConsoleOutputColor.NoChange) {  		Console.ForegroundColor = (ConsoleColor)foreground;  	}  	if (background != ConsoleOutputColor.NoChange) {  		Console.BackgroundColor = (ConsoleColor)background;  	}  	colorStack.Push (new ColorPair (Console.ForegroundColor' Console.BackgroundColor));  	p0 = p1 + 3;  	continue;  }  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: if (c1 == '\a') {  	if (c2 == 'X') {  		colorStack.Pop ();  		Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  		Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  		p0 = p1 + 2;  		continue;  	}  	var foreground = (ConsoleOutputColor)(c2 - 'A');  	var background = (ConsoleOutputColor)(message [p1 + 2] - 'A');  	if (foreground != ConsoleOutputColor.NoChange) {  		Console.ForegroundColor = (ConsoleColor)foreground;  	}  	if (background != ConsoleOutputColor.NoChange) {  		Console.BackgroundColor = (ConsoleColor)background;  	}  	colorStack.Push (new ColorPair (Console.ForegroundColor' Console.BackgroundColor));  	p0 = p1 + 3;  	continue;  }  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: if (c1 == '\a') {  	if (c2 == 'X') {  		colorStack.Pop ();  		Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  		Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  		p0 = p1 + 2;  		continue;  	}  	var foreground = (ConsoleOutputColor)(c2 - 'A');  	var background = (ConsoleOutputColor)(message [p1 + 2] - 'A');  	if (foreground != ConsoleOutputColor.NoChange) {  		Console.ForegroundColor = (ConsoleColor)foreground;  	}  	if (background != ConsoleOutputColor.NoChange) {  		Console.BackgroundColor = (ConsoleColor)background;  	}  	colorStack.Push (new ColorPair (Console.ForegroundColor' Console.BackgroundColor));  	p0 = p1 + 3;  	continue;  }  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: if (c2 == 'X') {  	colorStack.Pop ();  	Console.ForegroundColor = colorStack.Peek ().ForegroundColor;  	Console.BackgroundColor = colorStack.Peek ().BackgroundColor;  	p0 = p1 + 2;  	continue;  }  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: p0 = p1 + 2;  
Magic Number,NLog.Targets,ColoredConsoleTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\ColoredConsoleTarget.cs,ColorizeEscapeSequences,The following statement contains a magic number: p0 = p1 + 3;  
Magic Number,NLog.Targets,EventLogTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\EventLogTarget.cs,Write,The following statement contains a magic number: if (message.Length > 16384) {  	// limitation of EventLog API  	message = message.Substring (0' 16384);  }  
Magic Number,NLog.Targets,EventLogTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\EventLogTarget.cs,Write,The following statement contains a magic number: if (message.Length > 16384) {  	// limitation of EventLog API  	message = message.Substring (0' 16384);  }  
Magic Number,NLog.Targets,EventLogTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\EventLogTarget.cs,Write,The following statement contains a magic number: message = message.Substring (0' 16384);  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,FileTarget,The following statement contains a magic number: this.MaxArchiveFiles = 9;  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,FileTarget,The following statement contains a magic number: this.ConcurrentWriteAttempts = 10;  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,FileTarget,The following statement contains a magic number: this.BufferSize = 32768;  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,FileTarget,The following statement contains a magic number: this.OpenFileCacheSize = 5;  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,CleanupInitializedFiles,The following statement contains a magic number: this.CleanupInitializedFiles (DateTime.Now.AddDays (-2));  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,InitializeTarget,The following statement contains a magic number: if ((this.OpenFileCacheSize > 0 || this.EnableFileDelete) && this.OpenFileCacheTimeout > 0) {  	this.autoClosingTimer = new Timer (this.AutoClosingTimerCallback' null' this.OpenFileCacheTimeout * 1000' this.OpenFileCacheTimeout * 1000);  }  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,InitializeTarget,The following statement contains a magic number: if ((this.OpenFileCacheSize > 0 || this.EnableFileDelete) && this.OpenFileCacheTimeout > 0) {  	this.autoClosingTimer = new Timer (this.AutoClosingTimerCallback' null' this.OpenFileCacheTimeout * 1000' this.OpenFileCacheTimeout * 1000);  }  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,InitializeTarget,The following statement contains a magic number: this.autoClosingTimer = new Timer (this.AutoClosingTimerCallback' null' this.OpenFileCacheTimeout * 1000' this.OpenFileCacheTimeout * 1000);  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,InitializeTarget,The following statement contains a magic number: this.autoClosingTimer = new Timer (this.AutoClosingTimerCallback' null' this.OpenFileCacheTimeout * 1000' this.OpenFileCacheTimeout * 1000);  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,ReplaceNumber,The following statement contains a magic number: return pattern.Substring (0' firstPart) + Convert.ToString (value' 10).PadLeft (numDigits' '0') + pattern.Substring (lastPart);  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,WriteToFile,The following statement contains a magic number: if (!justData) {  	if (!this.initializedFiles.ContainsKey (fileName)) {  		if (this.DeleteOldFileOnStartup) {  			try {  				File.Delete (fileName);  			} catch (Exception exception) {  				if (exception.MustBeRethrown ()) {  					throw;  				}  				InternalLogger.Warn ("Unable to delete old log file '{0}': {1}"' fileName' exception);  			}  		}  		this.initializedFiles [fileName] = DateTime.Now;  		this.initializedFilesCounter++;  		writeHeader = true;  		if (this.initializedFilesCounter >= 100) {  			this.initializedFilesCounter = 0;  			this.CleanupInitializedFiles ();  		}  	}  	this.initializedFiles [fileName] = DateTime.Now;  }  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,WriteToFile,The following statement contains a magic number: if (!this.initializedFiles.ContainsKey (fileName)) {  	if (this.DeleteOldFileOnStartup) {  		try {  			File.Delete (fileName);  		} catch (Exception exception) {  			if (exception.MustBeRethrown ()) {  				throw;  			}  			InternalLogger.Warn ("Unable to delete old log file '{0}': {1}"' fileName' exception);  		}  	}  	this.initializedFiles [fileName] = DateTime.Now;  	this.initializedFilesCounter++;  	writeHeader = true;  	if (this.initializedFilesCounter >= 100) {  		this.initializedFilesCounter = 0;  		this.CleanupInitializedFiles ();  	}  }  
Magic Number,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,WriteToFile,The following statement contains a magic number: if (this.initializedFilesCounter >= 100) {  	this.initializedFilesCounter = 0;  	this.CleanupInitializedFiles ();  }  
Magic Number,NLog.Targets,MailTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\MailTarget.cs,MailTarget,The following statement contains a magic number: this.SmtpPort = 25;  
Magic Number,NLog.Targets,NetworkTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\NetworkTarget.cs,NetworkTarget,The following statement contains a magic number: this.MaxMessageSize = 65000;  
Magic Number,NLog.Targets,NetworkTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\NetworkTarget.cs,NetworkTarget,The following statement contains a magic number: this.ConnectionCacheSize = 5;  
Magic Number,NLog.Targets.Wrappers,AsyncTargetWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Wrappers\AsyncTargetWrapper.cs,AsyncTargetWrapper,The following statement contains a magic number: this.RequestQueue = new AsyncRequestQueue (10000' AsyncTargetWrapperOverflowAction.Discard);  
Magic Number,NLog.Targets.Wrappers,AsyncTargetWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Wrappers\AsyncTargetWrapper.cs,AsyncTargetWrapper,The following statement contains a magic number: this.TimeToSleepBetweenBatches = 50;  
Magic Number,NLog.Targets.Wrappers,AsyncTargetWrapper,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Wrappers\AsyncTargetWrapper.cs,AsyncTargetWrapper,The following statement contains a magic number: this.BatchSize = 100;  
Duplicate Code,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,InitializeTarget,The method contains a code clone-set at the following line numbers (starting from the method definition): ((7' 27)' (31' 51))
Missing Default,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseTopLevel,The following switch statement is missing a default case: switch (content.LocalName.ToUpper (CultureInfo.InvariantCulture)) {  case "CONFIGURATION":  	this.ParseConfigurationElement (content' baseDirectory);  	break;  case "NLOG":  	this.ParseNLogElement (content' baseDirectory);  	break;  }  
Missing Default,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseLoggerElement,The following switch statement is missing a default case: switch (child.LocalName.ToUpper (CultureInfo.InvariantCulture)) {  case "FILTERS":  	this.ParseFilters (rule' child);  	break;  case "LOGGER":  	this.ParseLoggerElement (child' rule.ChildRules);  	break;  }  
Missing Default,NLog.Config,XmlLoggingConfiguration,F:\newReposMay17\jkowalski_NLog\src\NLog\Config\XmlLoggingConfiguration.cs,ParseTargetsElement,The following switch statement is missing a default case: switch (name.ToUpper (CultureInfo.InvariantCulture)) {  case "DEFAULT-WRAPPER":  	defaultWrapperElement = targetElement;  	break;  case "DEFAULT-TARGET-PARAMETERS":  	if (type == null) {  		throw new NLogConfigurationException ("Missing 'type' attribute on <" + name + "/>.");  	}  	typeNameToDefaultTargetParameters [type] = targetElement;  	break;  case "TARGET":  case "APPENDER":  case "WRAPPER":  case "WRAPPER-TARGET":  case "COMPOUND-TARGET":  	if (type == null) {  		throw new NLogConfigurationException ("Missing 'type' attribute on <" + name + "/>.");  	}  	Target newTarget = this.configurationItemFactory.Targets.CreateInstance (type);  	NLogXmlElement defaults;  	if (typeNameToDefaultTargetParameters.TryGetValue (type' out defaults)) {  		this.ParseTargetElement (newTarget' defaults);  	}  	this.ParseTargetElement (newTarget' targetElement);  	if (asyncWrap) {  		newTarget = WrapWithAsyncTargetWrapper (newTarget);  	}  	if (defaultWrapperElement != null) {  		newTarget = this.WrapWithDefaultWrapper (newTarget' defaultWrapperElement);  	}  	InternalLogger.Info ("Adding target {0}"' newTarget);  	AddTarget (newTarget.Name' newTarget);  	break;  }  
Missing Default,NLog,NLogTraceListener,F:\newReposMay17\jkowalski_NLog\src\NLog\NLogTraceListener.cs,InitAttributes,The following switch statement is missing a default case: switch (key.ToUpperInvariant ()) {  case "DEFAULTLOGLEVEL":  	this.defaultLogLevel = LogLevel.FromString (value);  	break;  case "FORCELOGLEVEL":  	this.forceLogLevel = LogLevel.FromString (value);  	break;  case "AUTOLOGGERNAME":  	this.AutoLoggerName = XmlConvert.ToBoolean (value);  	break;  }  
Missing Default,NLog.LayoutRenderers,GarbageCollectorInfoLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\GarbageCollectorInfoLayoutRenderer.cs,Append,The following switch statement is missing a default case: switch (this.Property) {  case GarbageCollectorProperty.TotalMemory:  	value = GC.GetTotalMemory (false);  	break;  case GarbageCollectorProperty.TotalMemoryForceCollection:  	value = GC.GetTotalMemory (true);  	break;  #if !SILVERLIGHT  case GarbageCollectorProperty.CollectionCount0:  	value = GC.CollectionCount (0);  	break;  case GarbageCollectorProperty.CollectionCount1:  	value = GC.CollectionCount (1);  	break;  case GarbageCollectorProperty.CollectionCount2:  	value = GC.CollectionCount (2);  	break;  #endif  case GarbageCollectorProperty.MaxGeneration:  	value = GC.MaxGeneration;  	break;  }  
Missing Default,NLog.LayoutRenderers,StackTraceLayoutRenderer,F:\newReposMay17\jkowalski_NLog\src\NLog\LayoutRenderers\StackTraceLayoutRenderer.cs,Append,The following switch statement is missing a default case: switch (this.Format) {  case StackTraceFormat.Raw:  	for (int i = startingFrame; i >= logEvent.UserStackFrameNumber; --i) {  		StackFrame f = logEvent.StackTrace.GetFrame (i);  		builder.Append (f.ToString ());  	}  	break;  case StackTraceFormat.Flat:  	for (int i = startingFrame; i >= logEvent.UserStackFrameNumber; --i) {  		StackFrame f = logEvent.StackTrace.GetFrame (i);  		if (!first) {  			builder.Append (this.Separator);  		}  		var type = f.GetMethod ().DeclaringType;  		if (type != null) {  			builder.Append (type.Name);  		} else {  			builder.Append ("<no type>");  		}  		builder.Append (".");  		builder.Append (f.GetMethod ().Name);  		first = false;  	}  	break;  case StackTraceFormat.DetailedFlat:  	for (int i = startingFrame; i >= logEvent.UserStackFrameNumber; --i) {  		StackFrame f = logEvent.StackTrace.GetFrame (i);  		if (!first) {  			builder.Append (this.Separator);  		}  		builder.Append ("[");  		builder.Append (f.GetMethod ());  		builder.Append ("]");  		first = false;  	}  	break;  }  
Missing Default,NLog.Layouts,CsvLayout,F:\newReposMay17\jkowalski_NLog\src\NLog\Layouts\CsvLayout.cs,InitializeLayout,The following switch statement is missing a default case: switch (this.Delimiter) {  case CsvColumnDelimiterMode.Auto:  	this.actualColumnDelimiter = CultureInfo.CurrentCulture.TextInfo.ListSeparator;  	break;  case CsvColumnDelimiterMode.Comma:  	this.actualColumnDelimiter = "'";  	break;  case CsvColumnDelimiterMode.Semicolon:  	this.actualColumnDelimiter = ";";  	break;  case CsvColumnDelimiterMode.Pipe:  	this.actualColumnDelimiter = "|";  	break;  case CsvColumnDelimiterMode.Tab:  	this.actualColumnDelimiter = "\t";  	break;  case CsvColumnDelimiterMode.Space:  	this.actualColumnDelimiter = " ";  	break;  case CsvColumnDelimiterMode.Custom:  	this.actualColumnDelimiter = this.CustomColumnDelimiter;  	break;  }  
Missing Default,NLog.Targets,FileTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\FileTarget.cs,DoAutoArchive,The following switch statement is missing a default case: switch (this.ArchiveNumbering) {  case ArchiveNumberingMode.Rolling:  	this.RecursiveRollingRename (fi.FullName' fileNamePattern' 0);  	break;  case ArchiveNumberingMode.Sequence:  	this.SequentialArchive (fi.FullName' fileNamePattern);  	break;  }  
Missing Default,NLog.Targets,WebServiceTarget,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\WebServiceTarget.cs,DoInvoke,The following switch statement is missing a default case: switch (this.Protocol) {  case WebServiceProtocol.Soap11:  	postPayload = this.PrepareSoap11Request (request' parameters);  	break;  case WebServiceProtocol.Soap12:  	postPayload = this.PrepareSoap12Request (request' parameters);  	break;  case WebServiceProtocol.HttpGet:  	throw new NotSupportedException ();  case WebServiceProtocol.HttpPost:  	postPayload = this.PreparePostRequest (request' parameters);  	break;  }  
Missing Default,NLog.Targets.Wrappers,AsyncRequestQueue,F:\newReposMay17\jkowalski_NLog\src\NLog\Targets\Wrappers\AsyncRequestQueue-T.cs,Enqueue,The following switch statement is missing a default case: switch (this.OnOverflow) {  case AsyncTargetWrapperOverflowAction.Discard:  	// dequeue and discard one element  	this.logEventInfoQueue.Dequeue ();  	break;  case AsyncTargetWrapperOverflowAction.Grow:  	break;  #if !NET_CF  case AsyncTargetWrapperOverflowAction.Block:  	while (this.logEventInfoQueue.Count >= this.RequestLimit) {  		InternalLogger.Trace ("Blocking...");  		System.Threading.Monitor.Wait (this);  		InternalLogger.Trace ("Entered critical section.");  	}  	InternalLogger.Trace ("Limit ok.");  	break;  #endif  }  
