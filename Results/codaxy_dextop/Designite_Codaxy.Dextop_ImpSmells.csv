Implementation smell,Namespace,Class,File,Method,Description
Long Method,Codaxy.Dextop.Data,DextopModelManager,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Data\DextopModel.Manager.cs,BuildModel,The method has 103 lines of code.
Long Method,Codaxy.Dextop.Remoting,DextopRemotingPreprocessor,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemotingPreprocessor.cs,WriteType,The method has 103 lines of code.
Long Method,Codaxy.Dextop.Remoting,ReflectionRemoteMethodInvoker,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemoteMethodInvoker.Reflection.cs,Instantiate,The method has 142 lines of code.
Complex Method,Codaxy.Dextop.Data,DextopGridRemoteLookupColumnAttribute,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Data\DextopGrid.Attributes.Lookup.cs,ToGridHeader,Cyclomatic complexity of the method is 8
Complex Method,Codaxy.Dextop.Data,DextopGridRemoteLookupColumnAttribute,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Data\DextopGrid.Attributes.Lookup.cs,GetListConfig,Cyclomatic complexity of the method is 8
Complex Method,Codaxy.Dextop.Data,DextopGridManager,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Data\DextopGrid.Builder.cs,BuildHeaders,Cyclomatic complexity of the method is 8
Complex Method,Codaxy.Dextop.Data,DextopModelManager,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Data\DextopModel.Manager.cs,BuildModel,Cyclomatic complexity of the method is 17
Complex Method,Codaxy.Dextop,DextopJsResourcePackage,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopResourcePackage.Js.cs,Optimize,Cyclomatic complexity of the method is 13
Complex Method,Codaxy.Dextop,DextopUtil,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopUtil.cs,DecodeValue,Cyclomatic complexity of the method is 10
Complex Method,Codaxy.Dextop.Forms,DextopFormFieldAttribute,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Forms\DextopForm.Attributes.Field.cs,GetXType,Cyclomatic complexity of the method is 9
Complex Method,Codaxy.Dextop.Forms,DextopFormContainer,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Forms\DextopForm.Container.cs,WriteItems,Cyclomatic complexity of the method is 11
Complex Method,Codaxy.Dextop.Forms,DextopFormBuilder,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Forms\DextopForm.Builder.cs,BuildForm,Cyclomatic complexity of the method is 11
Complex Method,Codaxy.Dextop.Forms,DextopFormObject,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Forms\DextopForm.Object.cs,ApplyLabelable,Cyclomatic complexity of the method is 13
Complex Method,Codaxy.Dextop.Remoting,DextopRemotingPreprocessor,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemotingPreprocessor.cs,WriteType,Cyclomatic complexity of the method is 17
Complex Method,Codaxy.Dextop.Remoting,ReflectionRemoteMethodInvoker,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemoteMethodInvoker.Reflection.cs,Instantiate,Cyclomatic complexity of the method is 12
Long Parameter List,Codaxy.Dextop,DextopRemote,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopRemote.Components.cs,AddRemotableComponent,The method has 5 parameters. Parameters: name' remotable' remoteId' subRemote' own
Long Parameter List,Codaxy.Dextop,DextopRemote,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopRemote.Components.cs,AddStore,The method has 6 parameters. Parameters: name' crud' serializer' remoteId' subRemote' own
Long Parameter List,Codaxy.Dextop,DextopRemote,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopRemote.Components.cs,AddStore,The method has 6 parameters. Parameters: name' crud' serializer' remoteId' subRemote' own
Long Parameter List,Codaxy.Dextop.Remoting,DextopRemotingPreprocessor,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemotingPreprocessor.cs,WriteType,The method has 5 parameters. Parameters: application' sw' cacheWriter' type' includedTypes
Long Statement,Codaxy.Dextop.Data,DextopModelArraySerializer,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Data\DextopModel.Serializer.Array.cs,Deserialize,The length of the statement  "                //throw new DextopException("Could not deserialize JSON array to type '{0}'. Array length does not match the required number of fields."' Meta.ModelType); " is 154.
Long Statement,Codaxy.Dextop.Data,DextopModelManager,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Data\DextopModel.Manager.cs,BuildModel,The length of the statement  "                        useNull = fat.useNotNull ? false : true'//fieldType.IsClass || Codaxy.Common.Nullable.IsNullableType(type) || fieldType == typeof(String) " is 137.
Long Statement,Codaxy.Dextop,DextopSession,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopSession.Dependencies.cs,ExecuteMethodCall,The length of the statement  "				result = DextopApplication.RemoteMethodInvoker.Invoke(context.Remotable' call.MethodName' call.Arguments' call.FormSubmit); " is 123.
Long Statement,Codaxy.Dextop,DextopModule,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopModule.Preprocessing.cs,RegisterStandardAssemblyPreprocessors,The length of the statement  "            preprocessors.Add(DextopUtil.CombinePaths(generatedFilesPath' "remote.js")' new DextopRemotingPreprocessor() { TypeFilter = PreprocessingTypeFilter }); " is 151.
Long Statement,Codaxy.Dextop,DextopModule,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopModule.Preprocessing.cs,RegisterStandardAssemblyPreprocessors,The length of the statement  "                preprocessors.Add(DextopUtil.CombinePaths(generatedFilesPath' "model.js")' new DextopModelPreprocessor() { TypeFilter = PreprocessingTypeFilter }); " is 147.
Long Statement,Codaxy.Dextop,DextopModule,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopModule.Preprocessing.cs,RegisterStandardAssemblyPreprocessors,The length of the statement  "                preprocessors.Add(DextopUtil.CombinePaths(generatedFilesPath' "headers.js")' new DextopGridHeaderPreprocessor() { TypeFilter = PreprocessingTypeFilter }); " is 154.
Long Statement,Codaxy.Dextop,DextopModule,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopModule.Preprocessing.cs,RegisterStandardAssemblyPreprocessors,The length of the statement  "                preprocessors.Add(DextopUtil.CombinePaths(generatedFilesPath' "forms.js")' new DextopFormPreprocessor() { TypeFilter = PreprocessingTypeFilter }); " is 146.
Long Statement,Codaxy.Dextop,DextopModule,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopModule.Preprocessing.cs,RegisterStandardAssemblyPreprocessors,The length of the statement  "                preprocessors.Add(DextopUtil.CombinePaths(generatedFilesPath' "enums.js")' new DextopEnumPreprocessor() { TypeFilter = PreprocessingTypeFilter }); " is 146.
Long Statement,Codaxy.Dextop,DextopResourcePackage,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopResourcePackage.cs,SearchServer,The length of the statement  "                var list = Directory.GetFiles(location' "*" + extension' recursive ? SearchOption.AllDirectories : SearchOption.TopDirectoryOnly); " is 130.
Long Statement,Codaxy.Dextop,DextopRemote,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopRemote.Components.cs,AddStore,The length of the statement  "            AddStore(name' (filter) => { return DextopReadResult.Create(read(filter)); }' remoteId: remoteId' subRemote: subRemote); " is 120.
Long Statement,Codaxy.Dextop,DextopJsResourcePackage,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopResourcePackage.Js.cs,RegisterLocalization,The length of the statement  "                    package.AddLocalization(language' package.SearchServer(DextopUtil.CombinePaths(pathPrefix' String.Format(vpath' language))' ".js"' false)); " is 139.
Long Statement,Codaxy.Dextop,DextopUtil,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopUtil.cs,CombinePaths,The length of the statement  "            return (String.IsNullOrEmpty(basePath) ? "" : (basePath.TrimEnd('/') + "/")) + (String.IsNullOrEmpty(path) ? "" : path.TrimStart('/')); " is 135.
Long Statement,Codaxy.Dextop.Forms,DextopFormRemoteLookupComboAttribute,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Forms\DextopForm.Attributes.RemoteLookupCombo.cs,ToField,The length of the statement  "                    res["store"] = new DextopRawJs("Dextop.api('{0}').createStore(!Ext.isDefined(options.data['{1}']) ? {{}} : {{ data: [[options.data['{1}']' options.data['{2}']]] }})"' api' res.name' initialLookupValueField); " is 207.
Long Statement,Codaxy.Dextop.Forms,DextopFormRemoteLookupComboAttribute,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Forms\DextopForm.Attributes.RemoteLookupCombo.cs,ToField,The length of the statement  "                    res["store"] = new DextopRawJs("options.remote.createStore('{0}'' !Ext.isDefined(options.data['{1}']) ? {{}} : {{ data: [[options.data['{1}']' options.data['{2}']]] }})"' lookupId ?? res.name' res.name' initialLookupValueField); " is 228.
Long Statement,Codaxy.Dextop.Forms,DextopFormBuilder,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Forms\DextopForm.Builder.cs,BuildForm,The length of the statement  "				var containers = AttributeHelper.GetCustomAttributes<DextopFormContainerAttribute>(field.Item3' false).OrderBy(a => a.Level).Select(a => a.ToContainer(field.Item1' field.Item2)).ToArray();                 " is 188.
Long Statement,Codaxy.Dextop.Forms,DextopFormObject,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Forms\DextopForm.Object.cs,ApplyLabelable,The length of the statement  "                this["fieldLabel"] = nameLocalizationPrefix != null ? (object)new DextopLocalizedText(nameLocalizationPrefix + "FieldLabelText"' labelable.fieldLabel) : labelable.fieldLabel; " is 174.
Long Statement,Codaxy.Dextop.Remoting,DextopEnumPreprocessor,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopEnum.Preprocessor.cs,ProcessAssemblies,The length of the statement  "                    var types = Common.Reflection.AssemblyHelper.GetTypeAttributeDictionaryForAssembly<DextopEnumAttribute>(assembly' false); " is 121.
Long Statement,Codaxy.Dextop.Remoting,DextopRemotingPreprocessor,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemotingPreprocessor.cs,WriteType,The length of the statement  "			if (type.BaseType != null && remotableInterfaceType.IsAssignableFrom(type.BaseType) && type.Assembly == type.BaseType.Assembly) " is 127.
Long Statement,Codaxy.Dextop.Remoting,ReflectionRemoteMethodInvoker,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemoteMethodInvoker.Reflection.cs,GetMethod,The length of the statement  "            MethodInfo method = type.GetMethod(methodName' BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.FlattenHierarchy); " is 149.
Long Statement,Codaxy.Dextop.Remoting,ReflectionRemoteMethodInvoker,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemoteMethodInvoker.Reflection.cs,CacheRemotableConstructor,The length of the statement  "                throw new DextopException("Remotable constructor clash detected. Constructors for remotable types '{0}' and '{1} have the same alias '{2}'. Change alias for one of the types."' list[0].ConstructorInfo.DeclaringType' c.ConstructorInfo.DeclaringType' aliasOrTypeName); " is 266.
Long Statement,Codaxy.Dextop.Remoting,ReflectionRemoteMethodInvoker,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemoteMethodInvoker.Reflection.cs,Instantiate,The length of the statement  "                    c = constructors.Where(a => a.ArgumentsType == ConstructorArgments.Array && a.Args.Length >= argss.Length).OrderBy(a => a.Args.Length).FirstOrDefault(); " is 152.
Long Statement,Codaxy.Dextop.Remoting,ReflectionRemoteMethodInvoker,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemoteMethodInvoker.Reflection.cs,Instantiate,The length of the statement  "                        c = constructors.Where(a => a.ArgumentsType == ConstructorArgments.Array).OrderByDescending(a => a.Args.Length).FirstOrDefault(); " is 129.
Long Statement,Codaxy.Dextop.Remoting,ReflectionRemoteMethodInvoker,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemoteMethodInvoker.Reflection.cs,Instantiate,The length of the statement  "                        if (c == null) // if we still don't have a match take the candidate with the biggest number of matching arguments' and prefer parameterless constructor if zero " is 159.
Long Statement,Codaxy.Dextop.Remoting,ReflectionRemoteMethodInvoker,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemoteMethodInvoker.Reflection.cs,Instantiate,The length of the statement  "                            c = candidates.OrderByDescending(a => a.ArgumentMatch).ThenBy(a => (int)a.Constructor.ArgumentsType).First().Constructor; " is 121.
Long Statement,Codaxy.Dextop.Remoting,ReflectionRemoteMethodInvoker,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemoteMethodInvoker.Reflection.cs,Instantiate,The length of the statement  "                    c = constructors.Where(a => a.ArgumentsType == ConstructorArgments.Array && a.Args.Length >= 1).OrderBy(a => a.Args.Length).FirstOrDefault(); " is 141.
Long Statement,Codaxy.Dextop.Remoting,ReflectionRemoteMethodInvoker,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemoteMethodInvoker.Reflection.cs,RegisterTypeAlias,The length of the statement  "                    throw new DextopException("Cannot register types '{0}' and '{1}' under the same alias '{2}'."' oldTypeName' fullTypeName' alias); " is 129.
Long Statement,Codaxy.Dextop.Tools,DextopFileUtil,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Tools\DextopFileUtil.cs,CalculateCacheBuster,The length of the statement  "                    throw new DextopException(String.Format("Could not calculate buster for file '{0}'. Check inner exception for more details."' file)' ex); " is 137.
Long Statement,Codaxy.Dextop.Tools,DextopFileUtil,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Tools\DextopFileUtil.cs,MinifyJs,The length of the statement  "				//return Yahoo.Yui.Compressor.JavaScriptCompressor.Compress(js' true' obfuscate' true' true' 80' Encoding.UTF8' CultureInfo.InvariantCulture);				 " is 142.
Long Statement,Codaxy.Dextop.Tools,DextopFileUtil,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Tools\DextopFileUtil.cs,MinifyJs,The length of the statement  "				Trace.WriteLine("JS code that could not be minified:"); //Minification is usually done in Release mode where Debug is not available " is 131.
Complex Conditional,Codaxy.Dextop,DextopCssResourcePackage,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopResourcePackage.Css.cs,OptimizeFileList,The conditional expression  "!context.FakeOptimization && (!SmartOverwrite || !outputPath.Exists || outputPath.LastAccessTime <= lastWrite)"  is complex.
Virtual Method Call from Constructor,Codaxy.Dextop.Data,DextopModelArraySerializer,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Data\DextopModel.Serializer.Array.cs,DextopModelArraySerializer,The constructor "DextopModelArraySerializer" calls a virtual method "BuildValueProvider".
Empty Catch Block,Codaxy.Dextop,DextopConfig,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopConfig.cs,TryGet,The method has an empty catch block.
Empty Catch Block,Codaxy.Dextop,DextopConfig,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopConfig.cs,TryConvert,The method has an empty catch block.
Magic Number,Codaxy.Dextop.Data,DextopGridColumn,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Data\DextopGrid.Column.cs,DextopGridColumn,The following statement contains a magic number: width = 100;
Magic Number,Codaxy.Dextop,DextopApplication,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopApplication.cs,MapCultureToLanguageCode,The following statement contains a magic number: return culture.Name.Substring(0' 2);
Magic Number,Codaxy.Dextop,DextopApplication,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopApplication.cs,MapClassName,The following statement contains a magic number: if (className.StartsWith("Dextop"))  				return className.Substring(6);
Magic Number,Codaxy.Dextop,DextopSession,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopSession.Dependencies.cs,ExtendSession,The following statement contains a magic number: sessionExpiryTime = DateTime.Now.AddMinutes(10);
Magic Number,Codaxy.Dextop,DextopSession,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopSession.Dependencies.cs,HandleRemotingRequest,The following statement contains a magic number: foreach (var request in requests)              {                    /* This part blocks out of order processing of direct transactions for 2 seconds.                   * This is important as two sequential http request can come in different order than sent.                   * Luckily Ext.direct has tid field.                   */                  int waitCounter = 20;                  while (request.tid > lastTid + 1 && --waitCounter>0)                  {                      Thread.Sleep(100);                  }                    if (request.tid > lastTid)                      lastTid = request.tid;                    var call = new DextopRemoteMethodCall                  {                      FormSubmit = request.FormSubmit'                      RemoteId = request.data[0]'                      Arguments = DextopUtil.Decode<String[]>(request.data[2])'                      MethodName = request.data[1]                  };                  var response = new Response                  {                      type = "rpc"'                      method = request.method'                      tid = request.tid'                      action = request.action                  };                  responses.Add(response);                  try                  {                      response.result = ExecuteMethodCall(call);                  }                  catch (Exception ex)                  {                      response.result = new DextopRemoteMethodCallResult                      {                          success = false'                          result = new DextopRemoteMethodCallException                          {                              type = "rpc"'                              exception = ex.Message'                              stackTrace = ex.StackTrace                          }                      };                  }              }
Magic Number,Codaxy.Dextop,DextopSession,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopSession.Dependencies.cs,HandleRemotingRequest,The following statement contains a magic number: foreach (var request in requests)              {                    /* This part blocks out of order processing of direct transactions for 2 seconds.                   * This is important as two sequential http request can come in different order than sent.                   * Luckily Ext.direct has tid field.                   */                  int waitCounter = 20;                  while (request.tid > lastTid + 1 && --waitCounter>0)                  {                      Thread.Sleep(100);                  }                    if (request.tid > lastTid)                      lastTid = request.tid;                    var call = new DextopRemoteMethodCall                  {                      FormSubmit = request.FormSubmit'                      RemoteId = request.data[0]'                      Arguments = DextopUtil.Decode<String[]>(request.data[2])'                      MethodName = request.data[1]                  };                  var response = new Response                  {                      type = "rpc"'                      method = request.method'                      tid = request.tid'                      action = request.action                  };                  responses.Add(response);                  try                  {                      response.result = ExecuteMethodCall(call);                  }                  catch (Exception ex)                  {                      response.result = new DextopRemoteMethodCallResult                      {                          success = false'                          result = new DextopRemoteMethodCallException                          {                              type = "rpc"'                              exception = ex.Message'                              stackTrace = ex.StackTrace                          }                      };                  }              }
Magic Number,Codaxy.Dextop,DextopSession,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopSession.Dependencies.cs,HandleRemotingRequest,The following statement contains a magic number: foreach (var request in requests)              {                    /* This part blocks out of order processing of direct transactions for 2 seconds.                   * This is important as two sequential http request can come in different order than sent.                   * Luckily Ext.direct has tid field.                   */                  int waitCounter = 20;                  while (request.tid > lastTid + 1 && --waitCounter>0)                  {                      Thread.Sleep(100);                  }                    if (request.tid > lastTid)                      lastTid = request.tid;                    var call = new DextopRemoteMethodCall                  {                      FormSubmit = request.FormSubmit'                      RemoteId = request.data[0]'                      Arguments = DextopUtil.Decode<String[]>(request.data[2])'                      MethodName = request.data[1]                  };                  var response = new Response                  {                      type = "rpc"'                      method = request.method'                      tid = request.tid'                      action = request.action                  };                  responses.Add(response);                  try                  {                      response.result = ExecuteMethodCall(call);                  }                  catch (Exception ex)                  {                      response.result = new DextopRemoteMethodCallResult                      {                          success = false'                          result = new DextopRemoteMethodCallException                          {                              type = "rpc"'                              exception = ex.Message'                              stackTrace = ex.StackTrace                          }                      };                  }              }
Magic Number,Codaxy.Dextop,DextopSession,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopSession.Dependencies.cs,BeginHandleLongPollingRequest,The following statement contains a magic number: return messageQueue.BeginTake(20000' callback' state);
Magic Number,Codaxy.Dextop,DextopCssResourcePackage,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopResourcePackage.Css.cs,OptimizeFileList,The following statement contains a magic number: for (var i = 0; i < files.Count; i++)              {  				var filePath = package.Module.MapPath(files[i]);			  				DateTime lastWrite;                  var cb = DextopFileUtil.CalculateCacheBuster(new[] { filePath }' out lastWrite);                  if (Minify)                  {                      files[i] = files[i].Substring(0' files[i].Length - 4) + "-min.css";  					var outputPath = new FileInfo(filePath.Substring(0' filePath.Length - 4) + "-min.css");                                          if (!context.FakeOptimization && (!SmartOverwrite || !outputPath.Exists || outputPath.LastAccessTime <= lastWrite))                      {                          var css = File.ReadAllText(filePath);                          css = DextopFileUtil.MinifyCss(css);                          File.WriteAllText(outputPath.FullName' css);                      }                  }                  files[i] = files[i] + "?cb=" + cb;              }
Magic Number,Codaxy.Dextop,DextopCssResourcePackage,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopResourcePackage.Css.cs,OptimizeFileList,The following statement contains a magic number: for (var i = 0; i < files.Count; i++)              {  				var filePath = package.Module.MapPath(files[i]);			  				DateTime lastWrite;                  var cb = DextopFileUtil.CalculateCacheBuster(new[] { filePath }' out lastWrite);                  if (Minify)                  {                      files[i] = files[i].Substring(0' files[i].Length - 4) + "-min.css";  					var outputPath = new FileInfo(filePath.Substring(0' filePath.Length - 4) + "-min.css");                                          if (!context.FakeOptimization && (!SmartOverwrite || !outputPath.Exists || outputPath.LastAccessTime <= lastWrite))                      {                          var css = File.ReadAllText(filePath);                          css = DextopFileUtil.MinifyCss(css);                          File.WriteAllText(outputPath.FullName' css);                      }                  }                  files[i] = files[i] + "?cb=" + cb;              }
Magic Number,Codaxy.Dextop.Forms,DextopFormNumberFieldAttribute,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Forms\DextopForm.Attributes.NumberField.cs,DextopFormNumberFieldAttribute,The following statement contains a magic number: decimalPrecision = 2;
Magic Number,Codaxy.Dextop.Forms,DextopFormNumberFieldAttribute,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Forms\DextopForm.Attributes.NumberField.cs,ToField,The following statement contains a magic number: if (decimalPrecision != 2)  				field["decimalPrecision"] = decimalPrecision;
Magic Number,Codaxy.Dextop.Remoting,DextopRemotingPreprocessor,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Remoting\DextopRemotingPreprocessor.cs,WriteType,The following statement contains a magic number: foreach (var mi in type.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance))              {                  DextopRemotableAttribute ra;                  if (AttributeHelper.TryGetAttribute<DextopRemotableAttribute>(mi' out ra' false))                  {                      ReflectionRemoteMethodInvoker.CacheMethodInfo(mi' ra);                        if (mi.DeclaringType == type)                      {                                                  var methodName = mi.Name;                          sw.WriteLine("'");                          var parameters = mi.GetParameters();                          var upload = parameters.Any(a => a.ParameterType == formSubmitType);                          if (upload)                          {                              if (parameters.Length == 0 || parameters[0].ParameterType != formSubmitType)                                  throw new Exception("Form submit methods must have first parameter of type DextopFormSubmit.");                              sw.Write("\t{0}: function("' methodName);                              for (var i = 0; i < parameters.Length; i++)                              {                                  sw.Write(parameters[i].Name);                                  sw.Write("' ");                              }                              sw.Write("callback' scope");                              sw.Write(") {{ this.submitForm(callback' scope' '{0}'' {1}' ["' methodName' parameters[0].Name);                              if (parameters.Length > 1)                              {                                  sw.Write(parameters[1].Name);                                  for (var i = 2; i < parameters.Length; i++)                                  {                                      sw.Write("' ");                                      sw.Write(parameters[i].Name);                                  }                              }                              sw.Write("]);}");                          }                          else                          {                              sw.Write("\t{0}: function("' methodName);                              for (var i = 0; i < parameters.Length; i++)                              {                                  sw.Write(parameters[i].Name);                                  sw.Write("' ");                              }                              sw.Write("callback' scope");                              sw.Write(") {{ this.invokeRemoteMethod(callback' scope' '{0}'' ["' methodName);                              if (parameters.Length > 0)                              {                                  sw.Write(parameters[0].Name);                                  for (var i = 1; i < parameters.Length; i++)                                  {                                      sw.Write("' ");                                      sw.Write(parameters[i].Name);                                  }                              }                              sw.Write("]);}");                          }                      }                  }              }
Magic Number,Codaxy.Dextop.Util,DextopRoute,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\Util\DextopRoute.cs,IsPlaceholder,The following statement contains a magic number: if (p[0] == '{' && p[p.Length - 1] == '}')              {                  name = p.Substring(1' p.Length - 2);                  return true;              }
Missing Default,Codaxy.Dextop,DextopSession,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopSession.Dependencies.cs,SetVariable,The following switch statement is missing a default case: switch (sharing)              {                  case DextopSessionVariableSharing.Global:                      SetGlobalVariable(sessionVariableName' value);                      break;                  case DextopSessionVariableSharing.Culture:                      SetLocalizedVariable(sessionVariableName' value);                      break;                  case DextopSessionVariableSharing.None:                      SetVariable(sessionVariableName' value);                      break;              }
Missing Default,Codaxy.Dextop,DextopSession,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopSession.Dependencies.cs,SendNotification,The following switch statement is missing a default case: switch (notification.Sound) {  				case DextopNotificationSound.Standard:  					sound = true;  					break;  				case DextopNotificationSound.Custom:  					sound = notification.CustomSound;  					break;  			}
Missing Default,Codaxy.Dextop,DextopModule,C:\repos\codaxy_dextop\Libraries\Codaxy.Dextop\Codaxy.Dextop\DextopModule.Preprocessing.cs,TryMapNamespace,The following switch statement is missing a default case: switch (m.Mode)                  {                      case NamespaceMappingMode.Exact:                          if (m.Namespace == serverNs)                          {                              clientNs = m.ClientNamespace;                              return true;                          }                          break;                      case NamespaceMappingMode.Prefix:                          if (serverNs.StartsWith(m.Namespace))                          {                              clientNs = m.ClientNamespace + serverNs.Substring(m.Namespace.Length);                              return true;                          }                          break;                      case NamespaceMappingMode.PrefixExact:                          if (serverNs.StartsWith(m.Namespace))                          {                              clientNs = m.ClientNamespace;                              return true;                          }                          break;                  }
