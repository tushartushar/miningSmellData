Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,LoadGLTextures,The length of the statement  "	/*glTexImage2D(GL_TEXTURE_2D' 0' 3' TextureImage[0]->sizeX' TextureImage[0]->sizeY' 0' GL_RGB' GL_UNSIGNED_BYTE' TextureImage[0]->data);" is 136.
Long Statement,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(FormParticleSystemSample)); " is 145.
Long Statement,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The length of the statement  "	this.buttonBurst.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 149.
Long Statement,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The length of the statement  "	this.checkBoxGravity.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 153.
Long Statement,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The length of the statement  "	this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 144.
Long Statement,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The length of the statement  "	this.openGLControl1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) | System.Windows.Forms.AnchorStyles.Left) | System.Windows.Forms.AnchorStyles.Right))); " is 238.
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,FormParticleSystemSample,The following statement contains a magic number: particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: for (loop = 0; loop < particles.Length; loop++)// Loop Through All The Particles   {  	if (particles [loop].active)// If The Particle Is Active  	 {  		float x = particles [loop].x;  		// Grab Our Particle X Position  		float y = particles [loop].y;  		// Grab Our Particle Y Position  		float z = particles [loop].z + zoom;  		// Particle Z Pos + Zoom  		// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  		gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  		gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  		// Build Quad From A Triangle Strip  		gl.TexCoord (1' 1);  		gl.Vertex (x + 0.5f' y + 0.5f' z);  		// Top Right  		gl.TexCoord (0' 1);  		gl.Vertex (x - 0.5f' y + 0.5f' z);  		// Top Left  		gl.TexCoord (1' 0);  		gl.Vertex (x + 0.5f' y - 0.5f' z);  		// Bottom Right  		gl.TexCoord (0' 0);  		gl.Vertex (x - 0.5f' y - 0.5f' z);  		// Bottom Left  		gl.End ();  		// Done Building Triangle Strip  		particles [loop].x += particles [loop].xi / (slowdown * 1000);  		// Move On The X Axis By X Speed  		particles [loop].y += particles [loop].yi / (slowdown * 1000);  		// Move On The Y Axis By Y Speed  		particles [loop].z += particles [loop].zi / (slowdown * 1000);  		// Move On The Z Axis By Z Speed  		particles [loop].xi += particles [loop].xg;  		// Take Pull On X Axis Into Account  		particles [loop].yi += particles [loop].yg;  		// Take Pull On Y Axis Into Account  		particles [loop].zi += particles [loop].zg;  		// Take Pull On Z Axis Into Account  		particles [loop].life -= particles [loop].fade;  		// Reduce Particles Life By 'Fade'  		if (particles [loop].life < 0.0f)// If Particle Is Burned Out  		 {  			particles [loop].life = 1.0f;  			// Give It New Life  			particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  			// Random Fade Speed  			particles [loop].x = 0.0f;  			// Center On X Axis  			particles [loop].y = 0.0f;  			// Center On Y Axis  			particles [loop].z = 0.0f;  			// Center On Z Axis  			particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  			// Random Speed On X Axis  			particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			int colour = random.Next (12);  			particles [loop].r = colors [colour' 0];  			// Select Red From Color Table  			particles [loop].g = colors [colour' 1];  			// Select Green From Color Table  			particles [loop].b = colors [colour' 2];  			// Select Blue From Color Table  		}  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: for (loop = 0; loop < particles.Length; loop++)// Loop Through All The Particles   {  	if (particles [loop].active)// If The Particle Is Active  	 {  		float x = particles [loop].x;  		// Grab Our Particle X Position  		float y = particles [loop].y;  		// Grab Our Particle Y Position  		float z = particles [loop].z + zoom;  		// Particle Z Pos + Zoom  		// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  		gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  		gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  		// Build Quad From A Triangle Strip  		gl.TexCoord (1' 1);  		gl.Vertex (x + 0.5f' y + 0.5f' z);  		// Top Right  		gl.TexCoord (0' 1);  		gl.Vertex (x - 0.5f' y + 0.5f' z);  		// Top Left  		gl.TexCoord (1' 0);  		gl.Vertex (x + 0.5f' y - 0.5f' z);  		// Bottom Right  		gl.TexCoord (0' 0);  		gl.Vertex (x - 0.5f' y - 0.5f' z);  		// Bottom Left  		gl.End ();  		// Done Building Triangle Strip  		particles [loop].x += particles [loop].xi / (slowdown * 1000);  		// Move On The X Axis By X Speed  		particles [loop].y += particles [loop].yi / (slowdown * 1000);  		// Move On The Y Axis By Y Speed  		particles [loop].z += particles [loop].zi / (slowdown * 1000);  		// Move On The Z Axis By Z Speed  		particles [loop].xi += particles [loop].xg;  		// Take Pull On X Axis Into Account  		particles [loop].yi += particles [loop].yg;  		// Take Pull On Y Axis Into Account  		particles [loop].zi += particles [loop].zg;  		// Take Pull On Z Axis Into Account  		particles [loop].life -= particles [loop].fade;  		// Reduce Particles Life By 'Fade'  		if (particles [loop].life < 0.0f)// If Particle Is Burned Out  		 {  			particles [loop].life = 1.0f;  			// Give It New Life  			particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  			// Random Fade Speed  			particles [loop].x = 0.0f;  			// Center On X Axis  			particles [loop].y = 0.0f;  			// Center On Y Axis  			particles [loop].z = 0.0f;  			// Center On Z Axis  			particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  			// Random Speed On X Axis  			particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			int colour = random.Next (12);  			particles [loop].r = colors [colour' 0];  			// Select Red From Color Table  			particles [loop].g = colors [colour' 1];  			// Select Green From Color Table  			particles [loop].b = colors [colour' 2];  			// Select Blue From Color Table  		}  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: for (loop = 0; loop < particles.Length; loop++)// Loop Through All The Particles   {  	if (particles [loop].active)// If The Particle Is Active  	 {  		float x = particles [loop].x;  		// Grab Our Particle X Position  		float y = particles [loop].y;  		// Grab Our Particle Y Position  		float z = particles [loop].z + zoom;  		// Particle Z Pos + Zoom  		// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  		gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  		gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  		// Build Quad From A Triangle Strip  		gl.TexCoord (1' 1);  		gl.Vertex (x + 0.5f' y + 0.5f' z);  		// Top Right  		gl.TexCoord (0' 1);  		gl.Vertex (x - 0.5f' y + 0.5f' z);  		// Top Left  		gl.TexCoord (1' 0);  		gl.Vertex (x + 0.5f' y - 0.5f' z);  		// Bottom Right  		gl.TexCoord (0' 0);  		gl.Vertex (x - 0.5f' y - 0.5f' z);  		// Bottom Left  		gl.End ();  		// Done Building Triangle Strip  		particles [loop].x += particles [loop].xi / (slowdown * 1000);  		// Move On The X Axis By X Speed  		particles [loop].y += particles [loop].yi / (slowdown * 1000);  		// Move On The Y Axis By Y Speed  		particles [loop].z += particles [loop].zi / (slowdown * 1000);  		// Move On The Z Axis By Z Speed  		particles [loop].xi += particles [loop].xg;  		// Take Pull On X Axis Into Account  		particles [loop].yi += particles [loop].yg;  		// Take Pull On Y Axis Into Account  		particles [loop].zi += particles [loop].zg;  		// Take Pull On Z Axis Into Account  		particles [loop].life -= particles [loop].fade;  		// Reduce Particles Life By 'Fade'  		if (particles [loop].life < 0.0f)// If Particle Is Burned Out  		 {  			particles [loop].life = 1.0f;  			// Give It New Life  			particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  			// Random Fade Speed  			particles [loop].x = 0.0f;  			// Center On X Axis  			particles [loop].y = 0.0f;  			// Center On Y Axis  			particles [loop].z = 0.0f;  			// Center On Z Axis  			particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  			// Random Speed On X Axis  			particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			int colour = random.Next (12);  			particles [loop].r = colors [colour' 0];  			// Select Red From Color Table  			particles [loop].g = colors [colour' 1];  			// Select Green From Color Table  			particles [loop].b = colors [colour' 2];  			// Select Blue From Color Table  		}  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: for (loop = 0; loop < particles.Length; loop++)// Loop Through All The Particles   {  	if (particles [loop].active)// If The Particle Is Active  	 {  		float x = particles [loop].x;  		// Grab Our Particle X Position  		float y = particles [loop].y;  		// Grab Our Particle Y Position  		float z = particles [loop].z + zoom;  		// Particle Z Pos + Zoom  		// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  		gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  		gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  		// Build Quad From A Triangle Strip  		gl.TexCoord (1' 1);  		gl.Vertex (x + 0.5f' y + 0.5f' z);  		// Top Right  		gl.TexCoord (0' 1);  		gl.Vertex (x - 0.5f' y + 0.5f' z);  		// Top Left  		gl.TexCoord (1' 0);  		gl.Vertex (x + 0.5f' y - 0.5f' z);  		// Bottom Right  		gl.TexCoord (0' 0);  		gl.Vertex (x - 0.5f' y - 0.5f' z);  		// Bottom Left  		gl.End ();  		// Done Building Triangle Strip  		particles [loop].x += particles [loop].xi / (slowdown * 1000);  		// Move On The X Axis By X Speed  		particles [loop].y += particles [loop].yi / (slowdown * 1000);  		// Move On The Y Axis By Y Speed  		particles [loop].z += particles [loop].zi / (slowdown * 1000);  		// Move On The Z Axis By Z Speed  		particles [loop].xi += particles [loop].xg;  		// Take Pull On X Axis Into Account  		particles [loop].yi += particles [loop].yg;  		// Take Pull On Y Axis Into Account  		particles [loop].zi += particles [loop].zg;  		// Take Pull On Z Axis Into Account  		particles [loop].life -= particles [loop].fade;  		// Reduce Particles Life By 'Fade'  		if (particles [loop].life < 0.0f)// If Particle Is Burned Out  		 {  			particles [loop].life = 1.0f;  			// Give It New Life  			particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  			// Random Fade Speed  			particles [loop].x = 0.0f;  			// Center On X Axis  			particles [loop].y = 0.0f;  			// Center On Y Axis  			particles [loop].z = 0.0f;  			// Center On Z Axis  			particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  			// Random Speed On X Axis  			particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			int colour = random.Next (12);  			particles [loop].r = colors [colour' 0];  			// Select Red From Color Table  			particles [loop].g = colors [colour' 1];  			// Select Green From Color Table  			particles [loop].b = colors [colour' 2];  			// Select Blue From Color Table  		}  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: for (loop = 0; loop < particles.Length; loop++)// Loop Through All The Particles   {  	if (particles [loop].active)// If The Particle Is Active  	 {  		float x = particles [loop].x;  		// Grab Our Particle X Position  		float y = particles [loop].y;  		// Grab Our Particle Y Position  		float z = particles [loop].z + zoom;  		// Particle Z Pos + Zoom  		// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  		gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  		gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  		// Build Quad From A Triangle Strip  		gl.TexCoord (1' 1);  		gl.Vertex (x + 0.5f' y + 0.5f' z);  		// Top Right  		gl.TexCoord (0' 1);  		gl.Vertex (x - 0.5f' y + 0.5f' z);  		// Top Left  		gl.TexCoord (1' 0);  		gl.Vertex (x + 0.5f' y - 0.5f' z);  		// Bottom Right  		gl.TexCoord (0' 0);  		gl.Vertex (x - 0.5f' y - 0.5f' z);  		// Bottom Left  		gl.End ();  		// Done Building Triangle Strip  		particles [loop].x += particles [loop].xi / (slowdown * 1000);  		// Move On The X Axis By X Speed  		particles [loop].y += particles [loop].yi / (slowdown * 1000);  		// Move On The Y Axis By Y Speed  		particles [loop].z += particles [loop].zi / (slowdown * 1000);  		// Move On The Z Axis By Z Speed  		particles [loop].xi += particles [loop].xg;  		// Take Pull On X Axis Into Account  		particles [loop].yi += particles [loop].yg;  		// Take Pull On Y Axis Into Account  		particles [loop].zi += particles [loop].zg;  		// Take Pull On Z Axis Into Account  		particles [loop].life -= particles [loop].fade;  		// Reduce Particles Life By 'Fade'  		if (particles [loop].life < 0.0f)// If Particle Is Burned Out  		 {  			particles [loop].life = 1.0f;  			// Give It New Life  			particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  			// Random Fade Speed  			particles [loop].x = 0.0f;  			// Center On X Axis  			particles [loop].y = 0.0f;  			// Center On Y Axis  			particles [loop].z = 0.0f;  			// Center On Z Axis  			particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  			// Random Speed On X Axis  			particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			int colour = random.Next (12);  			particles [loop].r = colors [colour' 0];  			// Select Red From Color Table  			particles [loop].g = colors [colour' 1];  			// Select Green From Color Table  			particles [loop].b = colors [colour' 2];  			// Select Blue From Color Table  		}  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: for (loop = 0; loop < particles.Length; loop++)// Loop Through All The Particles   {  	if (particles [loop].active)// If The Particle Is Active  	 {  		float x = particles [loop].x;  		// Grab Our Particle X Position  		float y = particles [loop].y;  		// Grab Our Particle Y Position  		float z = particles [loop].z + zoom;  		// Particle Z Pos + Zoom  		// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  		gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  		gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  		// Build Quad From A Triangle Strip  		gl.TexCoord (1' 1);  		gl.Vertex (x + 0.5f' y + 0.5f' z);  		// Top Right  		gl.TexCoord (0' 1);  		gl.Vertex (x - 0.5f' y + 0.5f' z);  		// Top Left  		gl.TexCoord (1' 0);  		gl.Vertex (x + 0.5f' y - 0.5f' z);  		// Bottom Right  		gl.TexCoord (0' 0);  		gl.Vertex (x - 0.5f' y - 0.5f' z);  		// Bottom Left  		gl.End ();  		// Done Building Triangle Strip  		particles [loop].x += particles [loop].xi / (slowdown * 1000);  		// Move On The X Axis By X Speed  		particles [loop].y += particles [loop].yi / (slowdown * 1000);  		// Move On The Y Axis By Y Speed  		particles [loop].z += particles [loop].zi / (slowdown * 1000);  		// Move On The Z Axis By Z Speed  		particles [loop].xi += particles [loop].xg;  		// Take Pull On X Axis Into Account  		particles [loop].yi += particles [loop].yg;  		// Take Pull On Y Axis Into Account  		particles [loop].zi += particles [loop].zg;  		// Take Pull On Z Axis Into Account  		particles [loop].life -= particles [loop].fade;  		// Reduce Particles Life By 'Fade'  		if (particles [loop].life < 0.0f)// If Particle Is Burned Out  		 {  			particles [loop].life = 1.0f;  			// Give It New Life  			particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  			// Random Fade Speed  			particles [loop].x = 0.0f;  			// Center On X Axis  			particles [loop].y = 0.0f;  			// Center On Y Axis  			particles [loop].z = 0.0f;  			// Center On Z Axis  			particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  			// Random Speed On X Axis  			particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			int colour = random.Next (12);  			particles [loop].r = colors [colour' 0];  			// Select Red From Color Table  			particles [loop].g = colors [colour' 1];  			// Select Green From Color Table  			particles [loop].b = colors [colour' 2];  			// Select Blue From Color Table  		}  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: for (loop = 0; loop < particles.Length; loop++)// Loop Through All The Particles   {  	if (particles [loop].active)// If The Particle Is Active  	 {  		float x = particles [loop].x;  		// Grab Our Particle X Position  		float y = particles [loop].y;  		// Grab Our Particle Y Position  		float z = particles [loop].z + zoom;  		// Particle Z Pos + Zoom  		// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  		gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  		gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  		// Build Quad From A Triangle Strip  		gl.TexCoord (1' 1);  		gl.Vertex (x + 0.5f' y + 0.5f' z);  		// Top Right  		gl.TexCoord (0' 1);  		gl.Vertex (x - 0.5f' y + 0.5f' z);  		// Top Left  		gl.TexCoord (1' 0);  		gl.Vertex (x + 0.5f' y - 0.5f' z);  		// Bottom Right  		gl.TexCoord (0' 0);  		gl.Vertex (x - 0.5f' y - 0.5f' z);  		// Bottom Left  		gl.End ();  		// Done Building Triangle Strip  		particles [loop].x += particles [loop].xi / (slowdown * 1000);  		// Move On The X Axis By X Speed  		particles [loop].y += particles [loop].yi / (slowdown * 1000);  		// Move On The Y Axis By Y Speed  		particles [loop].z += particles [loop].zi / (slowdown * 1000);  		// Move On The Z Axis By Z Speed  		particles [loop].xi += particles [loop].xg;  		// Take Pull On X Axis Into Account  		particles [loop].yi += particles [loop].yg;  		// Take Pull On Y Axis Into Account  		particles [loop].zi += particles [loop].zg;  		// Take Pull On Z Axis Into Account  		particles [loop].life -= particles [loop].fade;  		// Reduce Particles Life By 'Fade'  		if (particles [loop].life < 0.0f)// If Particle Is Burned Out  		 {  			particles [loop].life = 1.0f;  			// Give It New Life  			particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  			// Random Fade Speed  			particles [loop].x = 0.0f;  			// Center On X Axis  			particles [loop].y = 0.0f;  			// Center On Y Axis  			particles [loop].z = 0.0f;  			// Center On Z Axis  			particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  			// Random Speed On X Axis  			particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			int colour = random.Next (12);  			particles [loop].r = colors [colour' 0];  			// Select Red From Color Table  			particles [loop].g = colors [colour' 1];  			// Select Green From Color Table  			particles [loop].b = colors [colour' 2];  			// Select Blue From Color Table  		}  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: for (loop = 0; loop < particles.Length; loop++)// Loop Through All The Particles   {  	if (particles [loop].active)// If The Particle Is Active  	 {  		float x = particles [loop].x;  		// Grab Our Particle X Position  		float y = particles [loop].y;  		// Grab Our Particle Y Position  		float z = particles [loop].z + zoom;  		// Particle Z Pos + Zoom  		// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  		gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  		gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  		// Build Quad From A Triangle Strip  		gl.TexCoord (1' 1);  		gl.Vertex (x + 0.5f' y + 0.5f' z);  		// Top Right  		gl.TexCoord (0' 1);  		gl.Vertex (x - 0.5f' y + 0.5f' z);  		// Top Left  		gl.TexCoord (1' 0);  		gl.Vertex (x + 0.5f' y - 0.5f' z);  		// Bottom Right  		gl.TexCoord (0' 0);  		gl.Vertex (x - 0.5f' y - 0.5f' z);  		// Bottom Left  		gl.End ();  		// Done Building Triangle Strip  		particles [loop].x += particles [loop].xi / (slowdown * 1000);  		// Move On The X Axis By X Speed  		particles [loop].y += particles [loop].yi / (slowdown * 1000);  		// Move On The Y Axis By Y Speed  		particles [loop].z += particles [loop].zi / (slowdown * 1000);  		// Move On The Z Axis By Z Speed  		particles [loop].xi += particles [loop].xg;  		// Take Pull On X Axis Into Account  		particles [loop].yi += particles [loop].yg;  		// Take Pull On Y Axis Into Account  		particles [loop].zi += particles [loop].zg;  		// Take Pull On Z Axis Into Account  		particles [loop].life -= particles [loop].fade;  		// Reduce Particles Life By 'Fade'  		if (particles [loop].life < 0.0f)// If Particle Is Burned Out  		 {  			particles [loop].life = 1.0f;  			// Give It New Life  			particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  			// Random Fade Speed  			particles [loop].x = 0.0f;  			// Center On X Axis  			particles [loop].y = 0.0f;  			// Center On Y Axis  			particles [loop].z = 0.0f;  			// Center On Z Axis  			particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  			// Random Speed On X Axis  			particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			int colour = random.Next (12);  			particles [loop].r = colors [colour' 0];  			// Select Red From Color Table  			particles [loop].g = colors [colour' 1];  			// Select Green From Color Table  			particles [loop].b = colors [colour' 2];  			// Select Blue From Color Table  		}  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: for (loop = 0; loop < particles.Length; loop++)// Loop Through All The Particles   {  	if (particles [loop].active)// If The Particle Is Active  	 {  		float x = particles [loop].x;  		// Grab Our Particle X Position  		float y = particles [loop].y;  		// Grab Our Particle Y Position  		float z = particles [loop].z + zoom;  		// Particle Z Pos + Zoom  		// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  		gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  		gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  		// Build Quad From A Triangle Strip  		gl.TexCoord (1' 1);  		gl.Vertex (x + 0.5f' y + 0.5f' z);  		// Top Right  		gl.TexCoord (0' 1);  		gl.Vertex (x - 0.5f' y + 0.5f' z);  		// Top Left  		gl.TexCoord (1' 0);  		gl.Vertex (x + 0.5f' y - 0.5f' z);  		// Bottom Right  		gl.TexCoord (0' 0);  		gl.Vertex (x - 0.5f' y - 0.5f' z);  		// Bottom Left  		gl.End ();  		// Done Building Triangle Strip  		particles [loop].x += particles [loop].xi / (slowdown * 1000);  		// Move On The X Axis By X Speed  		particles [loop].y += particles [loop].yi / (slowdown * 1000);  		// Move On The Y Axis By Y Speed  		particles [loop].z += particles [loop].zi / (slowdown * 1000);  		// Move On The Z Axis By Z Speed  		particles [loop].xi += particles [loop].xg;  		// Take Pull On X Axis Into Account  		particles [loop].yi += particles [loop].yg;  		// Take Pull On Y Axis Into Account  		particles [loop].zi += particles [loop].zg;  		// Take Pull On Z Axis Into Account  		particles [loop].life -= particles [loop].fade;  		// Reduce Particles Life By 'Fade'  		if (particles [loop].life < 0.0f)// If Particle Is Burned Out  		 {  			particles [loop].life = 1.0f;  			// Give It New Life  			particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  			// Random Fade Speed  			particles [loop].x = 0.0f;  			// Center On X Axis  			particles [loop].y = 0.0f;  			// Center On Y Axis  			particles [loop].z = 0.0f;  			// Center On Z Axis  			particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  			// Random Speed On X Axis  			particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  			// Random Speed On Y Axis  			int colour = random.Next (12);  			particles [loop].r = colors [colour' 0];  			// Select Red From Color Table  			particles [loop].g = colors [colour' 1];  			// Select Green From Color Table  			particles [loop].b = colors [colour' 2];  			// Select Blue From Color Table  		}  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].active)// If The Particle Is Active   {  	float x = particles [loop].x;  	// Grab Our Particle X Position  	float y = particles [loop].y;  	// Grab Our Particle Y Position  	float z = particles [loop].z + zoom;  	// Particle Z Pos + Zoom  	// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  	gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  	gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  	// Build Quad From A Triangle Strip  	gl.TexCoord (1' 1);  	gl.Vertex (x + 0.5f' y + 0.5f' z);  	// Top Right  	gl.TexCoord (0' 1);  	gl.Vertex (x - 0.5f' y + 0.5f' z);  	// Top Left  	gl.TexCoord (1' 0);  	gl.Vertex (x + 0.5f' y - 0.5f' z);  	// Bottom Right  	gl.TexCoord (0' 0);  	gl.Vertex (x - 0.5f' y - 0.5f' z);  	// Bottom Left  	gl.End ();  	// Done Building Triangle Strip  	particles [loop].x += particles [loop].xi / (slowdown * 1000);  	// Move On The X Axis By X Speed  	particles [loop].y += particles [loop].yi / (slowdown * 1000);  	// Move On The Y Axis By Y Speed  	particles [loop].z += particles [loop].zi / (slowdown * 1000);  	// Move On The Z Axis By Z Speed  	particles [loop].xi += particles [loop].xg;  	// Take Pull On X Axis Into Account  	particles [loop].yi += particles [loop].yg;  	// Take Pull On Y Axis Into Account  	particles [loop].zi += particles [loop].zg;  	// Take Pull On Z Axis Into Account  	particles [loop].life -= particles [loop].fade;  	// Reduce Particles Life By 'Fade'  	if (particles [loop].life < 0.0f)// If Particle Is Burned Out  	 {  		particles [loop].life = 1.0f;  		// Give It New Life  		particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  		// Random Fade Speed  		particles [loop].x = 0.0f;  		// Center On X Axis  		particles [loop].y = 0.0f;  		// Center On Y Axis  		particles [loop].z = 0.0f;  		// Center On Z Axis  		particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  		// Random Speed On X Axis  		particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		int colour = random.Next (12);  		particles [loop].r = colors [colour' 0];  		// Select Red From Color Table  		particles [loop].g = colors [colour' 1];  		// Select Green From Color Table  		particles [loop].b = colors [colour' 2];  		// Select Blue From Color Table  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].active)// If The Particle Is Active   {  	float x = particles [loop].x;  	// Grab Our Particle X Position  	float y = particles [loop].y;  	// Grab Our Particle Y Position  	float z = particles [loop].z + zoom;  	// Particle Z Pos + Zoom  	// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  	gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  	gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  	// Build Quad From A Triangle Strip  	gl.TexCoord (1' 1);  	gl.Vertex (x + 0.5f' y + 0.5f' z);  	// Top Right  	gl.TexCoord (0' 1);  	gl.Vertex (x - 0.5f' y + 0.5f' z);  	// Top Left  	gl.TexCoord (1' 0);  	gl.Vertex (x + 0.5f' y - 0.5f' z);  	// Bottom Right  	gl.TexCoord (0' 0);  	gl.Vertex (x - 0.5f' y - 0.5f' z);  	// Bottom Left  	gl.End ();  	// Done Building Triangle Strip  	particles [loop].x += particles [loop].xi / (slowdown * 1000);  	// Move On The X Axis By X Speed  	particles [loop].y += particles [loop].yi / (slowdown * 1000);  	// Move On The Y Axis By Y Speed  	particles [loop].z += particles [loop].zi / (slowdown * 1000);  	// Move On The Z Axis By Z Speed  	particles [loop].xi += particles [loop].xg;  	// Take Pull On X Axis Into Account  	particles [loop].yi += particles [loop].yg;  	// Take Pull On Y Axis Into Account  	particles [loop].zi += particles [loop].zg;  	// Take Pull On Z Axis Into Account  	particles [loop].life -= particles [loop].fade;  	// Reduce Particles Life By 'Fade'  	if (particles [loop].life < 0.0f)// If Particle Is Burned Out  	 {  		particles [loop].life = 1.0f;  		// Give It New Life  		particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  		// Random Fade Speed  		particles [loop].x = 0.0f;  		// Center On X Axis  		particles [loop].y = 0.0f;  		// Center On Y Axis  		particles [loop].z = 0.0f;  		// Center On Z Axis  		particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  		// Random Speed On X Axis  		particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		int colour = random.Next (12);  		particles [loop].r = colors [colour' 0];  		// Select Red From Color Table  		particles [loop].g = colors [colour' 1];  		// Select Green From Color Table  		particles [loop].b = colors [colour' 2];  		// Select Blue From Color Table  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].active)// If The Particle Is Active   {  	float x = particles [loop].x;  	// Grab Our Particle X Position  	float y = particles [loop].y;  	// Grab Our Particle Y Position  	float z = particles [loop].z + zoom;  	// Particle Z Pos + Zoom  	// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  	gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  	gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  	// Build Quad From A Triangle Strip  	gl.TexCoord (1' 1);  	gl.Vertex (x + 0.5f' y + 0.5f' z);  	// Top Right  	gl.TexCoord (0' 1);  	gl.Vertex (x - 0.5f' y + 0.5f' z);  	// Top Left  	gl.TexCoord (1' 0);  	gl.Vertex (x + 0.5f' y - 0.5f' z);  	// Bottom Right  	gl.TexCoord (0' 0);  	gl.Vertex (x - 0.5f' y - 0.5f' z);  	// Bottom Left  	gl.End ();  	// Done Building Triangle Strip  	particles [loop].x += particles [loop].xi / (slowdown * 1000);  	// Move On The X Axis By X Speed  	particles [loop].y += particles [loop].yi / (slowdown * 1000);  	// Move On The Y Axis By Y Speed  	particles [loop].z += particles [loop].zi / (slowdown * 1000);  	// Move On The Z Axis By Z Speed  	particles [loop].xi += particles [loop].xg;  	// Take Pull On X Axis Into Account  	particles [loop].yi += particles [loop].yg;  	// Take Pull On Y Axis Into Account  	particles [loop].zi += particles [loop].zg;  	// Take Pull On Z Axis Into Account  	particles [loop].life -= particles [loop].fade;  	// Reduce Particles Life By 'Fade'  	if (particles [loop].life < 0.0f)// If Particle Is Burned Out  	 {  		particles [loop].life = 1.0f;  		// Give It New Life  		particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  		// Random Fade Speed  		particles [loop].x = 0.0f;  		// Center On X Axis  		particles [loop].y = 0.0f;  		// Center On Y Axis  		particles [loop].z = 0.0f;  		// Center On Z Axis  		particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  		// Random Speed On X Axis  		particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		int colour = random.Next (12);  		particles [loop].r = colors [colour' 0];  		// Select Red From Color Table  		particles [loop].g = colors [colour' 1];  		// Select Green From Color Table  		particles [loop].b = colors [colour' 2];  		// Select Blue From Color Table  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].active)// If The Particle Is Active   {  	float x = particles [loop].x;  	// Grab Our Particle X Position  	float y = particles [loop].y;  	// Grab Our Particle Y Position  	float z = particles [loop].z + zoom;  	// Particle Z Pos + Zoom  	// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  	gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  	gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  	// Build Quad From A Triangle Strip  	gl.TexCoord (1' 1);  	gl.Vertex (x + 0.5f' y + 0.5f' z);  	// Top Right  	gl.TexCoord (0' 1);  	gl.Vertex (x - 0.5f' y + 0.5f' z);  	// Top Left  	gl.TexCoord (1' 0);  	gl.Vertex (x + 0.5f' y - 0.5f' z);  	// Bottom Right  	gl.TexCoord (0' 0);  	gl.Vertex (x - 0.5f' y - 0.5f' z);  	// Bottom Left  	gl.End ();  	// Done Building Triangle Strip  	particles [loop].x += particles [loop].xi / (slowdown * 1000);  	// Move On The X Axis By X Speed  	particles [loop].y += particles [loop].yi / (slowdown * 1000);  	// Move On The Y Axis By Y Speed  	particles [loop].z += particles [loop].zi / (slowdown * 1000);  	// Move On The Z Axis By Z Speed  	particles [loop].xi += particles [loop].xg;  	// Take Pull On X Axis Into Account  	particles [loop].yi += particles [loop].yg;  	// Take Pull On Y Axis Into Account  	particles [loop].zi += particles [loop].zg;  	// Take Pull On Z Axis Into Account  	particles [loop].life -= particles [loop].fade;  	// Reduce Particles Life By 'Fade'  	if (particles [loop].life < 0.0f)// If Particle Is Burned Out  	 {  		particles [loop].life = 1.0f;  		// Give It New Life  		particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  		// Random Fade Speed  		particles [loop].x = 0.0f;  		// Center On X Axis  		particles [loop].y = 0.0f;  		// Center On Y Axis  		particles [loop].z = 0.0f;  		// Center On Z Axis  		particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  		// Random Speed On X Axis  		particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		int colour = random.Next (12);  		particles [loop].r = colors [colour' 0];  		// Select Red From Color Table  		particles [loop].g = colors [colour' 1];  		// Select Green From Color Table  		particles [loop].b = colors [colour' 2];  		// Select Blue From Color Table  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].active)// If The Particle Is Active   {  	float x = particles [loop].x;  	// Grab Our Particle X Position  	float y = particles [loop].y;  	// Grab Our Particle Y Position  	float z = particles [loop].z + zoom;  	// Particle Z Pos + Zoom  	// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  	gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  	gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  	// Build Quad From A Triangle Strip  	gl.TexCoord (1' 1);  	gl.Vertex (x + 0.5f' y + 0.5f' z);  	// Top Right  	gl.TexCoord (0' 1);  	gl.Vertex (x - 0.5f' y + 0.5f' z);  	// Top Left  	gl.TexCoord (1' 0);  	gl.Vertex (x + 0.5f' y - 0.5f' z);  	// Bottom Right  	gl.TexCoord (0' 0);  	gl.Vertex (x - 0.5f' y - 0.5f' z);  	// Bottom Left  	gl.End ();  	// Done Building Triangle Strip  	particles [loop].x += particles [loop].xi / (slowdown * 1000);  	// Move On The X Axis By X Speed  	particles [loop].y += particles [loop].yi / (slowdown * 1000);  	// Move On The Y Axis By Y Speed  	particles [loop].z += particles [loop].zi / (slowdown * 1000);  	// Move On The Z Axis By Z Speed  	particles [loop].xi += particles [loop].xg;  	// Take Pull On X Axis Into Account  	particles [loop].yi += particles [loop].yg;  	// Take Pull On Y Axis Into Account  	particles [loop].zi += particles [loop].zg;  	// Take Pull On Z Axis Into Account  	particles [loop].life -= particles [loop].fade;  	// Reduce Particles Life By 'Fade'  	if (particles [loop].life < 0.0f)// If Particle Is Burned Out  	 {  		particles [loop].life = 1.0f;  		// Give It New Life  		particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  		// Random Fade Speed  		particles [loop].x = 0.0f;  		// Center On X Axis  		particles [loop].y = 0.0f;  		// Center On Y Axis  		particles [loop].z = 0.0f;  		// Center On Z Axis  		particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  		// Random Speed On X Axis  		particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		int colour = random.Next (12);  		particles [loop].r = colors [colour' 0];  		// Select Red From Color Table  		particles [loop].g = colors [colour' 1];  		// Select Green From Color Table  		particles [loop].b = colors [colour' 2];  		// Select Blue From Color Table  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].active)// If The Particle Is Active   {  	float x = particles [loop].x;  	// Grab Our Particle X Position  	float y = particles [loop].y;  	// Grab Our Particle Y Position  	float z = particles [loop].z + zoom;  	// Particle Z Pos + Zoom  	// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  	gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  	gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  	// Build Quad From A Triangle Strip  	gl.TexCoord (1' 1);  	gl.Vertex (x + 0.5f' y + 0.5f' z);  	// Top Right  	gl.TexCoord (0' 1);  	gl.Vertex (x - 0.5f' y + 0.5f' z);  	// Top Left  	gl.TexCoord (1' 0);  	gl.Vertex (x + 0.5f' y - 0.5f' z);  	// Bottom Right  	gl.TexCoord (0' 0);  	gl.Vertex (x - 0.5f' y - 0.5f' z);  	// Bottom Left  	gl.End ();  	// Done Building Triangle Strip  	particles [loop].x += particles [loop].xi / (slowdown * 1000);  	// Move On The X Axis By X Speed  	particles [loop].y += particles [loop].yi / (slowdown * 1000);  	// Move On The Y Axis By Y Speed  	particles [loop].z += particles [loop].zi / (slowdown * 1000);  	// Move On The Z Axis By Z Speed  	particles [loop].xi += particles [loop].xg;  	// Take Pull On X Axis Into Account  	particles [loop].yi += particles [loop].yg;  	// Take Pull On Y Axis Into Account  	particles [loop].zi += particles [loop].zg;  	// Take Pull On Z Axis Into Account  	particles [loop].life -= particles [loop].fade;  	// Reduce Particles Life By 'Fade'  	if (particles [loop].life < 0.0f)// If Particle Is Burned Out  	 {  		particles [loop].life = 1.0f;  		// Give It New Life  		particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  		// Random Fade Speed  		particles [loop].x = 0.0f;  		// Center On X Axis  		particles [loop].y = 0.0f;  		// Center On Y Axis  		particles [loop].z = 0.0f;  		// Center On Z Axis  		particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  		// Random Speed On X Axis  		particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		int colour = random.Next (12);  		particles [loop].r = colors [colour' 0];  		// Select Red From Color Table  		particles [loop].g = colors [colour' 1];  		// Select Green From Color Table  		particles [loop].b = colors [colour' 2];  		// Select Blue From Color Table  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].active)// If The Particle Is Active   {  	float x = particles [loop].x;  	// Grab Our Particle X Position  	float y = particles [loop].y;  	// Grab Our Particle Y Position  	float z = particles [loop].z + zoom;  	// Particle Z Pos + Zoom  	// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  	gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  	gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  	// Build Quad From A Triangle Strip  	gl.TexCoord (1' 1);  	gl.Vertex (x + 0.5f' y + 0.5f' z);  	// Top Right  	gl.TexCoord (0' 1);  	gl.Vertex (x - 0.5f' y + 0.5f' z);  	// Top Left  	gl.TexCoord (1' 0);  	gl.Vertex (x + 0.5f' y - 0.5f' z);  	// Bottom Right  	gl.TexCoord (0' 0);  	gl.Vertex (x - 0.5f' y - 0.5f' z);  	// Bottom Left  	gl.End ();  	// Done Building Triangle Strip  	particles [loop].x += particles [loop].xi / (slowdown * 1000);  	// Move On The X Axis By X Speed  	particles [loop].y += particles [loop].yi / (slowdown * 1000);  	// Move On The Y Axis By Y Speed  	particles [loop].z += particles [loop].zi / (slowdown * 1000);  	// Move On The Z Axis By Z Speed  	particles [loop].xi += particles [loop].xg;  	// Take Pull On X Axis Into Account  	particles [loop].yi += particles [loop].yg;  	// Take Pull On Y Axis Into Account  	particles [loop].zi += particles [loop].zg;  	// Take Pull On Z Axis Into Account  	particles [loop].life -= particles [loop].fade;  	// Reduce Particles Life By 'Fade'  	if (particles [loop].life < 0.0f)// If Particle Is Burned Out  	 {  		particles [loop].life = 1.0f;  		// Give It New Life  		particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  		// Random Fade Speed  		particles [loop].x = 0.0f;  		// Center On X Axis  		particles [loop].y = 0.0f;  		// Center On Y Axis  		particles [loop].z = 0.0f;  		// Center On Z Axis  		particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  		// Random Speed On X Axis  		particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		int colour = random.Next (12);  		particles [loop].r = colors [colour' 0];  		// Select Red From Color Table  		particles [loop].g = colors [colour' 1];  		// Select Green From Color Table  		particles [loop].b = colors [colour' 2];  		// Select Blue From Color Table  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].active)// If The Particle Is Active   {  	float x = particles [loop].x;  	// Grab Our Particle X Position  	float y = particles [loop].y;  	// Grab Our Particle Y Position  	float z = particles [loop].z + zoom;  	// Particle Z Pos + Zoom  	// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  	gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  	gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  	// Build Quad From A Triangle Strip  	gl.TexCoord (1' 1);  	gl.Vertex (x + 0.5f' y + 0.5f' z);  	// Top Right  	gl.TexCoord (0' 1);  	gl.Vertex (x - 0.5f' y + 0.5f' z);  	// Top Left  	gl.TexCoord (1' 0);  	gl.Vertex (x + 0.5f' y - 0.5f' z);  	// Bottom Right  	gl.TexCoord (0' 0);  	gl.Vertex (x - 0.5f' y - 0.5f' z);  	// Bottom Left  	gl.End ();  	// Done Building Triangle Strip  	particles [loop].x += particles [loop].xi / (slowdown * 1000);  	// Move On The X Axis By X Speed  	particles [loop].y += particles [loop].yi / (slowdown * 1000);  	// Move On The Y Axis By Y Speed  	particles [loop].z += particles [loop].zi / (slowdown * 1000);  	// Move On The Z Axis By Z Speed  	particles [loop].xi += particles [loop].xg;  	// Take Pull On X Axis Into Account  	particles [loop].yi += particles [loop].yg;  	// Take Pull On Y Axis Into Account  	particles [loop].zi += particles [loop].zg;  	// Take Pull On Z Axis Into Account  	particles [loop].life -= particles [loop].fade;  	// Reduce Particles Life By 'Fade'  	if (particles [loop].life < 0.0f)// If Particle Is Burned Out  	 {  		particles [loop].life = 1.0f;  		// Give It New Life  		particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  		// Random Fade Speed  		particles [loop].x = 0.0f;  		// Center On X Axis  		particles [loop].y = 0.0f;  		// Center On Y Axis  		particles [loop].z = 0.0f;  		// Center On Z Axis  		particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  		// Random Speed On X Axis  		particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		int colour = random.Next (12);  		particles [loop].r = colors [colour' 0];  		// Select Red From Color Table  		particles [loop].g = colors [colour' 1];  		// Select Green From Color Table  		particles [loop].b = colors [colour' 2];  		// Select Blue From Color Table  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].active)// If The Particle Is Active   {  	float x = particles [loop].x;  	// Grab Our Particle X Position  	float y = particles [loop].y;  	// Grab Our Particle Y Position  	float z = particles [loop].z + zoom;  	// Particle Z Pos + Zoom  	// Draw The Particle Using Our RGB Values' Fade The Particle Based On It's Life  	gl.Color (particles [loop].r' particles [loop].g' particles [loop].b' particles [loop].life);  	gl.Begin (OpenGL.GL_TRIANGLE_STRIP);  	// Build Quad From A Triangle Strip  	gl.TexCoord (1' 1);  	gl.Vertex (x + 0.5f' y + 0.5f' z);  	// Top Right  	gl.TexCoord (0' 1);  	gl.Vertex (x - 0.5f' y + 0.5f' z);  	// Top Left  	gl.TexCoord (1' 0);  	gl.Vertex (x + 0.5f' y - 0.5f' z);  	// Bottom Right  	gl.TexCoord (0' 0);  	gl.Vertex (x - 0.5f' y - 0.5f' z);  	// Bottom Left  	gl.End ();  	// Done Building Triangle Strip  	particles [loop].x += particles [loop].xi / (slowdown * 1000);  	// Move On The X Axis By X Speed  	particles [loop].y += particles [loop].yi / (slowdown * 1000);  	// Move On The Y Axis By Y Speed  	particles [loop].z += particles [loop].zi / (slowdown * 1000);  	// Move On The Z Axis By Z Speed  	particles [loop].xi += particles [loop].xg;  	// Take Pull On X Axis Into Account  	particles [loop].yi += particles [loop].yg;  	// Take Pull On Y Axis Into Account  	particles [loop].zi += particles [loop].zg;  	// Take Pull On Z Axis Into Account  	particles [loop].life -= particles [loop].fade;  	// Reduce Particles Life By 'Fade'  	if (particles [loop].life < 0.0f)// If Particle Is Burned Out  	 {  		particles [loop].life = 1.0f;  		// Give It New Life  		particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  		// Random Fade Speed  		particles [loop].x = 0.0f;  		// Center On X Axis  		particles [loop].y = 0.0f;  		// Center On Y Axis  		particles [loop].z = 0.0f;  		// Center On Z Axis  		particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  		// Random Speed On X Axis  		particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  		// Random Speed On Y Axis  		int colour = random.Next (12);  		particles [loop].r = colors [colour' 0];  		// Select Red From Color Table  		particles [loop].g = colors [colour' 1];  		// Select Green From Color Table  		particles [loop].b = colors [colour' 2];  		// Select Blue From Color Table  	}  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: particles [loop].x += particles [loop].xi / (slowdown * 1000);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: particles [loop].y += particles [loop].yi / (slowdown * 1000);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: particles [loop].z += particles [loop].zi / (slowdown * 1000);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].life < 0.0f)// If Particle Is Burned Out   {  	particles [loop].life = 1.0f;  	// Give It New Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].x = 0.0f;  	// Center On X Axis  	particles [loop].y = 0.0f;  	// Center On Y Axis  	particles [loop].z = 0.0f;  	// Center On Z Axis  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	int colour = random.Next (12);  	particles [loop].r = colors [colour' 0];  	// Select Red From Color Table  	particles [loop].g = colors [colour' 1];  	// Select Green From Color Table  	particles [loop].b = colors [colour' 2];  	// Select Blue From Color Table  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].life < 0.0f)// If Particle Is Burned Out   {  	particles [loop].life = 1.0f;  	// Give It New Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].x = 0.0f;  	// Center On X Axis  	particles [loop].y = 0.0f;  	// Center On Y Axis  	particles [loop].z = 0.0f;  	// Center On Z Axis  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	int colour = random.Next (12);  	particles [loop].r = colors [colour' 0];  	// Select Red From Color Table  	particles [loop].g = colors [colour' 1];  	// Select Green From Color Table  	particles [loop].b = colors [colour' 2];  	// Select Blue From Color Table  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].life < 0.0f)// If Particle Is Burned Out   {  	particles [loop].life = 1.0f;  	// Give It New Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].x = 0.0f;  	// Center On X Axis  	particles [loop].y = 0.0f;  	// Center On Y Axis  	particles [loop].z = 0.0f;  	// Center On Z Axis  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	int colour = random.Next (12);  	particles [loop].r = colors [colour' 0];  	// Select Red From Color Table  	particles [loop].g = colors [colour' 1];  	// Select Green From Color Table  	particles [loop].b = colors [colour' 2];  	// Select Blue From Color Table  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].life < 0.0f)// If Particle Is Burned Out   {  	particles [loop].life = 1.0f;  	// Give It New Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].x = 0.0f;  	// Center On X Axis  	particles [loop].y = 0.0f;  	// Center On Y Axis  	particles [loop].z = 0.0f;  	// Center On Z Axis  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	int colour = random.Next (12);  	particles [loop].r = colors [colour' 0];  	// Select Red From Color Table  	particles [loop].g = colors [colour' 1];  	// Select Green From Color Table  	particles [loop].b = colors [colour' 2];  	// Select Blue From Color Table  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].life < 0.0f)// If Particle Is Burned Out   {  	particles [loop].life = 1.0f;  	// Give It New Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].x = 0.0f;  	// Center On X Axis  	particles [loop].y = 0.0f;  	// Center On Y Axis  	particles [loop].z = 0.0f;  	// Center On Z Axis  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	int colour = random.Next (12);  	particles [loop].r = colors [colour' 0];  	// Select Red From Color Table  	particles [loop].g = colors [colour' 1];  	// Select Green From Color Table  	particles [loop].b = colors [colour' 2];  	// Select Blue From Color Table  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: if (particles [loop].life < 0.0f)// If Particle Is Burned Out   {  	particles [loop].life = 1.0f;  	// Give It New Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].x = 0.0f;  	// Center On X Axis  	particles [loop].y = 0.0f;  	// Center On Y Axis  	particles [loop].z = 0.0f;  	// Center On Z Axis  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	int colour = random.Next (12);  	particles [loop].r = colors [colour' 0];  	// Select Red From Color Table  	particles [loop].g = colors [colour' 1];  	// Select Green From Color Table  	particles [loop].b = colors [colour' 2];  	// Select Blue From Color Table  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLDraw,The following statement contains a magic number: particles [loop].b = colors [colour' 2];  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_Resize,The following statement contains a magic number: gl.Perspective (45.0' Width / Height' 0.1' 200.0);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_Resize,The following statement contains a magic number: gl.Perspective (45.0' Width / Height' 0.1' 200.0);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_Resize,The following statement contains a magic number: gl.Perspective (45.0' Width / Height' 0.1' 200.0);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,buttonBurst_Click,The following statement contains a magic number: for (int i = 0; i < particles.Length; i++) {  	particles [i].x = 0.0f;  	// Center On X Axis  	particles [i].y = 0.0f;  	// Center On Y Axis  	particles [i].z = 0.0f;  	// Center On Z Axis  	particles [i].xi = (float)((random.Next (50)) - 26.0f) * 10.0f;  	// Random Speed On X Axis  	particles [i].yi = (float)((random.Next (50)) - 25.0f) * 10.0f;  	// Random Speed On Y Axis  	particles [i].zi = (float)((random.Next (50)) - 25.0f) * 10.0f;  	// Random Speed On Z Axis  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,buttonBurst_Click,The following statement contains a magic number: for (int i = 0; i < particles.Length; i++) {  	particles [i].x = 0.0f;  	// Center On X Axis  	particles [i].y = 0.0f;  	// Center On Y Axis  	particles [i].z = 0.0f;  	// Center On Z Axis  	particles [i].xi = (float)((random.Next (50)) - 26.0f) * 10.0f;  	// Random Speed On X Axis  	particles [i].yi = (float)((random.Next (50)) - 25.0f) * 10.0f;  	// Random Speed On Y Axis  	particles [i].zi = (float)((random.Next (50)) - 25.0f) * 10.0f;  	// Random Speed On Z Axis  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,buttonBurst_Click,The following statement contains a magic number: for (int i = 0; i < particles.Length; i++) {  	particles [i].x = 0.0f;  	// Center On X Axis  	particles [i].y = 0.0f;  	// Center On Y Axis  	particles [i].z = 0.0f;  	// Center On Z Axis  	particles [i].xi = (float)((random.Next (50)) - 26.0f) * 10.0f;  	// Random Speed On X Axis  	particles [i].yi = (float)((random.Next (50)) - 25.0f) * 10.0f;  	// Random Speed On Y Axis  	particles [i].zi = (float)((random.Next (50)) - 25.0f) * 10.0f;  	// Random Speed On Z Axis  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,buttonBurst_Click,The following statement contains a magic number: particles [i].xi = (float)((random.Next (50)) - 26.0f) * 10.0f;  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,buttonBurst_Click,The following statement contains a magic number: particles [i].yi = (float)((random.Next (50)) - 25.0f) * 10.0f;  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,buttonBurst_Click,The following statement contains a magic number: particles [i].zi = (float)((random.Next (50)) - 25.0f) * 10.0f;  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: for (loop = 0; loop < particleCount; loop++)// Initialize All The Textures   {  	particles [loop] = new Particle ();  	//  Particle count.  	particles [loop].active = true;  	// Make All The Particles Active  	particles [loop].life = 1.0f;  	// Give All The Particles Full Life  	particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  	// Random Fade Speed  	particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  	// Select Red Rainbow Color  	particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  	// Select Red Rainbow Color  	particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  	// Select Red Rainbow Color  	particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  	// Random Speed On X Axis  	particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Y Axis  	particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  	// Random Speed On Z Axis  	particles [loop].xg = 0.0f;  	// Set Horizontal Pull To Zero  	particles [loop].yg = 0.0f;  	// Set Vertical Pull Downward  	particles [loop].zg = 0.0f;  	// Set Pull On Z Axis To Zero  }  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: particles [loop].fade = (float)(random.Next (100)) / 1000.0f + 0.003f;  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: particles [loop].r = colors [loop * (int)((float)12 / (float)particleCount)' 0];  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: particles [loop].g = colors [loop * (int)((float)12 / (float)particleCount)' 1];  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: particles [loop].b = colors [loop * (int)((float)12 / (float)particleCount)' 2];  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: particles [loop].xi = (float)((random.Next (50) - 26.0f) * 10.0f);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: particles [loop].yi = (float)((random.Next (50) - 25.0f) * 10.0f);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,openGLControl1_OpenGLInitialized,The following statement contains a magic number: particles [loop].zi = (float)((random.Next (50) - 25.0f) * 10.0f);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.buttonBurst.Location = new System.Drawing.Point (8' 376);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.buttonBurst.Location = new System.Drawing.Point (8' 376);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.buttonBurst.Size = new System.Drawing.Size (75' 23);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.buttonBurst.Size = new System.Drawing.Size (75' 23);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxGravity.Location = new System.Drawing.Point (96' 384);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxGravity.Location = new System.Drawing.Point (96' 384);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxGravity.Size = new System.Drawing.Size (59' 17);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxGravity.Size = new System.Drawing.Size (59' 17);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.checkBoxGravity.TabIndex = 2;  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point (8' 408);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point (8' 408);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size (238' 13);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size (238' 13);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 3;  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.openGLControl1.FrameRate = 28;  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.openGLControl1.Location = new System.Drawing.Point (10' 8);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.openGLControl1.Location = new System.Drawing.Point (10' 8);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.openGLControl1.Size = new System.Drawing.Size (392' 344);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.openGLControl1.Size = new System.Drawing.Size (392' 344);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (412' 438);  
Magic Number,ParticleSystemSample,FormParticleSystemSample,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WinForms\ParticleSystemSample\FormParticleSystemSample.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (412' 438);  
