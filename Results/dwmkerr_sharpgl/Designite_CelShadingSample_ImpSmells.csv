Implementation smell,Namespace,Class,File,Method,Description
Long Statement,CelShadingSample,Scene,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\CelShadingSample\Scene.cs,Initialise,The length of the statement  "	shaderPerPixel.Create (gl' ManifestResourceLoader.LoadTextFile (@"Shaders\PerPixel.vert")' ManifestResourceLoader.LoadTextFile (@"Shaders\PerPixel.frag")' attributeLocations); " is 175.
Long Statement,CelShadingSample,Scene,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\CelShadingSample\Scene.cs,Initialise,The length of the statement  "	shaderToon.Create (gl' ManifestResourceLoader.LoadTextFile (@"Shaders\Toon.vert")' ManifestResourceLoader.LoadTextFile (@"Shaders\Toon.frag")' attributeLocations); " is 163.
Magic Number,CelShadingSample,Scene,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\CelShadingSample\Scene.cs,CreateProjectionMatrix,The following statement contains a magic number: projectionMatrix = glm.pfrustum (-S' S' -H' H' 1' 100);  
Magic Number,CelShadingSample,TrefoilKnot,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\CelShadingSample\TrefoilKnot.cs,CreateVertexNormalBuffer,The following statement contains a magic number: for (float s = 0; s < 1 - ds / 2; s += ds) {  	for (float t = 0; t < 1 - dt / 2; t += dt) {  		const float E = 0.01f;  		vec3 p = EvaluateTrefoil (s' t);  		vec3 u = EvaluateTrefoil (s + E' t) - p;  		vec3 v = EvaluateTrefoil (s' t + E) - p;  		vec3 n = glm.normalize (glm.cross (u' v));  		vertices [count] = p;  		normals [count] = n;  		count++;  	}  }  
Magic Number,CelShadingSample,TrefoilKnot,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\CelShadingSample\TrefoilKnot.cs,CreateVertexNormalBuffer,The following statement contains a magic number: for (float s = 0; s < 1 - ds / 2; s += ds) {  	for (float t = 0; t < 1 - dt / 2; t += dt) {  		const float E = 0.01f;  		vec3 p = EvaluateTrefoil (s' t);  		vec3 u = EvaluateTrefoil (s + E' t) - p;  		vec3 v = EvaluateTrefoil (s' t + E) - p;  		vec3 n = glm.normalize (glm.cross (u' v));  		vertices [count] = p;  		normals [count] = n;  		count++;  	}  }  
Magic Number,CelShadingSample,TrefoilKnot,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\CelShadingSample\TrefoilKnot.cs,CreateVertexNormalBuffer,The following statement contains a magic number: for (float t = 0; t < 1 - dt / 2; t += dt) {  	const float E = 0.01f;  	vec3 p = EvaluateTrefoil (s' t);  	vec3 u = EvaluateTrefoil (s + E' t) - p;  	vec3 v = EvaluateTrefoil (s' t + E) - p;  	vec3 n = glm.normalize (glm.cross (u' v));  	vertices [count] = p;  	normals [count] = n;  	count++;  }  
Magic Number,CelShadingSample,TrefoilKnot,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\CelShadingSample\TrefoilKnot.cs,CreateVertexNormalBuffer,The following statement contains a magic number: vertexBuffer.SetData (gl' vertexAttributeLocation' vertices.SelectMany (v => v.to_array ()).ToArray ()' false' 3);  
Magic Number,CelShadingSample,TrefoilKnot,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\CelShadingSample\TrefoilKnot.cs,CreateVertexNormalBuffer,The following statement contains a magic number: normalBuffer.SetData (gl' normalAttributeLocation' normals.SelectMany (v => v.to_array ()).ToArray ()' false' 3);  
Missing Default,CelShadingSample,MainWindow,F:\newReposMay17\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\CelShadingSample\MainWindow.xaml.cs,OpenGLControl_OpenGLDraw,The following switch statement is missing a default case: switch (comboRenderMode.SelectedIndex) {  case 0: {  	scene.RenderRetainedMode (gl' checkBoxUseToonShader.IsChecked.Value);  	break;  }  case 1: {  	axies.Render (gl' RenderMode.Design);  	scene.RenderImmediateMode (gl);  	break;  }  }  
