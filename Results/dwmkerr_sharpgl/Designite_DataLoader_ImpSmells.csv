Implementation smell,Namespace,Class,File,Method,Description
Magic Number,DataLoader,MainViewModel,C:\repos\dwmkerr_sharpgl\source\SharpGL\Tools\DataLoader\MainViewModel.cs,CreateScene,The following statement contains a magic number: var camera = new ArcBallCamera()              {                  Name = "Look at camera"'                  Position = new Vertex(-10' -10' 10)              };
Magic Number,DataLoader,MainViewModel,C:\repos\dwmkerr_sharpgl\source\SharpGL\Tools\DataLoader\MainViewModel.cs,CreateScene,The following statement contains a magic number: var camera = new ArcBallCamera()              {                  Name = "Look at camera"'                  Position = new Vertex(-10' -10' 10)              };
Magic Number,DataLoader,MainViewModel,C:\repos\dwmkerr_sharpgl\source\SharpGL\Tools\DataLoader\MainViewModel.cs,CreateScene,The following statement contains a magic number: var camera = new ArcBallCamera()              {                  Name = "Look at camera"'                  Position = new Vertex(-10' -10' 10)              };
Magic Number,DataLoader,MainViewModel,C:\repos\dwmkerr_sharpgl\source\SharpGL\Tools\DataLoader\MainViewModel.cs,CreateScene,The following statement contains a magic number: gl.Create(OpenGLVersion.OpenGL4_4' RenderContextType.DIBSection' 800' 600' 32' null);
Magic Number,DataLoader,MainViewModel,C:\repos\dwmkerr_sharpgl\source\SharpGL\Tools\DataLoader\MainViewModel.cs,CreateScene,The following statement contains a magic number: gl.Create(OpenGLVersion.OpenGL4_4' RenderContextType.DIBSection' 800' 600' 32' null);
Magic Number,DataLoader,MainViewModel,C:\repos\dwmkerr_sharpgl\source\SharpGL\Tools\DataLoader\MainViewModel.cs,CreateScene,The following statement contains a magic number: gl.Create(OpenGLVersion.OpenGL4_4' RenderContextType.DIBSection' 800' 600' 32' null);
Magic Number,DataLoader,MainViewModel,C:\repos\dwmkerr_sharpgl\source\SharpGL\Tools\DataLoader\MainViewModel.cs,DoLoadData,The following statement contains a magic number: foreach (var polygon in polygons)              {                  //  Get the bounds of the polygon.                  BoundingVolume boundingVolume = polygon.BoundingVolume;                  float[] extent = new float[3];                  polygon.BoundingVolume.GetBoundDimensions(out extent[0]' out extent[1]' out extent[2]);                    //  Get the max extent.                  float maxExtent = extent.Max();                    //  Scale so that we are at most 10 units in size.                  float scaleFactor = maxExtent > 10 ? 10.0f / maxExtent : 1;                    polygon.Parent.RemoveChild(polygon);                  polygon.Transformation.ScaleX = scaleFactor;                  polygon.Transformation.ScaleY = scaleFactor;                  polygon.Transformation.ScaleZ = scaleFactor;                  polygon.Freeze(gl);                  Scene.SceneContainer.AddChild(polygon);                    //  Add effects.                  polygon.AddEffect(new OpenGLAttributesEffect());              }
Magic Number,DataLoader,MainViewModel,C:\repos\dwmkerr_sharpgl\source\SharpGL\Tools\DataLoader\MainViewModel.cs,DoLoadData,The following statement contains a magic number: foreach (var polygon in polygons)              {                  //  Get the bounds of the polygon.                  BoundingVolume boundingVolume = polygon.BoundingVolume;                  float[] extent = new float[3];                  polygon.BoundingVolume.GetBoundDimensions(out extent[0]' out extent[1]' out extent[2]);                    //  Get the max extent.                  float maxExtent = extent.Max();                    //  Scale so that we are at most 10 units in size.                  float scaleFactor = maxExtent > 10 ? 10.0f / maxExtent : 1;                    polygon.Parent.RemoveChild(polygon);                  polygon.Transformation.ScaleX = scaleFactor;                  polygon.Transformation.ScaleY = scaleFactor;                  polygon.Transformation.ScaleZ = scaleFactor;                  polygon.Freeze(gl);                  Scene.SceneContainer.AddChild(polygon);                    //  Add effects.                  polygon.AddEffect(new OpenGLAttributesEffect());              }
Magic Number,DataLoader,MainViewModel,C:\repos\dwmkerr_sharpgl\source\SharpGL\Tools\DataLoader\MainViewModel.cs,DoLoadData,The following statement contains a magic number: foreach (var polygon in polygons)              {                  //  Get the bounds of the polygon.                  BoundingVolume boundingVolume = polygon.BoundingVolume;                  float[] extent = new float[3];                  polygon.BoundingVolume.GetBoundDimensions(out extent[0]' out extent[1]' out extent[2]);                    //  Get the max extent.                  float maxExtent = extent.Max();                    //  Scale so that we are at most 10 units in size.                  float scaleFactor = maxExtent > 10 ? 10.0f / maxExtent : 1;                    polygon.Parent.RemoveChild(polygon);                  polygon.Transformation.ScaleX = scaleFactor;                  polygon.Transformation.ScaleY = scaleFactor;                  polygon.Transformation.ScaleZ = scaleFactor;                  polygon.Freeze(gl);                  Scene.SceneContainer.AddChild(polygon);                    //  Add effects.                  polygon.AddEffect(new OpenGLAttributesEffect());              }
