Implementation smell,Namespace,Class,File,Method,Description
Magic Number,DrawingMechanismsSample,GeometryGenerator,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\GeometryGenerator.cs,GenerateGeometry,The following statement contains a magic number: for (uint i = 0; i < numberOfVertices; i++ )              {                  vertices[i].X = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));                  vertices[i].Y = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));                  vertices[i].Z = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));              }
Magic Number,DrawingMechanismsSample,GeometryGenerator,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\GeometryGenerator.cs,GenerateGeometry,The following statement contains a magic number: for (uint i = 0; i < numberOfVertices; i++ )              {                  vertices[i].X = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));                  vertices[i].Y = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));                  vertices[i].Z = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));              }
Magic Number,DrawingMechanismsSample,GeometryGenerator,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\GeometryGenerator.cs,GenerateGeometry,The following statement contains a magic number: for (uint i = 0; i < numberOfVertices; i++ )              {                  vertices[i].X = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));                  vertices[i].Y = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));                  vertices[i].Z = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));              }
Magic Number,DrawingMechanismsSample,GeometryGenerator,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\GeometryGenerator.cs,GenerateGeometry,The following statement contains a magic number: for (uint i = 0; i < numberOfVertices; i++ )              {                  vertices[i].X = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));                  vertices[i].Y = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));                  vertices[i].Z = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));              }
Magic Number,DrawingMechanismsSample,GeometryGenerator,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\GeometryGenerator.cs,GenerateGeometry,The following statement contains a magic number: for (uint i = 0; i < numberOfVertices; i++ )              {                  vertices[i].X = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));                  vertices[i].Y = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));                  vertices[i].Z = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));              }
Magic Number,DrawingMechanismsSample,GeometryGenerator,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\GeometryGenerator.cs,GenerateGeometry,The following statement contains a magic number: for (uint i = 0; i < numberOfVertices; i++ )              {                  vertices[i].X = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));                  vertices[i].Y = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));                  vertices[i].Z = (float)((random.NextDouble() - 0.5) * (maxRadius * 2));              }
Magic Number,DrawingMechanismsSample,MainWindow,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\MainWindow.xaml.cs,RenderVertices_VertexArray,The following statement contains a magic number: gl.VertexPointer(3' 0' vertexArrayValues);
Magic Number,DrawingMechanismsSample,MainWindow,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\MainWindow.xaml.cs,RenderVertices_VertexArray,The following statement contains a magic number: gl.DrawArrays(OpenGL.GL_POINTS' 0' 2);
Magic Number,DrawingMechanismsSample,MainWindow,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\MainWindow.xaml.cs,openGLCtrl_OpenGLInitialized,The following statement contains a magic number: vertexArrayValues = new float[vertices.Length * 3];
Magic Number,DrawingMechanismsSample,MainWindow,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\MainWindow.xaml.cs,ProvideTestValues,The following statement contains a magic number: vertices[2].X = 0.5f;
Magic Number,DrawingMechanismsSample,MainWindow,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\MainWindow.xaml.cs,ProvideTestValues,The following statement contains a magic number: vertices[2].Y = 0.5f;
Magic Number,DrawingMechanismsSample,MainWindow,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\MainWindow.xaml.cs,ProvideTestValues,The following statement contains a magic number: vertices[2].Z = 0.5f;
Missing Default,DrawingMechanismsSample,MainWindow,C:\repos\dwmkerr_sharpgl\source\SharpGL\Samples\WPF\DrawingMechanismsSample\MainWindow.xaml.cs,openGLCtrl_OpenGLDraw,The following switch statement is missing a default case: switch(this.drawingMechanismCombo.SelectedIndex)              {                  case 0:                      RenderVertices_Immediate(args.OpenGL);                      break;                  case 1:                      RenderVertices_VertexArray(args.OpenGL);                      break;              }
