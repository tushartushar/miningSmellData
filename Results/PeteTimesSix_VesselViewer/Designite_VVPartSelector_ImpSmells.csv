Implementation smell,Namespace,Class,File,Method,Description
Long Method,VVPartSelector,CustomPartTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\CustomPartTree.cs,recursiveUpdate,The method has 102 lines of code.
Long Method,VVPartSelector,VViewMenuPartSelectorTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorTree.cs,printMenu,The method has 131 lines of code.
Complex Method,VVPartSelector,CustomPartTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\CustomPartTree.cs,recursiveUpdate,Cyclomatic complexity of the method is 10
Complex Method,VVPartSelector,CustomPartTreeItem,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\CustomPartTreeItem.cs,getActivableEvents,Cyclomatic complexity of the method is 8
Complex Method,VVPartSelector,VViewMenuPartSelectorGlobal,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorGlobal.cs,printMenu,Cyclomatic complexity of the method is 9
Complex Method,VVPartSelector,VViewMenuPartSelectorTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorTree.cs,printMenu,Cyclomatic complexity of the method is 23
Complex Method,VVPartSelector,VViewMenuPartSelectorTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorTree.cs,up,Cyclomatic complexity of the method is 9
Complex Method,VVPartSelector,VViewMenuPartSelectorTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorTree.cs,down,Cyclomatic complexity of the method is 8
Complex Method,VVPartSelector,VVPartSelector,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VVPartSelector.cs,getPartColorSelectMode,Cyclomatic complexity of the method is 8
Complex Method,VVPartSelector,VVsinglePartSubmenu,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VVsinglePartSubmenu.cs,printMenu,Cyclomatic complexity of the method is 9
Complex Method,VVPartSelector,VVsinglePartSubmenu,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VVsinglePartSubmenu.cs,click,Cyclomatic complexity of the method is 12
Complex Method,VVPartSelector,VVsinglePartSubmenu,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VVsinglePartSubmenu.cs,checkPart,Cyclomatic complexity of the method is 8
Long Statement,VVPartSelector,VViewMenuPartSelectorTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorTree.cs,printMenu,The length of the statement  "                            if (tree.selectedItem.selectionMode == (int)SELECTIONMODES.PARTS & counter == tree.selectedItem.selectedLine) pointerPosition = linesPrinted; " is 141.
Long Statement,VVPartSelector,VViewMenuPartSelectorTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorTree.cs,printMenu,The length of the statement  "                            if (tree.selectedItem.selectionMode == (int)SELECTIONMODES.ACTIONS & counter == tree.selectedItem.selectedLine) pointerPosition = linesPrinted; " is 143.
Long Statement,VVPartSelector,VViewMenuPartSelectorTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorTree.cs,sanityCheck,The length of the statement  "                if (tree.selectedItem.selectedLine >= tree.selectedItem.children.Count()) tree.selectedItem.selectedLine = tree.selectedItem.children.Count() - 1; " is 146.
Long Statement,VVPartSelector,VViewMenuPartSelectorTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorTree.cs,sanityCheck,The length of the statement  "                if (tree.selectedItem.selectedLine >= tree.selectedItem.getActivableEvents().Count()) tree.selectedItem.selectedLine = tree.selectedItem.getActivableEvents().Count() - 1; " is 170.
Magic Number,VVPartSelector,VViewMenuPartSelectorGlobal,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorGlobal.cs,printMenu,The following statement contains a magic number: if (pointerPosition + 1 >= height + scrollOffset) scrollOffset = pointerPosition - height + 2;
Magic Number,VVPartSelector,VViewMenuPartSelectorGlobal,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorGlobal.cs,printMenu,The following statement contains a magic number: if (pointerPosition - 1 <= scrollOffset) scrollOffset = pointerPosition - 2;
Magic Number,VVPartSelector,VViewMenuPartSelectorTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorTree.cs,printMenu,The following statement contains a magic number: if (pointerPosition + 1 >= height + scrollOffset) scrollOffset = pointerPosition - height + 2;
Magic Number,VVPartSelector,VViewMenuPartSelectorTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorTree.cs,printMenu,The following statement contains a magic number: if (pointerPosition - 1 <= scrollOffset) scrollOffset = pointerPosition - 2;
Magic Number,VVPartSelector,VVsinglePartSubmenu,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VVsinglePartSubmenu.cs,printMenu,The following statement contains a magic number: if (pointerPosition + 1 >= height + scrollOffset) scrollOffset = pointerPosition - height + 2;
Magic Number,VVPartSelector,VVsinglePartSubmenu,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VVsinglePartSubmenu.cs,printMenu,The following statement contains a magic number: if (pointerPosition - 1 <= scrollOffset) scrollOffset = pointerPosition - 2;
Missing Default,VVPartSelector,VViewMenuPartSelectorTree,C:\repos\PeteTimesSix_VesselViewer\VVPartSelector\VViewMenuPartSelectorTree.cs,click,The following switch statement is missing a default case: switch (tree.selectedItem.selectionMode)                  {                      case (int)SELECTIONMODES.NONE:                          break;                      case (int)SELECTIONMODES.EXPAND_PARTS:                          tree.selectedItem.childrnExpanded = !tree.selectedItem.childrnExpanded;                          break;                      case (int)SELECTIONMODES.EXPAND_ACTIONS:                          tree.selectedItem.actionsExpanded = !tree.selectedItem.actionsExpanded;                          break;                      case (int)SELECTIONMODES.PARTS:                          tree.selectedItem = tree.selectedItem.children[tree.selectedItem.selectedLine];                          tree.selectedItem.selectionMode = (int)SELECTIONMODES.NONE;                          tree.selectedItem.selectedLine = 0;                          break;                      case (int)SELECTIONMODES.ACTIONS:                            //REALLY a lot easier than expected                            if (master.getSymm()){                              string name = tree.selectedItem.getActivableEvents()[tree.selectedItem.selectedLine].guiName;                              foreach (Part part in tree.selectedItem.associatedPart.symmetryCounterparts) {                                  if (part == null) continue;                                  foreach (PartModule pm in part.GetComponents<PartModule>())                                  {                                      foreach (BaseEvent mEvent in pm.Events)                                      {                                          if (mEvent.guiActive & mEvent.active)                                          {                                              if (mEvent.guiName.Equals(name))                                              {                                                  mEvent.Invoke();                                              }                                          }                                      }                                  }                              }                          }                          //the symmetry ones are done first because some actions affect                          //the gui name of the event (such as toggling engines)                          tree.selectedItem.getActivableEvents()[tree.selectedItem.selectedLine].Invoke();                            break;                  }
