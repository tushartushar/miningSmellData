Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,WorkoutWotch.Services.iOS.ExerciseDocument,iCloudExerciseDocumentService,D:\research\architectureSmells\repos\kentcb_WorkoutWotch\Src\WorkoutWotch.Services.iOS\ExerciseDocument\iCloudExerciseDocumentService.cs,InitializeAsync,The length of the parameter synchronizationContextTaskScheduler is 35.
Long Identifier,WorkoutWotch.Services.iOS.ExerciseDocument,iCloudExerciseDocumentService,D:\research\architectureSmells\repos\kentcb_WorkoutWotch\Src\WorkoutWotch.Services.iOS\ExerciseDocument\iCloudExerciseDocumentService.cs,InstigateDocumentLookupAsync,The length of the parameter synchronizationContextTaskScheduler is 35.
Long Identifier,WorkoutWotch.Services.iOS.SystemNotifications,SystemNotificationsService,D:\research\architectureSmells\repos\kentcb_WorkoutWotch\Src\WorkoutWotch.Services.iOS\SystemNotifications\SystemNotificationsService.cs,,The length of the parameter contentSizeCategoryChangedObserver is 34.
Long Statement,WorkoutWotch.Services.iOS.ExerciseDocument,iCloudExerciseDocumentService,D:\research\architectureSmells\repos\kentcb_WorkoutWotch\Src\WorkoutWotch.Services.iOS\ExerciseDocument\iCloudExerciseDocumentService.cs,GetDefaultExerciseDocument,The length of the statement  "            using (var stream = typeof(CannedExerciseDocumentService).Assembly.GetManifestResourceStream("WorkoutWotch.Services.ExerciseDocument.DefaultExerciseDocument.mkd"))" is 163.
Long Statement,WorkoutWotch.Services.iOS.Speech,SpeechService,D:\research\architectureSmells\repos\kentcb_WorkoutWotch\Src\WorkoutWotch.Services.iOS\Speech\SpeechService.cs,Speak,The length of the statement  "                            .FromEventPattern<AVSpeechSynthesizerUteranceEventArgs>(x => synthesizer.DidFinishSpeechUtterance += x' x => synthesizer.DidFinishSpeechUtterance -= x)" is 151.
Magic Number,WorkoutWotch.Services.iOS.Speech,SpeechService,D:\research\architectureSmells\repos\kentcb_WorkoutWotch\Src\WorkoutWotch.Services.iOS\Speech\SpeechService.cs,Speak,The following statement contains a magic number: return Observable                 .Create<Unit>(                     observer =>                     {                         var disposables = new CompositeDisposable();                         var utterance = new AVSpeechUtterance(speechString)                             {                                 Voice = voice'                                 Rate = 0.55f                             }                             .AddTo(disposables);                         var synthesizer = new AVSpeechSynthesizer()                             .AddTo(disposables);                         var finishedUtterance = Observable                             .FromEventPattern<AVSpeechSynthesizerUteranceEventArgs>(x => synthesizer.DidFinishSpeechUtterance += x' x => synthesizer.DidFinishSpeechUtterance -= x)                             .ToSignal()                             .Publish();                          finishedUtterance                             .SubscribeSafe(                                 _ =>                                 {                                     utterance.Dispose();                                     synthesizer.Dispose();                                 })                             .AddTo(disposables);                          finishedUtterance                             .FirstAsync()                             .Subscribe(observer)                             .AddTo(disposables);                          finishedUtterance                             .Connect()                             .AddTo(disposables);                          synthesizer.SpeakUtterance(utterance);                          return disposables;                     });
