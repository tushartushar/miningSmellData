Implementation smell,Namespace,Class,File,Method,Description
Long Statement,KillrVideo,Program,C:\repos\LukeTillman_killrvideo-csharp\src\KillrVideo\Program.cs,Main,The length of the statement  "            // Let the container pick up any components using the MEF-like attributes in referenced assemblies (this will pick up any  " is 121.
Long Statement,KillrVideo.ServiceDiscovery,EtcdServiceDiscovery,C:\repos\LukeTillman_killrvideo-csharp\src\KillrVideo\ServiceDiscovery\EtcdServiceDiscovery.cs,LookupServiceAsync,The length of the statement  "            EtcdResponse response = await _client.GetNodeAsync($"/killrvideo/services/{serviceName}"' ignoreKeyNotFoundException: true).ConfigureAwait(false); " is 146.
Magic Number,KillrVideo.Cassandra,BootstrapDataStaxEnterprise,C:\repos\LukeTillman_killrvideo-csharp\src\KillrVideo\Cassandra\BootstrapDataStaxEnterprise.cs,RegisterDseOnceAvailable,The following statement contains a magic number: while (session == null)              {                  try                  {                      // Find the cassandra service                      IEnumerable<string> hosts = await _serviceDiscovery.LookupServiceAsync("cassandra").ConfigureAwait(false);                      IEnumerable<IPEndPoint> hostIpAndPorts = hosts.Select(ToIpEndPoint);                        // Create cluster builder with contact points                      var builder = Cluster.Builder().AddContactPoints(hostIpAndPorts);                        // Set default query options                      var queryOptions = new QueryOptions();                      queryOptions.SetConsistencyLevel(ConsistencyLevel.LocalQuorum);                      builder.WithQueryOptions(queryOptions);                        Logger.Information("Creating Cassandra session connection to {Keyspace}"' Keyspace);                      session = builder.Build().Connect(Keyspace);                  }                  catch (Exception e)                  {                      attempts++;                      session = null;                        // Don't log exceptions until we've tried 6 times                      if (attempts >= AttemptsBeforeLoggingErrors)                          Logger.Error(e' "Error connecting to killrvideo keyspace in Cassandra");                  }                    if (session != null) continue;                    Logger.Information("Waiting for killrvideo keyspace in Cassandra to be ready");                  await Task.Delay(10000).ConfigureAwait(false);              }
Magic Number,KillrVideo.Cassandra,BootstrapDataStaxEnterprise,C:\repos\LukeTillman_killrvideo-csharp\src\KillrVideo\Cassandra\BootstrapDataStaxEnterprise.cs,ToIpEndPoint,The following statement contains a magic number: if (parts.Length != 2)                  throw new ArgumentException($"{hostAndPort} is not format host:port");
Magic Number,KillrVideo.Configuration,EnvironmentFileProvider,C:\repos\LukeTillman_killrvideo-csharp\src\KillrVideo\Configuration\EnvironmentFileProvider.cs,Load,The following statement contains a magic number: using (FileStream readStream = _fileInfo.OpenRead())              using (var reader = new StreamReader(readStream' Encoding.UTF8))              {                  while (reader.EndOfStream == false)                  {                      string config = reader.ReadLine();                        // Skip empty lines                      if (string.IsNullOrWhiteSpace(config))                          continue;                        // Skip comments                      if (config.StartsWith("#"))                          continue;                        // Split config keys and values and add to dictionary                      string[] configParts = config.Split('=');                      if (configParts.Length != 2)                          throw new InvalidOperationException($"Bad value {config} in {_fileInfo.FullName}");                        fileContents.Add(configParts[0]' configParts[1]);                  }              }
