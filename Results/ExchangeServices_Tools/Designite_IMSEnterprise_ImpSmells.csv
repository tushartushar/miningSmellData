Implementation smell,Namespace,Class,File,Method,Description
Long Method,IMSEnterprise,CSVString,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CSVExport.cs,Group,The method has 113 lines of code.
Long Method,IMSEnterprise,CSVString,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CSVExport.cs,Person,The method has 168 lines of code.
Long Method,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,setupEnterpriseList,The method has 132 lines of code.
Long Method,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,updatePersonInformationList,The method has 199 lines of code.
Long Method,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,updateGroupInformation,The method has 199 lines of code.
Long Method,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,searchPerson,The method has 110 lines of code.
Complex Method,IMSEnterprise,CSVString,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CSVExport.cs,Group,Cyclomatic complexity of the method is 28
Complex Method,IMSEnterprise,CSVString,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CSVExport.cs,Person,Cyclomatic complexity of the method is 39
Complex Method,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,Cyclomatic complexity of the method is 29
Complex Method,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,setupEnterpriseList,Cyclomatic complexity of the method is 34
Complex Method,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,updatePersonInformationList,Cyclomatic complexity of the method is 33
Complex Method,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,updateGroupInformation,Cyclomatic complexity of the method is 41
Complex Method,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,enterpriseList_BeforeExpand,Cyclomatic complexity of the method is 19
Complex Method,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,searchPerson,Cyclomatic complexity of the method is 11
Complex Method,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,addPersonNode,Cyclomatic complexity of the method is 9
Complex Method,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,addItem,Cyclomatic complexity of the method is 8
Complex Method,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,Cyclomatic complexity of the method is 20
Long Parameter List,IMSEnterprise,Error,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\Error.cs,Error,The method has 5 parameters.
Long Parameter List,IMSEnterprise,IMSFileInformationForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSFileInformationForm.cs,IMSFileInformationForm,The method has 6 parameters.
Long Statement,IMSEnterprise,CSVString,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CSVExport.cs,Groups,The length of the statement  "		var all = new StringBuilder ("SourcedID'DescriptionShort'DescriptionLong'GroupType'TimeFrameBegin'TimeFrameEnd'CourseCode'Points'SubjectCode'code'point'hours'grade'governedby'municipality_code'municipality_name'phone'code'street'locality'web'area_name'area_code'manager_area"); " is 277.
Long Statement,IMSEnterprise,CSVString,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CSVExport.cs,Persons,The length of the statement  "		var all = new StringBuilder ("SourcedID'userID1'userID2'FullName'NameGiven'NameFamily'Email'Tel1'Tel2'Tel3'PostCode'Street'Locailty'Birthday'Gender'InstitutionRoleType'SystemRoleType"); " is 185.
Long Statement,IMSEnterprise,CSVString,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CSVExport.cs,Memberships,The length of the statement  "		var all = new StringBuilder ("MSSourcedID'MSourcedid'MIDType'MRoleStatus'MRoleRoleType'MRoleTimeFrameBegin'MRoleTimeFrameEnd\r\n"); " is 131.
Long Statement,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,createSettings,The length of the statement  "	String s = "<?xml version=\"1.0\" encoding=\"utf-8\"?><settings><general><startPoint><root type=\"Unit\">True</root><root type=\"UnitDomain\">False</root><root type=\"SchoolUnit\">False</root><root type=\"Course\">False</root><root type=\"Subject\">False</root><root type=\"EducationGroup\">False</root><root type=\"Class\">False</root><root type=\"Contacts\">False</root><root type=\"Person\">False</root><root type=\"ContactGroup\">False</root></startPoint><problemLister><enabled>True</enabled><warnings>True</warnings><errors>True</errors><maxErrors>0</maxErrors><maxWarnings>0</maxWarnings><log>False</log><logLocation use=\"False\"></logLocation></problemLister><extensions><enabled>True</enabled><distinguish>True</distinguish></extensions></general><startUp><fileToOpen recent=\"3\">-</fileToOpen></startUp></settings>"; " is 828.
Long Statement,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The length of the statement  "					this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value); " is 121.
Long Statement,IMSEnterprise,XmlFile,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\XmlFile.cs,Download,The length of the statement  "	this.Path = System.IO.Path.Combine (tempDirectory.ToString ()' "httpRequestedXml" + rand.Next (0' 1000000000) + ".xml.tmp"); " is 124.
Long Statement,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,openFileDialogBtn_Click,The length of the statement  "			DialogResult result = MessageBox.Show ("The file selected was of the wrong file type' it needs to be an XML-file (.xml)"' "Error"' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error); " is 184.
Long Statement,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,saveSettingsBtn_Click,The length of the statement  "	if (this.maxErrors.Text != this.IMSSettings.General.ProblemLister.MaxErrors.ToString () || this.maxWarnings.Text != this.IMSSettings.General.ProblemLister.MaxWarnings.ToString ()) " is 179.
Long Statement,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,saveSettingsBtn_Click,The length of the statement  "		DialogResult result = MessageBox.Show ("Warning no start point is set. Do you wish set Unit as default?"' "Warning no start point set"' MessageBoxButtons.YesNoCancel' MessageBoxIcon.Error); " is 189.
Long Statement,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,applyStartupSettings,The length of the statement  "			DialogResult result = MessageBox.Show ("You have to select an IMS-file. Do you want to do this now?"' "Error"' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error); " is 164.
Long Statement,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,applyStartupSettings,The length of the statement  "		if (Uri.IsWellFormedUriString (this.urlBox.Text' UriKind.Absolute) || this.urlBox.Text.EndsWith (".xml") || this.urlBox.Text.EndsWith (".xml/")) " is 144.
Long Statement,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,pLLSLOpen_Click,The length of the statement  "		MessageBox.Show ("To take effect' this requires a restart of the program!"' "Notice"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 136.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,fileNotFound,The length of the statement  "	DialogResult result = MessageBox.Show ("File not found. You can not proceed without chosing a IMS Document' do you wish to do that now?"' "Warning"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning); " is 198.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,setupEnterpriseList,The length of the statement  "			addProblem (new Error (-1' "The date of the file is old' is the file saved on a local computer?"' "Enterprise"' ErrorType.Warning' "IMS Document")); " is 148.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,setupEnterpriseList,The length of the statement  "			addProblem (new Error (-1' "Wrong encoding(" + encoding + ") on the IMS Document!"' "XML-encoding"' ErrorType.Warning' "IMS Document")); " is 136.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,setupEnterpriseList,The length of the statement  "			addProblem (new Error (-1' "Could not find any groups in the IMS Document!"' "Group"' ErrorType.Error' "IMS Document")); " is 120.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,setupEnterpriseList,The length of the statement  "			addProblem (new Error (-1' "Could not find any persons in the IMS Document!"' "Person"' ErrorType.Warning' "IMS Document")); " is 124.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,setupEnterpriseList,The length of the statement  "			addProblem (new Error (-1' "Could not find any memberships in the IMS Document!"' "Membership"' ErrorType.Error' "IMS Document")); " is 130.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,setupEnterpriseList,The length of the statement  "											addProblem (new Error (index' "The group is missing short description"' "Group"' ErrorType.Warning' group.sourcedid [0].id)); " is 125.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,setupEnterpriseList,The length of the statement  "											addProblem (new Error (count' "The group short description is empty!"' "Group"' ErrorType.Warning' group.sourcedid [0].id)); " is 124.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,setupEnterpriseList,The length of the statement  "							addProblem (new Error (count' "The persons includes characters that are not allowed"' "Person"' ErrorType.Warning' person.sourcedid [0].id)); " is 141.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,setupEnterpriseList,The length of the statement  "							addProblem (new Error (count' "Something is wrong with the persons name"' "Person"' ErrorType.Warning' person.sourcedid [0].id)); " is 129.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,removeToolStripMenuItem_Click,The length of the statement  "				DialogResult result = MessageBox.Show ("Are you sure you want to remove this item?"' "Warning"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning); " is 145.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,openToolStripMenuItem_Click,The length of the statement  "		DialogResult result = MessageBox.Show ("You are about to load another file without saving' do you want to save the file before continuing?"' "Warning"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning); " is 201.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,openFile,The length of the statement  "			DialogResult result = MessageBox.Show ("The file you have tried to open was of an incorrect file type' it needs to be an XML-file (.xml)"' "Error"' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error); " is 201.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,updatePersonInformationList,The length of the statement  "		this.addProblem (new Error (index' "Person is missing extensions"' "Person"' ErrorType.Warning' ep.person [index].sourcedid [0].id)); " is 133.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,editToolStripMenuItem_Click,The length of the statement  "			if (!enterpriseList.SelectedNode.Tag.ToString ().IsEmpty () && enterpriseList.SelectedNode.Tag != (Object)"DontRemove[!]") { " is 124.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,enterpriseList_BeforeExpand,The length of the statement  "									addProblem (new Error (-1' "Group not found: " + member.sourcedid.id' "IMSEnterprise"' ErrorType.Error' "IMS Document")); " is 121.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,enterpriseList_BeforeExpand,The length of the statement  "									addProblem (new Error (-1' "Person not found: " + member.sourcedid.id' "IMSEnterprise"' ErrorType.Error' "IMS Document")); " is 122.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,iMSfilePropertiesToolStripMenuItem_Click,The length of the statement  "		this.fileInformationForm = new IMSFileInformationForm (new FileInfo (this.currentFilePath)' this.currentFileLoadTime.ToString () + " ms"' this.ep.person.ToList ().Count' this.ep.group.ToList ().Count' this.ep.membership.ToList ().Count' this.downloadAndProcessTime); " is 266.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,saveAsToolStripMenuItem_Click,The length of the statement  "			DialogResult result = MessageBox.Show ("Incorrect file type' the type has be to xml"' "Error"' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error); " is 148.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,MainForm_FormClosing,The length of the statement  "		DialogResult result = MessageBox.Show ("You are about to exit without saving' do you want to save the file before closing?"' "Warning"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning); " is 185.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,addGroupNode,The length of the statement  "		addProblem (new Error (index' "The groups short description is empty!"' "Group"' ErrorType.Warning' group.sourcedid [0].id)); " is 125.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,addPersonNode,The length of the statement  "		addProblem (new Error (index' "The persons name was incorrect format' had numbers or special characters!"' "Person"' ErrorType.Warning' person.sourcedid [0].id)); " is 162.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,addPersonNode,The length of the statement  "		addProblem (new Error (index' "Something is wrong with the persons name' something is missing?"' "Person"' ErrorType.Warning' person.sourcedid [0].id)); " is 152.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,openFromUrlToolStripMenuItem_Click,The length of the statement  "		DialogResult result = MessageBox.Show ("You are about to load another file without saving' do you want to save the file before continuing?"' "Warning"' MessageBoxButtons.YesNo' MessageBoxIcon.Warning); " is 201.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,listView_MouseClick,The length of the statement  "		if (this.listView.SelectedItems [0].Bounds.IntersectsWith (new Rectangle (e.Location' this.listView.SelectedItems [0].Bounds.Size))) { " is 134.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The length of the statement  "			if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") { " is 147.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseClick,The length of the statement  "		if (this.errorListView1.SelectedItems [0].Bounds.IntersectsWith (new Rectangle (e.Location' this.errorListView1.SelectedItems [0].Bounds.Size))) { " is 146.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseClick,The length of the statement  "			if (this.errorListView1.SelectedItems [0].SubItems [3].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) { " is 121.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseClick,The length of the statement  "			else if (this.errorListView1.SelectedItems [0].SubItems [4].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) { " is 126.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,addItem,The length of the statement  "	bool checkWarning = (IMSSettings.General.ProblemLister.MaxWarnings != 0 && this.Warnings > IMSSettings.General.ProblemLister.MaxWarnings); " is 138.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,addItem,The length of the statement  "	bool checkError = (IMSSettings.General.ProblemLister.MaxErrors != 0 && this.Errors > IMSSettings.General.ProblemLister.MaxErrors); " is 130.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,addItem,The length of the statement  "			problem = "Error' Order:" + (this.errorListView1.Items.Count).ToString () + "' index:" + value.Index.ToString () + "' ID:" + value.Id.ToString () + "' Description:" + value.Description + "' Type:" + value.Type + "\r\n"; " is 219.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,addItem,The length of the statement  "			problem = "Warning' Order:" + (this.errorListView1.Items.Count).ToString () + "' index:" + value.Index.ToString () + "' ID:" + value.Id.ToString () + "' Description:" + value.Description + "' Type:" + value.Type + "\r\n"; " is 221.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,exportAsCsvfileToolStripMenuItem_Click,The length of the statement  "				problems += "Error' Order:" + (this.errorListView1.Items.Count + 1).ToString () + "' index:" + value.Index.ToString () + "' ID:" + value.Id.ToString () + "' Description:" + value.Description + "' Type:" + value.Type + "\r\n"; " is 225.
Long Statement,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,exportAsCsvfileToolStripMenuItem_Click,The length of the statement  "				problems += "Warning' Order:" + (this.errorListView1.Items.Count + 1).ToString () + "' index:" + value.Index.ToString () + "' ID:" + value.Id.ToString () + "' Description:" + value.Description + "' Type:" + value.Type + "\r\n"; " is 227.
Long Statement,IMSEnterprise,StringsExtension,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\StringExtensions.cs,Like,The length of the statement  "			foreach (String sString in sStrings)// go through all values between whitespace and check if there is a match with the pattern " is 126.
Long Statement,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,saveAutoCompleteSource,The length of the statement  "		File.WriteAllLines (filePath' this.inputDialogComboBox.Items.Cast<Object> ().Select (item => item.ToString ()).ToArray ()' Encoding.Default); " is 141.
Long Statement,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,setProgress,The length of the statement  "					this.progress.Text = this.getPrefix (Convert.ToDouble (e.BytesReceived)) + " / " + this.getPrefix (Convert.ToDouble (e.BytesReceived)); " is 135.
Long Statement,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,progressComplete,The length of the statement  "					MessageBox.Show ("The IMS Document was successfully loaded!\n\nProcessing and downloading took: " + (this.Timer.ElapsedMilliseconds / 1000).ToString () + " seconds."); " is 167.
Long Statement,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,getHttpFile,The length of the statement  "			MessageBox.Show ("A process is still runing from the first attempt to load a file. Please wait a few seconds before trying again!"); " is 132.
Empty Catch Block,IMSEnterprise,XmlFile,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\XmlFile.cs,Download,The method has an empty catch block.
Empty Catch Block,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,UrlInputDialog,The method has an empty catch block.
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.DownloadArgs != null) {  	if (this.Options.DownloadArgs.Length == 2) {  		try {  			this.Download (this.Options.DownloadArgs [0]' this.Options.DownloadArgs [1]);  		}  		catch (Exception e) {  			Console.WriteLine ("Error: failed to download file' message: " + e.Message);  			return 2;  		}  	}  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify an url to download and a file name?");  		this.Options.GetUsage ();  		return -1;  	}  }  else if (this.Options.ExportArgs != null) {  	if (this.Options.ExportArgs.Length == 2)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]);  	else if (this.Options.ExportArgs.Length == 3)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  		this.Options.GetUsage ();  		return -1;  	}  }  else  	return -1;  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.DownloadArgs != null) {  	if (this.Options.DownloadArgs.Length == 2) {  		try {  			this.Download (this.Options.DownloadArgs [0]' this.Options.DownloadArgs [1]);  		}  		catch (Exception e) {  			Console.WriteLine ("Error: failed to download file' message: " + e.Message);  			return 2;  		}  	}  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify an url to download and a file name?");  		this.Options.GetUsage ();  		return -1;  	}  }  else if (this.Options.ExportArgs != null) {  	if (this.Options.ExportArgs.Length == 2)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]);  	else if (this.Options.ExportArgs.Length == 3)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  		this.Options.GetUsage ();  		return -1;  	}  }  else  	return -1;  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.DownloadArgs != null) {  	if (this.Options.DownloadArgs.Length == 2) {  		try {  			this.Download (this.Options.DownloadArgs [0]' this.Options.DownloadArgs [1]);  		}  		catch (Exception e) {  			Console.WriteLine ("Error: failed to download file' message: " + e.Message);  			return 2;  		}  	}  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify an url to download and a file name?");  		this.Options.GetUsage ();  		return -1;  	}  }  else if (this.Options.ExportArgs != null) {  	if (this.Options.ExportArgs.Length == 2)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]);  	else if (this.Options.ExportArgs.Length == 3)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  		this.Options.GetUsage ();  		return -1;  	}  }  else  	return -1;  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.DownloadArgs != null) {  	if (this.Options.DownloadArgs.Length == 2) {  		try {  			this.Download (this.Options.DownloadArgs [0]' this.Options.DownloadArgs [1]);  		}  		catch (Exception e) {  			Console.WriteLine ("Error: failed to download file' message: " + e.Message);  			return 2;  		}  	}  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify an url to download and a file name?");  		this.Options.GetUsage ();  		return -1;  	}  }  else if (this.Options.ExportArgs != null) {  	if (this.Options.ExportArgs.Length == 2)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]);  	else if (this.Options.ExportArgs.Length == 3)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  		this.Options.GetUsage ();  		return -1;  	}  }  else  	return -1;  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.DownloadArgs != null) {  	if (this.Options.DownloadArgs.Length == 2) {  		try {  			this.Download (this.Options.DownloadArgs [0]' this.Options.DownloadArgs [1]);  		}  		catch (Exception e) {  			Console.WriteLine ("Error: failed to download file' message: " + e.Message);  			return 2;  		}  	}  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify an url to download and a file name?");  		this.Options.GetUsage ();  		return -1;  	}  }  else if (this.Options.ExportArgs != null) {  	if (this.Options.ExportArgs.Length == 2)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]);  	else if (this.Options.ExportArgs.Length == 3)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  		this.Options.GetUsage ();  		return -1;  	}  }  else  	return -1;  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.DownloadArgs.Length == 2) {  	try {  		this.Download (this.Options.DownloadArgs [0]' this.Options.DownloadArgs [1]);  	}  	catch (Exception e) {  		Console.WriteLine ("Error: failed to download file' message: " + e.Message);  		return 2;  	}  }  else {  	// Wrong argument length' show error message and help text.  	Console.WriteLine ("Error: Wrong input. Did you specify an url to download and a file name?");  	this.Options.GetUsage ();  	return -1;  }  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.DownloadArgs.Length == 2) {  	try {  		this.Download (this.Options.DownloadArgs [0]' this.Options.DownloadArgs [1]);  	}  	catch (Exception e) {  		Console.WriteLine ("Error: failed to download file' message: " + e.Message);  		return 2;  	}  }  else {  	// Wrong argument length' show error message and help text.  	Console.WriteLine ("Error: Wrong input. Did you specify an url to download and a file name?");  	this.Options.GetUsage ();  	return -1;  }  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: try {  	this.Download (this.Options.DownloadArgs [0]' this.Options.DownloadArgs [1]);  }  catch (Exception e) {  	Console.WriteLine ("Error: failed to download file' message: " + e.Message);  	return 2;  }  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: return 2;  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.ExportArgs != null) {  	if (this.Options.ExportArgs.Length == 2)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]);  	else if (this.Options.ExportArgs.Length == 3)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  		this.Options.GetUsage ();  		return -1;  	}  }  else  	return -1;  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.ExportArgs != null) {  	if (this.Options.ExportArgs.Length == 2)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]);  	else if (this.Options.ExportArgs.Length == 3)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  		this.Options.GetUsage ();  		return -1;  	}  }  else  	return -1;  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.ExportArgs != null) {  	if (this.Options.ExportArgs.Length == 2)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]);  	else if (this.Options.ExportArgs.Length == 3)  		this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  	else {  		// Wrong argument length' show error message and help text.  		Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  		this.Options.GetUsage ();  		return -1;  	}  }  else  	return -1;  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.ExportArgs.Length == 2)  	this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]);  else if (this.Options.ExportArgs.Length == 3)  	this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  else {  	// Wrong argument length' show error message and help text.  	Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  	this.Options.GetUsage ();  	return -1;  }  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.ExportArgs.Length == 2)  	this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]);  else if (this.Options.ExportArgs.Length == 3)  	this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  else {  	// Wrong argument length' show error message and help text.  	Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  	this.Options.GetUsage ();  	return -1;  }  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.ExportArgs.Length == 2)  	this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]);  else if (this.Options.ExportArgs.Length == 3)  	this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  else {  	// Wrong argument length' show error message and help text.  	Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  	this.Options.GetUsage ();  	return -1;  }  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.ExportArgs.Length == 3)  	this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  else {  	// Wrong argument length' show error message and help text.  	Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  	this.Options.GetUsage ();  	return -1;  }  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: if (this.Options.ExportArgs.Length == 3)  	this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  else {  	// Wrong argument length' show error message and help text.  	Console.WriteLine ("Error: Wrong input. Did you specify a file to export and a export type?");  	this.Options.GetUsage ();  	return -1;  }  
Magic Number,IMSEnterprise,CommandLineInterface,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CommandLineInterface.cs,Run,The following statement contains a magic number: this.Export (this.Options.ExportArgs [0]' this.Options.ExportArgs [1]' this.Options.ExportArgs [2]);  
Magic Number,IMSEnterprise,CustomCheckedListBox,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\CustomCheckedListBox.cs,CustomCheckedListBox,The following statement contains a magic number: this.ItemHeight = Font.Height + 5;  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: foreach (XmlNode subNode in node.ChildNodes) {  	if (subNode.Name == find) {  		foreach (XmlNode rootNode in subNode.ChildNodes) {  			switch (find) {  			case "startPoint":  				Root root = new Root ();  				root.Type = rootNode.Attributes [0].Value;  				root.Value = Convert.ToBoolean (rootNode.InnerText);  				this.General.StartPoint.Roots.Add (root);  				break;  			case "problemLister":  				this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  				this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  				this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  				this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  				this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  				this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  				this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  				this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  				break;  			case "extensions":  				this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  				this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  				break;  			case "fileToOpen":  				FileToOpen fto = new FileToOpen ();  				fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  				fto.Value = rootNode.InnerText;  				this.Startup.FileToOpen = fto;  				break;  			}  		}  	}  	else {  		this.setValues (subNode' find);  	}  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: foreach (XmlNode subNode in node.ChildNodes) {  	if (subNode.Name == find) {  		foreach (XmlNode rootNode in subNode.ChildNodes) {  			switch (find) {  			case "startPoint":  				Root root = new Root ();  				root.Type = rootNode.Attributes [0].Value;  				root.Value = Convert.ToBoolean (rootNode.InnerText);  				this.General.StartPoint.Roots.Add (root);  				break;  			case "problemLister":  				this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  				this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  				this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  				this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  				this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  				this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  				this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  				this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  				break;  			case "extensions":  				this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  				this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  				break;  			case "fileToOpen":  				FileToOpen fto = new FileToOpen ();  				fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  				fto.Value = rootNode.InnerText;  				this.Startup.FileToOpen = fto;  				break;  			}  		}  	}  	else {  		this.setValues (subNode' find);  	}  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: foreach (XmlNode subNode in node.ChildNodes) {  	if (subNode.Name == find) {  		foreach (XmlNode rootNode in subNode.ChildNodes) {  			switch (find) {  			case "startPoint":  				Root root = new Root ();  				root.Type = rootNode.Attributes [0].Value;  				root.Value = Convert.ToBoolean (rootNode.InnerText);  				this.General.StartPoint.Roots.Add (root);  				break;  			case "problemLister":  				this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  				this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  				this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  				this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  				this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  				this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  				this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  				this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  				break;  			case "extensions":  				this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  				this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  				break;  			case "fileToOpen":  				FileToOpen fto = new FileToOpen ();  				fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  				fto.Value = rootNode.InnerText;  				this.Startup.FileToOpen = fto;  				break;  			}  		}  	}  	else {  		this.setValues (subNode' find);  	}  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: foreach (XmlNode subNode in node.ChildNodes) {  	if (subNode.Name == find) {  		foreach (XmlNode rootNode in subNode.ChildNodes) {  			switch (find) {  			case "startPoint":  				Root root = new Root ();  				root.Type = rootNode.Attributes [0].Value;  				root.Value = Convert.ToBoolean (rootNode.InnerText);  				this.General.StartPoint.Roots.Add (root);  				break;  			case "problemLister":  				this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  				this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  				this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  				this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  				this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  				this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  				this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  				this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  				break;  			case "extensions":  				this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  				this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  				break;  			case "fileToOpen":  				FileToOpen fto = new FileToOpen ();  				fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  				fto.Value = rootNode.InnerText;  				this.Startup.FileToOpen = fto;  				break;  			}  		}  	}  	else {  		this.setValues (subNode' find);  	}  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: foreach (XmlNode subNode in node.ChildNodes) {  	if (subNode.Name == find) {  		foreach (XmlNode rootNode in subNode.ChildNodes) {  			switch (find) {  			case "startPoint":  				Root root = new Root ();  				root.Type = rootNode.Attributes [0].Value;  				root.Value = Convert.ToBoolean (rootNode.InnerText);  				this.General.StartPoint.Roots.Add (root);  				break;  			case "problemLister":  				this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  				this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  				this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  				this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  				this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  				this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  				this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  				this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  				break;  			case "extensions":  				this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  				this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  				break;  			case "fileToOpen":  				FileToOpen fto = new FileToOpen ();  				fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  				fto.Value = rootNode.InnerText;  				this.Startup.FileToOpen = fto;  				break;  			}  		}  	}  	else {  		this.setValues (subNode' find);  	}  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: foreach (XmlNode subNode in node.ChildNodes) {  	if (subNode.Name == find) {  		foreach (XmlNode rootNode in subNode.ChildNodes) {  			switch (find) {  			case "startPoint":  				Root root = new Root ();  				root.Type = rootNode.Attributes [0].Value;  				root.Value = Convert.ToBoolean (rootNode.InnerText);  				this.General.StartPoint.Roots.Add (root);  				break;  			case "problemLister":  				this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  				this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  				this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  				this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  				this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  				this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  				this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  				this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  				break;  			case "extensions":  				this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  				this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  				break;  			case "fileToOpen":  				FileToOpen fto = new FileToOpen ();  				fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  				fto.Value = rootNode.InnerText;  				this.Startup.FileToOpen = fto;  				break;  			}  		}  	}  	else {  		this.setValues (subNode' find);  	}  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: if (subNode.Name == find) {  	foreach (XmlNode rootNode in subNode.ChildNodes) {  		switch (find) {  		case "startPoint":  			Root root = new Root ();  			root.Type = rootNode.Attributes [0].Value;  			root.Value = Convert.ToBoolean (rootNode.InnerText);  			this.General.StartPoint.Roots.Add (root);  			break;  		case "problemLister":  			this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  			this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  			this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  			this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  			this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  			this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  			this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  			this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  			break;  		case "extensions":  			this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  			this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  			break;  		case "fileToOpen":  			FileToOpen fto = new FileToOpen ();  			fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  			fto.Value = rootNode.InnerText;  			this.Startup.FileToOpen = fto;  			break;  		}  	}  }  else {  	this.setValues (subNode' find);  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: if (subNode.Name == find) {  	foreach (XmlNode rootNode in subNode.ChildNodes) {  		switch (find) {  		case "startPoint":  			Root root = new Root ();  			root.Type = rootNode.Attributes [0].Value;  			root.Value = Convert.ToBoolean (rootNode.InnerText);  			this.General.StartPoint.Roots.Add (root);  			break;  		case "problemLister":  			this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  			this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  			this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  			this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  			this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  			this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  			this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  			this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  			break;  		case "extensions":  			this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  			this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  			break;  		case "fileToOpen":  			FileToOpen fto = new FileToOpen ();  			fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  			fto.Value = rootNode.InnerText;  			this.Startup.FileToOpen = fto;  			break;  		}  	}  }  else {  	this.setValues (subNode' find);  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: if (subNode.Name == find) {  	foreach (XmlNode rootNode in subNode.ChildNodes) {  		switch (find) {  		case "startPoint":  			Root root = new Root ();  			root.Type = rootNode.Attributes [0].Value;  			root.Value = Convert.ToBoolean (rootNode.InnerText);  			this.General.StartPoint.Roots.Add (root);  			break;  		case "problemLister":  			this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  			this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  			this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  			this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  			this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  			this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  			this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  			this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  			break;  		case "extensions":  			this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  			this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  			break;  		case "fileToOpen":  			FileToOpen fto = new FileToOpen ();  			fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  			fto.Value = rootNode.InnerText;  			this.Startup.FileToOpen = fto;  			break;  		}  	}  }  else {  	this.setValues (subNode' find);  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: if (subNode.Name == find) {  	foreach (XmlNode rootNode in subNode.ChildNodes) {  		switch (find) {  		case "startPoint":  			Root root = new Root ();  			root.Type = rootNode.Attributes [0].Value;  			root.Value = Convert.ToBoolean (rootNode.InnerText);  			this.General.StartPoint.Roots.Add (root);  			break;  		case "problemLister":  			this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  			this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  			this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  			this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  			this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  			this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  			this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  			this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  			break;  		case "extensions":  			this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  			this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  			break;  		case "fileToOpen":  			FileToOpen fto = new FileToOpen ();  			fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  			fto.Value = rootNode.InnerText;  			this.Startup.FileToOpen = fto;  			break;  		}  	}  }  else {  	this.setValues (subNode' find);  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: if (subNode.Name == find) {  	foreach (XmlNode rootNode in subNode.ChildNodes) {  		switch (find) {  		case "startPoint":  			Root root = new Root ();  			root.Type = rootNode.Attributes [0].Value;  			root.Value = Convert.ToBoolean (rootNode.InnerText);  			this.General.StartPoint.Roots.Add (root);  			break;  		case "problemLister":  			this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  			this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  			this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  			this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  			this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  			this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  			this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  			this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  			break;  		case "extensions":  			this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  			this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  			break;  		case "fileToOpen":  			FileToOpen fto = new FileToOpen ();  			fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  			fto.Value = rootNode.InnerText;  			this.Startup.FileToOpen = fto;  			break;  		}  	}  }  else {  	this.setValues (subNode' find);  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: if (subNode.Name == find) {  	foreach (XmlNode rootNode in subNode.ChildNodes) {  		switch (find) {  		case "startPoint":  			Root root = new Root ();  			root.Type = rootNode.Attributes [0].Value;  			root.Value = Convert.ToBoolean (rootNode.InnerText);  			this.General.StartPoint.Roots.Add (root);  			break;  		case "problemLister":  			this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  			this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  			this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  			this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  			this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  			this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  			this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  			this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  			break;  		case "extensions":  			this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  			this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  			break;  		case "fileToOpen":  			FileToOpen fto = new FileToOpen ();  			fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  			fto.Value = rootNode.InnerText;  			this.Startup.FileToOpen = fto;  			break;  		}  	}  }  else {  	this.setValues (subNode' find);  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: foreach (XmlNode rootNode in subNode.ChildNodes) {  	switch (find) {  	case "startPoint":  		Root root = new Root ();  		root.Type = rootNode.Attributes [0].Value;  		root.Value = Convert.ToBoolean (rootNode.InnerText);  		this.General.StartPoint.Roots.Add (root);  		break;  	case "problemLister":  		this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  		this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  		this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  		this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  		this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  		this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  		this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  		this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  		break;  	case "extensions":  		this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  		this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  		break;  	case "fileToOpen":  		FileToOpen fto = new FileToOpen ();  		fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  		fto.Value = rootNode.InnerText;  		this.Startup.FileToOpen = fto;  		break;  	}  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: foreach (XmlNode rootNode in subNode.ChildNodes) {  	switch (find) {  	case "startPoint":  		Root root = new Root ();  		root.Type = rootNode.Attributes [0].Value;  		root.Value = Convert.ToBoolean (rootNode.InnerText);  		this.General.StartPoint.Roots.Add (root);  		break;  	case "problemLister":  		this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  		this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  		this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  		this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  		this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  		this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  		this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  		this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  		break;  	case "extensions":  		this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  		this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  		break;  	case "fileToOpen":  		FileToOpen fto = new FileToOpen ();  		fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  		fto.Value = rootNode.InnerText;  		this.Startup.FileToOpen = fto;  		break;  	}  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: foreach (XmlNode rootNode in subNode.ChildNodes) {  	switch (find) {  	case "startPoint":  		Root root = new Root ();  		root.Type = rootNode.Attributes [0].Value;  		root.Value = Convert.ToBoolean (rootNode.InnerText);  		this.General.StartPoint.Roots.Add (root);  		break;  	case "problemLister":  		this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  		this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  		this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  		this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  		this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  		this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  		this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  		this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  		break;  	case "extensions":  		this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  		this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  		break;  	case "fileToOpen":  		FileToOpen fto = new FileToOpen ();  		fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  		fto.Value = rootNode.InnerText;  		this.Startup.FileToOpen = fto;  		break;  	}  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: foreach (XmlNode rootNode in subNode.ChildNodes) {  	switch (find) {  	case "startPoint":  		Root root = new Root ();  		root.Type = rootNode.Attributes [0].Value;  		root.Value = Convert.ToBoolean (rootNode.InnerText);  		this.General.StartPoint.Roots.Add (root);  		break;  	case "problemLister":  		this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  		this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  		this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  		this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  		this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  		this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  		this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  		this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  		break;  	case "extensions":  		this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  		this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  		break;  	case "fileToOpen":  		FileToOpen fto = new FileToOpen ();  		fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  		fto.Value = rootNode.InnerText;  		this.Startup.FileToOpen = fto;  		break;  	}  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: foreach (XmlNode rootNode in subNode.ChildNodes) {  	switch (find) {  	case "startPoint":  		Root root = new Root ();  		root.Type = rootNode.Attributes [0].Value;  		root.Value = Convert.ToBoolean (rootNode.InnerText);  		this.General.StartPoint.Roots.Add (root);  		break;  	case "problemLister":  		this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  		this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  		this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  		this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  		this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  		this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  		this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  		this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  		break;  	case "extensions":  		this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  		this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  		break;  	case "fileToOpen":  		FileToOpen fto = new FileToOpen ();  		fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  		fto.Value = rootNode.InnerText;  		this.Startup.FileToOpen = fto;  		break;  	}  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: foreach (XmlNode rootNode in subNode.ChildNodes) {  	switch (find) {  	case "startPoint":  		Root root = new Root ();  		root.Type = rootNode.Attributes [0].Value;  		root.Value = Convert.ToBoolean (rootNode.InnerText);  		this.General.StartPoint.Roots.Add (root);  		break;  	case "problemLister":  		this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  		this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  		this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  		this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  		this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  		this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  		this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  		this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  		break;  	case "extensions":  		this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  		this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  		break;  	case "fileToOpen":  		FileToOpen fto = new FileToOpen ();  		fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  		fto.Value = rootNode.InnerText;  		this.Startup.FileToOpen = fto;  		break;  	}  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: switch (find) {  case "startPoint":  	Root root = new Root ();  	root.Type = rootNode.Attributes [0].Value;  	root.Value = Convert.ToBoolean (rootNode.InnerText);  	this.General.StartPoint.Roots.Add (root);  	break;  case "problemLister":  	this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  	this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  	this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  	this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  	this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  	this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  	break;  case "extensions":  	this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	break;  case "fileToOpen":  	FileToOpen fto = new FileToOpen ();  	fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  	fto.Value = rootNode.InnerText;  	this.Startup.FileToOpen = fto;  	break;  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: switch (find) {  case "startPoint":  	Root root = new Root ();  	root.Type = rootNode.Attributes [0].Value;  	root.Value = Convert.ToBoolean (rootNode.InnerText);  	this.General.StartPoint.Roots.Add (root);  	break;  case "problemLister":  	this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  	this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  	this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  	this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  	this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  	this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  	break;  case "extensions":  	this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	break;  case "fileToOpen":  	FileToOpen fto = new FileToOpen ();  	fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  	fto.Value = rootNode.InnerText;  	this.Startup.FileToOpen = fto;  	break;  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: switch (find) {  case "startPoint":  	Root root = new Root ();  	root.Type = rootNode.Attributes [0].Value;  	root.Value = Convert.ToBoolean (rootNode.InnerText);  	this.General.StartPoint.Roots.Add (root);  	break;  case "problemLister":  	this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  	this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  	this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  	this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  	this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  	this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  	break;  case "extensions":  	this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	break;  case "fileToOpen":  	FileToOpen fto = new FileToOpen ();  	fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  	fto.Value = rootNode.InnerText;  	this.Startup.FileToOpen = fto;  	break;  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: switch (find) {  case "startPoint":  	Root root = new Root ();  	root.Type = rootNode.Attributes [0].Value;  	root.Value = Convert.ToBoolean (rootNode.InnerText);  	this.General.StartPoint.Roots.Add (root);  	break;  case "problemLister":  	this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  	this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  	this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  	this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  	this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  	this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  	break;  case "extensions":  	this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	break;  case "fileToOpen":  	FileToOpen fto = new FileToOpen ();  	fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  	fto.Value = rootNode.InnerText;  	this.Startup.FileToOpen = fto;  	break;  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: switch (find) {  case "startPoint":  	Root root = new Root ();  	root.Type = rootNode.Attributes [0].Value;  	root.Value = Convert.ToBoolean (rootNode.InnerText);  	this.General.StartPoint.Roots.Add (root);  	break;  case "problemLister":  	this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  	this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  	this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  	this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  	this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  	this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  	break;  case "extensions":  	this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	break;  case "fileToOpen":  	FileToOpen fto = new FileToOpen ();  	fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  	fto.Value = rootNode.InnerText;  	this.Startup.FileToOpen = fto;  	break;  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: switch (find) {  case "startPoint":  	Root root = new Root ();  	root.Type = rootNode.Attributes [0].Value;  	root.Value = Convert.ToBoolean (rootNode.InnerText);  	this.General.StartPoint.Roots.Add (root);  	break;  case "problemLister":  	this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  	this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  	this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  	this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  	this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  	this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  	break;  case "extensions":  	this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	break;  case "fileToOpen":  	FileToOpen fto = new FileToOpen ();  	fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  	fto.Value = rootNode.InnerText;  	this.Startup.FileToOpen = fto;  	break;  }  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  
Magic Number,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following statement contains a magic number: this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  
Magic Number,IMSEnterprise,XmlFile,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\XmlFile.cs,Download,The following statement contains a magic number: this.Path = System.IO.Path.Combine (tempDirectory.ToString ()' "httpRequestedXml" + rand.Next (0' 1000000000) + ".xml.tmp");  
Magic Number,IMSEnterprise,XmlFile,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\XmlFile.cs,Download,The following statement contains a magic number: try {  	wc.DownloadFileAsync (new Uri (url)' this.Path);  	while (wc.IsBusy) {  		if (consoleLog)  			Console.Write (".");  		Thread.Sleep (500);  	}  }  catch (WebException e) {  	wc.Dispose ();  	throw e;  }  
Magic Number,IMSEnterprise,XmlFile,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\XmlFile.cs,Download,The following statement contains a magic number: while (wc.IsBusy) {  	if (consoleLog)  		Console.Write (".");  	Thread.Sleep (500);  }  
Magic Number,IMSEnterprise,XmlFile,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\XmlFile.cs,Download,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,IMSEnterprise,XmlFile,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\XmlFile.cs,Download,The following statement contains a magic number: try {  	wc.DownloadFileAsync (new Uri (url)' this.Path);  	while (wc.IsBusy) {  		if (consoleLog)  			Console.Write (".");  		Thread.Sleep (500);  	}  }  catch (WebException e) {  	wc.Dispose ();  	throw e;  }  
Magic Number,IMSEnterprise,XmlFile,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\XmlFile.cs,Download,The following statement contains a magic number: while (wc.IsBusy) {  	if (consoleLog)  		Console.Write (".");  	Thread.Sleep (500);  }  
Magic Number,IMSEnterprise,XmlFile,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\XmlFile.cs,Download,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,IMSEnterprise,IMSFileInformationForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSFileInformationForm.cs,IMSFileInformationForm,The following statement contains a magic number: if (currentFilePathLabel.Width > 90)  	this.Width = currentFilePathLabel.Width + labelForCurrentFilePath.Width + labelForCurrentFilePath.Left + 20;  
Magic Number,IMSEnterprise,IMSFileInformationForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSFileInformationForm.cs,IMSFileInformationForm,The following statement contains a magic number: if (currentFilePathLabel.Width > 90)  	this.Width = currentFilePathLabel.Width + labelForCurrentFilePath.Width + labelForCurrentFilePath.Left + 20;  
Magic Number,IMSEnterprise,IMSFileInformationForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSFileInformationForm.cs,IMSFileInformationForm,The following statement contains a magic number: this.Width = currentFilePathLabel.Width + labelForCurrentFilePath.Width + labelForCurrentFilePath.Left + 20;  
Magic Number,IMSEnterprise,IMSFileInformationForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSFileInformationForm.cs,IMSFileInformationForm,The following statement contains a magic number: while (len >= 1024 && order + 1 < sizes.Length) {  	order++;  	len = len / 1024;  }  
Magic Number,IMSEnterprise,IMSFileInformationForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSFileInformationForm.cs,IMSFileInformationForm,The following statement contains a magic number: while (len >= 1024 && order + 1 < sizes.Length) {  	order++;  	len = len / 1024;  }  
Magic Number,IMSEnterprise,IMSFileInformationForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSFileInformationForm.cs,IMSFileInformationForm,The following statement contains a magic number: len = len / 1024;  
Magic Number,IMSEnterprise,IMSFileInformationForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSFileInformationForm.cs,IMSFileInformationForm,The following statement contains a magic number: downloadAndProcessLabel.Text = (downloadProcessTime / 1000).ToString () + " s";  
Magic Number,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,initControls,The following statement contains a magic number: if (this.IMSSettings.Startup.FileToOpen.Choice != 2)  	this.urlBox.Enabled = false;  else  	this.urlBox.Text = this.IMSSettings.Startup.FileToOpen.Value;  
Magic Number,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,initControls,The following statement contains a magic number: if (this.IMSSettings.Startup.FileToOpen.Choice == 0) {  	this.optionOpenRecent.Checked = true;  }  else if (this.IMSSettings.Startup.FileToOpen.Choice == 1) {  	this.openSpecificFile.Checked = true;  	this.filePathInput.Text = this.IMSSettings.Startup.FileToOpen.Value;  }  else if (this.IMSSettings.Startup.FileToOpen.Choice == 2) {  	this.openFromUrl.Checked = true;  }  else {  	this.openNone.Checked = true;  }  
Magic Number,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,initControls,The following statement contains a magic number: if (this.IMSSettings.Startup.FileToOpen.Choice == 1) {  	this.openSpecificFile.Checked = true;  	this.filePathInput.Text = this.IMSSettings.Startup.FileToOpen.Value;  }  else if (this.IMSSettings.Startup.FileToOpen.Choice == 2) {  	this.openFromUrl.Checked = true;  }  else {  	this.openNone.Checked = true;  }  
Magic Number,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,initControls,The following statement contains a magic number: if (this.IMSSettings.Startup.FileToOpen.Choice == 2) {  	this.openFromUrl.Checked = true;  }  else {  	this.openNone.Checked = true;  }  
Magic Number,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,applyStartupSettings,The following statement contains a magic number: if (optionOpenRecent.Checked) {  	this.IMSSettings.Startup.FileToOpen.Choice = 0;  	this.IMSSettings.Startup.FileToOpen.Value = this.currentFilePath;  }  else if (openSpecificFile.Checked) {  	this.IMSSettings.Startup.FileToOpen.Choice = 1;  	if (filePathInput.Text != "" && filePathInput.Text != null) {  		this.IMSSettings.Startup.FileToOpen.Value = filePathInput.Text;  	}  	else {  		DialogResult result = MessageBox.Show ("You have to select an IMS-file. Do you want to do this now?"' "Error"' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error);  		if (result == DialogResult.Retry)// person want to retry opening a file  		 {  			this.openFileDialogBtn_Click (sender' e);  			// call same function to get same things happening  		}  	}  }  else if (openFromUrl.Checked) {  	this.IMSSettings.Startup.FileToOpen.Choice = 2;  	if (Uri.IsWellFormedUriString (this.urlBox.Text' UriKind.Absolute) || this.urlBox.Text.EndsWith (".xml") || this.urlBox.Text.EndsWith (".xml/"))  		this.IMSSettings.Startup.FileToOpen.Value = this.urlBox.Text;  	else  		MessageBox.Show ("Something is wrong with the url"' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning);  }  else {  	this.IMSSettings.Startup.FileToOpen.Choice = 3;  }  
Magic Number,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,applyStartupSettings,The following statement contains a magic number: if (optionOpenRecent.Checked) {  	this.IMSSettings.Startup.FileToOpen.Choice = 0;  	this.IMSSettings.Startup.FileToOpen.Value = this.currentFilePath;  }  else if (openSpecificFile.Checked) {  	this.IMSSettings.Startup.FileToOpen.Choice = 1;  	if (filePathInput.Text != "" && filePathInput.Text != null) {  		this.IMSSettings.Startup.FileToOpen.Value = filePathInput.Text;  	}  	else {  		DialogResult result = MessageBox.Show ("You have to select an IMS-file. Do you want to do this now?"' "Error"' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error);  		if (result == DialogResult.Retry)// person want to retry opening a file  		 {  			this.openFileDialogBtn_Click (sender' e);  			// call same function to get same things happening  		}  	}  }  else if (openFromUrl.Checked) {  	this.IMSSettings.Startup.FileToOpen.Choice = 2;  	if (Uri.IsWellFormedUriString (this.urlBox.Text' UriKind.Absolute) || this.urlBox.Text.EndsWith (".xml") || this.urlBox.Text.EndsWith (".xml/"))  		this.IMSSettings.Startup.FileToOpen.Value = this.urlBox.Text;  	else  		MessageBox.Show ("Something is wrong with the url"' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning);  }  else {  	this.IMSSettings.Startup.FileToOpen.Choice = 3;  }  
Magic Number,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,applyStartupSettings,The following statement contains a magic number: if (openSpecificFile.Checked) {  	this.IMSSettings.Startup.FileToOpen.Choice = 1;  	if (filePathInput.Text != "" && filePathInput.Text != null) {  		this.IMSSettings.Startup.FileToOpen.Value = filePathInput.Text;  	}  	else {  		DialogResult result = MessageBox.Show ("You have to select an IMS-file. Do you want to do this now?"' "Error"' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error);  		if (result == DialogResult.Retry)// person want to retry opening a file  		 {  			this.openFileDialogBtn_Click (sender' e);  			// call same function to get same things happening  		}  	}  }  else if (openFromUrl.Checked) {  	this.IMSSettings.Startup.FileToOpen.Choice = 2;  	if (Uri.IsWellFormedUriString (this.urlBox.Text' UriKind.Absolute) || this.urlBox.Text.EndsWith (".xml") || this.urlBox.Text.EndsWith (".xml/"))  		this.IMSSettings.Startup.FileToOpen.Value = this.urlBox.Text;  	else  		MessageBox.Show ("Something is wrong with the url"' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning);  }  else {  	this.IMSSettings.Startup.FileToOpen.Choice = 3;  }  
Magic Number,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,applyStartupSettings,The following statement contains a magic number: if (openSpecificFile.Checked) {  	this.IMSSettings.Startup.FileToOpen.Choice = 1;  	if (filePathInput.Text != "" && filePathInput.Text != null) {  		this.IMSSettings.Startup.FileToOpen.Value = filePathInput.Text;  	}  	else {  		DialogResult result = MessageBox.Show ("You have to select an IMS-file. Do you want to do this now?"' "Error"' MessageBoxButtons.RetryCancel' MessageBoxIcon.Error);  		if (result == DialogResult.Retry)// person want to retry opening a file  		 {  			this.openFileDialogBtn_Click (sender' e);  			// call same function to get same things happening  		}  	}  }  else if (openFromUrl.Checked) {  	this.IMSSettings.Startup.FileToOpen.Choice = 2;  	if (Uri.IsWellFormedUriString (this.urlBox.Text' UriKind.Absolute) || this.urlBox.Text.EndsWith (".xml") || this.urlBox.Text.EndsWith (".xml/"))  		this.IMSSettings.Startup.FileToOpen.Value = this.urlBox.Text;  	else  		MessageBox.Show ("Something is wrong with the url"' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning);  }  else {  	this.IMSSettings.Startup.FileToOpen.Choice = 3;  }  
Magic Number,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,applyStartupSettings,The following statement contains a magic number: if (openFromUrl.Checked) {  	this.IMSSettings.Startup.FileToOpen.Choice = 2;  	if (Uri.IsWellFormedUriString (this.urlBox.Text' UriKind.Absolute) || this.urlBox.Text.EndsWith (".xml") || this.urlBox.Text.EndsWith (".xml/"))  		this.IMSSettings.Startup.FileToOpen.Value = this.urlBox.Text;  	else  		MessageBox.Show ("Something is wrong with the url"' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning);  }  else {  	this.IMSSettings.Startup.FileToOpen.Choice = 3;  }  
Magic Number,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,applyStartupSettings,The following statement contains a magic number: if (openFromUrl.Checked) {  	this.IMSSettings.Startup.FileToOpen.Choice = 2;  	if (Uri.IsWellFormedUriString (this.urlBox.Text' UriKind.Absolute) || this.urlBox.Text.EndsWith (".xml") || this.urlBox.Text.EndsWith (".xml/"))  		this.IMSSettings.Startup.FileToOpen.Value = this.urlBox.Text;  	else  		MessageBox.Show ("Something is wrong with the url"' "Warning"' MessageBoxButtons.OK' MessageBoxIcon.Warning);  }  else {  	this.IMSSettings.Startup.FileToOpen.Choice = 3;  }  
Magic Number,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,applyStartupSettings,The following statement contains a magic number: this.IMSSettings.Startup.FileToOpen.Choice = 2;  
Magic Number,IMSEnterprise,IMSOptions,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\IMSOptions.cs,applyStartupSettings,The following statement contains a magic number: this.IMSSettings.Startup.FileToOpen.Choice = 3;  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,onLoad,The following statement contains a magic number: this.MinimumSize = new Size (1024' this.Size.Height);  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,onLoad,The following statement contains a magic number: sourceIdLabel.Height = 20;  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,onLoad,The following statement contains a magic number: if (this.IMSSettings.Startup.FileToOpen.Choice != 3) {  	if (Uri.IsWellFormedUriString (this.IMSSettings.Startup.FileToOpen.Value' UriKind.Absolute))// file to open is a uri  	 {  		UrlInputDialog url = new UrlInputDialog (this.IMSSettings.Startup.FileToOpen.Value);  		url.StartPosition = FormStartPosition.CenterScreen;  		url.Text = "Downloading...";  		if (url.ShowDialog () == DialogResult.OK) {  			this.downloadAndProcessTime = Convert.ToInt32 (url.Timer.ElapsedMilliseconds);  			this.currentFilePath = url.CurrentFilePath;  			this.recentSaved = false;  			if (this.IMSSettings.Startup.FileToOpen.Choice == 0)  				this.IMSSettings.Startup.FileToOpen.Value = url.Uri;  			this.enableLoadingMode ();  			bgwIMS.RunWorkerAsync ();  		}  		else// download was interupted  		 {  			this.fileNotFound ();  		}  	}  	else// file to open is a local file  	 {  		if (IMSSettings.Startup.FileToOpen.Value != null)// file to open had no value  		 {  			FileInfo info = new FileInfo (@IMSSettings.Startup.FileToOpen.Value);  			if (!info.Exists)// file didnt exist  			 {  				this.fileNotFound ();  			}  			else// file did exist  			 {  				this.currentFilePath = @IMSSettings.Startup.FileToOpen.Value;  				this.enableLoadingMode ();  				bgwIMS.RunWorkerAsync ();  				// start processing the file  			}  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,searchButton_Click,The following statement contains a magic number: if (this.ep != null) {  	progressBar.Style = ProgressBarStyle.Marquee;  	progressBar.MarqueeAnimationSpeed = 230;  	this.enterpriseList.Nodes.Clear ();  	if (this.bgwSearchPerson.IsBusy || this.bgwSearchGroup.IsBusy) {  		this.bgwSearchPerson.CancelAsync ();  	}  	else if (this.bgwSearchPerson.IsBusy == false && this.bgwSearchGroup.IsBusy == false) {  		progressBar.Show ();  		bgwSearchGroup.DoWork += new DoWorkEventHandler (this.searchGroup);  		bgwSearchPerson.DoWork += new DoWorkEventHandler (this.searchPerson);  		bgwSearchPerson.RunWorkerCompleted += new RunWorkerCompletedEventHandler (this.bgwComplete);  		bgwSearchGroup.RunWorkerCompleted += new RunWorkerCompletedEventHandler (this.bgwComplete);  		bgwSearchGroup.WorkerReportsProgress = true;  		bgwSearchGroup.WorkerSupportsCancellation = true;  		bgwSearchPerson.WorkerReportsProgress = true;  		bgwSearchPerson.WorkerSupportsCancellation = true;  		bgwSearchPerson.RunWorkerAsync ();  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,searchButton_Click,The following statement contains a magic number: progressBar.MarqueeAnimationSpeed = 230;  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Left) {  	if (this.errorListView1.SelectedItems.Count > 0) {  		if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  			if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  				informationLabel.Text = "Personal information";  				this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  			}  			else {  				this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  			}  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Left) {  	if (this.errorListView1.SelectedItems.Count > 0) {  		if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  			if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  				informationLabel.Text = "Personal information";  				this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  			}  			else {  				this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  			}  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Left) {  	if (this.errorListView1.SelectedItems.Count > 0) {  		if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  			if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  				informationLabel.Text = "Personal information";  				this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  			}  			else {  				this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  			}  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Left) {  	if (this.errorListView1.SelectedItems.Count > 0) {  		if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  			if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  				informationLabel.Text = "Personal information";  				this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  			}  			else {  				this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  			}  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Left) {  	if (this.errorListView1.SelectedItems.Count > 0) {  		if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  			if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  				informationLabel.Text = "Personal information";  				this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  			}  			else {  				this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  			}  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems.Count > 0) {  	if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  		if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  			informationLabel.Text = "Personal information";  			this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  		}  		else {  			this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems.Count > 0) {  	if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  		if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  			informationLabel.Text = "Personal information";  			this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  		}  		else {  			this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems.Count > 0) {  	if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  		if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  			informationLabel.Text = "Personal information";  			this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  		}  		else {  			this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems.Count > 0) {  	if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  		if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  			informationLabel.Text = "Personal information";  			this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  		}  		else {  			this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems.Count > 0) {  	if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  		if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  			informationLabel.Text = "Personal information";  			this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  		}  		else {  			this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  	if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  		informationLabel.Text = "Personal information";  		this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  	}  	else {  		this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  	if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  		informationLabel.Text = "Personal information";  		this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  	}  	else {  		this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  	if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  		informationLabel.Text = "Personal information";  		this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  	}  	else {  		this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  	if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  		informationLabel.Text = "Personal information";  		this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  	}  	else {  		this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].SubItems [3].Text != "IMS Document" && this.errorListView1.SelectedItems [0].SubItems [2].Text != "-1") {  	if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  		informationLabel.Text = "Personal information";  		this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  	}  	else {  		this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  	informationLabel.Text = "Personal information";  	this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  }  else {  	this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  	informationLabel.Text = "Personal information";  	this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  }  else {  	this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].SubItems [5].Text == "Person") {  	informationLabel.Text = "Personal information";  	this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  }  else {  	this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: this.updatePersonInformationList (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseDoubleClick,The following statement contains a magic number: this.updateGroupInformation (int.Parse (this.errorListView1.SelectedItems [0].SubItems [2].Text));  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: if (control.Orientation == Orientation.Horizontal) {  	points [0] = new Point ((w / 2)' d + (sW / 2));  	points [1] = new Point (points [0].X - 10' points [0].Y);  	points [2] = new Point (points [0].X + 10' points [0].Y);  }  else {  	points [0] = new Point (d + (sW / 2)' (h / 2));  	points [1] = new Point (points [0].X' points [0].Y - 10);  	points [2] = new Point (points [0].X' points [0].Y + 10);  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: if (control.Orientation == Orientation.Horizontal) {  	points [0] = new Point ((w / 2)' d + (sW / 2));  	points [1] = new Point (points [0].X - 10' points [0].Y);  	points [2] = new Point (points [0].X + 10' points [0].Y);  }  else {  	points [0] = new Point (d + (sW / 2)' (h / 2));  	points [1] = new Point (points [0].X' points [0].Y - 10);  	points [2] = new Point (points [0].X' points [0].Y + 10);  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: if (control.Orientation == Orientation.Horizontal) {  	points [0] = new Point ((w / 2)' d + (sW / 2));  	points [1] = new Point (points [0].X - 10' points [0].Y);  	points [2] = new Point (points [0].X + 10' points [0].Y);  }  else {  	points [0] = new Point (d + (sW / 2)' (h / 2));  	points [1] = new Point (points [0].X' points [0].Y - 10);  	points [2] = new Point (points [0].X' points [0].Y + 10);  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: if (control.Orientation == Orientation.Horizontal) {  	points [0] = new Point ((w / 2)' d + (sW / 2));  	points [1] = new Point (points [0].X - 10' points [0].Y);  	points [2] = new Point (points [0].X + 10' points [0].Y);  }  else {  	points [0] = new Point (d + (sW / 2)' (h / 2));  	points [1] = new Point (points [0].X' points [0].Y - 10);  	points [2] = new Point (points [0].X' points [0].Y + 10);  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: if (control.Orientation == Orientation.Horizontal) {  	points [0] = new Point ((w / 2)' d + (sW / 2));  	points [1] = new Point (points [0].X - 10' points [0].Y);  	points [2] = new Point (points [0].X + 10' points [0].Y);  }  else {  	points [0] = new Point (d + (sW / 2)' (h / 2));  	points [1] = new Point (points [0].X' points [0].Y - 10);  	points [2] = new Point (points [0].X' points [0].Y + 10);  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: if (control.Orientation == Orientation.Horizontal) {  	points [0] = new Point ((w / 2)' d + (sW / 2));  	points [1] = new Point (points [0].X - 10' points [0].Y);  	points [2] = new Point (points [0].X + 10' points [0].Y);  }  else {  	points [0] = new Point (d + (sW / 2)' (h / 2));  	points [1] = new Point (points [0].X' points [0].Y - 10);  	points [2] = new Point (points [0].X' points [0].Y + 10);  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: if (control.Orientation == Orientation.Horizontal) {  	points [0] = new Point ((w / 2)' d + (sW / 2));  	points [1] = new Point (points [0].X - 10' points [0].Y);  	points [2] = new Point (points [0].X + 10' points [0].Y);  }  else {  	points [0] = new Point (d + (sW / 2)' (h / 2));  	points [1] = new Point (points [0].X' points [0].Y - 10);  	points [2] = new Point (points [0].X' points [0].Y + 10);  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: if (control.Orientation == Orientation.Horizontal) {  	points [0] = new Point ((w / 2)' d + (sW / 2));  	points [1] = new Point (points [0].X - 10' points [0].Y);  	points [2] = new Point (points [0].X + 10' points [0].Y);  }  else {  	points [0] = new Point (d + (sW / 2)' (h / 2));  	points [1] = new Point (points [0].X' points [0].Y - 10);  	points [2] = new Point (points [0].X' points [0].Y + 10);  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: if (control.Orientation == Orientation.Horizontal) {  	points [0] = new Point ((w / 2)' d + (sW / 2));  	points [1] = new Point (points [0].X - 10' points [0].Y);  	points [2] = new Point (points [0].X + 10' points [0].Y);  }  else {  	points [0] = new Point (d + (sW / 2)' (h / 2));  	points [1] = new Point (points [0].X' points [0].Y - 10);  	points [2] = new Point (points [0].X' points [0].Y + 10);  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: if (control.Orientation == Orientation.Horizontal) {  	points [0] = new Point ((w / 2)' d + (sW / 2));  	points [1] = new Point (points [0].X - 10' points [0].Y);  	points [2] = new Point (points [0].X + 10' points [0].Y);  }  else {  	points [0] = new Point (d + (sW / 2)' (h / 2));  	points [1] = new Point (points [0].X' points [0].Y - 10);  	points [2] = new Point (points [0].X' points [0].Y + 10);  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: points [0] = new Point ((w / 2)' d + (sW / 2));  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: points [0] = new Point ((w / 2)' d + (sW / 2));  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: points [1] = new Point (points [0].X - 10' points [0].Y);  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: points [2] = new Point (points [0].X + 10' points [0].Y);  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: points [2] = new Point (points [0].X + 10' points [0].Y);  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: points [0] = new Point (d + (sW / 2)' (h / 2));  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: points [0] = new Point (d + (sW / 2)' (h / 2));  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: points [1] = new Point (points [0].X' points [0].Y - 10);  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: points [2] = new Point (points [0].X' points [0].Y + 10);  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: points [2] = new Point (points [0].X' points [0].Y + 10);  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: foreach (Point p in points) {  	p.Offset (-2' -2);  	e.Graphics.FillEllipse (SystemBrushes.ControlDark' new Rectangle (p' new Size (3' 3)));  	p.Offset (1' 1);  	e.Graphics.FillEllipse (SystemBrushes.ControlLight' new Rectangle (p' new Size (3' 3)));  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: foreach (Point p in points) {  	p.Offset (-2' -2);  	e.Graphics.FillEllipse (SystemBrushes.ControlDark' new Rectangle (p' new Size (3' 3)));  	p.Offset (1' 1);  	e.Graphics.FillEllipse (SystemBrushes.ControlLight' new Rectangle (p' new Size (3' 3)));  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: foreach (Point p in points) {  	p.Offset (-2' -2);  	e.Graphics.FillEllipse (SystemBrushes.ControlDark' new Rectangle (p' new Size (3' 3)));  	p.Offset (1' 1);  	e.Graphics.FillEllipse (SystemBrushes.ControlLight' new Rectangle (p' new Size (3' 3)));  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: foreach (Point p in points) {  	p.Offset (-2' -2);  	e.Graphics.FillEllipse (SystemBrushes.ControlDark' new Rectangle (p' new Size (3' 3)));  	p.Offset (1' 1);  	e.Graphics.FillEllipse (SystemBrushes.ControlLight' new Rectangle (p' new Size (3' 3)));  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: foreach (Point p in points) {  	p.Offset (-2' -2);  	e.Graphics.FillEllipse (SystemBrushes.ControlDark' new Rectangle (p' new Size (3' 3)));  	p.Offset (1' 1);  	e.Graphics.FillEllipse (SystemBrushes.ControlLight' new Rectangle (p' new Size (3' 3)));  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: foreach (Point p in points) {  	p.Offset (-2' -2);  	e.Graphics.FillEllipse (SystemBrushes.ControlDark' new Rectangle (p' new Size (3' 3)));  	p.Offset (1' 1);  	e.Graphics.FillEllipse (SystemBrushes.ControlLight' new Rectangle (p' new Size (3' 3)));  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: p.Offset (-2' -2);  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: p.Offset (-2' -2);  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: e.Graphics.FillEllipse (SystemBrushes.ControlDark' new Rectangle (p' new Size (3' 3)));  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: e.Graphics.FillEllipse (SystemBrushes.ControlDark' new Rectangle (p' new Size (3' 3)));  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: e.Graphics.FillEllipse (SystemBrushes.ControlLight' new Rectangle (p' new Size (3' 3)));  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,SplitContainer_Paint,The following statement contains a magic number: e.Graphics.FillEllipse (SystemBrushes.ControlLight' new Rectangle (p' new Size (3' 3)));  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseClick,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Right) {  	if (this.errorListView1.SelectedItems [0].Bounds.IntersectsWith (new Rectangle (e.Location' this.errorListView1.SelectedItems [0].Bounds.Size))) {  		if (this.errorListView1.SelectedItems [0].SubItems [3].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  			if (this.errorListView1.SelectedItems [0].Text != null) {  				this.contextMenuStrip3.Show (this.errorListView1' e.Location);  			}  		}  		else if (this.errorListView1.SelectedItems [0].SubItems [4].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  			if (this.errorListView1.SelectedItems [0].Text != null) {  				this.contextMenuStrip4.Show (this.errorListView1' e.Location);  			}  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseClick,The following statement contains a magic number: if (e.Button == System.Windows.Forms.MouseButtons.Right) {  	if (this.errorListView1.SelectedItems [0].Bounds.IntersectsWith (new Rectangle (e.Location' this.errorListView1.SelectedItems [0].Bounds.Size))) {  		if (this.errorListView1.SelectedItems [0].SubItems [3].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  			if (this.errorListView1.SelectedItems [0].Text != null) {  				this.contextMenuStrip3.Show (this.errorListView1' e.Location);  			}  		}  		else if (this.errorListView1.SelectedItems [0].SubItems [4].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  			if (this.errorListView1.SelectedItems [0].Text != null) {  				this.contextMenuStrip4.Show (this.errorListView1' e.Location);  			}  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].Bounds.IntersectsWith (new Rectangle (e.Location' this.errorListView1.SelectedItems [0].Bounds.Size))) {  	if (this.errorListView1.SelectedItems [0].SubItems [3].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  		if (this.errorListView1.SelectedItems [0].Text != null) {  			this.contextMenuStrip3.Show (this.errorListView1' e.Location);  		}  	}  	else if (this.errorListView1.SelectedItems [0].SubItems [4].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  		if (this.errorListView1.SelectedItems [0].Text != null) {  			this.contextMenuStrip4.Show (this.errorListView1' e.Location);  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].Bounds.IntersectsWith (new Rectangle (e.Location' this.errorListView1.SelectedItems [0].Bounds.Size))) {  	if (this.errorListView1.SelectedItems [0].SubItems [3].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  		if (this.errorListView1.SelectedItems [0].Text != null) {  			this.contextMenuStrip3.Show (this.errorListView1' e.Location);  		}  	}  	else if (this.errorListView1.SelectedItems [0].SubItems [4].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  		if (this.errorListView1.SelectedItems [0].Text != null) {  			this.contextMenuStrip4.Show (this.errorListView1' e.Location);  		}  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].SubItems [3].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  	if (this.errorListView1.SelectedItems [0].Text != null) {  		this.contextMenuStrip3.Show (this.errorListView1' e.Location);  	}  }  else if (this.errorListView1.SelectedItems [0].SubItems [4].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  	if (this.errorListView1.SelectedItems [0].Text != null) {  		this.contextMenuStrip4.Show (this.errorListView1' e.Location);  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].SubItems [3].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  	if (this.errorListView1.SelectedItems [0].Text != null) {  		this.contextMenuStrip3.Show (this.errorListView1' e.Location);  	}  }  else if (this.errorListView1.SelectedItems [0].SubItems [4].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  	if (this.errorListView1.SelectedItems [0].Text != null) {  		this.contextMenuStrip4.Show (this.errorListView1' e.Location);  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,errorListView1_MouseClick,The following statement contains a magic number: if (this.errorListView1.SelectedItems [0].SubItems [4].Bounds.IntersectsWith (new Rectangle (e.Location' Cursor.Size))) {  	if (this.errorListView1.SelectedItems [0].Text != null) {  		this.contextMenuStrip4.Show (this.errorListView1' e.Location);  	}  }  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,copyToolStripMenuItem2_Click,The following statement contains a magic number: Clipboard.SetText (this.errorListView1.SelectedItems [0].SubItems [4].Text);  
Magic Number,IMSEnterprise,MainForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\MainForm.cs,copyIDToolStripMenuItem_Click,The following statement contains a magic number: Clipboard.SetText (this.errorListView1.SelectedItems [0].SubItems [3].Text);  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,NewPersonForm,The following statement contains a magic number: if (editPerson == null) {  	this.edit = false;  	this.Text = "Create New Person";  	systemRoleTypeBox.SelectedItem = "None";  	sourceIdCurrLabel.Hide ();  	//addSourceIdLabel.Hide();  	//addSourceIdInput.Hide();  	bdayPicker.Width = 90;  	this.lastDigitInput = new TextBox ();  	this.lastDigitInput.Width = 45;  	this.lastDigitInput.TabIndex = 13;  	this.lastDigitInput.Location = new Point (bdayPicker.Width + 1 + bdayPicker.Left' bdayPicker.Top);  	this.Controls.Add (this.lastDigitInput);  	bdayLabel.Text = "*Social security number:";  	bdayLabel.Left -= 92;  }  else {  	this.edit = true;  	this.newEditPerson = editPerson;  	this.Text = "Edit " + editPerson.name.fn;  	createEditButton.Text = "Save";  	sourceIdCurrLabel.Text = editPerson.sourcedid [0].id;  	if (editPerson.sourcedid.ToList ().Count == 2)  		sourceIdOldLabel.Text = editPerson.sourcedid [1].id;  	fnInput.Text = editPerson.name.n.given;  	lnInput.Text = editPerson.name.n.family;  	bdayPicker.Text = editPerson.demographics.bday;  	genderBox.SelectedItem = editPerson.demographics.gender;  	emailInput.Text = editPerson.email;  	hNumberInput.Text = editPerson.tel [0].Value;  	mNumberInput.Text = editPerson.tel [1].Value;  	postcodeInput.Text = editPerson.adr.pcode;  	streetInput.Text = editPerson.adr.street [0];  	localityInput.Text = editPerson.adr.locality;  	institutionTypeBox.SelectedItem = editPerson.institutionrole [0].institutionroletype.ToString ();  	institutionPrimaryBox.SelectedItem = editPerson.institutionrole [0].primaryrole.ToString ();  	systemRoleTypeBox.SelectedItem = editPerson.systemrole.systemroletype.ToString ();  	if (editPerson.userid != null) {  		if (editPerson.userid [0].Value != null)  			userIdInput.Text = editPerson.userid [0].Value;  		if (editPerson.userid [0].useridtype != null)  			userIdTypeBox.SelectedItem = editPerson.userid [0].useridtype;  	}  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,NewPersonForm,The following statement contains a magic number: if (editPerson == null) {  	this.edit = false;  	this.Text = "Create New Person";  	systemRoleTypeBox.SelectedItem = "None";  	sourceIdCurrLabel.Hide ();  	//addSourceIdLabel.Hide();  	//addSourceIdInput.Hide();  	bdayPicker.Width = 90;  	this.lastDigitInput = new TextBox ();  	this.lastDigitInput.Width = 45;  	this.lastDigitInput.TabIndex = 13;  	this.lastDigitInput.Location = new Point (bdayPicker.Width + 1 + bdayPicker.Left' bdayPicker.Top);  	this.Controls.Add (this.lastDigitInput);  	bdayLabel.Text = "*Social security number:";  	bdayLabel.Left -= 92;  }  else {  	this.edit = true;  	this.newEditPerson = editPerson;  	this.Text = "Edit " + editPerson.name.fn;  	createEditButton.Text = "Save";  	sourceIdCurrLabel.Text = editPerson.sourcedid [0].id;  	if (editPerson.sourcedid.ToList ().Count == 2)  		sourceIdOldLabel.Text = editPerson.sourcedid [1].id;  	fnInput.Text = editPerson.name.n.given;  	lnInput.Text = editPerson.name.n.family;  	bdayPicker.Text = editPerson.demographics.bday;  	genderBox.SelectedItem = editPerson.demographics.gender;  	emailInput.Text = editPerson.email;  	hNumberInput.Text = editPerson.tel [0].Value;  	mNumberInput.Text = editPerson.tel [1].Value;  	postcodeInput.Text = editPerson.adr.pcode;  	streetInput.Text = editPerson.adr.street [0];  	localityInput.Text = editPerson.adr.locality;  	institutionTypeBox.SelectedItem = editPerson.institutionrole [0].institutionroletype.ToString ();  	institutionPrimaryBox.SelectedItem = editPerson.institutionrole [0].primaryrole.ToString ();  	systemRoleTypeBox.SelectedItem = editPerson.systemrole.systemroletype.ToString ();  	if (editPerson.userid != null) {  		if (editPerson.userid [0].Value != null)  			userIdInput.Text = editPerson.userid [0].Value;  		if (editPerson.userid [0].useridtype != null)  			userIdTypeBox.SelectedItem = editPerson.userid [0].useridtype;  	}  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,NewPersonForm,The following statement contains a magic number: if (editPerson == null) {  	this.edit = false;  	this.Text = "Create New Person";  	systemRoleTypeBox.SelectedItem = "None";  	sourceIdCurrLabel.Hide ();  	//addSourceIdLabel.Hide();  	//addSourceIdInput.Hide();  	bdayPicker.Width = 90;  	this.lastDigitInput = new TextBox ();  	this.lastDigitInput.Width = 45;  	this.lastDigitInput.TabIndex = 13;  	this.lastDigitInput.Location = new Point (bdayPicker.Width + 1 + bdayPicker.Left' bdayPicker.Top);  	this.Controls.Add (this.lastDigitInput);  	bdayLabel.Text = "*Social security number:";  	bdayLabel.Left -= 92;  }  else {  	this.edit = true;  	this.newEditPerson = editPerson;  	this.Text = "Edit " + editPerson.name.fn;  	createEditButton.Text = "Save";  	sourceIdCurrLabel.Text = editPerson.sourcedid [0].id;  	if (editPerson.sourcedid.ToList ().Count == 2)  		sourceIdOldLabel.Text = editPerson.sourcedid [1].id;  	fnInput.Text = editPerson.name.n.given;  	lnInput.Text = editPerson.name.n.family;  	bdayPicker.Text = editPerson.demographics.bday;  	genderBox.SelectedItem = editPerson.demographics.gender;  	emailInput.Text = editPerson.email;  	hNumberInput.Text = editPerson.tel [0].Value;  	mNumberInput.Text = editPerson.tel [1].Value;  	postcodeInput.Text = editPerson.adr.pcode;  	streetInput.Text = editPerson.adr.street [0];  	localityInput.Text = editPerson.adr.locality;  	institutionTypeBox.SelectedItem = editPerson.institutionrole [0].institutionroletype.ToString ();  	institutionPrimaryBox.SelectedItem = editPerson.institutionrole [0].primaryrole.ToString ();  	systemRoleTypeBox.SelectedItem = editPerson.systemrole.systemroletype.ToString ();  	if (editPerson.userid != null) {  		if (editPerson.userid [0].Value != null)  			userIdInput.Text = editPerson.userid [0].Value;  		if (editPerson.userid [0].useridtype != null)  			userIdTypeBox.SelectedItem = editPerson.userid [0].useridtype;  	}  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,NewPersonForm,The following statement contains a magic number: if (editPerson == null) {  	this.edit = false;  	this.Text = "Create New Person";  	systemRoleTypeBox.SelectedItem = "None";  	sourceIdCurrLabel.Hide ();  	//addSourceIdLabel.Hide();  	//addSourceIdInput.Hide();  	bdayPicker.Width = 90;  	this.lastDigitInput = new TextBox ();  	this.lastDigitInput.Width = 45;  	this.lastDigitInput.TabIndex = 13;  	this.lastDigitInput.Location = new Point (bdayPicker.Width + 1 + bdayPicker.Left' bdayPicker.Top);  	this.Controls.Add (this.lastDigitInput);  	bdayLabel.Text = "*Social security number:";  	bdayLabel.Left -= 92;  }  else {  	this.edit = true;  	this.newEditPerson = editPerson;  	this.Text = "Edit " + editPerson.name.fn;  	createEditButton.Text = "Save";  	sourceIdCurrLabel.Text = editPerson.sourcedid [0].id;  	if (editPerson.sourcedid.ToList ().Count == 2)  		sourceIdOldLabel.Text = editPerson.sourcedid [1].id;  	fnInput.Text = editPerson.name.n.given;  	lnInput.Text = editPerson.name.n.family;  	bdayPicker.Text = editPerson.demographics.bday;  	genderBox.SelectedItem = editPerson.demographics.gender;  	emailInput.Text = editPerson.email;  	hNumberInput.Text = editPerson.tel [0].Value;  	mNumberInput.Text = editPerson.tel [1].Value;  	postcodeInput.Text = editPerson.adr.pcode;  	streetInput.Text = editPerson.adr.street [0];  	localityInput.Text = editPerson.adr.locality;  	institutionTypeBox.SelectedItem = editPerson.institutionrole [0].institutionroletype.ToString ();  	institutionPrimaryBox.SelectedItem = editPerson.institutionrole [0].primaryrole.ToString ();  	systemRoleTypeBox.SelectedItem = editPerson.systemrole.systemroletype.ToString ();  	if (editPerson.userid != null) {  		if (editPerson.userid [0].Value != null)  			userIdInput.Text = editPerson.userid [0].Value;  		if (editPerson.userid [0].useridtype != null)  			userIdTypeBox.SelectedItem = editPerson.userid [0].useridtype;  	}  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,NewPersonForm,The following statement contains a magic number: if (editPerson == null) {  	this.edit = false;  	this.Text = "Create New Person";  	systemRoleTypeBox.SelectedItem = "None";  	sourceIdCurrLabel.Hide ();  	//addSourceIdLabel.Hide();  	//addSourceIdInput.Hide();  	bdayPicker.Width = 90;  	this.lastDigitInput = new TextBox ();  	this.lastDigitInput.Width = 45;  	this.lastDigitInput.TabIndex = 13;  	this.lastDigitInput.Location = new Point (bdayPicker.Width + 1 + bdayPicker.Left' bdayPicker.Top);  	this.Controls.Add (this.lastDigitInput);  	bdayLabel.Text = "*Social security number:";  	bdayLabel.Left -= 92;  }  else {  	this.edit = true;  	this.newEditPerson = editPerson;  	this.Text = "Edit " + editPerson.name.fn;  	createEditButton.Text = "Save";  	sourceIdCurrLabel.Text = editPerson.sourcedid [0].id;  	if (editPerson.sourcedid.ToList ().Count == 2)  		sourceIdOldLabel.Text = editPerson.sourcedid [1].id;  	fnInput.Text = editPerson.name.n.given;  	lnInput.Text = editPerson.name.n.family;  	bdayPicker.Text = editPerson.demographics.bday;  	genderBox.SelectedItem = editPerson.demographics.gender;  	emailInput.Text = editPerson.email;  	hNumberInput.Text = editPerson.tel [0].Value;  	mNumberInput.Text = editPerson.tel [1].Value;  	postcodeInput.Text = editPerson.adr.pcode;  	streetInput.Text = editPerson.adr.street [0];  	localityInput.Text = editPerson.adr.locality;  	institutionTypeBox.SelectedItem = editPerson.institutionrole [0].institutionroletype.ToString ();  	institutionPrimaryBox.SelectedItem = editPerson.institutionrole [0].primaryrole.ToString ();  	systemRoleTypeBox.SelectedItem = editPerson.systemrole.systemroletype.ToString ();  	if (editPerson.userid != null) {  		if (editPerson.userid [0].Value != null)  			userIdInput.Text = editPerson.userid [0].Value;  		if (editPerson.userid [0].useridtype != null)  			userIdTypeBox.SelectedItem = editPerson.userid [0].useridtype;  	}  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,NewPersonForm,The following statement contains a magic number: bdayPicker.Width = 90;  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,NewPersonForm,The following statement contains a magic number: this.lastDigitInput.Width = 45;  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,NewPersonForm,The following statement contains a magic number: this.lastDigitInput.TabIndex = 13;  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,NewPersonForm,The following statement contains a magic number: bdayLabel.Left -= 92;  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,NewPersonForm,The following statement contains a magic number: if (editPerson.sourcedid.ToList ().Count == 2)  	sourceIdOldLabel.Text = editPerson.sourcedid [1].id;  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: if (this.lastDigitInput != null)//create   {  	this.newEditPerson = new person ();  	// System Role  	newEditPerson.sourcedid [0].id = this.lastDigitInput.Text;  	// check what system role is chosen  	if ((String)systemRoleTypeBox.SelectedItem == "None")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.None;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.User;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.SysAdmin;  	// Name  	newEditPerson.name.n.family = lnInput.Text;  	newEditPerson.name.n.given = fnInput.Text;  	newEditPerson.name.fn = fnInput.Text + " " + lnInput.Text;  	//Contact info  	newEditPerson.email = emailInput.Text;  	newEditPerson.tel [0].teltype = telTeltype.Item1;  	newEditPerson.tel [0].Value = hNumberInput.Text;  	newEditPerson.tel [1].teltype = telTeltype.Mobile;  	newEditPerson.tel [1].Value = mNumberInput.Text;  	newEditPerson.tel [2].teltype = telTeltype.Item2;  	newEditPerson.tel [2].Value = workNumberInput.Text;  	// Address info  	newEditPerson.adr.pcode = postcodeInput.Text;  	newEditPerson.adr.street [0] = streetInput.Text;  	newEditPerson.adr.locality = localityInput.Text;  	// Demographics  	newEditPerson.demographics.bday = bdayPicker.Text;  	newEditPerson.demographics.gender = genderBox.SelectedItem.ToString ();  	// Institution role  	if ((String)institutionTypeBox.SelectedItem == "Student")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Staff")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Contact")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Contact;  	else if ((String)institutionTypeBox.SelectedItem == "Child")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Other;  	if ((String)institutionPrimaryBox.SelectedValue == "No")  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.No;  	else  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.Yes;  }  else// edit   {  	// System Role  	// check what system role is chosen  	if ((String)systemRoleTypeBox.SelectedItem == "None")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.None;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.User;  	else if ((String)systemRoleTypeBox.SelectedItem == "Administrator")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.SysAdmin;  	// Name  	newEditPerson.name.n.family = lnInput.Text;  	newEditPerson.name.n.given = fnInput.Text;  	newEditPerson.name.fn = fnInput.Text + " " + lnInput.Text;  	//Contact info  	newEditPerson.email = emailInput.Text;  	newEditPerson.tel [0].teltype = telTeltype.Item1;  	newEditPerson.tel [0].Value = hNumberInput.Text;  	if (newEditPerson.tel.Length >= 2) {  		newEditPerson.tel [1].teltype = telTeltype.Mobile;  		newEditPerson.tel [1].Value = mNumberInput.Text;  	}  	if (newEditPerson.tel.Length >= 3) {  		newEditPerson.tel [2].teltype = telTeltype.Item2;  		newEditPerson.tel [2].Value = workNumberInput.Text;  	}  	// Address info  	newEditPerson.adr.pcode = postcodeInput.Text;  	newEditPerson.adr.street [0] = streetInput.Text;  	newEditPerson.adr.locality = localityInput.Text;  	// Demographics  	newEditPerson.demographics.bday = bdayPicker.Text;  	newEditPerson.demographics.gender = genderBox.SelectedItem.ToString ();  	// Institution role  	if ((String)institutionTypeBox.SelectedItem == "Student")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Staff")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Staff;  	else if ((String)institutionTypeBox.SelectedItem == "Contact")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Contact;  	else if ((String)institutionTypeBox.SelectedItem == "Child")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Other;  	if ((String)institutionPrimaryBox.SelectedItem == "No")  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.No;  	else  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.Yes;  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: if (this.lastDigitInput != null)//create   {  	this.newEditPerson = new person ();  	// System Role  	newEditPerson.sourcedid [0].id = this.lastDigitInput.Text;  	// check what system role is chosen  	if ((String)systemRoleTypeBox.SelectedItem == "None")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.None;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.User;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.SysAdmin;  	// Name  	newEditPerson.name.n.family = lnInput.Text;  	newEditPerson.name.n.given = fnInput.Text;  	newEditPerson.name.fn = fnInput.Text + " " + lnInput.Text;  	//Contact info  	newEditPerson.email = emailInput.Text;  	newEditPerson.tel [0].teltype = telTeltype.Item1;  	newEditPerson.tel [0].Value = hNumberInput.Text;  	newEditPerson.tel [1].teltype = telTeltype.Mobile;  	newEditPerson.tel [1].Value = mNumberInput.Text;  	newEditPerson.tel [2].teltype = telTeltype.Item2;  	newEditPerson.tel [2].Value = workNumberInput.Text;  	// Address info  	newEditPerson.adr.pcode = postcodeInput.Text;  	newEditPerson.adr.street [0] = streetInput.Text;  	newEditPerson.adr.locality = localityInput.Text;  	// Demographics  	newEditPerson.demographics.bday = bdayPicker.Text;  	newEditPerson.demographics.gender = genderBox.SelectedItem.ToString ();  	// Institution role  	if ((String)institutionTypeBox.SelectedItem == "Student")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Staff")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Contact")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Contact;  	else if ((String)institutionTypeBox.SelectedItem == "Child")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Other;  	if ((String)institutionPrimaryBox.SelectedValue == "No")  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.No;  	else  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.Yes;  }  else// edit   {  	// System Role  	// check what system role is chosen  	if ((String)systemRoleTypeBox.SelectedItem == "None")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.None;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.User;  	else if ((String)systemRoleTypeBox.SelectedItem == "Administrator")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.SysAdmin;  	// Name  	newEditPerson.name.n.family = lnInput.Text;  	newEditPerson.name.n.given = fnInput.Text;  	newEditPerson.name.fn = fnInput.Text + " " + lnInput.Text;  	//Contact info  	newEditPerson.email = emailInput.Text;  	newEditPerson.tel [0].teltype = telTeltype.Item1;  	newEditPerson.tel [0].Value = hNumberInput.Text;  	if (newEditPerson.tel.Length >= 2) {  		newEditPerson.tel [1].teltype = telTeltype.Mobile;  		newEditPerson.tel [1].Value = mNumberInput.Text;  	}  	if (newEditPerson.tel.Length >= 3) {  		newEditPerson.tel [2].teltype = telTeltype.Item2;  		newEditPerson.tel [2].Value = workNumberInput.Text;  	}  	// Address info  	newEditPerson.adr.pcode = postcodeInput.Text;  	newEditPerson.adr.street [0] = streetInput.Text;  	newEditPerson.adr.locality = localityInput.Text;  	// Demographics  	newEditPerson.demographics.bday = bdayPicker.Text;  	newEditPerson.demographics.gender = genderBox.SelectedItem.ToString ();  	// Institution role  	if ((String)institutionTypeBox.SelectedItem == "Student")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Staff")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Staff;  	else if ((String)institutionTypeBox.SelectedItem == "Contact")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Contact;  	else if ((String)institutionTypeBox.SelectedItem == "Child")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Other;  	if ((String)institutionPrimaryBox.SelectedItem == "No")  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.No;  	else  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.Yes;  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: if (this.lastDigitInput != null)//create   {  	this.newEditPerson = new person ();  	// System Role  	newEditPerson.sourcedid [0].id = this.lastDigitInput.Text;  	// check what system role is chosen  	if ((String)systemRoleTypeBox.SelectedItem == "None")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.None;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.User;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.SysAdmin;  	// Name  	newEditPerson.name.n.family = lnInput.Text;  	newEditPerson.name.n.given = fnInput.Text;  	newEditPerson.name.fn = fnInput.Text + " " + lnInput.Text;  	//Contact info  	newEditPerson.email = emailInput.Text;  	newEditPerson.tel [0].teltype = telTeltype.Item1;  	newEditPerson.tel [0].Value = hNumberInput.Text;  	newEditPerson.tel [1].teltype = telTeltype.Mobile;  	newEditPerson.tel [1].Value = mNumberInput.Text;  	newEditPerson.tel [2].teltype = telTeltype.Item2;  	newEditPerson.tel [2].Value = workNumberInput.Text;  	// Address info  	newEditPerson.adr.pcode = postcodeInput.Text;  	newEditPerson.adr.street [0] = streetInput.Text;  	newEditPerson.adr.locality = localityInput.Text;  	// Demographics  	newEditPerson.demographics.bday = bdayPicker.Text;  	newEditPerson.demographics.gender = genderBox.SelectedItem.ToString ();  	// Institution role  	if ((String)institutionTypeBox.SelectedItem == "Student")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Staff")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Contact")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Contact;  	else if ((String)institutionTypeBox.SelectedItem == "Child")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Other;  	if ((String)institutionPrimaryBox.SelectedValue == "No")  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.No;  	else  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.Yes;  }  else// edit   {  	// System Role  	// check what system role is chosen  	if ((String)systemRoleTypeBox.SelectedItem == "None")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.None;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.User;  	else if ((String)systemRoleTypeBox.SelectedItem == "Administrator")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.SysAdmin;  	// Name  	newEditPerson.name.n.family = lnInput.Text;  	newEditPerson.name.n.given = fnInput.Text;  	newEditPerson.name.fn = fnInput.Text + " " + lnInput.Text;  	//Contact info  	newEditPerson.email = emailInput.Text;  	newEditPerson.tel [0].teltype = telTeltype.Item1;  	newEditPerson.tel [0].Value = hNumberInput.Text;  	if (newEditPerson.tel.Length >= 2) {  		newEditPerson.tel [1].teltype = telTeltype.Mobile;  		newEditPerson.tel [1].Value = mNumberInput.Text;  	}  	if (newEditPerson.tel.Length >= 3) {  		newEditPerson.tel [2].teltype = telTeltype.Item2;  		newEditPerson.tel [2].Value = workNumberInput.Text;  	}  	// Address info  	newEditPerson.adr.pcode = postcodeInput.Text;  	newEditPerson.adr.street [0] = streetInput.Text;  	newEditPerson.adr.locality = localityInput.Text;  	// Demographics  	newEditPerson.demographics.bday = bdayPicker.Text;  	newEditPerson.demographics.gender = genderBox.SelectedItem.ToString ();  	// Institution role  	if ((String)institutionTypeBox.SelectedItem == "Student")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Staff")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Staff;  	else if ((String)institutionTypeBox.SelectedItem == "Contact")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Contact;  	else if ((String)institutionTypeBox.SelectedItem == "Child")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Other;  	if ((String)institutionPrimaryBox.SelectedItem == "No")  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.No;  	else  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.Yes;  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: if (this.lastDigitInput != null)//create   {  	this.newEditPerson = new person ();  	// System Role  	newEditPerson.sourcedid [0].id = this.lastDigitInput.Text;  	// check what system role is chosen  	if ((String)systemRoleTypeBox.SelectedItem == "None")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.None;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.User;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.SysAdmin;  	// Name  	newEditPerson.name.n.family = lnInput.Text;  	newEditPerson.name.n.given = fnInput.Text;  	newEditPerson.name.fn = fnInput.Text + " " + lnInput.Text;  	//Contact info  	newEditPerson.email = emailInput.Text;  	newEditPerson.tel [0].teltype = telTeltype.Item1;  	newEditPerson.tel [0].Value = hNumberInput.Text;  	newEditPerson.tel [1].teltype = telTeltype.Mobile;  	newEditPerson.tel [1].Value = mNumberInput.Text;  	newEditPerson.tel [2].teltype = telTeltype.Item2;  	newEditPerson.tel [2].Value = workNumberInput.Text;  	// Address info  	newEditPerson.adr.pcode = postcodeInput.Text;  	newEditPerson.adr.street [0] = streetInput.Text;  	newEditPerson.adr.locality = localityInput.Text;  	// Demographics  	newEditPerson.demographics.bday = bdayPicker.Text;  	newEditPerson.demographics.gender = genderBox.SelectedItem.ToString ();  	// Institution role  	if ((String)institutionTypeBox.SelectedItem == "Student")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Staff")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Contact")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Contact;  	else if ((String)institutionTypeBox.SelectedItem == "Child")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Other;  	if ((String)institutionPrimaryBox.SelectedValue == "No")  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.No;  	else  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.Yes;  }  else// edit   {  	// System Role  	// check what system role is chosen  	if ((String)systemRoleTypeBox.SelectedItem == "None")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.None;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.User;  	else if ((String)systemRoleTypeBox.SelectedItem == "Administrator")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.SysAdmin;  	// Name  	newEditPerson.name.n.family = lnInput.Text;  	newEditPerson.name.n.given = fnInput.Text;  	newEditPerson.name.fn = fnInput.Text + " " + lnInput.Text;  	//Contact info  	newEditPerson.email = emailInput.Text;  	newEditPerson.tel [0].teltype = telTeltype.Item1;  	newEditPerson.tel [0].Value = hNumberInput.Text;  	if (newEditPerson.tel.Length >= 2) {  		newEditPerson.tel [1].teltype = telTeltype.Mobile;  		newEditPerson.tel [1].Value = mNumberInput.Text;  	}  	if (newEditPerson.tel.Length >= 3) {  		newEditPerson.tel [2].teltype = telTeltype.Item2;  		newEditPerson.tel [2].Value = workNumberInput.Text;  	}  	// Address info  	newEditPerson.adr.pcode = postcodeInput.Text;  	newEditPerson.adr.street [0] = streetInput.Text;  	newEditPerson.adr.locality = localityInput.Text;  	// Demographics  	newEditPerson.demographics.bday = bdayPicker.Text;  	newEditPerson.demographics.gender = genderBox.SelectedItem.ToString ();  	// Institution role  	if ((String)institutionTypeBox.SelectedItem == "Student")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Staff")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Staff;  	else if ((String)institutionTypeBox.SelectedItem == "Contact")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Contact;  	else if ((String)institutionTypeBox.SelectedItem == "Child")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Other;  	if ((String)institutionPrimaryBox.SelectedItem == "No")  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.No;  	else  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.Yes;  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: if (this.lastDigitInput != null)//create   {  	this.newEditPerson = new person ();  	// System Role  	newEditPerson.sourcedid [0].id = this.lastDigitInput.Text;  	// check what system role is chosen  	if ((String)systemRoleTypeBox.SelectedItem == "None")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.None;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.User;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.SysAdmin;  	// Name  	newEditPerson.name.n.family = lnInput.Text;  	newEditPerson.name.n.given = fnInput.Text;  	newEditPerson.name.fn = fnInput.Text + " " + lnInput.Text;  	//Contact info  	newEditPerson.email = emailInput.Text;  	newEditPerson.tel [0].teltype = telTeltype.Item1;  	newEditPerson.tel [0].Value = hNumberInput.Text;  	newEditPerson.tel [1].teltype = telTeltype.Mobile;  	newEditPerson.tel [1].Value = mNumberInput.Text;  	newEditPerson.tel [2].teltype = telTeltype.Item2;  	newEditPerson.tel [2].Value = workNumberInput.Text;  	// Address info  	newEditPerson.adr.pcode = postcodeInput.Text;  	newEditPerson.adr.street [0] = streetInput.Text;  	newEditPerson.adr.locality = localityInput.Text;  	// Demographics  	newEditPerson.demographics.bday = bdayPicker.Text;  	newEditPerson.demographics.gender = genderBox.SelectedItem.ToString ();  	// Institution role  	if ((String)institutionTypeBox.SelectedItem == "Student")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Staff")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Contact")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Contact;  	else if ((String)institutionTypeBox.SelectedItem == "Child")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Other;  	if ((String)institutionPrimaryBox.SelectedValue == "No")  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.No;  	else  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.Yes;  }  else// edit   {  	// System Role  	// check what system role is chosen  	if ((String)systemRoleTypeBox.SelectedItem == "None")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.None;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.User;  	else if ((String)systemRoleTypeBox.SelectedItem == "Administrator")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.SysAdmin;  	// Name  	newEditPerson.name.n.family = lnInput.Text;  	newEditPerson.name.n.given = fnInput.Text;  	newEditPerson.name.fn = fnInput.Text + " " + lnInput.Text;  	//Contact info  	newEditPerson.email = emailInput.Text;  	newEditPerson.tel [0].teltype = telTeltype.Item1;  	newEditPerson.tel [0].Value = hNumberInput.Text;  	if (newEditPerson.tel.Length >= 2) {  		newEditPerson.tel [1].teltype = telTeltype.Mobile;  		newEditPerson.tel [1].Value = mNumberInput.Text;  	}  	if (newEditPerson.tel.Length >= 3) {  		newEditPerson.tel [2].teltype = telTeltype.Item2;  		newEditPerson.tel [2].Value = workNumberInput.Text;  	}  	// Address info  	newEditPerson.adr.pcode = postcodeInput.Text;  	newEditPerson.adr.street [0] = streetInput.Text;  	newEditPerson.adr.locality = localityInput.Text;  	// Demographics  	newEditPerson.demographics.bday = bdayPicker.Text;  	newEditPerson.demographics.gender = genderBox.SelectedItem.ToString ();  	// Institution role  	if ((String)institutionTypeBox.SelectedItem == "Student")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Staff")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Staff;  	else if ((String)institutionTypeBox.SelectedItem == "Contact")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Contact;  	else if ((String)institutionTypeBox.SelectedItem == "Child")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Other;  	if ((String)institutionPrimaryBox.SelectedItem == "No")  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.No;  	else  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.Yes;  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: if (this.lastDigitInput != null)//create   {  	this.newEditPerson = new person ();  	// System Role  	newEditPerson.sourcedid [0].id = this.lastDigitInput.Text;  	// check what system role is chosen  	if ((String)systemRoleTypeBox.SelectedItem == "None")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.None;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.User;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.SysAdmin;  	// Name  	newEditPerson.name.n.family = lnInput.Text;  	newEditPerson.name.n.given = fnInput.Text;  	newEditPerson.name.fn = fnInput.Text + " " + lnInput.Text;  	//Contact info  	newEditPerson.email = emailInput.Text;  	newEditPerson.tel [0].teltype = telTeltype.Item1;  	newEditPerson.tel [0].Value = hNumberInput.Text;  	newEditPerson.tel [1].teltype = telTeltype.Mobile;  	newEditPerson.tel [1].Value = mNumberInput.Text;  	newEditPerson.tel [2].teltype = telTeltype.Item2;  	newEditPerson.tel [2].Value = workNumberInput.Text;  	// Address info  	newEditPerson.adr.pcode = postcodeInput.Text;  	newEditPerson.adr.street [0] = streetInput.Text;  	newEditPerson.adr.locality = localityInput.Text;  	// Demographics  	newEditPerson.demographics.bday = bdayPicker.Text;  	newEditPerson.demographics.gender = genderBox.SelectedItem.ToString ();  	// Institution role  	if ((String)institutionTypeBox.SelectedItem == "Student")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Staff")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Contact")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Contact;  	else if ((String)institutionTypeBox.SelectedItem == "Child")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Other;  	if ((String)institutionPrimaryBox.SelectedValue == "No")  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.No;  	else  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.Yes;  }  else// edit   {  	// System Role  	// check what system role is chosen  	if ((String)systemRoleTypeBox.SelectedItem == "None")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.None;  	else if ((String)systemRoleTypeBox.SelectedItem == "User")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.User;  	else if ((String)systemRoleTypeBox.SelectedItem == "Administrator")  		newEditPerson.systemrole.systemroletype = systemroleSystemroletype.SysAdmin;  	// Name  	newEditPerson.name.n.family = lnInput.Text;  	newEditPerson.name.n.given = fnInput.Text;  	newEditPerson.name.fn = fnInput.Text + " " + lnInput.Text;  	//Contact info  	newEditPerson.email = emailInput.Text;  	newEditPerson.tel [0].teltype = telTeltype.Item1;  	newEditPerson.tel [0].Value = hNumberInput.Text;  	if (newEditPerson.tel.Length >= 2) {  		newEditPerson.tel [1].teltype = telTeltype.Mobile;  		newEditPerson.tel [1].Value = mNumberInput.Text;  	}  	if (newEditPerson.tel.Length >= 3) {  		newEditPerson.tel [2].teltype = telTeltype.Item2;  		newEditPerson.tel [2].Value = workNumberInput.Text;  	}  	// Address info  	newEditPerson.adr.pcode = postcodeInput.Text;  	newEditPerson.adr.street [0] = streetInput.Text;  	newEditPerson.adr.locality = localityInput.Text;  	// Demographics  	newEditPerson.demographics.bday = bdayPicker.Text;  	newEditPerson.demographics.gender = genderBox.SelectedItem.ToString ();  	// Institution role  	if ((String)institutionTypeBox.SelectedItem == "Student")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Student;  	else if ((String)institutionTypeBox.SelectedItem == "Staff")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Staff;  	else if ((String)institutionTypeBox.SelectedItem == "Contact")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Contact;  	else if ((String)institutionTypeBox.SelectedItem == "Child")  		newEditPerson.institutionrole [0].institutionroletype = institutionroleInstitutionroletype.Other;  	if ((String)institutionPrimaryBox.SelectedItem == "No")  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.No;  	else  		newEditPerson.institutionrole [0].primaryrole = institutionrolePrimaryrole.Yes;  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: newEditPerson.tel [2].teltype = telTeltype.Item2;  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: newEditPerson.tel [2].Value = workNumberInput.Text;  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: if (newEditPerson.tel.Length >= 2) {  	newEditPerson.tel [1].teltype = telTeltype.Mobile;  	newEditPerson.tel [1].Value = mNumberInput.Text;  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: if (newEditPerson.tel.Length >= 3) {  	newEditPerson.tel [2].teltype = telTeltype.Item2;  	newEditPerson.tel [2].Value = workNumberInput.Text;  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: if (newEditPerson.tel.Length >= 3) {  	newEditPerson.tel [2].teltype = telTeltype.Item2;  	newEditPerson.tel [2].Value = workNumberInput.Text;  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: if (newEditPerson.tel.Length >= 3) {  	newEditPerson.tel [2].teltype = telTeltype.Item2;  	newEditPerson.tel [2].Value = workNumberInput.Text;  }  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: newEditPerson.tel [2].teltype = telTeltype.Item2;  
Magic Number,IMSEnterprise,NewPersonForm,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\NewPersonForm.cs,createEditButton_Click,The following statement contains a magic number: newEditPerson.tel [2].Value = workNumberInput.Text;  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,UrlInputDialog,The following statement contains a magic number: this.progressBar.Top = this.inputDialogComboBox.Top + this.inputDialogComboBox.Height + 5;  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,UrlInputDialog,The following statement contains a magic number: this.progressBar.Maximum = 100;  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,UrlInputDialog,The following statement contains a magic number: this.progressBar.Top = this.inputDialogComboBox.Top + this.inputDialogComboBox.Height + 5;  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,UrlInputDialog,The following statement contains a magic number: this.progressBar.Maximum = 100;  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,setAutoCompleteSource,The following statement contains a magic number: try {  	string[] urlHistoryItems = File.ReadAllLines (filePath' Encoding.Default);  	urlHistory.AddRange (urlHistoryItems);  	this.inputDialogComboBox.Items.AddRange (urlHistoryItems);  }  catch (Exception ex) {  	if (ex.HResult == -2147024894)  		File.Create (filePath).Close ();  	else  		MessageBox.Show (ex.Message);  }  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,setAutoCompleteSource,The following statement contains a magic number: if (ex.HResult == -2147024894)  	File.Create (filePath).Close ();  else  	MessageBox.Show (ex.Message);  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,setProgress,The following statement contains a magic number: if (this.Continue) {  	try {  		this.progressBar.Value = e.ProgressPercentage;  	}  	catch (Exception ex) {  		ex.ToString ();  		this.Continue = false;  	}  	finally {  		if (totalBytes == null) {  			this.totalBytes = this.getPrefix (Convert.ToDouble (e.TotalBytesToReceive));  			this.progressBar.Style = ProgressBarStyle.Continuous;  		}  		if (e.ProgressPercentage != 100)  			this.progress.Text = this.getPrefix (Convert.ToDouble (e.BytesReceived)) + " / " + this.totalBytes;  		else {  			if (this.totalBytes == "-1 B")  				this.progress.Text = this.getPrefix (Convert.ToDouble (e.BytesReceived));  			else  				this.progress.Text = this.getPrefix (Convert.ToDouble (e.BytesReceived)) + " / " + this.getPrefix (Convert.ToDouble (e.BytesReceived));  		}  	}  }  else {  	this.Continue = false;  	WebClient s = (WebClient)sender;  	s.CancelAsync ();  	s.Dispose ();  }  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,setProgress,The following statement contains a magic number: try {  	this.progressBar.Value = e.ProgressPercentage;  }  catch (Exception ex) {  	ex.ToString ();  	this.Continue = false;  }  finally {  	if (totalBytes == null) {  		this.totalBytes = this.getPrefix (Convert.ToDouble (e.TotalBytesToReceive));  		this.progressBar.Style = ProgressBarStyle.Continuous;  	}  	if (e.ProgressPercentage != 100)  		this.progress.Text = this.getPrefix (Convert.ToDouble (e.BytesReceived)) + " / " + this.totalBytes;  	else {  		if (this.totalBytes == "-1 B")  			this.progress.Text = this.getPrefix (Convert.ToDouble (e.BytesReceived));  		else  			this.progress.Text = this.getPrefix (Convert.ToDouble (e.BytesReceived)) + " / " + this.getPrefix (Convert.ToDouble (e.BytesReceived));  	}  }  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,setProgress,The following statement contains a magic number: if (e.ProgressPercentage != 100)  	this.progress.Text = this.getPrefix (Convert.ToDouble (e.BytesReceived)) + " / " + this.totalBytes;  else {  	if (this.totalBytes == "-1 B")  		this.progress.Text = this.getPrefix (Convert.ToDouble (e.BytesReceived));  	else  		this.progress.Text = this.getPrefix (Convert.ToDouble (e.BytesReceived)) + " / " + this.getPrefix (Convert.ToDouble (e.BytesReceived));  }  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,getPrefix,The following statement contains a magic number: while (len >= 1024 && order + 1 < sizes.Length) {  	order++;  	len = len / 1024;  }  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,getPrefix,The following statement contains a magic number: while (len >= 1024 && order + 1 < sizes.Length) {  	order++;  	len = len / 1024;  }  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,getPrefix,The following statement contains a magic number: len = len / 1024;  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,progressComplete,The following statement contains a magic number: if (this.Continue) {  	try {  		if (e.Error != null) {  			MessageBox.Show (e.Error.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  			this.clearProgress ();  		}  		else {  			if (!this.onStartUp)  				MessageBox.Show ("The IMS Document was successfully loaded!\n\nProcessing and downloading took: " + (this.Timer.ElapsedMilliseconds / 1000).ToString () + " seconds.");  			this.DialogResult = DialogResult.OK;  			this.Close ();  		}  	}  	catch (WebException we) {  		MessageBox.Show (we.Message);  	}  	finally {  		Application.UseWaitCursor = false;  	}  }  else {  	this.Continue = false;  	this.clearProgress ();  	//this.DialogResult = DialogResult.Cancel;  }  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,progressComplete,The following statement contains a magic number: try {  	if (e.Error != null) {  		MessageBox.Show (e.Error.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  		this.clearProgress ();  	}  	else {  		if (!this.onStartUp)  			MessageBox.Show ("The IMS Document was successfully loaded!\n\nProcessing and downloading took: " + (this.Timer.ElapsedMilliseconds / 1000).ToString () + " seconds.");  		this.DialogResult = DialogResult.OK;  		this.Close ();  	}  }  catch (WebException we) {  	MessageBox.Show (we.Message);  }  finally {  	Application.UseWaitCursor = false;  }  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,progressComplete,The following statement contains a magic number: if (e.Error != null) {  	MessageBox.Show (e.Error.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error);  	this.clearProgress ();  }  else {  	if (!this.onStartUp)  		MessageBox.Show ("The IMS Document was successfully loaded!\n\nProcessing and downloading took: " + (this.Timer.ElapsedMilliseconds / 1000).ToString () + " seconds.");  	this.DialogResult = DialogResult.OK;  	this.Close ();  }  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,progressComplete,The following statement contains a magic number: if (!this.onStartUp)  	MessageBox.Show ("The IMS Document was successfully loaded!\n\nProcessing and downloading took: " + (this.Timer.ElapsedMilliseconds / 1000).ToString () + " seconds.");  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,progressComplete,The following statement contains a magic number: MessageBox.Show ("The IMS Document was successfully loaded!\n\nProcessing and downloading took: " + (this.Timer.ElapsedMilliseconds / 1000).ToString () + " seconds.");  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,getHttpFile,The following statement contains a magic number: this.progressBar.Maximum = 100;  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,getHttpFile,The following statement contains a magic number: try {  	this.Timer.Start ();  	this.Continue = true;  	xmlf.DownloadAsync (this.Uri' this.setProgress' this.progressComplete);  	this.progressBar.Style = ProgressBarStyle.Marquee;  	this.progress.Text = "Contacting server...";  }  catch (Exception e) {  	this.Continue = false;  	if (e.HResult == -2147024864)  		MessageBox.Show ("A process is still runing from the first attempt to load a file. Please wait a few seconds before trying again!");  	else  		MessageBox.Show ("Error! " + e.Message);  	Application.UseWaitCursor = false;  	this.clearProgress ();  }  
Magic Number,IMSEnterprise,UrlInputDialog,C:\repos\ExchangeServices_Tools\IMSEnterprise\Forms\UrlInputDialog.cs,getHttpFile,The following statement contains a magic number: if (e.HResult == -2147024864)  	MessageBox.Show ("A process is still runing from the first attempt to load a file. Please wait a few seconds before trying again!");  else  	MessageBox.Show ("Error! " + e.Message);  
Missing Default,IMSEnterprise,IMSSettings,C:\repos\ExchangeServices_Tools\IMSEnterprise\Classes\IMSSettings.cs,setValues,The following switch statement is missing a default case: switch (find) {  case "startPoint":  	Root root = new Root ();  	root.Type = rootNode.Attributes [0].Value;  	root.Value = Convert.ToBoolean (rootNode.InnerText);  	this.General.StartPoint.Roots.Add (root);  	break;  case "problemLister":  	this.General.ProblemLister.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.ProblemLister.Warnings = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	this.General.ProblemLister.Errors = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [2].InnerText);  	this.General.ProblemLister.MaxErrors = int.Parse (rootNode.ParentNode.ChildNodes [3].InnerText);  	this.General.ProblemLister.MaxWarnings = int.Parse (rootNode.ParentNode.ChildNodes [4].InnerText);  	this.General.ProblemLister.Log = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [5].InnerText);  	this.General.ProblemLister.LogLocation.Use = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [6].Attributes [0].Value);  	this.General.ProblemLister.LogLocation.Location = rootNode.ParentNode.ChildNodes [6].InnerText;  	break;  case "extensions":  	this.General.Extensions.Enabled = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [0].InnerText);  	this.General.Extensions.Distinguish = Convert.ToBoolean (rootNode.ParentNode.ChildNodes [1].InnerText);  	break;  case "fileToOpen":  	FileToOpen fto = new FileToOpen ();  	fto.Choice = int.Parse (rootNode.ParentNode.Attributes [0].Value);  	fto.Value = rootNode.InnerText;  	this.Startup.FileToOpen = fto;  	break;  }  
